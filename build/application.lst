0000000000000000 a __start__
0000000000000000 0000000000000008 D _glapi_tls_Dispatch
0000000000000000 T _start
0000000000000000 d _TLS_MODULE_BASE_
0000000000000008 0000000000000008 b _egl_TLS
0000000000000010 0000000000000008 B _glapi_tls_Context
0000000000000018 0000000000000004 B g_bsdErrno
000000000000001c 0000000000000004 B g_bsdResult
0000000000000020 0000000000000004 b g_fsPriority
0000000000000024 0000000000000004 b fsdev_last_result
0000000000000028 0000000000000401 B __nx_dev_path_buf
00000000000000e0 T __nx_exit
00000000000000f0 T __nx_mod0
0000000000000124 0000000000000034 W __gnu_cxx::__throw_concurrence_lock_error()
0000000000000158 0000000000000034 W __gnu_cxx::__throw_concurrence_unlock_error()
000000000000018c 0000000000000034 W __gnu_cxx::__throw_concurrence_broadcast_error()
00000000000001c0 0000000000000034 T std::__throw_bad_alloc()
00000000000001f4 0000000000000034 T std::__throw_bad_array_new_length()
0000000000000228 0000000000000054 T std::__throw_logic_error(char const*)
000000000000027c 0000000000000054 T std::__throw_length_error(char const*)
00000000000002d0 0000000000000054 T std::__throw_out_of_range(char const*)
0000000000000324 000000000000000c T std::__throw_out_of_range_fmt(char const*, ...)
0000000000000330 0000000000000010 T std::terminate()
0000000000000340 0000000000000010 T std::unexpected()
0000000000000350 0000000000000044 T __cxa_call_terminate
00000000000003a0 000000000000000c t _GLOBAL__sub_D_builtin_functions.cpp
00000000000003b0 00000000000008a0 t _GLOBAL__sub_D_glsl_types.cpp
0000000000000c50 000000000000006c t _GLOBAL__sub_D_builtin_types.cpp
0000000000000cc0 0000000000000034 t _GLOBAL__sub_D_eh_globals.cc
0000000000000d00 0000000000000034 T exit
0000000000000d40 0000000000000f74 T main
0000000000001cc0 0000000000000014 t _GLOBAL__sub_I_builtin_functions.cpp
0000000000001ce0 0000000000001f80 t _GLOBAL__sub_I_glsl_types.cpp
0000000000003c60 0000000000000044 t _GLOBAL__sub_I_ir_to_mesa.cpp
0000000000003cb0 0000000000000090 t _GLOBAL__sub_I_st_glsl_to_tgsi.cpp
0000000000003d40 0000000000000f08 t _GLOBAL__sub_I_builtin_types.cpp
0000000000004c50 0000000000000048 t _GLOBAL__sub_I_nv50_ir_ra.cpp
0000000000004ca0 000000000000020c t _GLOBAL__sub_I_eh_alloc.cc
0000000000004ec0 0000000000000038 t _GLOBAL__sub_I_eh_globals.cc
0000000000004f00 0000000000000024 t _GLOBAL__sub_I_fastmix.cpp
0000000000004f40 t __do_global_dtors_aux
0000000000004fa0 t frame_dummy
0000000000004fd0 0000000000000040 T notice
0000000000005010 000000000000012c T drawCircle
0000000000005140 000000000000007c t _Mix_remove_all_effects
00000000000051c0 0000000000000044 t _Mix_channel_done_playing
0000000000005210 00000000000000d4 t Mix_DoEffects
00000000000052f0 00000000000000b0 t add_chunk_decoder
00000000000053a0 000000000000061c T Mix_LoadWAV_RW
00000000000059c0 00000000000000b4 T Mix_Volume
00000000000059c0 00000000000000b4 t Mix_Volume.localalias.9
0000000000005a80 00000000000003ec t mix_channels
0000000000005e70 00000000000000ec T Mix_HaltChannel
0000000000005e70 00000000000000ec t Mix_HaltChannel.localalias.8
0000000000005f60 00000000000000bc T Mix_Playing
0000000000006020 0000000000000200 T Mix_PlayChannelTimed
0000000000006220 0000000000000060 t _Mix_UnregisterAllEffects_locked
0000000000006280 0000000000000040 T Mix_UnregisterAllEffects
00000000000062c0 00000000000000d4 T Mix_CloseAudio
00000000000063a0 00000000000001cc T Mix_OpenAudioDevice
0000000000006570 000000000000000c T Mix_OpenAudio
0000000000006580 0000000000000100 T Mix_AllocateChannels
0000000000006680 000000000000000c t Mix_LockAudio
0000000000006690 000000000000000c t Mix_UnlockAudio
00000000000066a0 0000000000000058 t music_internal_halt
0000000000006700 000000000000006c t music_internal_playing
0000000000006770 00000000000000b0 t add_music_decoder
0000000000006820 0000000000000308 t open_music_type.part.0
0000000000006b30 0000000000000008 t get_num_music_interfaces
0000000000006b40 0000000000000010 t get_music_interface
0000000000006b50 0000000000000100 t music_pcm_getaudio
0000000000006c50 00000000000001b4 T music_mixer
0000000000006e10 0000000000000108 t load_music_type
0000000000006f20 000000000000001c t open_music_type
0000000000006f40 00000000000000b4 t detect_music_type_from_magic
0000000000007000 0000000000000350 T Mix_LoadMUSType_RW
0000000000007350 00000000000003e0 T Mix_LoadMUS
0000000000007730 0000000000000220 T Mix_FadeInMusicPos
0000000000007950 000000000000000c T Mix_PlayMusic
0000000000007960 0000000000000078 T Mix_VolumeMusic
00000000000079e0 000000000000008c t open_music
0000000000007a70 000000000000003c T Mix_HaltMusic
0000000000007ab0 0000000000000080 T Mix_SetMusicCMD
0000000000007b30 00000000000000a0 t close_music
0000000000007bd0 0000000000000068 t MODPLUG_Load
0000000000007c40 0000000000000018 t MODPLUG_Unload
0000000000007c60 00000000000000dc t MODPLUG_Open
0000000000007d40 0000000000000014 t MODPLUG_SetVolume
0000000000007d60 0000000000000030 t MODPLUG_Play
0000000000007d90 0000000000000038 t MODPLUG_Seek
0000000000007dd0 000000000000004c t MODPLUG_Delete
0000000000007e20 0000000000000168 T MODPLUG_CreateFromRW
0000000000007f90 0000000000000010 t MODPLUG_GetAudio
0000000000007fa0 00000000000000e4 t MODPLUG_GetSome
0000000000008090 00000000000000b8 t MPG123_Load
0000000000008150 0000000000000018 t MPG123_Unload
0000000000008170 0000000000000010 t rwops_read
0000000000008180 0000000000000008 t rwops_seek
0000000000008190 0000000000000004 t rwops_cleanup
00000000000081a0 0000000000000008 t MPG123_SetVolume
00000000000081b0 000000000000000c t MPG123_Close
00000000000081c0 0000000000000074 t MPG123_Delete
0000000000008240 0000000000000034 t MPG123_Open
0000000000008280 0000000000000010 t MPG123_GetAudio
0000000000008290 0000000000000028 t mpg_err
00000000000082c0 0000000000000074 t MPG123_Seek
0000000000008340 000000000000000c t MPG123_Play
0000000000008350 000000000000020c t MPG123_CreateFromRW
0000000000008560 00000000000001e4 t MPG123_GetSome
0000000000008750 000000000000007c t OGG_Load
00000000000087d0 0000000000000018 t OGG_Unload
00000000000087f0 000000000000001c t sdl_read_func
0000000000008810 0000000000000018 t sdl_seek_func
0000000000008830 0000000000000010 t sdl_tell_func
0000000000008840 0000000000000008 t OGG_SetVolume
0000000000008850 0000000000000060 t OGG_Delete
00000000000088b0 00000000000001dc t set_ov_error
0000000000008a90 0000000000000050 t OGG_Seek
0000000000008ae0 000000000000000c t OGG_Play
0000000000008af0 0000000000000010 t OGG_GetAudio
0000000000008b00 000000000000010c t OGG_UpdateSection
0000000000008c10 0000000000000304 t OGG_CreateFromRW
0000000000008f20 00000000000001d0 t OGG_GetSome
00000000000090f0 000000000000005c t OPUS_Load
0000000000009150 0000000000000018 t OPUS_Unload
0000000000009170 0000000000000020 t sdl_read_func
0000000000009190 000000000000001c t sdl_seek_func
00000000000091b0 0000000000000010 t sdl_tell_func
00000000000091c0 0000000000000008 t OPUS_SetVolume
00000000000091d0 0000000000000060 t OPUS_Delete
0000000000009230 00000000000001f8 t set_op_error
0000000000009430 0000000000000050 t OPUS_Seek
0000000000009480 000000000000000c t OPUS_Play
0000000000009490 0000000000000010 t OPUS_GetAudio
00000000000094a0 0000000000000108 t OPUS_UpdateSection
00000000000095b0 0000000000000144 t OPUS_CreateFromRW
0000000000009700 0000000000000140 t OPUS_GetSome
0000000000009840 0000000000000044 t TIMIDITY_Delete
0000000000009890 0000000000000124 T TIMIDITY_CreateFromRW
00000000000099c0 0000000000000004 t TIMIDITY_Close
00000000000099d0 0000000000000030 t TIMIDITY_Seek
0000000000009a00 0000000000000010 t TIMIDITY_GetAudio
0000000000009a10 0000000000000038 t TIMIDITY_Play
0000000000009a50 0000000000000008 t TIMIDITY_SetVolume
0000000000009a60 0000000000000004 t TIMIDITY_Open
0000000000009a70 000000000000011c t TIMIDITY_GetSome
0000000000009b90 0000000000000008 t WAV_SetVolume
0000000000009ba0 0000000000000074 t WAV_Play
0000000000009c20 000000000000005c t WAV_Delete
0000000000009c80 0000000000000010 t WAV_GetAudio
0000000000009c90 000000000000022c t WAV_GetSome
0000000000009ec0 0000000000000738 t WAV_CreateFromRW
000000000000a600 0000000000000164 t recompute_freq
000000000000a770 0000000000000114 t recompute_amp
000000000000a890 00000000000000a0 t adjust_volume
000000000000a930 00000000000000c0 t do_compute_data
000000000000a9f0 0000000000000140 t compute_data
000000000000ab30 0000000000000324 t start_note
000000000000ae60 0000000000000048 t finish_note.part.2
000000000000aeb0 00000000000000b4 t note_off
000000000000af70 00000000000000a4 t Timidity_Start
000000000000b020 0000000000000280 t Timidity_Seek
000000000000b2a0 0000000000000630 t Timidity_PlaySome
000000000000b8d0 00000000000000c4 t Timidity_SetVolume
000000000000b9a0 0000000000000810 t read_config_file
000000000000c1b0 00000000000000b4 t Timidity_Init_NoConfig
000000000000c270 00000000000000a4 t Timidity_Init
000000000000c320 0000000000000390 t Timidity_LoadSong
000000000000c6b0 0000000000000074 t Timidity_FreeSong
000000000000c730 00000000000000e4 t Timidity_Exit
000000000000c820 000000000000002c t _Mix_InitEffects
000000000000c850 0000000000000004 t _Mix_DeinitEffects
000000000000c860 000000000000059c t Mix_LoadAIFF_RW
000000000000ce00 0000000000000538 t voc_get_block.isra.0
000000000000d340 0000000000000334 t Mix_LoadVOC_RW
000000000000d680 0000000000000184 t open_file
000000000000d810 0000000000000004 t safe_malloc
000000000000d820 0000000000000080 t add_to_pathlist
000000000000d8a0 000000000000004c t free_pathlist
000000000000d8f0 0000000000000074 t free_instrument
000000000000d970 000000000000099c t load_instrument.isra.5
000000000000e310 0000000000000198 t fill_bank
000000000000e4b0 0000000000000088 t load_missing_instruments
000000000000e540 00000000000000a4 t free_instruments
000000000000e5f0 0000000000000058 t set_default_instrument
000000000000e650 00000000000000dc t recompute_envelope
000000000000e730 0000000000000108 t apply_envelope_to_amp
000000000000e840 0000000000000168 t update_signal
000000000000e9b0 0000000000000780 t mix_voice
000000000000f130 0000000000000048 T s32tos8
000000000000f180 000000000000004c T s32tou8
000000000000f1d0 0000000000000048 T s32tos16
000000000000f220 000000000000004c T s32tou16
000000000000f270 000000000000004c T s32tos16x
000000000000f2c0 0000000000000050 T s32tou16x
000000000000f310 0000000000000038 T s32tof32
000000000000f350 0000000000000030 T s32tos32
000000000000f380 0000000000000034 T s32tos32x
000000000000f3c0 00000000000008e8 t read_track
000000000000fcb0 0000000000000754 t read_midi_file
0000000000010410 00000000000001b8 t update_vibrato.isra.2
00000000000105d0 0000000000000874 t resample_voice
0000000000010e50 00000000000002f0 t pre_resample
0000000000011140 000000000000007c t _Eff_PositionDeinit
00000000000111c0 00000000000000cc T IMG_Init
0000000000011290 00000000000001b4 T IMG_LoadTyped_RW
0000000000011450 0000000000000060 T IMG_Load
00000000000114b0 00000000000000b4 t IMG_isICOCUR
0000000000011570 00000000000006d8 t LoadICOCUR_RW.constprop.0
0000000000011c50 00000000000000ac T IMG_isBMP
0000000000011d00 0000000000000008 T IMG_isICO
0000000000011d10 0000000000000008 T IMG_isCUR
0000000000011d20 0000000000000be8 T IMG_LoadBMP_RW
0000000000012910 0000000000000008 T IMG_LoadICO_RW
0000000000012920 0000000000000008 T IMG_LoadCUR_RW
0000000000012930 0000000000000078 t GetDataBlock
00000000000129b0 00000000000000b0 t ReadColorMap
0000000000012a60 0000000000000150 t GetCode.part.0
0000000000012bb0 00000000000003d8 t LWZReadByte.part.1
0000000000012f90 00000000000006a0 t ReadImage.isra.2
0000000000013630 00000000000000e4 T IMG_isGIF
0000000000013720 00000000000004d4 T IMG_LoadGIF_RW
0000000000013c00 0000000000000004 t init_source
0000000000013c10 000000000000005c t fill_input_buffer
0000000000013c70 000000000000007c t skip_input_data
0000000000013cf0 0000000000000018 t my_error_exit
0000000000013d10 0000000000000004 t output_no_message
0000000000013d20 0000000000000004 t term_source
0000000000013d30 00000000000000c4 T IMG_InitJPG
0000000000013e00 00000000000001ac T IMG_isJPG
0000000000013fb0 00000000000002e0 T IMG_LoadJPG_RW
0000000000014290 00000000000000e4 T IMG_isLBM
0000000000014380 0000000000000ad4 T IMG_LoadLBM_RW
0000000000014e60 00000000000000a8 T IMG_isPCX
0000000000014f10 0000000000000544 T IMG_LoadPCX_RW
0000000000015460 000000000000002c t png_read_data
0000000000015490 0000000000000160 T IMG_InitPNG
00000000000155f0 00000000000000c0 T IMG_isPNG
00000000000156b0 0000000000000568 T IMG_LoadPNG_RW
0000000000015c20 00000000000000e8 t ReadNumber
0000000000015d10 00000000000000ac T IMG_isPNM
0000000000015dc0 0000000000000424 T IMG_LoadPNM_RW
00000000000161f0 000000000000007c t nsvg__xformMultiply
0000000000016270 0000000000000108 t nsvg__xformInverse
0000000000016380 0000000000000128 t nsvg__convertToPixels
00000000000164b0 00000000000000d8 t nsvg__parseUnits
0000000000016590 0000000000000048 t nsvg__scaleGradient
00000000000165e0 0000000000000020 t nsvg__cmpEdge
0000000000016600 0000000000000058 t nsvg__applyOpacity
0000000000016660 00000000000002f4 t nsvg__parseElement
0000000000016960 0000000000000050 t nsvg__strndup
00000000000169b0 0000000000000108 t nsvg__content
0000000000016ac0 0000000000000048 t nsvg__xformPremultiply
0000000000016b10 000000000000026c t nsvg__parseColor
0000000000016d80 0000000000000048 t nsvg__parseOpacity
0000000000016dd0 000000000000004c t nsvg__parseCoordinateRaw
0000000000016e20 0000000000000040 t nsvg__actualLength
0000000000016e60 00000000000002b8 t nsvg__createGradient
0000000000017120 0000000000000068 t nsvg__normalize
0000000000017190 00000000000001d8 t nsvg__atof
0000000000017370 0000000000000084 t nsvg__addPoint
0000000000017400 00000000000000a0 t nsvg__lineTo
00000000000174a0 000000000000005c t nsvg__cubicBezTo
0000000000017500 0000000000000034 t nsvg__moveTo
0000000000017540 00000000000000e8 t nsvg__addPathPoint
0000000000017630 00000000000001a0 t nsvg__flattenCubicBez
00000000000177d0 0000000000000080 t nsvg__appendPathPoint
0000000000017850 00000000000000a4 t nsvg__vecang
0000000000017900 0000000000000048 t nsvg__deletePaths
0000000000017950 00000000000002f4 t nsvg__curveBounds
0000000000017c50 00000000000001fc t nsvg__addPath
0000000000017e50 00000000000003bc t nsvg__initPaint.part.9
0000000000018210 00000000000000b4 t nsvg__endElement
00000000000182d0 00000000000001a0 t nsvg__prepareStroke.isra.12
0000000000018470 00000000000000e4 t nsvg__addEdge
0000000000018560 00000000000001bc t nsvg__roundCap.isra.23
0000000000018720 00000000000001b4 t nsvg__getLocalBounds.isra.26
00000000000188e0 000000000000033c t nsvg__addShape
0000000000018c20 00000000000000d8 t nsvg__fillScanline.constprop.30
0000000000018d00 00000000000008d0 t nsvg__rasterizeSortedEdges
00000000000195d0 000000000000020c t nsvg__parseNumber.constprop.34
00000000000197e0 0000000000000168 t nsvg__parseTransformArgs.constprop.33
0000000000019950 0000000000000408 t nsvg__parseTransform
0000000000019d60 0000000000000988 t nsvg__parseAttr
000000000001a6f0 00000000000001a4 t nsvg__parseNameValue
000000000001a8a0 0000000000000114 t nsvg__parseStyle
000000000001a9c0 0000000000000070 t nsvg__parseAttribs
000000000001aa30 000000000000015c t nsvg__parseGradientStop
000000000001ab90 0000000000000314 t nsvg__parseGradient
000000000001aeb0 00000000000000b4 t nsvg__getNextPathItem
000000000001af70 0000000000000134 t nsvg__parsePoly
000000000001b0b0 0000000000001c40 t nsvg__startElement
000000000001ccf0 00000000000007d8 t nsvg__expandStroke
000000000001d4d0 0000000000000164 T nsvg__parseXML
000000000001d640 00000000000000b0 T nsvgDelete
000000000001d6f0 00000000000005c0 T nsvgParse
000000000001dcb0 0000000000000074 T nsvgDeleteRasterizer
000000000001dd30 0000000000000050 T nsvgCreateRasterizer
000000000001dd80 0000000000000aec T nsvgRasterize
000000000001e870 00000000000000b8 T IMG_isSVG
000000000001e930 0000000000000100 T IMG_LoadSVG_RW
000000000001ea30 00000000000006dc T IMG_LoadTGA_RW
000000000001f110 0000000000000020 T IMG_InitTIF
000000000001f130 0000000000000008 T IMG_isTIF
000000000001f140 0000000000000008 T IMG_LoadTIF_RW
000000000001f150 0000000000000040 t free_xcf_header
000000000001f190 0000000000000050 t load_xcf_tile_none
000000000001f1e0 0000000000000128 t xcf_read_property
000000000001f310 00000000000000b4 t read_string
000000000001f3d0 0000000000000204 t load_xcf_tile_rle
000000000001f5e0 00000000000000ac T IMG_isXCF
000000000001f690 0000000000000d2c T IMG_LoadXCF_RW
00000000000203c0 00000000000000a8 t get_colorhash.isra.0
0000000000020470 00000000000001a4 t get_next_line.part.1
0000000000020620 0000000000000788 t load_xpm
0000000000020db0 00000000000000ac T IMG_isXPM
0000000000020e60 0000000000000014 T IMG_LoadXPM_RW
0000000000020e80 0000000000000088 t get_line.constprop.0
0000000000020f10 000000000000010c t get_header
0000000000021020 0000000000000078 T IMG_isXV
00000000000210a0 0000000000000148 T IMG_LoadXV_RW
00000000000211f0 0000000000000170 t webp_getinfo
0000000000021360 0000000000000040 T IMG_InitWEBP
00000000000213a0 0000000000000008 T IMG_isWEBP
00000000000213b0 0000000000000234 T IMG_LoadWEBP_RW
00000000000215f0 0000000000000064 t RWread
0000000000021660 00000000000001dc t TTF_initFontMetrics
0000000000021840 0000000000000b88 t Load_Glyph
00000000000223d0 0000000000000084 t UCS2_to_UTF8_len
0000000000022460 00000000000000c8 t UCS2_to_UTF8
0000000000022530 0000000000000168 t AllocateAlignedPixels
00000000000226a0 00000000000000ac t Create_Surface_Solid
0000000000022750 0000000000000184 t Create_Surface_Shaded
00000000000228e0 0000000000000098 t Create_Surface_Blended
0000000000022980 00000000000000ac t Create_Surface_LCD.isra.0
0000000000022a30 00000000000000b4 t clip_glyph.isra.0
0000000000022af0 0000000000000160 t Draw_Line.isra.0
0000000000022c50 000000000000006c t Flush_Cache
0000000000022cc0 00000000000006e0 t TTF_Size_Internal
00000000000233a0 0000000000000698 t Render_Line_64_Blended
0000000000023a40 00000000000006a4 t Render_Line_64_Blended_SP
00000000000240f0 00000000000033fc t Render_Line
00000000000274f0 000000000000039c t TTF_Render_Internal
0000000000027890 000000000000005c T TTF_Init
00000000000278f0 00000000000000e0 T TTF_SetFontSizeDPI
00000000000279d0 000000000000007c T TTF_CloseFont
0000000000027a50 000000000000001c T TTF_SetFontKerning
0000000000027a70 00000000000002cc T TTF_OpenFontIndexDPIRW
0000000000027d40 0000000000000064 T TTF_OpenFontIndexDPI
0000000000027db0 000000000000000c T TTF_OpenFontIndex
0000000000027dc0 0000000000000008 T TTF_OpenFont
0000000000027dd0 0000000000000014 T TTF_RenderText_Solid
0000000000027df0 0000000000000044 T TTF_Quit
0000000000027e40 000000000000000c T SDL_ExitProcess
0000000000027e50 0000000000000274 T SDL_QuitSubSystem
00000000000280d0 0000000000000218 T SDL_InitSubSystem
00000000000282f0 0000000000000004 T SDL_Init
0000000000028300 0000000000000090 T SDL_WasInit
0000000000028390 0000000000000058 T SDL_Quit
00000000000283f0 000000000000000c T SDL_GetPlatform
0000000000028400 0000000000000080 t debug_print
0000000000028480 00000000000003a4 t SDL_PromptAssertion
0000000000028830 000000000000016c T SDL_ReportAssertion
00000000000289a0 000000000000002c T SDL_ResetAssertionReport
00000000000289d0 00000000000000e0 T SDL_AssertionsQuit
0000000000028ab0 0000000000000154 T SDL_SetError
0000000000028c10 0000000000000030 T SDL_GetError
0000000000028c40 0000000000000018 T SDL_ClearError
0000000000028c60 0000000000000068 T SDL_Error
0000000000028cd0 0000000000000170 T SDL_SetHintWithPriority
0000000000028e40 0000000000000008 T SDL_SetHint
0000000000028e50 0000000000000080 T SDL_GetHint
0000000000028ed0 0000000000000048 T SDL_GetStringBoolean
0000000000028f20 0000000000000024 T SDL_GetHintBoolean
0000000000028f50 00000000000000b0 T SDL_DelHintCallback
0000000000029000 0000000000000180 T SDL_AddHintCallback
0000000000029180 0000000000000070 T SDL_ClearHints
00000000000291f0 0000000000000040 t SDL_LogOutput
0000000000029230 0000000000000038 T SDL_LogInit
0000000000029270 0000000000000070 T SDL_LogGetPriority
00000000000292e0 0000000000000068 T SDL_LogResetPriorities
0000000000029350 0000000000000030 T SDL_LogQuit
0000000000029380 00000000000001e8 T SDL_LogMessageV
0000000000029570 0000000000000080 T SDL_Log
00000000000295f0 0000000000000078 T SDL_LogDebug
0000000000029670 0000000000000078 T SDL_LogInfo
00000000000296f0 0000000000000078 T SDL_LogWarn
0000000000029770 0000000000000020 T SDL_AtomicTryLock
0000000000029790 000000000000006c T SDL_AtomicLock
0000000000029800 0000000000000008 T SDL_AtomicUnlock
0000000000029810 0000000000000004 t SDL_AudioThreadInit_Default
0000000000029820 0000000000000008 t SDL_AudioGetDeviceBuf_Default
0000000000029830 0000000000000008 t SDL_AudioCaptureFromDevice_Default
0000000000029840 0000000000000004 t SDL_AudioDeinitialize_Default
0000000000029850 0000000000000008 t SDL_AudioOpenDevice_Default
0000000000029860 00000000000001a0 t add_audio_device
0000000000029a00 000000000000000c t SDL_BufferQueueFillCallback
0000000000029a10 0000000000000060 t SDL_BufferQueueDrainCallback
0000000000029a70 0000000000000044 t SDL_AudioUnlockDevice_Default
0000000000029ac0 0000000000000044 t SDL_AudioLockDevice_Default
0000000000029b10 0000000000000280 t SDL_RunAudio
0000000000029d90 00000000000000e4 t close_audio_device
0000000000029e80 0000000000000004 t SDL_AudioCloseDevice_Default
0000000000029e90 0000000000000004 t SDL_AudioFreeDeviceHandle_Default
0000000000029ea0 0000000000000004 t SDL_AudioThreadDeinit_Default
0000000000029eb0 0000000000000004 t SDL_AudioWaitDevice_Default
0000000000029ec0 0000000000000004 t SDL_AudioPlayDevice_Default
0000000000029ed0 0000000000000004 t SDL_AudioFlushCapture_Default
0000000000029ee0 00000000000000bc T SDL_AddAudioDevice
0000000000029fa0 0000000000000050 t SDL_AudioDetectDevices_Default
0000000000029ff0 00000000000000d4 T SDL_OpenedAudioDeviceDisconnected
000000000002a0d0 0000000000000244 t SDL_CaptureAudio
000000000002a320 000000000000000c T SDL_GetCurrentAudioDriver
000000000002a330 0000000000000094 T SDL_PauseAudioDevice
000000000002a3d0 0000000000000038 T SDL_LockAudioDevice
000000000002a410 0000000000000038 T SDL_UnlockAudioDevice
000000000002a450 0000000000000040 T SDL_CloseAudioDevice
000000000002a490 0000000000000160 T SDL_AudioQuit
000000000002a5f0 0000000000000390 T SDL_AudioInit
000000000002a980 000000000000004c T SDL_NextAudioFormat
000000000002a9d0 00000000000000f0 T SDL_FirstAudioFormat
000000000002aac0 0000000000000028 T SDL_SilenceValueForFormat
000000000002aaf0 0000000000000044 T SDL_CalculateAudioSpec
000000000002ab40 0000000000000ce0 t open_audio_device
000000000002b820 0000000000000008 T SDL_OpenAudioDevice
000000000002b830 000000000000007c t SDL_ConvertMonoToStereo
000000000002b8b0 0000000000000088 t SDL_ConvertMonoTo21
000000000002b940 0000000000000080 t SDL_ConvertMonoToQuad
000000000002b9c0 0000000000000084 t SDL_ConvertMonoTo41
000000000002ba50 0000000000000090 t SDL_ConvertMonoTo51
000000000002bae0 0000000000000094 t SDL_ConvertMonoTo61
000000000002bb80 0000000000000088 t SDL_ConvertMonoTo71
000000000002bc10 0000000000000078 t SDL_ConvertStereoToMono
000000000002bc90 000000000000009c t SDL_ConvertStereoTo21
000000000002bd30 0000000000000094 t SDL_ConvertStereoToQuad
000000000002bdd0 0000000000000098 t SDL_ConvertStereoTo41
000000000002be70 00000000000000a4 t SDL_ConvertStereoTo51
000000000002bf20 00000000000000a8 t SDL_ConvertStereoTo61
000000000002bfd0 000000000000009c t SDL_ConvertStereoTo71
000000000002c070 00000000000000a4 t SDL_Convert21ToMono
000000000002c120 00000000000000c4 t SDL_Convert21ToStereo
000000000002c1f0 00000000000000e0 t SDL_Convert21ToQuad
000000000002c2d0 00000000000000c8 t SDL_Convert21To41
000000000002c3a0 00000000000000d0 t SDL_Convert21To51
000000000002c470 00000000000000d4 t SDL_Convert21To61
000000000002c550 00000000000000c8 t SDL_Convert21To71
000000000002c620 000000000000008c t SDL_ConvertQuadToMono
000000000002c6b0 00000000000000c4 t SDL_ConvertQuadToStereo
000000000002c780 00000000000000c8 t SDL_ConvertQuadTo21
000000000002c850 00000000000000b4 t SDL_ConvertQuadTo41
000000000002c910 00000000000000c0 t SDL_ConvertQuadTo51
000000000002c9d0 00000000000000f4 t SDL_ConvertQuadTo61
000000000002cad0 00000000000000b8 t SDL_ConvertQuadTo71
000000000002cb90 00000000000000a8 t SDL_Convert41ToMono
000000000002cc40 00000000000000f0 t SDL_Convert41ToStereo
000000000002cd30 00000000000000e0 t SDL_Convert41To21
000000000002ce10 00000000000000dc t SDL_Convert41ToQuad
000000000002cef0 00000000000000dc t SDL_Convert41To51
000000000002cfd0 0000000000000110 t SDL_Convert41To61
000000000002d0e0 00000000000000d4 t SDL_Convert41To71
000000000002d1c0 00000000000000ac t SDL_Convert51ToMono
000000000002d270 00000000000000f8 t SDL_Convert51ToStereo
000000000002d370 00000000000000f8 t SDL_Convert51To21
000000000002d470 00000000000000ec t SDL_Convert51ToQuad
000000000002d560 00000000000000e4 t SDL_Convert51To41
000000000002d650 0000000000000118 t SDL_Convert51To61
000000000002d770 00000000000000d8 t SDL_Convert51To71
000000000002d850 00000000000000d4 t SDL_Convert61ToMono
000000000002d930 000000000000011c t SDL_Convert61ToStereo
000000000002da50 0000000000000114 t SDL_Convert61To21
000000000002db70 0000000000000120 t SDL_Convert61ToQuad
000000000002dc90 0000000000000118 t SDL_Convert61To41
000000000002ddb0 0000000000000120 t SDL_Convert61To51
000000000002ded0 0000000000000108 t SDL_Convert61To71
000000000002dfe0 00000000000000b8 t SDL_Convert71ToMono
000000000002e0a0 0000000000000118 t SDL_Convert71ToStereo
000000000002e1c0 0000000000000110 t SDL_Convert71To21
000000000002e2d0 000000000000010c t SDL_Convert71ToQuad
000000000002e3e0 00000000000000fc t SDL_Convert71To41
000000000002e4e0 00000000000000fc t SDL_Convert71To51
000000000002e5e0 00000000000000f8 t SDL_Convert71To61
000000000002e6e0 0000000000000014 t SDL_ResetAudioStreamResampler
000000000002e700 000000000000022c t SDL_Convert_Byteswap
000000000002e930 0000000000000008 t SDL_CleanupAudioStreamResampler
000000000002e940 0000000000000634 t SDL_ResampleCVT_c8
000000000002ef80 0000000000000620 t SDL_ResampleCVT_c6
000000000002f5a0 0000000000000638 t SDL_ResampleCVT_c4
000000000002fbe0 0000000000000638 t SDL_ResampleCVT_c2
0000000000030220 0000000000000588 t SDL_ResampleCVT_c1
00000000000307b0 0000000000000698 t SDL_ResampleAudioStream
0000000000030e50 000000000000004c T SDL_ConvertAudio
0000000000030ea0 0000000000000298 t SDL_AudioStreamPutInternal
0000000000031140 00000000000007d8 T SDL_BuildAudioCVT
0000000000031920 00000000000003c0 T SDL_AudioStreamPut
0000000000031ce0 0000000000000114 T SDL_AudioStreamFlush
0000000000031e00 0000000000000078 T SDL_AudioStreamGet
0000000000031e80 0000000000000024 T SDL_AudioStreamAvailable
0000000000031eb0 0000000000000060 T SDL_AudioStreamClear
0000000000031f10 0000000000000054 T SDL_FreeAudioStream
0000000000031f70 00000000000002a0 T SDL_NewAudioStream
0000000000032210 000000000000024c t SDL_Convert_F32_to_S32_NEON
0000000000032460 00000000000001ac t SDL_Convert_F32_to_U16_NEON
0000000000032610 0000000000000194 t SDL_Convert_F32_to_S16_NEON
00000000000327b0 00000000000001e0 t SDL_Convert_F32_to_U8_NEON
0000000000032990 00000000000001c0 t SDL_Convert_F32_to_S8_NEON
0000000000032b50 00000000000001ac t SDL_Convert_S32_to_F32_NEON
0000000000032d00 0000000000000160 t SDL_Convert_U16_to_F32_NEON
0000000000032e60 0000000000000148 t SDL_Convert_S16_to_F32_NEON
0000000000032fb0 000000000000017c t SDL_Convert_U8_to_F32_NEON
0000000000033130 000000000000015c t SDL_Convert_S8_to_F32_NEON
0000000000033290 0000000000000108 T SDL_ChooseAudioConverters
00000000000333a0 00000000000019ac T SDL_MixAudioFormat
0000000000034d50 0000000000000128 t MS_ADPCM_CalculateSampleFrames
0000000000034e80 0000000000000150 t IMA_ADPCM_CalculateSampleFrames
0000000000034fd0 0000000000002784 T SDL_LoadWAV_RW
0000000000037760 0000000000000064 T SDL_HasAltiVec
00000000000377d0 0000000000000064 T SDL_HasMMX
0000000000037840 0000000000000064 T SDL_Has3DNow
00000000000378b0 0000000000000064 T SDL_HasSSE
0000000000037920 0000000000000064 T SDL_HasSSE2
0000000000037990 0000000000000064 T SDL_HasARMSIMD
0000000000037a00 0000000000000064 T SDL_HasNEON
0000000000037a70 000000000000006c T SDL_SIMDGetAlignment
0000000000037ae0 0000000000000074 T SDL_SIMDAlloc
0000000000037b60 0000000000000010 T SDL_SIMDFree
0000000000037b70 0000000000000074 t SDL_EventLoggingChanged
0000000000037bf0 0000000000001230 t SDL_LogEvent
0000000000038e20 0000000000000160 t SDL_AddEvent
0000000000038f80 0000000000000038 t SDL_AutoUpdateSensorsChanged
0000000000038fc0 0000000000000048 t SDL_AutoUpdateJoysticksChanged
0000000000039010 00000000000003c4 t SDL_PeepEventsInternal.constprop.0
00000000000393e0 0000000000000194 T SDL_StopEventLoop
0000000000039580 0000000000000404 T SDL_PeepEvents
0000000000039990 0000000000000120 T SDL_FlushEvents
0000000000039ab0 0000000000000008 T SDL_FlushEvent
0000000000039ac0 00000000000001b8 T SDL_PushEvent
0000000000039c80 0000000000000088 T SDL_AddEventWatch
0000000000039d10 00000000000000d8 T SDL_DelEventWatch
0000000000039df0 0000000000000118 T SDL_FilterEvents
0000000000039f10 0000000000000190 T SDL_EventState
000000000003a0a0 00000000000000a0 T SDL_StartEventLoop
000000000003a140 000000000000002c t SDL_PollSentinelChanged
000000000003a170 00000000000000f8 t SDL_PumpEventsInternal.constprop.0
000000000003a270 00000000000004e4 T SDL_WaitEventTimeout
000000000003a760 0000000000000008 T SDL_PollEvent
000000000003a770 0000000000000054 T SDL_SendAppEvent
000000000003a7d0 0000000000000008 T SDL_SendKeymapChangedEvent
000000000003a7e0 00000000000000a8 T SDL_EventsInit
000000000003a890 0000000000000074 T SDL_EventsQuit
000000000003a910 0000000000000104 t dollarDifference
000000000003aa20 00000000000000bc t SDL_AddDollarGesture_one
000000000003aae0 0000000000000364 t dollarNormalize.isra.0
000000000003ae50 0000000000000028 T SDL_GestureQuit
000000000003ae80 000000000000008c T SDL_GestureAddTouch
000000000003af10 00000000000000e4 T SDL_GestureDelTouch
000000000003b000 00000000000006a0 T SDL_GestureProcessEvent
000000000003b6a0 00000000000001dc T SDL_SetKeymap
000000000003b880 000000000000002c T SDL_KeyboardInit
000000000003b8b0 000000000000000c T SDL_GetKeyboardFocus
000000000003b8c0 00000000000002b8 T SDL_SendKeyboardKey
000000000003bb80 0000000000000058 T SDL_ResetKeyboard
000000000003bbe0 00000000000000f4 T SDL_SetKeyboardFocus
000000000003bce0 0000000000000198 T SDL_ReleaseAutoReleaseKeys
000000000003be80 00000000000000e8 T SDL_SendKeyboardText
000000000003bf70 0000000000000004 T SDL_KeyboardQuit
000000000003bf80 0000000000000018 T SDL_GetKeyboardState
000000000003bfa0 000000000000002c t SDL_MouseRelativeWarpMotionChanged
000000000003bfd0 000000000000002c t SDL_TouchMouseEventsChanged
000000000003c000 000000000000002c t SDL_MouseRelativeSystemScaleChanged
000000000003c030 000000000000004c t SDL_MouseTouchEventsChanged
000000000003c080 0000000000000058 t SDL_MouseRelativeSpeedScaleChanged
000000000003c0e0 0000000000000058 t SDL_MouseNormalSpeedScaleChanged
000000000003c140 0000000000000048 t SDL_MouseDoubleClickRadiusChanged
000000000003c190 0000000000000048 t SDL_MouseDoubleClickTimeChanged
000000000003c1e0 000000000000000c T SDL_GetMouse
000000000003c1f0 0000000000000114 T SDL_MouseInit
000000000003c310 0000000000000978 t SDL_PrivateSendMouseMotion
000000000003cc90 0000000000000018 T SDL_GetMouseFocus
000000000003ccb0 0000000000000188 T SDL_GetMouseState
000000000003ce40 00000000000000d0 T SDL_PerformWarpMouseInWindow
000000000003cf10 0000000000000008 T SDL_WarpMouseInWindow
000000000003cf20 0000000000000018 T SDL_GetRelativeMouseMode
000000000003cf40 00000000000002a0 T SDL_UpdateMouseCapture
000000000003d1e0 000000000000004c t SDL_MouseAutoCaptureChanged
000000000003d230 0000000000000064 T SDL_CaptureMouse
000000000003d2a0 00000000000000d8 T SDL_SetCursor
000000000003d380 0000000000000074 T SDL_SetMouseFocus
000000000003d400 00000000000000f4 t SDL_UpdateMouseFocus.isra.0
000000000003d500 000000000000043c t SDL_PrivateSendMouseButton
000000000003d940 0000000000000008 T SDL_SendMouseButton
000000000003d950 0000000000000090 T SDL_SendMouseMotion
000000000003d9e0 0000000000000190 T SDL_SetRelativeMouseMode
000000000003db70 00000000000000a0 T SDL_FreeCursor
000000000003dc10 000000000000005c T SDL_ShowCursor
000000000003dc70 0000000000000194 T SDL_MouseQuit
000000000003de10 0000000000000040 t SDL_HandleSIG
000000000003de50 0000000000000080 T SDL_QuitInit
000000000003ded0 000000000000006c T SDL_QuitQuit
000000000003df40 0000000000000010 T SDL_SendQuit
000000000003df50 0000000000000014 T SDL_SendPendingSignalEvents
000000000003df70 0000000000000008 T SDL_TouchInit
000000000003df80 00000000000000b0 T SDL_GetTouch
000000000003e030 000000000000014c T SDL_AddTouch
000000000003e180 0000000000000458 T SDL_SendTouch
000000000003e180 0000000000000458 t SDL_SendTouch.localalias
000000000003e5e0 0000000000000244 T SDL_SendTouchMotion
000000000003e830 0000000000000104 T SDL_DelTouch
000000000003e940 0000000000000078 T SDL_TouchQuit
000000000003e9c0 0000000000000060 t RemovePendingSizeChangedAndResizedEvents
000000000003ea20 000000000000003c t RemovePendingExposedEvents
000000000003ea60 000000000000003c t RemovePendingMoveEvents
000000000003eaa0 00000000000003b4 T SDL_SendWindowEvent
000000000003ee60 0000000000000010 t mem_size
000000000003ee70 0000000000000020 t mem_writeconst
000000000003ee90 0000000000000088 t mem_read
000000000003ef20 00000000000000b0 t mem_seek
000000000003efd0 0000000000000084 t stdio_seek
000000000003f060 0000000000000060 t stdio_read
000000000003f0c0 0000000000000060 t stdio_write
000000000003f120 0000000000000048 T SDL_AllocRW
000000000003f170 000000000000006c T SDL_RWFromFP
000000000003f1e0 0000000000000078 T SDL_RWFromFile
000000000003f260 00000000000000c8 T SDL_RWFromConstMem
000000000003f330 0000000000000004 T SDL_FreeRW
000000000003f340 0000000000000058 t stdio_close
000000000003f3a0 0000000000000024 t mem_close
000000000003f3d0 000000000000000c T SDL_RWsize
000000000003f3e0 000000000000000c T SDL_RWseek
000000000003f3f0 0000000000000064 t stdio_size
000000000003f460 0000000000000014 T SDL_RWtell
000000000003f480 000000000000000c T SDL_RWread
000000000003f490 000000000000000c T SDL_RWclose
000000000003f4a0 000000000000011c T SDL_LoadFile_RW
000000000003f5c0 0000000000000030 T SDL_LoadFile
000000000003f5f0 0000000000000028 T SDL_ReadLE16
000000000003f620 000000000000002c T SDL_ReadBE16
000000000003f650 0000000000000028 T SDL_ReadLE32
000000000003f680 000000000000002c T SDL_ReadBE32
000000000003f6b0 000000000000001c T SDL_HapticInit
000000000003f6d0 0000000000000068 T SDL_HapticDestroyEffect
000000000003f740 0000000000000160 T SDL_HapticClose
000000000003f8a0 0000000000000030 T SDL_HapticQuit
000000000003f8d0 0000000000000238 t SDL_PrivateMatchControllerMappingForGUID
000000000003fb10 0000000000000114 t SDL_LoadVIDPIDListFromHint
000000000003fc30 0000000000000010 t SDL_GameControllerIgnoreDevicesExceptChanged
000000000003fc40 0000000000000010 t SDL_GameControllerIgnoreDevicesChanged
000000000003fc50 00000000000000e8 t SDL_PrivateAppendToMappingString.part.0.constprop.0
000000000003fd40 00000000000000f4 t SDL_PrivateGameControllerButton.isra.0
000000000003fe40 0000000000000090 T SDL_GameControllerGetAxisFromString
000000000003fed0 0000000000000080 T SDL_GameControllerGetButtonFromString
000000000003ff50 00000000000002cc t SDL_PrivateGameControllerParseElement
0000000000040220 0000000000000220 t SDL_PrivateLoadButtonMapping
0000000000040440 000000000000034c t SDL_PrivateAddMappingForGUID
0000000000040790 000000000000027c t SDL_PrivateGameControllerAddMapping
0000000000040a10 00000000000003d0 t SDL_CreateMappingForHIDAPIController
0000000000040de0 0000000000000074 t SDL_CreateMappingForRAWINPUTController
0000000000040e60 0000000000000094 t SDL_CreateMappingForWGIController
0000000000040f00 00000000000001f4 t SDL_PrivateGetControllerMappingForGUID
0000000000041100 00000000000003f4 t SDL_PrivateGetControllerMapping.part.0
0000000000041500 0000000000000038 T SDL_GameControllerAddMapping
0000000000041540 00000000000001e0 T SDL_GameControllerAddMappingsFromRW
0000000000041720 0000000000000158 T SDL_GameControllerInitMappings
0000000000041880 0000000000000078 T SDL_IsGameController
0000000000041900 000000000000008c T SDL_GameControllerInit
0000000000041990 00000000000001fc T SDL_GameControllerGetAxis
0000000000041b90 0000000000000198 T SDL_GameControllerGetButton
0000000000041d30 00000000000008ac t SDL_GameControllerEventWatcher
00000000000425e0 00000000000000c8 T SDL_GameControllerClose
00000000000426b0 000000000000003c T SDL_GameControllerQuit
00000000000426f0 00000000000000e4 T SDL_GameControllerQuitMappings
00000000000427e0 00000000000000c0 T SDL_GameControllerHandleDelayedGuideButton
00000000000428a0 000000000000002c t SDL_JoystickAllowBackgroundEventsChanged
00000000000428d0 0000000000000054 T SDL_LockJoysticks
0000000000042930 0000000000000070 T SDL_UnlockJoysticks
00000000000429a0 0000000000000004 T SDL_AssertJoysticksLocked
00000000000429b0 000000000000004c T SDL_NumJoysticks
0000000000042a00 00000000000000b4 T SDL_JoystickNameForIndex
0000000000042ac0 000000000000003c T SDL_PrivateJoystickValid
0000000000042b00 00000000000000bc T SDL_PrivateJoystickGetAutoGamepadMapping
0000000000042bc0 00000000000000a4 T SDL_JoystickGetAxis
0000000000042c70 000000000000009c T SDL_JoystickGetHat
0000000000042d10 000000000000009c T SDL_JoystickGetButton
0000000000042db0 0000000000000064 T SDL_JoystickInstanceID
0000000000042e20 000000000000004c T SDL_JoystickFromInstanceID
0000000000042e70 000000000000010c T SDL_JoystickRumble
0000000000042f80 00000000000000fc T SDL_JoystickRumbleTriggers
0000000000043080 000000000000018c T SDL_JoystickClose
0000000000043210 00000000000000bc T SDL_JoystickQuit
00000000000432d0 00000000000000ac T SDL_JoystickInit
0000000000043380 00000000000000d0 T SDL_PrivateJoystickHat
0000000000043450 0000000000000108 T SDL_PrivateJoystickButton
0000000000043560 0000000000000140 T SDL_JoystickUpdate
00000000000436a0 00000000000000a4 T SDL_JoystickEventState
0000000000043750 0000000000000090 T SDL_GetJoystickGUIDInfo
00000000000437e0 00000000000000f4 T SDL_CreateJoystickGUID
00000000000438e0 0000000000000020 T SDL_CreateJoystickGUIDForName
0000000000043900 0000000000000008 T SDL_SetJoystickGUIDVersion
0000000000043910 0000000000000008 T SDL_SetJoystickGUIDCRC
0000000000043920 0000000000000220 T SDL_GetJoystickGameControllerTypeFromVIDPID
0000000000043b40 000000000000004c T SDL_IsJoystickXboxOneElite
0000000000043b90 0000000000000110 T SDL_IsJoystickXboxSeriesX
0000000000043ca0 000000000000001c T SDL_IsJoystickDualSenseEdge
0000000000043cc0 000000000000001c T SDL_IsJoystickNintendoSwitchJoyConPair
0000000000043ce0 0000000000000028 T SDL_IsJoystickSteamController
0000000000043d10 0000000000000010 T SDL_IsJoystickXInput
0000000000043d20 0000000000000010 T SDL_IsJoystickWGI
0000000000043d30 0000000000000010 T SDL_IsJoystickHIDAPI
0000000000043d40 0000000000000010 T SDL_IsJoystickRAWINPUT
0000000000043d50 0000000000000010 T SDL_IsJoystickVirtual
0000000000043d60 00000000000001b0 T SDL_PrivateJoystickAxis
0000000000043d60 00000000000001b0 t SDL_PrivateJoystickAxis.localalias
0000000000043f10 0000000000000098 T SDL_GetJoystickGameControllerTypeFromGUID
0000000000043fb0 00000000000000c0 T SDL_JoystickGetDeviceGUID
0000000000044070 0000000000000078 T SDL_JoystickGetGUID
00000000000440f0 000000000000002c T SDL_JoystickGetVendor
0000000000044120 000000000000002c T SDL_JoystickGetProduct
0000000000044150 0000000000000004 T SDL_JoystickGetGUIDFromString
0000000000044160 0000000000000078 T SDL_PrivateJoystickBatteryLevel
00000000000441e0 000000000000038c T SDL_JoystickOpen
0000000000044570 00000000000001fc T GuessControllerType
0000000000044770 0000000000000110 t QueueCmdSetClipRect
0000000000044880 0000000000000128 t QueueCmdSetViewport
00000000000449b0 0000000000000204 t PrepQueueCmdDraw
0000000000044bc0 000000000000023c t QueueCmdFillRects
0000000000044e00 0000000000000264 t RenderDrawPointsWithRectsF
0000000000045070 0000000000000234 t RenderDrawLineBresenham
00000000000452b0 00000000000002e0 t RenderDrawLinesWithRectsF
0000000000045590 00000000000001d4 t QueueCmdGeometry
0000000000045770 00000000000000ec T SDL_AllocateRenderVertices
0000000000045860 0000000000000008 T SDL_GetNumRenderDrivers
0000000000045870 0000000000000080 T SDL_GetRenderDriverInfo
00000000000458f0 000000000000000c T SDL_GetRenderer
0000000000045900 000000000000006c T SDL_GetRendererInfo
0000000000045970 0000000000000078 T SDL_QueryTexture
00000000000459f0 000000000000009c T SDL_GetRendererOutputSize
0000000000045a90 00000000000000c8 T SDL_SetTextureColorMod
0000000000045b60 00000000000000ac T SDL_SetTextureAlphaMod
0000000000045c10 00000000000000d8 T SDL_SetTextureBlendMode
0000000000045cf0 0000000000000284 T SDL_LockTexture
0000000000045f80 00000000000001d4 T SDL_UnlockTexture
0000000000046160 00000000000003e4 T SDL_UpdateTexture
0000000000046550 0000000000000020 T SDL_RenderTargetSupported
0000000000046570 00000000000002bc T SDL_SetRenderTarget
0000000000046830 0000000000000048 T SDL_GetRenderTarget
0000000000046880 0000000000000154 T SDL_RenderSetViewport
00000000000469e0 0000000000000468 T SDL_CreateRenderer
0000000000046e50 0000000000000054 T SDL_RenderSetScale
0000000000046eb0 0000000000000310 t UpdateLogicalSize.constprop.0
00000000000471c0 0000000000000638 t SDL_RendererEventWatch
0000000000047800 0000000000000064 T SDL_SetRenderDrawColor
0000000000047870 0000000000000140 T SDL_RenderClear
00000000000479b0 0000000000000184 T SDL_RenderDrawPointsF
0000000000047b40 0000000000000030 T SDL_RenderDrawPoint
0000000000047b70 000000000000053c T SDL_RenderDrawLinesF
00000000000480b0 00000000000000b4 T SDL_RenderDrawRectF
0000000000048170 0000000000000028 T SDL_RenderDrawRect
00000000000481a0 0000000000000368 T SDL_RenderFillRectsF
0000000000048510 00000000000000a4 T SDL_RenderFillRect
00000000000485c0 0000000000000388 T SDL_RenderCopyF
0000000000048950 0000000000000028 T SDL_RenderCopy
0000000000048980 0000000000000138 T SDL_RenderPresent
0000000000048ac0 0000000000000158 T SDL_DestroyTexture
0000000000048c20 0000000000000858 T SDL_CreateTexture
0000000000048c20 0000000000000858 t SDL_CreateTexture.localalias
0000000000049480 0000000000000630 T SDL_CreateTextureFromSurface
0000000000049ab0 0000000000000100 T SDL_DestroyRenderer
0000000000049bb0 0000000000000040 T SDL_GetBlendModeSrcColorFactor
0000000000049bf0 0000000000000040 T SDL_GetBlendModeDstColorFactor
0000000000049c30 0000000000000030 T SDL_GetBlendModeColorOperation
0000000000049c60 0000000000000030 T SDL_GetBlendModeSrcAlphaFactor
0000000000049c90 0000000000000034 T SDL_GetBlendModeDstAlphaFactor
0000000000049cd0 0000000000000030 T SDL_GetBlendModeAlphaOperation
0000000000049d00 0000000000000538 T SDL_SW_UpdateYUVTexture
000000000004a240 00000000000000e0 T SDL_SW_LockYUVTexture
000000000004a320 00000000000001fc T SDL_SW_CopyYUVToRGB
000000000004a520 0000000000000040 T SDL_SW_DestroyYUVTexture
000000000004a560 0000000000000210 T SDL_SW_CreateYUVTexture
000000000004a770 0000000000000020 t GLES2_WindowEvent
000000000004a790 0000000000000008 t GLES2_QueueSetViewport
000000000004a7a0 00000000000000a0 t GLES2_LockTexture
000000000004a840 0000000000000110 t GLES2_SetTextureScaleMode
000000000004a950 0000000000000008 t GLES2_RenderPresent
000000000004a960 000000000000001c t GLES2_GetOutputSize
000000000004a980 0000000000000348 t GLES2_RenderReadPixels
000000000004acd0 00000000000000a4 t GLES2_SetRenderTarget
000000000004ad80 0000000000000d40 t GLES2_CreateTexture
000000000004bac0 0000000000000158 t GLES2_SupportsBlendMode
000000000004bc20 00000000000004dc t GLES2_QueueGeometry
000000000004c100 0000000000000110 t GLES2_QueueDrawPoints
000000000004c210 0000000000000180 t GLES2_QueueDrawLines
000000000004c390 00000000000002ec t GLES2_CacheShader
000000000004c680 00000000000008ac t SetDrawState
000000000004cf30 0000000000000b90 t GLES2_CreateRenderer
000000000004dac0 0000000000000084 t GLES2_SetVSync
000000000004db50 0000000000000184 t GLES2_TexSubImage2D.isra.0
000000000004dce0 000000000000007c t GLES2_UnbindTexture
000000000004dd60 00000000000000f0 t GLES2_DestroyTexture
000000000004de50 00000000000000fc t GLES2_BindTexture
000000000004df50 0000000000000214 t GLES2_UpdateTextureNV
000000000004e170 000000000000026c t GLES2_UpdateTextureYUV
000000000004e3e0 00000000000001dc t GLES2_DestroyRenderer
000000000004e5c0 00000000000003c0 t GLES2_UpdateTexture
000000000004e980 0000000000000030 t GLES2_UnlockTexture
000000000004e9b0 000000000000076c t GLES2_RunCommandQueue
000000000004f120 000000000000001c T GLES2_GetShaderPrologue
000000000004f140 0000000000000064 T GLES2_GetShaderInclude
000000000004f1b0 0000000000000088 T GLES2_GetTexCoordPrecisionEnumFromHint
000000000004f240 0000000000000100 T GLES2_GetShader
000000000004f340 000000000000001c t SW_WindowEvent
000000000004f360 0000000000000040 t SW_LockTexture
000000000004f3a0 0000000000000004 t SW_UnlockTexture
000000000004f3b0 0000000000000004 t SW_SetTextureScaleMode
000000000004f3c0 0000000000000028 t SW_SetRenderTarget
000000000004f3f0 0000000000000008 t SW_QueueSetViewport
000000000004f400 0000000000000008 t SW_DestroyTexture
000000000004f410 0000000000000014 t SW_RenderPresent
000000000004f430 0000000000000404 t SW_QueueGeometry
000000000004f840 000000000000021c t SW_QueueFillRects
000000000004fa60 00000000000000f4 t SW_QueueDrawPoints
000000000004fb60 00000000000000dc t SW_QueueCopyEx
000000000004fc40 0000000000000094 t SW_QueueCopy
000000000004fce0 00000000000000f0 t SW_UpdateTexture
000000000004fdd0 00000000000000c4 t SW_CreateTexture
000000000004fea0 0000000000000028 t SW_DestroyRenderer
000000000004fed0 00000000000000e4 t SetDrawState.part.0
000000000004ffc0 0000000000000060 t SW_GetOutputSize
0000000000050020 00000000000000a0 t PrepTextureForCopy.isra.0
00000000000500c0 0000000000000110 t SW_RenderReadPixels
00000000000501d0 0000000000001260 t SW_RunCommandQueue
0000000000051430 00000000000001e0 T SW_CreateRendererForSurface
0000000000051610 00000000000000ac t SW_CreateRenderer
00000000000516c0 00000000000000e0 t computeSourceIncrements90
00000000000517a0 0000000000000290 T SDLgfx_rotozoomSurfaceSizeTrig
0000000000051a30 0000000000000fb0 T SDLgfx_rotateSurface
00000000000529e0 0000000000000010 T trianglepoint_2_fixedpoint
00000000000529f0 00000000000015cc T SDL_SW_FillTriangle
0000000000053fc0 0000000000002678 T SDL_SW_BlitTriangle
0000000000056640 000000000000000c T SDL_LockSensors
0000000000056650 000000000000000c T SDL_UnlockSensors
0000000000056660 0000000000000058 T SDL_SensorInit
00000000000566c0 0000000000000038 T SDL_NumSensors
0000000000056700 00000000000000c8 T SDL_SensorClose
00000000000567d0 000000000000006c T SDL_SensorQuit
0000000000056840 00000000000000bc T SDL_SensorUpdate
0000000000056900 0000000000000118 T SDL_crc16
0000000000056a20 0000000000000018 T SDL_getenv
0000000000056a40 0000000000000004 t real_free
0000000000056a50 0000000000000004 t real_realloc
0000000000056a60 0000000000000004 t real_calloc
0000000000056a70 0000000000000004 t real_malloc
0000000000056a80 0000000000000044 T SDL_GetOriginalMemoryFunctions
0000000000056ad0 000000000000004c T SDL_malloc
0000000000056b20 000000000000005c T SDL_calloc
0000000000056b80 000000000000007c T SDL_realloc
0000000000056c00 0000000000000030 T SDL_free
0000000000056c30 0000000000000004 T SDL_qsort
0000000000056c40 0000000000000004 T SDL_atan2
0000000000056c50 0000000000000004 T SDL_atan2f
0000000000056c60 0000000000000004 T SDL_acosf
0000000000056c70 0000000000000008 T SDL_ceil
0000000000056c80 0000000000000008 T SDL_ceilf
0000000000056c90 0000000000000004 T SDL_cos
0000000000056ca0 0000000000000004 T SDL_cosf
0000000000056cb0 0000000000000008 T SDL_fabs
0000000000056cc0 0000000000000008 T SDL_fabsf
0000000000056cd0 0000000000000008 T SDL_floor
0000000000056ce0 0000000000000008 T SDL_floorf
0000000000056cf0 0000000000000008 T SDL_truncf
0000000000056d00 0000000000000004 T SDL_fmodf
0000000000056d10 0000000000000004 T SDL_pow
0000000000056d20 0000000000000008 T SDL_round
0000000000056d30 0000000000000008 T SDL_roundf
0000000000056d40 0000000000000004 T SDL_sin
0000000000056d50 0000000000000004 T SDL_sinf
0000000000056d60 0000000000000014 T SDL_sqrt
0000000000056d80 0000000000000014 T SDL_sqrtf
0000000000056da0 0000000000000004 T SDL_tanf
0000000000056db0 000000000000000c T SDL_abs
0000000000056dc0 0000000000000018 T SDL_isdigit
0000000000056de0 0000000000000018 T SDL_isspace
0000000000056e00 0000000000000024 T SDL_toupper
0000000000056e30 0000000000000004 T SDL_memcpy
0000000000056e40 0000000000000004 T SDL_memset
0000000000056e50 0000000000000004 T SDL_memmove
0000000000056e60 0000000000000004 T SDL_memcmp
0000000000056e70 0000000000000004 T SDL_strlen
0000000000056e80 0000000000000004 T SDL_strlcpy
0000000000056e90 00000000000000f8 T SDL_utf8strlcpy
0000000000056f90 0000000000000028 T SDL_utf8strlen
0000000000056fc0 0000000000000004 T SDL_strlcat
0000000000056fd0 000000000000004c T SDL_strdup
0000000000057020 0000000000000004 T SDL_strchr
0000000000057030 0000000000000004 T SDL_strrchr
0000000000057040 0000000000000004 T SDL_strstr
0000000000057050 0000000000000004 T SDL_itoa
0000000000057060 0000000000000004 T SDL_atoi
0000000000057070 0000000000000004 T SDL_atof
0000000000057080 0000000000000004 T SDL_strtol
0000000000057090 0000000000000004 T SDL_strtoll
00000000000570a0 0000000000000004 T SDL_strtoull
00000000000570b0 0000000000000004 T SDL_strcmp
00000000000570c0 0000000000000004 T SDL_strncmp
00000000000570d0 0000000000000004 T SDL_strcasecmp
00000000000570e0 0000000000000004 T SDL_strncasecmp
00000000000570f0 0000000000000024 T SDL_vsscanf
0000000000057120 000000000000006c T SDL_sscanf
0000000000057190 0000000000000034 T SDL_vsnprintf
00000000000571d0 000000000000006c T SDL_snprintf
0000000000057240 00000000000000fc T SDL_vasprintf
0000000000057340 000000000000006c T SDL_asprintf
00000000000573b0 0000000000000038 t SDL_FreeErrBuf
00000000000573f0 0000000000000024 T SDL_TLSCreate
0000000000057420 0000000000000054 T SDL_TLSGet
0000000000057480 0000000000000114 T SDL_TLSSet
00000000000575a0 0000000000000090 T SDL_TLSCleanup
0000000000057630 00000000000000c4 T SDL_Generic_GetTLSData
0000000000057700 00000000000000fc T SDL_Generic_SetTLSData
0000000000057800 0000000000000130 T SDL_GetErrBuf
0000000000057930 0000000000000098 T SDL_RunThread
00000000000579d0 00000000000000c8 T SDL_CreateThreadWithStackSize
0000000000057aa0 0000000000000004 T SDL_CreateThreadInternal
0000000000057ab0 0000000000000004 T SDL_SetThreadPriority
0000000000057ac0 0000000000000048 T SDL_WaitThread
0000000000057b10 00000000000000d8 T SDL_TimerQuit
0000000000057bf0 00000000000000b8 T SDL_TimerInit
0000000000057cb0 0000000000000014 T SDL_GetTicks
0000000000057cd0 000000000000020c t SDL_TimerThread
0000000000057ee0 0000000000000378 t SDL_FillRect1
0000000000058260 0000000000000138 t SDL_FillRect2
00000000000583a0 000000000000026c t SDL_FillRect3
0000000000058610 0000000000000070 t SDL_FillRect4
0000000000058680 00000000000001fc T SDL_FillRects
0000000000058880 0000000000000054 T SDL_FillRect
00000000000588e0 00000000000004bc T SDL_GetPixelFormatName
0000000000058da0 00000000000001e0 T SDL_PixelFormatEnumToMasks
0000000000058f80 0000000000000580 T SDL_MasksToPixelFormatEnum
0000000000059500 00000000000001e8 T SDL_InitFormat
00000000000596f0 0000000000000114 T SDL_AllocFormat
0000000000059810 00000000000000b4 T SDL_AllocPalette
00000000000598d0 0000000000000060 T SDL_FreePalette
0000000000059930 00000000000000d0 T SDL_FreeFormat
0000000000059a00 00000000000000b4 T SDL_SetPixelFormatPalette
0000000000059ac0 0000000000000098 T SDL_DitherColors
0000000000059b60 0000000000000090 T SDL_FindColor
0000000000059bf0 00000000000000dc t Map1to1
0000000000059cd0 000000000000005c t MapNto1.isra.0
0000000000059d30 000000000000008c T SDL_DetectPalette
0000000000059dc0 000000000000009c T SDL_MapRGB
0000000000059e60 00000000000000b0 T SDL_MapRGBA
0000000000059f10 0000000000000104 T SDL_GetRGBA
000000000005a020 0000000000000044 T SDL_AllocBlitMap
000000000005a070 000000000000004c T SDL_InvalidateMap
000000000005a0c0 000000000000003c T SDL_InvalidateAllBlitMap
000000000005a100 0000000000000600 T SDL_MapSurface
000000000005a700 000000000000002c T SDL_FreeBlitMap
000000000005a730 0000000000000134 T SDL_GetSpanEnclosingRect
000000000005a870 000000000000010c T SDL_IntersectRect
000000000005a980 0000000000000204 T SDL_EnclosePoints
000000000005ab90 0000000000000484 T SDL_IntersectRectAndLine
000000000005b020 00000000000000d4 T SDL_HasIntersectionF
000000000005b100 00000000000004c8 T SDL_SoftStretch
000000000005b5d0 0000000000001fe8 T SDL_SoftStretchLinear
000000000005d5c0 0000000000000054 T SDL_SetSurfacePalette
000000000005d620 0000000000000058 T SDL_SetSurfaceRLE
000000000005d680 00000000000000e4 T SDL_SetColorKey
000000000005d770 000000000000001c T SDL_HasColorKey
000000000005d790 0000000000000044 T SDL_GetColorKey
000000000005d7e0 0000000000000084 T SDL_SetSurfaceColorMod
000000000005d870 0000000000000044 T SDL_GetSurfaceColorMod
000000000005d8c0 0000000000000064 T SDL_SetSurfaceAlphaMod
000000000005d930 0000000000000024 T SDL_GetSurfaceAlphaMod
000000000005d960 00000000000000f8 T SDL_SetSurfaceBlendMode
000000000005da60 000000000000008c T SDL_GetSurfaceBlendMode
000000000005daf0 0000000000000054 T SDL_SetClipRect
000000000005db50 0000000000000018 T SDL_GetClipRect
000000000005db70 00000000000000bc T SDL_LowerBlit
000000000005dc30 000000000000020c T SDL_UpperBlit
000000000005de40 0000000000000068 T SDL_LockSurface
000000000005deb0 0000000000000030 T SDL_UnlockSurface
000000000005dee0 000000000000039c T SDL_ConvertPixels
000000000005e280 00000000000000d8 T SDL_FreeSurface
000000000005e360 0000000000000294 T SDL_CreateRGBSurfaceWithFormat
000000000005e600 0000000000000084 T SDL_CreateRGBSurface
000000000005e690 00000000000001b8 T SDL_CreateRGBSurfaceFrom
000000000005e850 0000000000000164 T SDL_CreateRGBSurfaceWithFormatFrom
000000000005e9c0 00000000000003c4 T SDL_PrivateLowerBlitScaled
000000000005ed90 00000000000003c4 T SDL_PrivateUpperBlitScaled
000000000005f160 0000000000000708 T SDL_ConvertSurface
000000000005f160 0000000000000708 t SDL_ConvertSurface.localalias
000000000005f870 0000000000000084 t cmpmodes
000000000005f900 0000000000000358 t SDL_GetClosestDisplayModeForDisplay
000000000005fc60 000000000000000c T SDL_GetVideoDevice
000000000005fc70 0000000000000108 T SDL_AddVideoDisplay
000000000005fd80 000000000000004c T SDL_GetIndexOfDisplay
000000000005fdd0 0000000000000010 T SDL_IsVideoContextExternal
000000000005fde0 00000000000000f8 T SDL_GetDisplayBounds
000000000005fde0 00000000000000f8 t SDL_GetDisplayBounds.localalias
000000000005fee0 0000000000000140 t GetRectDisplayIndex
0000000000060020 0000000000000170 T SDL_AddDisplayMode
0000000000060190 000000000000000c T SDL_SetCurrentDisplayMode
00000000000601a0 0000000000000140 t SDL_SetDisplayModeForDisplay
00000000000602e0 00000000000000c0 T SDL_ResetDisplayModes
00000000000603a0 000000000000007c T SDL_GetDesktopDisplayMode
0000000000060420 000000000000015c T SDL_GetWindowDisplayIndex
0000000000060580 0000000000000038 T SDL_GetDisplayForWindow
00000000000605c0 0000000000000144 T SDL_GetWindowDisplayMode
0000000000060710 0000000000000094 T SDL_ToggleDragAndDropSupport
00000000000607b0 0000000000000020 T SDL_HasWindows
00000000000607d0 000000000000005c T SDL_GetWindowID
0000000000060830 0000000000000034 T SDL_GetWindowFromID
0000000000060870 000000000000005c T SDL_GetWindowFlags
00000000000608d0 00000000000000c4 T SDL_SetWindowTitle
00000000000609a0 0000000000000158 T SDL_SetWindowData
0000000000060b00 0000000000000060 t SDL_DestroyWindowTexture
0000000000060b60 00000000000000c4 T SDL_GetWindowData
0000000000060c30 0000000000000054 T SDL_GetWindowSize
0000000000060c90 0000000000000080 T SDL_GetWindowSizeInPixels
0000000000060d10 00000000000000ec t SDL_UpdateWindowTexture
0000000000060e00 0000000000000434 t SDL_CreateWindowTexture
0000000000061240 0000000000000094 T SDL_ShowWindow
00000000000612e0 000000000000005c T SDL_RaiseWindow
0000000000061340 000000000000005c T SDL_MaximizeWindow
00000000000613a0 0000000000000060 T SDL_RestoreWindow
0000000000061400 0000000000000064 T SDL_HasWindowSurface
0000000000061470 0000000000000088 T SDL_UpdateWindowSurfaceRects
0000000000061500 000000000000008c T SDL_UpdateWindowSurface
0000000000061590 0000000000000090 T SDL_DestroyWindowSurface
0000000000061620 0000000000000218 T SDL_GetWindowSurface
0000000000061840 0000000000000134 T SDL_UpdateWindowGrab
0000000000061980 000000000000006c T SDL_SetWindowKeyboardGrab
00000000000619f0 000000000000006c T SDL_SetWindowMouseGrab
0000000000061a60 000000000000008c T SDL_SetWindowGrab
0000000000061af0 0000000000000078 T SDL_GetWindowMouseRect
0000000000061b70 0000000000000070 T SDL_OnWindowResized
0000000000061be0 0000000000000354 t SDL_UpdateFullscreenMode
0000000000061f40 00000000000000b0 T SDL_HideWindow
0000000000061ff0 00000000000000a8 T SDL_MinimizeWindow
00000000000620a0 00000000000000d8 T SDL_SetWindowFullscreen
0000000000062180 00000000000000f8 t SDL_FinishWindowCreation
0000000000062280 0000000000000008 T SDL_OnWindowHidden
0000000000062290 000000000000017c T SDL_SetWindowSize
0000000000062410 0000000000000058 T SDL_OnWindowMoved
0000000000062470 000000000000001c T SDL_OnWindowMinimized
0000000000062490 0000000000000020 T SDL_OnWindowRestored
00000000000624b0 0000000000000004 T SDL_OnWindowShown
00000000000624c0 0000000000000024 T SDL_OnWindowEnter
00000000000624f0 0000000000000004 T SDL_OnWindowLeave
0000000000062500 0000000000000088 T SDL_OnWindowFocusGained
0000000000062590 00000000000000c8 T SDL_OnWindowFocusLost
0000000000062660 000000000000002c T SDL_GetFocusWindow
0000000000062690 000000000000002c T SDL_EnableScreenSaver
00000000000626c0 0000000000000030 T SDL_DisableScreenSaver
00000000000626f0 00000000000000d8 T SDL_GL_LoadLibrary
00000000000627d0 0000000000000074 T SDL_GL_GetProcAddress
0000000000062850 0000000000000044 T SDL_GL_UnloadLibrary
00000000000628a0 000000000000016c T SDL_GL_ExtensionSupported
0000000000062a10 0000000000000098 T SDL_GL_ResetAttributes
0000000000062ab0 0000000000000180 T SDL_GL_SetAttribute
0000000000062ab0 0000000000000180 t SDL_GL_SetAttribute.localalias
0000000000062c30 00000000000004b0 T SDL_GL_GetAttribute
0000000000062c30 00000000000004b0 t SDL_GL_GetAttribute.localalias
00000000000630e0 00000000000000e4 T SDL_GL_CreateContext
00000000000631d0 0000000000000034 T SDL_GL_GetCurrentWindow
0000000000063210 0000000000000034 T SDL_GL_GetCurrentContext
0000000000063250 000000000000016c T SDL_GL_MakeCurrent
00000000000633c0 000000000000005c T SDL_GL_GetDrawableSize
0000000000063420 0000000000000080 T SDL_GL_SetSwapInterval
00000000000634a0 000000000000004c T SDL_GL_GetSwapInterval
00000000000634f0 00000000000000b4 T SDL_GL_SwapWindowWithResult
00000000000635b0 0000000000000068 T SDL_GL_DeleteContext
0000000000063620 0000000000000090 T SDL_StartTextInput
00000000000636b0 0000000000000028 T SDL_IsTextInputActive
00000000000636e0 0000000000000098 T SDL_StopTextInput
0000000000063780 0000000000000024 T SDL_HasScreenKeyboardSupport
00000000000637b0 000000000000000c T SDL_GetMessageBoxCount
00000000000637c0 000000000000018c T SDL_ShowMessageBox
0000000000063950 00000000000000b0 T SDL_Vulkan_LoadLibrary
0000000000063a00 0000000000000044 T SDL_Vulkan_UnloadLibrary
0000000000063a50 0000000000000310 T SDL_RecreateWindow
0000000000063d60 000000000000024c T SDL_DestroyWindow
0000000000063fb0 0000000000000448 T SDL_CreateWindow
0000000000064400 0000000000000144 T SDL_VideoQuit
0000000000064550 0000000000000278 T SDL_VideoInit
00000000000647d0 00000000000001ac t SDL_ConvertPixels_SwapUVPlanes
0000000000064980 0000000000000338 t SDL_ConvertPixels_PackUVPlanes_to_NV
0000000000064cc0 0000000000000340 t SDL_ConvertPixels_SplitNV_to_UVPlanes
0000000000065000 00000000000001e4 t GetYUVPlanes.isra.0
00000000000651f0 000000000000000c T SDL_GetYUVConversionMode
0000000000065200 0000000000000034 T SDL_GetYUVConversionModeForResolution
0000000000065240 0000000000004250 t SDL_ConvertPixels_ARGB8888_to_YUV
0000000000069490 0000000000000178 T SDL_CalculateYUVSize
0000000000069610 00000000000008c0 T SDL_ConvertPixels_YUV_to_RGB
0000000000069610 00000000000008c0 t SDL_ConvertPixels_YUV_to_RGB.localalias
0000000000069ed0 000000000000012c T SDL_ConvertPixels_RGB_to_YUV
000000000006a000 00000000000025d4 T SDL_ConvertPixels_YUV_to_YUV
000000000006c5e0 0000000000000530 T yuv420_rgb565_std
000000000006cb10 00000000000004b0 T yuv420_rgb24_std
000000000006cfc0 0000000000000514 T yuv420_rgba_std
000000000006d4e0 0000000000000514 T yuv420_bgra_std
000000000006da00 00000000000004fc T yuv420_argb_std
000000000006df00 00000000000004f4 T yuv420_abgr_std
000000000006e400 000000000000024c T yuv422_rgb565_std
000000000006e650 000000000000021c T yuv422_rgb24_std
000000000006e870 0000000000000240 T yuv422_rgba_std
000000000006eab0 0000000000000240 T yuv422_bgra_std
000000000006ecf0 0000000000000234 T yuv422_argb_std
000000000006ef30 0000000000000234 T yuv422_abgr_std
000000000006f170 0000000000000530 T yuvnv12_rgb565_std
000000000006f6a0 00000000000004b0 T yuvnv12_rgb24_std
000000000006fb50 0000000000000514 T yuvnv12_rgba_std
0000000000070070 0000000000000514 T yuvnv12_bgra_std
0000000000070590 00000000000004fc T yuvnv12_argb_std
0000000000070a90 00000000000004f4 T yuvnv12_abgr_std
0000000000070f90 0000000000000018 t RunThread
0000000000070fb0 00000000000000b0 T SDL_SYS_CreateThread
0000000000071060 000000000000001c T SDL_SYS_SetupThread
0000000000071080 0000000000000004 T SDL_ThreadID
0000000000071090 0000000000000050 T SDL_SYS_SetThreadPriority
00000000000710e0 000000000000000c T SDL_SYS_WaitThread
00000000000710f0 0000000000000078 T SDL_CreateSemaphore
0000000000071170 000000000000002c T SDL_DestroySemaphore
00000000000711a0 0000000000000034 T SDL_SemTryWait
00000000000711e0 0000000000000068 T SDL_SemWait
0000000000071250 0000000000000134 T SDL_SemWaitTimeout
0000000000071390 000000000000005c T SDL_SemPost
00000000000713f0 0000000000000090 T SDL_CreateMutex
0000000000071480 000000000000002c T SDL_DestroyMutex
00000000000714b0 0000000000000038 T SDL_LockMutex
00000000000714f0 0000000000000038 T SDL_UnlockMutex
0000000000071530 00000000000000b0 T SDL_SYS_GetTLSData
00000000000715e0 0000000000000044 T SDL_SYS_SetTLSData
0000000000071630 0000000000000008 T SWITCH_CreateWindowFrom
0000000000071640 0000000000000004 T SWITCH_SetWindowTitle
0000000000071650 0000000000000004 T SWITCH_SetWindowIcon
0000000000071660 00000000000001a8 t SWITCH_CreateDevice
0000000000071810 0000000000000034 t SWITCH_Destroy
0000000000071850 000000000000009c T SWITCH_VideoInit
00000000000718f0 0000000000000040 T SWITCH_VideoQuit
0000000000071930 0000000000000060 T SWITCH_GetDisplayModes
0000000000071990 0000000000000090 T SWITCH_DestroyWindow
0000000000071a20 00000000000000a0 T SWITCH_SetDisplayMode
0000000000071ac0 00000000000000b8 T SWITCH_SetWindowSize
0000000000071b80 0000000000000128 T SWITCH_CreateWindow
0000000000071cb0 00000000000000c4 T SWITCH_PumpEvents
0000000000071d80 0000000000000004 T SWITCH_RestoreWindow
0000000000071d90 0000000000000004 T SWITCH_SetWindowPosition
0000000000071da0 0000000000000004 T SWITCH_ShowWindow
0000000000071db0 0000000000000004 T SWITCH_HideWindow
0000000000071dc0 0000000000000004 T SWITCH_RaiseWindow
0000000000071dd0 0000000000000004 T SWITCH_MaximizeWindow
0000000000071de0 0000000000000004 T SWITCH_MinimizeWindow
0000000000071df0 0000000000000004 t SWITCHAUDIO_WaitDevice
0000000000071e00 000000000000000c t SWITCHAUDIO_GetDeviceBuf
0000000000071e10 0000000000000054 t SWITCHAUDIO_Init
0000000000071e70 0000000000000060 t SWITCHAUDIO_CloseDevice
0000000000071ed0 000000000000017c t SWITCHAUDIO_PlayDevice
0000000000072050 00000000000002ec t SWITCHAUDIO_OpenDevice
0000000000072340 0000000000000004 t SWITCHAUDIO_ThreadInit
0000000000072350 0000000000000008 t SWITCH_JoystickGetCount
0000000000072360 0000000000000004 t SWITCH_JoystickDetect
0000000000072370 000000000000000c t SWITCH_JoystickGetDeviceName
0000000000072380 0000000000000008 t SWITCH_JoystickGetDevicePath
0000000000072390 0000000000000008 t SWITCH_JoystickGetDevicePlayerIndex
00000000000723a0 0000000000000004 t SWITCH_JoystickSetDevicePlayerIndex
00000000000723b0 0000000000000004 t SWITCH_JoystickGetDeviceInstanceID
00000000000723c0 0000000000000024 t SWITCH_JoystickOpen
00000000000723f0 0000000000000008 t SWITCH_JoystickGetCapabilities
0000000000072400 0000000000000008 t SWITCH_JoystickSetLED
0000000000072410 0000000000000004 t SWITCH_JoystickClose
0000000000072420 0000000000000008 t SWITCH_JoystickGetGamepadMapping
0000000000072430 0000000000000184 t SWITCH_UpdateControllerSupport
00000000000725c0 000000000000025c t SWITCH_JoystickUpdate
0000000000072820 0000000000000008 t SWITCH_JoystickSetSensorsEnabled
0000000000072830 0000000000000008 t SWITCH_JoystickSendEffect
0000000000072840 0000000000000008 t SWITCH_JoystickRumbleTriggers
0000000000072850 00000000000000c0 t SWITCH_JoystickRumble
0000000000072910 000000000000000c t SWITCH_JoystickGetDeviceGUID
0000000000072920 0000000000000158 t SWITCH_JoystickInit
0000000000072a80 0000000000000004 t SWITCH_JoystickQuit
0000000000072a90 000000000000000c T SDL_TicksQuit
0000000000072aa0 0000000000000008 T SDL_GetPerformanceCounter
0000000000072ab0 0000000000000038 T SDL_TicksInit
0000000000072af0 0000000000000008 T SDL_GetPerformanceFrequency
0000000000072b00 0000000000000054 T SDL_GetTicks64
0000000000072b60 0000000000000010 T SDL_Delay
0000000000072b70 0000000000000008 t VIRTUAL_JoystickInit
0000000000072b80 0000000000000004 t VIRTUAL_JoystickDetect
0000000000072b90 0000000000000008 t VIRTUAL_JoystickGetDevicePath
0000000000072ba0 0000000000000008 t VIRTUAL_JoystickGetDevicePlayerIndex
0000000000072bb0 0000000000000ae0 t VIRTUAL_JoystickGetGamepadMapping
0000000000073690 0000000000000050 t VIRTUAL_JoystickGetDeviceInstanceID
00000000000736e0 0000000000000064 t VIRTUAL_JoystickSetDevicePlayerIndex
0000000000073750 000000000000004c t VIRTUAL_JoystickGetDeviceName
00000000000737a0 0000000000000030 t VIRTUAL_JoystickClose
00000000000737d0 0000000000000064 t VIRTUAL_JoystickGetCapabilities
0000000000073840 0000000000000034 t VIRTUAL_JoystickGetCount
0000000000073880 0000000000000008 t VIRTUAL_JoystickSetSensorsEnabled
0000000000073890 00000000000000c8 t VIRTUAL_FreeHWData
0000000000073960 0000000000000038 t VIRTUAL_JoystickQuit
00000000000739a0 00000000000000d4 t VIRTUAL_JoystickUpdate
0000000000073a80 0000000000000084 t VIRTUAL_JoystickOpen
0000000000073b10 0000000000000084 t VIRTUAL_JoystickSetLED
0000000000073ba0 0000000000000058 t VIRTUAL_JoystickGetDeviceGUID
0000000000073c00 000000000000007c t VIRTUAL_JoystickRumble
0000000000073c80 000000000000007c t VIRTUAL_JoystickRumbleTriggers
0000000000073d00 000000000000007c t VIRTUAL_JoystickSendEffect
0000000000073d80 0000000000000008 T SDL_SYS_HapticInit
0000000000073d90 0000000000000004 T SDL_SYS_HapticClose
0000000000073da0 0000000000000004 T SDL_SYS_HapticQuit
0000000000073db0 000000000000000c T SDL_SYS_HapticDestroyEffect
0000000000073dc0 0000000000000008 t SDL_DUMMY_SensorInit
0000000000073dd0 0000000000000004 t SDL_DUMMY_SensorDetect
0000000000073de0 0000000000000008 t SDL_DUMMY_SensorGetDeviceName
0000000000073df0 0000000000000008 t SDL_DUMMY_SensorGetDeviceType
0000000000073e00 0000000000000008 t SDL_DUMMY_SensorGetDeviceNonPortableType
0000000000073e10 0000000000000004 t SDL_DUMMY_SensorUpdate
0000000000073e20 0000000000000008 t SDL_DUMMY_SensorOpen
0000000000073e30 0000000000000004 t SDL_DUMMY_SensorClose
0000000000073e40 0000000000000008 t SDL_DUMMY_SensorGetDeviceInstanceID
0000000000073e50 0000000000000008 t SDL_DUMMY_SensorGetCount
0000000000073e60 0000000000000004 t SDL_DUMMY_SensorQuit
0000000000073e70 00000000000000bc T SDL_NewDataQueue
0000000000073f30 0000000000000064 T SDL_FreeDataQueue
0000000000073fa0 00000000000000bc T SDL_ClearDataQueue
0000000000074060 000000000000018c T SDL_WriteToDataQueue
00000000000741f0 00000000000000fc T SDL_ReadFromDataQueue
00000000000742f0 000000000000003c T SDL_CountDataQueue
0000000000074330 0000000000000130 T SDL_GUIDFromString
0000000000074460 0000000000000054 T SDL_ListAdd
00000000000744c0 0000000000000034 T SDL_ListRemove
0000000000074500 0000000000000030 T SDL_powerof2
0000000000074530 0000000000000020 T SDL_AtomicCAS
0000000000074550 0000000000000018 T SDL_AtomicSet
0000000000074570 000000000000001c T SDL_AtomicAdd
0000000000074590 0000000000000008 T SDL_AtomicGet
00000000000745a0 00000000000000b0 T SDL_SendDisplayEvent
0000000000074650 0000000000001548 t SDL_BlendFillRect_RGB555
0000000000075ba0 0000000000001528 t SDL_BlendFillRect_RGB565
00000000000770d0 0000000000001030 t SDL_BlendFillRect_RGB888
0000000000078100 000000000000120c t SDL_BlendFillRect_ARGB8888
0000000000079310 0000000000003f00 t SDL_BlendFillRect_RGB
000000000007d210 000000000000253c t SDL_BlendFillRect_RGBA
000000000007f750 00000000000001e8 T SDL_BlendFillRects
000000000007f940 0000000000002248 t SDL_BlendLine_RGB2
0000000000081b90 0000000000001584 t SDL_BlendLine_RGB555
0000000000083120 0000000000001574 t SDL_BlendLine_RGB565
00000000000846a0 00000000000021a8 t SDL_BlendLine_RGB4
0000000000086850 00000000000025bc t SDL_BlendLine_RGBA4
0000000000088e10 00000000000023d0 t SDL_BlendLine_RGB888
000000000008b1e0 0000000000002b7c t SDL_BlendLine_ARGB8888
000000000008dd60 000000000000025c T SDL_BlendLines
000000000008dfc0 0000000000000294 t SDL_BlendPoint_RGB555
000000000008e260 0000000000000290 t SDL_BlendPoint_RGB565
000000000008e4f0 00000000000001fc t SDL_BlendPoint_RGB888
000000000008e6f0 0000000000000238 t SDL_BlendPoint_ARGB8888
000000000008e930 0000000000000758 t SDL_BlendPoint_RGB
000000000008f090 00000000000004a8 t SDL_BlendPoint_RGBA
000000000008f540 0000000000000128 T SDL_BlendPoint
000000000008f670 0000000000000204 T SDL_BlendPoints
000000000008f880 000000000000056c t SDL_DrawLine4
000000000008fdf0 00000000000005ac t SDL_DrawLine2
00000000000903a0 0000000000000288 t SDL_DrawLine1
0000000000090630 00000000000001e4 T SDL_DrawLines
0000000000090820 00000000000000f0 T SDL_DrawPoint
0000000000090910 0000000000000118 T SDL_DrawPoints
0000000000090a30 00000000000000c4 t copy_opaque_16
0000000000090b00 00000000000000e0 t uncopy_opaque_16
0000000000090be0 00000000000005f8 t copy_transl_565
00000000000911e0 00000000000005f8 t copy_transl_555
00000000000917e0 00000000000000e0 t uncopy_transl_16
00000000000918c0 000000000000050c t copy_32
0000000000091dd0 00000000000000d4 t uncopy_32
0000000000091eb0 0000000000000008 t getpix_8
0000000000091ec0 0000000000000008 t getpix_16
0000000000091ed0 0000000000000010 t getpix_24
0000000000091ee0 0000000000000008 t getpix_32
0000000000091ef0 0000000000001720 t SDL_RLEAlphaBlit
0000000000093610 0000000000003c18 t SDL_RLEBlit
0000000000097230 000000000000027c T SDL_UnRLESurface
00000000000974b0 0000000000000f34 T SDL_RLESurface
00000000000983f0 0000000000000268 t SDL_SoftBlit
0000000000098660 00000000000003b0 T SDL_CalculateBlit
0000000000098a10 0000000000000308 t BlitBto1
0000000000098d20 00000000000001ac t BlitBto2
0000000000098ed0 0000000000000184 t BlitBto3
0000000000099060 00000000000001b4 t BlitBto4
0000000000099220 0000000000000240 t BlitBto1Key
0000000000099460 0000000000000164 t BlitBto2Key
00000000000995d0 0000000000000160 t BlitBto4Key
0000000000099730 0000000000000dc4 t BlitBtoNAlpha
000000000009a500 0000000000000e48 t BlitBtoNAlphaKey
000000000009b350 00000000000000d0 t Blit4bto4
000000000009b420 00000000000000ac t Blit4bto4Key
000000000009b4d0 00000000000001b8 t BlitBto3Key
000000000009b690 00000000000000f4 T SDL_CalculateBlit0
000000000009b790 00000000000001dc t Blit1to1
000000000009b970 00000000000001f4 t Blit1to2
000000000009bb70 00000000000003cc t Blit1to3
000000000009bf40 0000000000000214 t Blit1to4
000000000009c160 00000000000004cc t Blit1to1Key
000000000009c630 00000000000002f8 t Blit1to2Key
000000000009c930 0000000000000474 t Blit1to3Key
000000000009cdb0 00000000000002c4 t Blit1to4Key
000000000009d080 0000000000001b50 t Blit1toNAlpha
000000000009ebd0 0000000000003a4c t Blit1toNAlphaKey
00000000000a2620 00000000000000b8 T SDL_CalculateBlit1
00000000000a26e0 0000000000000df8 t BlitNto1SurfaceAlpha
00000000000a34e0 0000000000000fd0 t BlitNto1PixelAlpha
00000000000a44b0 0000000000001c98 t BlitNto1SurfaceAlphaKey
00000000000a6150 000000000000056c t BlitRGBtoRGBSurfaceAlpha
00000000000a66c0 000000000000045c t BlitRGBtoRGBPixelAlpha
00000000000a6b20 00000000000004d8 t BlitRGBtoBGRPixelAlpha
00000000000a7000 0000000000000330 t Blit16to16SurfaceAlpha128
00000000000a7330 00000000000002ac t Blit565to565SurfaceAlpha
00000000000a75e0 00000000000002ac t Blit555to555SurfaceAlpha
00000000000a7890 000000000000050c t BlitARGBto565PixelAlpha
00000000000a7da0 000000000000050c t BlitARGBto555PixelAlpha
00000000000a82b0 00000000000021ac t BlitNtoNSurfaceAlpha
00000000000aa460 00000000000020ac t BlitNtoNSurfaceAlphaKey
00000000000ac510 0000000000002644 t BlitNtoNPixelAlpha
00000000000aeb60 00000000000002f4 T SDL_CalculateBlitA
00000000000aee60 00000000000006c8 t Blit_RGB888_index8
00000000000af530 00000000000006c8 t Blit_RGB101010_index8
00000000000afc00 000000000000034c t Blit_RGB888_RGB555
00000000000aff50 000000000000034c t Blit_RGB888_RGB565
00000000000b02a0 00000000000003c8 t Blit_RGB565_32
00000000000b0670 000000000000000c t Blit_RGB565_ARGB8888
00000000000b0680 000000000000000c t Blit_RGB565_ABGR8888
00000000000b0690 000000000000000c t Blit_RGB565_RGBA8888
00000000000b06a0 000000000000000c t Blit_RGB565_BGRA8888
00000000000b06b0 00000000000001f4 t Blit_RGB555_ARGB1555
00000000000b08b0 0000000000001f10 t BlitNto1
00000000000b27c0 00000000000003d8 t Blit4to4MaskAlpha
00000000000b2ba0 0000000000000164 t get_permutation
00000000000b2d10 0000000000002c4c t BlitNtoN
00000000000b5960 0000000000000b4c t BlitNtoNCopyAlpha
00000000000b64b0 0000000000002588 t BlitNto1Key
00000000000b8a40 00000000000002c4 t Blit2to2Key
00000000000b8d10 0000000000003d8c t BlitNtoNKey
00000000000bcaa0 0000000000003528 t BlitNtoNKeyCopyAlpha
00000000000bffd0 0000000000000f38 t Blit2101010toN
00000000000c0f10 0000000000001760 t BlitNto2101010
00000000000c2670 000000000000073c t Blit_3or4_to_3or4__same_rgb
00000000000c2db0 0000000000000b38 t Blit_3or4_to_3or4__inversed_rgb
00000000000c38f0 000000000000034c T SDL_CalculateBlitN
00000000000c3c40 00000000000000c8 t SDL_Blit_RGB888_RGB888_Scale
00000000000c3d10 00000000000006a4 t SDL_Blit_RGB888_RGB888_Blend
00000000000c43c0 0000000000000228 t SDL_Blit_RGB888_RGB888_Blend_Scale
00000000000c45f0 000000000000042c t SDL_Blit_RGB888_RGB888_Modulate
00000000000c4a20 0000000000000198 t SDL_Blit_RGB888_RGB888_Modulate_Scale
00000000000c4bc0 00000000000007fc t SDL_Blit_RGB888_RGB888_Modulate_Blend
00000000000c53c0 0000000000000514 t SDL_Blit_RGB888_RGB888_Modulate_Blend_Scale
00000000000c58e0 00000000000000dc t SDL_Blit_RGB888_BGR888_Scale
00000000000c59c0 00000000000006e4 t SDL_Blit_RGB888_BGR888_Blend
00000000000c60b0 0000000000000230 t SDL_Blit_RGB888_BGR888_Blend_Scale
00000000000c62e0 0000000000000464 t SDL_Blit_RGB888_BGR888_Modulate
00000000000c6750 00000000000001a0 t SDL_Blit_RGB888_BGR888_Modulate_Scale
00000000000c68f0 00000000000007f8 t SDL_Blit_RGB888_BGR888_Modulate_Blend
00000000000c70f0 0000000000000520 t SDL_Blit_RGB888_BGR888_Modulate_Blend_Scale
00000000000c7610 00000000000000cc t SDL_Blit_RGB888_ARGB8888_Scale
00000000000c76e0 00000000000006f4 t SDL_Blit_RGB888_ARGB8888_Blend
00000000000c7de0 0000000000000274 t SDL_Blit_RGB888_ARGB8888_Blend_Scale
00000000000c8060 0000000000000474 t SDL_Blit_RGB888_ARGB8888_Modulate
00000000000c84e0 00000000000001ac t SDL_Blit_RGB888_ARGB8888_Modulate_Scale
00000000000c8690 00000000000008ac t SDL_Blit_RGB888_ARGB8888_Modulate_Blend
00000000000c8f40 0000000000000564 t SDL_Blit_RGB888_ARGB8888_Modulate_Blend_Scale
00000000000c94b0 0000000000000004 t SDL_Blit_BGR888_RGB888_Scale
00000000000c94c0 00000000000006e4 t SDL_Blit_BGR888_RGB888_Blend
00000000000c9bb0 0000000000000230 t SDL_Blit_BGR888_RGB888_Blend_Scale
00000000000c9de0 0000000000000464 t SDL_Blit_BGR888_RGB888_Modulate
00000000000ca250 00000000000001a0 t SDL_Blit_BGR888_RGB888_Modulate_Scale
00000000000ca3f0 0000000000000804 t SDL_Blit_BGR888_RGB888_Modulate_Blend
00000000000cac00 0000000000000514 t SDL_Blit_BGR888_RGB888_Modulate_Blend_Scale
00000000000cb120 00000000000006a4 t SDL_Blit_BGR888_BGR888_Blend
00000000000cb7d0 0000000000000228 t SDL_Blit_BGR888_BGR888_Blend_Scale
00000000000cba00 000000000000042c t SDL_Blit_BGR888_BGR888_Modulate
00000000000cbe30 0000000000000198 t SDL_Blit_BGR888_BGR888_Modulate_Scale
00000000000cbfd0 00000000000007f0 t SDL_Blit_BGR888_BGR888_Modulate_Blend
00000000000cc7c0 0000000000000518 t SDL_Blit_BGR888_BGR888_Modulate_Blend_Scale
00000000000ccce0 00000000000000e0 t SDL_Blit_BGR888_ARGB8888_Scale
00000000000ccdc0 0000000000000734 t SDL_Blit_BGR888_ARGB8888_Blend
00000000000cd500 0000000000000278 t SDL_Blit_BGR888_ARGB8888_Blend_Scale
00000000000cd780 00000000000004a4 t SDL_Blit_BGR888_ARGB8888_Modulate
00000000000cdc30 00000000000001bc t SDL_Blit_BGR888_ARGB8888_Modulate_Scale
00000000000cddf0 00000000000008ac t SDL_Blit_BGR888_ARGB8888_Modulate_Blend
00000000000ce6a0 0000000000000564 t SDL_Blit_BGR888_ARGB8888_Modulate_Blend_Scale
00000000000cec10 00000000000000cc t SDL_Blit_ARGB8888_RGB888_Scale
00000000000cece0 00000000000009e8 t SDL_Blit_ARGB8888_RGB888_Blend
00000000000cf6d0 0000000000000424 t SDL_Blit_ARGB8888_RGB888_Blend_Scale
00000000000cfb00 0000000000000004 t SDL_Blit_ARGB8888_RGB888_Modulate
00000000000cfb10 0000000000000004 t SDL_Blit_ARGB8888_RGB888_Modulate_Scale
00000000000cfb20 000000000000096c t SDL_Blit_ARGB8888_RGB888_Modulate_Blend
00000000000d0490 00000000000005cc t SDL_Blit_ARGB8888_RGB888_Modulate_Blend_Scale
00000000000d0a60 0000000000000004 t SDL_Blit_ARGB8888_BGR888_Scale
00000000000d0a70 00000000000009e8 t SDL_Blit_ARGB8888_BGR888_Blend
00000000000d1460 0000000000000430 t SDL_Blit_ARGB8888_BGR888_Blend_Scale
00000000000d1890 0000000000000004 t SDL_Blit_ARGB8888_BGR888_Modulate
00000000000d18a0 0000000000000004 t SDL_Blit_ARGB8888_BGR888_Modulate_Scale
00000000000d18b0 000000000000096c t SDL_Blit_ARGB8888_BGR888_Modulate_Blend
00000000000d2220 00000000000005c8 t SDL_Blit_ARGB8888_BGR888_Modulate_Blend_Scale
00000000000d27f0 0000000000000a58 t SDL_Blit_ARGB8888_ARGB8888_Blend
00000000000d3250 0000000000000414 t SDL_Blit_ARGB8888_ARGB8888_Blend_Scale
00000000000d3670 00000000000006ec t SDL_Blit_ARGB8888_ARGB8888_Modulate
00000000000d3d60 00000000000002c0 t SDL_Blit_ARGB8888_ARGB8888_Modulate_Scale
00000000000d4020 0000000000000a10 t SDL_Blit_ARGB8888_ARGB8888_Modulate_Blend
00000000000d4a30 0000000000000538 t SDL_Blit_ARGB8888_ARGB8888_Modulate_Blend_Scale
00000000000d4f70 00000000000000cc t SDL_Blit_RGBA8888_RGB888_Scale
00000000000d5040 00000000000009e0 t SDL_Blit_RGBA8888_RGB888_Blend
00000000000d5a20 0000000000000424 t SDL_Blit_RGBA8888_RGB888_Blend_Scale
00000000000d5e50 0000000000000424 t SDL_Blit_RGBA8888_RGB888_Modulate
00000000000d6280 0000000000000190 t SDL_Blit_RGBA8888_RGB888_Modulate_Scale
00000000000d6410 000000000000096c t SDL_Blit_RGBA8888_RGB888_Modulate_Blend
00000000000d6d80 00000000000005cc t SDL_Blit_RGBA8888_RGB888_Modulate_Blend_Scale
00000000000d7350 00000000000000dc t SDL_Blit_RGBA8888_BGR888_Scale
00000000000d7430 00000000000009e0 t SDL_Blit_RGBA8888_BGR888_Blend
00000000000d7e10 0000000000000430 t SDL_Blit_RGBA8888_BGR888_Blend_Scale
00000000000d8240 000000000000046c t SDL_Blit_RGBA8888_BGR888_Modulate
00000000000d86b0 00000000000001a8 t SDL_Blit_RGBA8888_BGR888_Modulate_Scale
00000000000d8860 000000000000096c t SDL_Blit_RGBA8888_BGR888_Modulate_Blend
00000000000d91d0 00000000000005c8 t SDL_Blit_RGBA8888_BGR888_Modulate_Blend_Scale
00000000000d97a0 00000000000000cc t SDL_Blit_RGBA8888_ARGB8888_Scale
00000000000d9870 0000000000000a58 t SDL_Blit_RGBA8888_ARGB8888_Blend
00000000000da2d0 0000000000000414 t SDL_Blit_RGBA8888_ARGB8888_Blend_Scale
00000000000da6f0 000000000000075c t SDL_Blit_RGBA8888_ARGB8888_Modulate
00000000000dae50 00000000000002d8 t SDL_Blit_RGBA8888_ARGB8888_Modulate_Scale
00000000000db130 0000000000000a10 t SDL_Blit_RGBA8888_ARGB8888_Modulate_Blend
00000000000dbb40 0000000000000538 t SDL_Blit_RGBA8888_ARGB8888_Modulate_Blend_Scale
00000000000dc080 0000000000000004 t SDL_Blit_ABGR8888_RGB888_Scale
00000000000dc090 00000000000009e8 t SDL_Blit_ABGR8888_RGB888_Blend
00000000000dca80 000000000000042c t SDL_Blit_ABGR8888_RGB888_Blend_Scale
00000000000dceb0 0000000000000004 t SDL_Blit_ABGR8888_RGB888_Modulate
00000000000dcec0 0000000000000004 t SDL_Blit_ABGR8888_RGB888_Modulate_Scale
00000000000dced0 000000000000096c t SDL_Blit_ABGR8888_RGB888_Modulate_Blend
00000000000dd840 00000000000005cc t SDL_Blit_ABGR8888_RGB888_Modulate_Blend_Scale
00000000000dde10 0000000000000004 t SDL_Blit_ABGR8888_BGR888_Scale
00000000000dde20 00000000000009e8 t SDL_Blit_ABGR8888_BGR888_Blend
00000000000de810 0000000000000430 t SDL_Blit_ABGR8888_BGR888_Blend_Scale
00000000000dec40 0000000000000004 t SDL_Blit_ABGR8888_BGR888_Modulate
00000000000dec50 0000000000000004 t SDL_Blit_ABGR8888_BGR888_Modulate_Scale
00000000000dec60 000000000000096c t SDL_Blit_ABGR8888_BGR888_Modulate_Blend
00000000000df5d0 00000000000005c8 t SDL_Blit_ABGR8888_BGR888_Modulate_Blend_Scale
00000000000dfba0 00000000000000dc t SDL_Blit_ABGR8888_ARGB8888_Scale
00000000000dfc80 0000000000000a50 t SDL_Blit_ABGR8888_ARGB8888_Blend
00000000000e06d0 0000000000000414 t SDL_Blit_ABGR8888_ARGB8888_Blend_Scale
00000000000e0af0 000000000000079c t SDL_Blit_ABGR8888_ARGB8888_Modulate
00000000000e1290 00000000000002e8 t SDL_Blit_ABGR8888_ARGB8888_Modulate_Scale
00000000000e1580 0000000000000a10 t SDL_Blit_ABGR8888_ARGB8888_Modulate_Blend
00000000000e1f90 0000000000000538 t SDL_Blit_ABGR8888_ARGB8888_Modulate_Blend_Scale
00000000000e24d0 0000000000000004 t SDL_Blit_BGRA8888_RGB888_Scale
00000000000e24e0 00000000000009e0 t SDL_Blit_BGRA8888_RGB888_Blend
00000000000e2ec0 000000000000042c t SDL_Blit_BGRA8888_RGB888_Blend_Scale
00000000000e32f0 000000000000046c t SDL_Blit_BGRA8888_RGB888_Modulate
00000000000e3760 00000000000001a8 t SDL_Blit_BGRA8888_RGB888_Modulate_Scale
00000000000e3910 000000000000096c t SDL_Blit_BGRA8888_RGB888_Modulate_Blend
00000000000e4280 00000000000005cc t SDL_Blit_BGRA8888_RGB888_Modulate_Blend_Scale
00000000000e4850 0000000000000004 t SDL_Blit_BGRA8888_BGR888_Scale
00000000000e4860 00000000000009e8 t SDL_Blit_BGRA8888_BGR888_Blend
00000000000e5250 0000000000000430 t SDL_Blit_BGRA8888_BGR888_Blend_Scale
00000000000e5680 0000000000000424 t SDL_Blit_BGRA8888_BGR888_Modulate
00000000000e5ab0 0000000000000190 t SDL_Blit_BGRA8888_BGR888_Modulate_Scale
00000000000e5c40 000000000000096c t SDL_Blit_BGRA8888_BGR888_Modulate_Blend
00000000000e65b0 00000000000005c8 t SDL_Blit_BGRA8888_BGR888_Modulate_Blend_Scale
00000000000e6b80 00000000000000cc t SDL_Blit_BGRA8888_ARGB8888_Scale
00000000000e6c50 0000000000000a50 t SDL_Blit_BGRA8888_ARGB8888_Blend
00000000000e76a0 0000000000000414 t SDL_Blit_BGRA8888_ARGB8888_Blend_Scale
00000000000e7ac0 00000000000007bc t SDL_Blit_BGRA8888_ARGB8888_Modulate
00000000000e8280 00000000000002ec t SDL_Blit_BGRA8888_ARGB8888_Modulate_Scale
00000000000e8570 0000000000000a10 t SDL_Blit_BGRA8888_ARGB8888_Modulate_Blend
00000000000e8f80 0000000000000538 t SDL_Blit_BGRA8888_ARGB8888_Modulate_Blend_Scale
00000000000e94c0 00000000000000c8 t SDL_Blit_ARGB8888_ARGB8888_Scale
00000000000e9590 00000000000000c8 t SDL_Blit_BGR888_BGR888_Scale
00000000000e9660 0000000000000160 T SDL_BlitCopy
00000000000e97c0 0000000000001450 T SDL_Blit_Slow
00000000000eac10 0000000000000090 t SDL_EGL_GetVersion
00000000000eaca0 0000000000000134 T SDL_EGL_SetErrorEx
00000000000eade0 0000000000000134 T SDL_EGL_HasExtension
00000000000eaf20 0000000000000548 t SDL_EGL_PrivateChooseConfig
00000000000eb470 00000000000000b0 T SDL_EGL_GetProcAddress
00000000000eb520 0000000000000080 T SDL_EGL_UnloadLibrary
00000000000eb5a0 0000000000000284 T SDL_EGL_LoadLibraryOnly
00000000000eb830 0000000000000168 T SDL_EGL_LoadLibrary
00000000000eb9a0 000000000000008c T SDL_EGL_ChooseConfig
00000000000eba30 0000000000000104 T SDL_EGL_MakeCurrent
00000000000ebb40 0000000000000094 T SDL_EGL_SetSwapInterval
00000000000ebbe0 0000000000000030 T SDL_EGL_GetSwapInterval
00000000000ebc10 0000000000000060 T SDL_EGL_SwapBuffers
00000000000ebc70 0000000000000024 T SDL_EGL_DeleteContext
00000000000ebca0 00000000000003bc T SDL_EGL_CreateContext
00000000000ec060 0000000000000160 T SDL_EGL_CreateSurface
00000000000ec1c0 0000000000000024 T SDL_EGL_DestroySurface
00000000000ec1f0 0000000000000004 T SWITCH_InitKeyboard
00000000000ec200 00000000000000c4 T SWITCH_PollKeyboard
00000000000ec2d0 0000000000000004 T SWITCH_QuitKeyboard
00000000000ec2e0 0000000000000008 t SWITCH_SetRelativeMouseMode
00000000000ec2f0 0000000000000020 T SWITCH_InitMouse
00000000000ec310 0000000000000154 T SWITCH_PollMouse
00000000000ec470 0000000000000004 T SWITCH_QuitMouse
00000000000ec480 0000000000000018 T SWITCH_GLES_DefaultProfileConfig
00000000000ec4a0 000000000000000c T SWITCH_GLES_LoadLibrary
00000000000ec4b0 000000000000000c T SWITCH_GLES_CreateContext
00000000000ec4c0 0000000000000010 T SWITCH_GLES_MakeCurrent
00000000000ec4d0 000000000000000c T SWITCH_GLES_SwapWindow
00000000000ec4e0 0000000000000004 t SWITCH_CancelCb
00000000000ec4f0 0000000000000030 t SWITCH_EnterCb
00000000000ec520 0000000000000004 T SWITCH_InitSwkb
00000000000ec530 000000000000004c T SWITCH_PollSwkb
00000000000ec580 0000000000000040 T SWITCH_QuitSwkb
00000000000ec5c0 0000000000000008 T SWITCH_HasScreenKeyboardSupport
00000000000ec5d0 000000000000000c T SWITCH_IsScreenKeyboardShown
00000000000ec5e0 0000000000000100 T SWITCH_StartTextInput
00000000000ec6e0 000000000000003c T SWITCH_StopTextInput
00000000000ec720 0000000000000064 T SWITCH_InitTouch
00000000000ec790 0000000000000004 T SWITCH_QuitTouch
00000000000ec7a0 0000000000000524 T SWITCH_PollTouch
00000000000eccd0 0000000000000028 T SDL_LoadFunction
00000000000ecd00 0000000000000004 T SDL_UnloadObject
00000000000ecd10 0000000000000038 T eglGetError
00000000000ecd50 00000000000000e4 t _eglSetFuncName
00000000000ece40 0000000000000038 T eglQueryAPI
00000000000ece80 00000000000000f8 t _eglWaitClientCommon
00000000000ecf80 000000000000003c T eglGetCurrentDisplay
00000000000ecfc0 0000000000000044 T eglGetCurrentContext
00000000000ed010 0000000000000008 t _eglFunctionCompare
00000000000ed020 00000000000000e4 t _eglConvertIntsToAttribs
00000000000ed110 0000000000000084 t _eglConvertAttribsToInt.part.0
00000000000ed1a0 0000000000000068 t _eglAppendExtension.isra.0
00000000000ed210 00000000000000d8 t _eglGetSyncAttribCommon
00000000000ed2f0 00000000000000f4 t _eglDestroySync
00000000000ed3f0 0000000000000148 t _eglDestroyImageCommon
00000000000ed540 000000000000013c t _eglClientWaitSyncCommon
00000000000ed680 0000000000000138 t _eglWaitSyncCommon
00000000000ed7c0 0000000000000198 t _eglCreateImageCommon
00000000000ed960 00000000000000d4 T eglDestroySync
00000000000eda40 00000000000000d4 t eglDestroyImageKHR
00000000000edb20 00000000000000d4 T eglDestroyImage
00000000000edc00 00000000000000d4 t eglDestroySyncKHR
00000000000edce0 00000000000000c8 T eglWaitSync
00000000000eddb0 00000000000000c8 t eglWaitSyncKHR
00000000000ede80 000000000000018c t _eglSwapBuffersWithDamageCommon
00000000000ee010 00000000000000fc t eglSwapBuffersWithDamageKHR
00000000000ee110 00000000000000fc t eglSwapBuffersWithDamageEXT
00000000000ee210 0000000000000100 t eglClientWaitSyncKHR
00000000000ee310 0000000000000100 T eglClientWaitSync
00000000000ee410 00000000000001c4 t _eglCreatePixmapSurfaceCommon
00000000000ee5e0 000000000000012c T eglGetSyncAttrib
00000000000ee710 00000000000001d8 t _eglCreateWindowSurfaceCommon
00000000000ee8f0 0000000000000150 t eglGetSyncAttribKHR
00000000000eea40 0000000000000218 t _eglCreateSync
00000000000eec60 000000000000019c T eglSurfaceAttrib
00000000000eee00 000000000000019c T eglQueryContext
00000000000eefa0 000000000000016c T eglCopyBuffers
00000000000ef110 000000000000016c t eglSignalSyncKHR
00000000000ef280 000000000000016c T eglBindTexImage
00000000000ef3f0 000000000000016c T eglReleaseTexImage
00000000000ef560 000000000000018c T eglDestroyContext
00000000000ef6f0 000000000000018c T eglDestroySurface
00000000000ef880 00000000000001a4 t eglExportDMABUFImageQueryMESA
00000000000efa30 00000000000001a4 t eglExportDRMImageMESA
00000000000efbe0 00000000000001a4 t eglExportDMABUFImageMESA
00000000000efd90 00000000000001cc t eglPostSubBufferNV
00000000000eff60 00000000000001ac T eglQuerySurface
00000000000f0110 0000000000000194 t eglDupNativeFenceFDANDROID
00000000000f02b0 00000000000001cc t eglGetSyncValuesCHROMIUM
00000000000f0480 00000000000001cc t eglSwapBuffersRegionNOK
00000000000f0650 0000000000000208 T eglSwapBuffers
00000000000f0860 000000000000020c T eglSwapInterval
00000000000f0a70 00000000000002b0 t eglSetDamageRegionKHR
00000000000f0d20 0000000000000330 T eglMakeCurrent
00000000000f1050 00000000000000c0 t eglQueryDevicesEXT
00000000000f1110 0000000000000074 T eglGetDisplay
00000000000f1190 00000000000000b0 T eglGetPlatformDisplay
00000000000f1240 0000000000000070 T eglWaitClient
00000000000f12b0 0000000000000070 T eglWaitGL
00000000000f1320 0000000000000114 t eglQueryDeviceAttribEXT
00000000000f1440 00000000000000e0 T eglGetCurrentSurface
00000000000f1520 0000000000000108 t eglGetPlatformDisplayEXT
00000000000f1630 00000000000000e0 T eglBindAPI
00000000000f1710 00000000000000e0 t eglQueryDeviceStringEXT
00000000000f17f0 000000000000011c t eglQueryDebugKHR
00000000000f1910 00000000000000f8 T eglGetProcAddress
00000000000f1a10 0000000000000160 t eglQueryDisplayAttribEXT
00000000000f1b70 0000000000000164 t eglQueryDmaBufFormatsEXT
00000000000f1ce0 000000000000012c T eglCreatePixmapSurface
00000000000f1e10 000000000000012c T eglCreateWindowSurface
00000000000f1f40 000000000000012c t eglCreatePlatformPixmapSurfaceEXT
00000000000f2070 000000000000012c t eglCreatePlatformWindowSurfaceEXT
00000000000f21a0 0000000000000144 t eglDebugMessageControlKHR
00000000000f22f0 0000000000000184 t eglQueryDmaBufModifiersEXT
00000000000f2480 0000000000000140 t eglCreateImageKHR
00000000000f25c0 0000000000000128 T eglCreateSync
00000000000f26f0 0000000000000128 t eglCreateSync64KHR
00000000000f2820 0000000000000158 T eglWaitNative
00000000000f2980 000000000000018c t eglLabelObjectKHR
00000000000f2b10 0000000000000150 T eglTerminate
00000000000f2c60 00000000000001c8 T eglCreatePlatformPixmapSurface
00000000000f2e30 00000000000001c8 T eglCreatePlatformWindowSurface
00000000000f3000 0000000000000198 t eglCreateSyncKHR
00000000000f31a0 00000000000001d4 T eglCreateImage
00000000000f3380 0000000000000168 t eglGetDisplayDriverConfig
00000000000f34f0 0000000000000168 t eglGetDisplayDriverName
00000000000f3660 00000000000000d4 T eglReleaseThread
00000000000f3740 0000000000000194 T eglCreatePbufferFromClientBuffer
00000000000f38e0 00000000000001e0 T eglGetConfigs
00000000000f3ac0 00000000000001b4 t eglCreateDRMImageMESA
00000000000f3c80 00000000000001bc t eglBindWaylandDisplayWL
00000000000f3e40 0000000000000200 T eglChooseConfig
00000000000f4040 00000000000001bc t eglUnbindWaylandDisplayWL
00000000000f4200 00000000000001f8 T eglGetConfigAttrib
00000000000f4400 00000000000001e4 t eglQueryWaylandBufferWL
00000000000f45f0 0000000000000190 t eglSetBlobCacheFuncsANDROID
00000000000f4780 00000000000001f0 t eglCreateWaylandBufferFromImageWL
00000000000f4970 0000000000000228 T eglCreatePbufferSurface
00000000000f4ba0 000000000000028c T eglCreateContext
00000000000f4e30 000000000000027c T eglQueryString
00000000000f50b0 0000000000000890 T eglInitialize
00000000000f5940 0000000000000190 t _eglOffsetOfConfig
00000000000f5ad0 0000000000000134 t _eglSortConfigs
00000000000f5c10 0000000000000010 t _eglFlattenConfig
00000000000f5c20 0000000000000048 t _eglInitConfig
00000000000f5c70 0000000000000050 t _eglLinkConfig
00000000000f5cc0 000000000000001c t _eglLookupConfig
00000000000f5ce0 00000000000002fc t _eglValidateConfig
00000000000f5fe0 0000000000000268 t _eglMatchConfig
00000000000f6250 0000000000000004 t _eglFallbackMatch
00000000000f6260 00000000000001d8 t _eglParseConfigAttribList
00000000000f6440 0000000000000174 t _eglCompareConfigs
00000000000f65c0 0000000000000008 t _eglFallbackCompare
00000000000f65d0 0000000000000130 t _eglFilterConfigArray
00000000000f6700 0000000000000094 t _eglChooseConfig
00000000000f67a0 00000000000000b4 t _eglGetConfigAttrib
00000000000f6860 0000000000000044 t _eglGetConfigs
00000000000f68b0 0000000000000728 t _eglInitContext
00000000000f6fe0 00000000000000dc t _eglQueryContext
00000000000f70c0 000000000000029c t _eglBindContext
00000000000f7360 0000000000000078 t _eglGetCurrentThread
00000000000f73e0 0000000000000048 t _eglDestroyCurrentThread
00000000000f7430 0000000000000034 t _eglIsCurrentThreadDummy
00000000000f7470 0000000000000078 t _eglGetCurrentContext
00000000000f74f0 00000000000003cc t _eglDebugReport
00000000000f78c0 00000000000000b8 t _eglError
00000000000f7980 0000000000000044 T _eglFiniDevice
00000000000f79d0 0000000000000090 t _eglCheckDeviceHandle
00000000000f7a60 0000000000000024 t _eglDeviceSupports
00000000000f7a90 0000000000000024 t _eglQueryDeviceAttribEXT
00000000000f7ac0 0000000000000038 t _eglQueryDeviceStringEXT
00000000000f7b00 00000000000000e4 t _eglQueryDevicesEXT
00000000000f7bf0 000000000000012c t _eglGetNativePlatform
00000000000f7d20 000000000000009c T _eglFiniDisplay
00000000000f7dc0 00000000000001e4 t _eglFindDisplay
00000000000f7fb0 00000000000001d0 t _eglReleaseDisplayResources
00000000000f8180 0000000000000034 t _eglCleanupDisplay
00000000000f81c0 0000000000000090 t _eglCheckDisplayHandle
00000000000f8250 0000000000000040 t _eglCheckResource
00000000000f8290 0000000000000038 t _eglInitResource
00000000000f82d0 0000000000000010 t _eglGetResource
00000000000f82e0 0000000000000018 t _eglPutResource
00000000000f8300 000000000000002c t _eglLinkResource
00000000000f8330 0000000000000074 t _eglUnlinkResource
00000000000f83b0 00000000000001a4 t _eglGetDeviceDisplay
00000000000f8560 0000000000000078 t _eglGetDriver
00000000000f85e0 00000000000000c8 t _eglMatchDriver
00000000000f86b0 000000000000004c t _eglGetDriverProc
00000000000f8700 0000000000000028 T _eglUnloadDrivers
00000000000f8730 000000000000000c t _eglPointerIsDereferencable
00000000000f8740 00000000000001f4 t _eglLog
00000000000f8940 00000000000005cc t _eglInitSurface
00000000000f8f10 0000000000000424 t _eglQuerySurface
00000000000f9340 0000000000000200 t _eglSurfaceAttrib
00000000000f9540 0000000000000008 t _eglSwapInterval
00000000000f9550 0000000000000100 t _eglGetSyncAttrib
00000000000f9650 0000000000000008 t switch_st_framebuffer_flush_front
00000000000f9660 0000000000000008 t switch_st_framebuffer_flush_swapbuffers
00000000000f9670 0000000000000008 t switch_create_pixmap_surface
00000000000f9680 0000000000000008 t switch_create_pbuffer_surface
00000000000f9690 0000000000000008 t switch_st_get_param
00000000000f96a0 0000000000000008 t switch_get_proc_address
00000000000f96b0 00000000000000e4 t switch_swap_buffers
00000000000f97a0 0000000000000020 t switch_swap_interval
00000000000f97c0 000000000000018c t switch_create_context
00000000000f9950 000000000000005c t switch_terminate
00000000000f99b0 000000000000004c t switch_destroy_context
00000000000f9a00 00000000000001c4 t switch_st_framebuffer_validate
00000000000f9bd0 000000000000012c t switch_egl_surface_cleanup
00000000000f9d00 0000000000000244 t switch_create_window_surface
00000000000f9f50 0000000000000050 t switch_destroy_surface
00000000000f9fa0 0000000000000128 t switch_make_current
00000000000fa0d0 0000000000000478 t switch_initialize
00000000000fa550 0000000000000084 t _eglInitDriver
00000000000fa5e0 000000000000009c t st_framebuffer_update_attachments
00000000000fa680 0000000000000004 t st_framebuffer_iface_hash
00000000000fa690 000000000000000c t st_framebuffer_iface_equal
00000000000fa6a0 000000000000002c t st_api_get_current
00000000000fa6d0 0000000000000004 t st_api_destroy
00000000000fa6e0 00000000000000b4 t st_context_validate
00000000000fa7a0 0000000000000004 t st_context_destroy
00000000000fa7b0 0000000000000024 t st_context_share
00000000000fa7e0 0000000000000010 t st_context_copy
00000000000fa7f0 0000000000000048 t st_manager_destroy
00000000000fa840 00000000000000d4 t get_version
00000000000fa920 000000000000009c t st_api_query_versions
00000000000fa9c0 0000000000000078 t st_api_destroy_drawable
00000000000faa40 00000000000000f0 t st_framebuffers_purge
00000000000fab30 00000000000002b8 t st_context_teximage
00000000000fadf0 000000000000022c t st_framebuffer_add_renderbuffer
00000000000fb020 0000000000000520 t st_visual_to_context_mode
00000000000fb540 00000000000002f0 t st_framebuffer_reuse_or_create.constprop.0
00000000000fb830 0000000000000354 t st_api_create_context
00000000000fbb90 0000000000000230 t st_set_ws_renderbuffer_surface
00000000000fbdc0 00000000000002f8 t st_framebuffer_validate
00000000000fc0c0 0000000000000184 t st_api_make_current
00000000000fc250 0000000000000014 t st_framebuffer_reference
00000000000fc270 00000000000000a4 t st_manager_flush_frontbuffer
00000000000fc320 0000000000000100 t st_context_flush
00000000000fc420 0000000000000108 t st_manager_validate_framebuffers
00000000000fc530 0000000000000078 t st_manager_flush_swapbuffers
00000000000fc5b0 00000000000000cc t st_manager_add_color_renderbuffer
00000000000fc680 000000000000000c t st_gl_api_create
00000000000fc690 00000000000000cc t st_texture_release_all_sampler_views.part.0
00000000000fc760 0000000000000220 t st_texture_set_sampler_view
00000000000fc980 0000000000000058 t st_texture_get_current_sampler_view
00000000000fc9e0 00000000000000b8 t st_texture_release_context_sampler_view
00000000000fcaa0 0000000000000010 t st_texture_release_all_sampler_views
00000000000fcab0 0000000000000058 t st_delete_texture_sampler_views
00000000000fcb10 0000000000000754 t st_get_texture_sampler_view_from_stobj
00000000000fd270 000000000000013c t st_get_buffer_sampler_view_from_stobj
00000000000fd3b0 0000000000000018 t u_surface_default_template
00000000000fd3d0 00000000000000e8 t util_copy_box
00000000000fd4c0 00000000000002f8 t util_resource_copy_region
00000000000fd7c0 000000000000006c t nouveau_drm_screen_unref
00000000000fd830 0000000000000110 T nouveau_switch_screen_create
00000000000fd940 0000000000000008 T nouveau_switch_resource_get_syncpoint
00000000000fd950 00000000000001fc T nouveau_switch_resource_get_buffer
00000000000fdb50 000000000000013c t nvc0_screen_get_shader_param
00000000000fdc90 00000000000000a4 t nvc0_screen_get_paramf
00000000000fdd40 0000000000000054 t nvc0_screen_get_sample_pixel_grid
00000000000fdda0 0000000000000054 t nvc0_screen_fence_emit
00000000000fde00 000000000000000c t nvc0_screen_fence_update
00000000000fde10 0000000000000444 t nvc0_screen_get_param
00000000000fe260 00000000000001c8 t nvc0_screen_is_format_supported
00000000000fe430 000000000000025c t nvc0_screen_get_compute_param
00000000000fe690 0000000000000028 t PUSH_SPACE.isra.0
00000000000fe6c0 0000000000000164 t nvc0_screen_destroy
00000000000fe830 00000000000000f8 t nvc0_graph_set_macro.isra.0
00000000000fe930 000000000000017c t nvc0_screen_resize_text_area
00000000000feab0 000000000000022c t nvc0_screen_bind_cb_3d
00000000000fece0 00000000000020a8 t nvc0_screen_create
0000000000100d90 000000000000007c t nvc0_screen_tic_alloc
0000000000100e10 000000000000007c t nvc0_screen_tsc_alloc
0000000000100e90 0000000000000004 t nvc0_flush_resource
0000000000100ea0 0000000000000334 t nvc0_clear_buffer_push_nve4
00000000001011e0 0000000000000378 t nvc0_clear_buffer_push_nvc0
0000000000101560 0000000000000080 t nvc0_clear_buffer_push
00000000001015e0 0000000000000084 t gm200_evaluate_depth_buffer
0000000000101670 00000000000003b0 t nvc0_2d_texture_set
0000000000101a20 0000000000000508 t nvc0_resource_copy_region
0000000000101f30 0000000000000698 t nvc0_clear_buffer
00000000001025d0 00000000000004ec t nvc0_clear_depth_stencil
0000000000102ac0 000000000000056c t nvc0_clear_render_target
0000000000103030 00000000000026ac t nvc0_blit
00000000001056e0 00000000000004d8 T nvc0_clear
0000000000105bc0 0000000000000124 t nvc0_blitter_create
0000000000105cf0 0000000000000084 t nvc0_blitter_destroy
0000000000105d80 0000000000000050 t nvc0_blitctx_create
0000000000105dd0 0000000000000008 t nvc0_blitctx_destroy
0000000000105de0 0000000000000074 t nvc0_init_surface_functions
0000000000105e60 0000000000000034 t nve4_delete_image_handle
0000000000105ea0 00000000000000c0 t nve4_make_texture_handle_resident
0000000000105f60 0000000000000178 t gm107_make_image_handle_resident
00000000001060e0 00000000000000e0 t nvc0_get_surface_dims
00000000001061c0 0000000000000068 t gm107_delete_image_handle
0000000000106230 0000000000000124 t nve4_delete_texture_handle
0000000000106360 00000000000005fc t gf100_create_texture_view
0000000000106960 00000000000006e0 t gm107_create_texture_view
0000000000107040 00000000000001f0 t nve4_create_texture_handle
0000000000107230 0000000000000030 T nvc0_create_sampler_view
0000000000107260 00000000000000d8 t gm107_create_texture_view_from_image
0000000000107340 0000000000000144 t gm107_create_image_handle
0000000000107490 0000000000000014 t nvc0_create_texture_view
00000000001074b0 000000000000009c t nvc0_update_tic
0000000000107550 0000000000000414 t nvc0_validate_tic
0000000000107970 00000000000003b8 T nvc0_validate_textures
0000000000107d30 00000000000002e0 t nvc0_validate_tsc
0000000000108010 00000000000001a0 t nve4_validate_tsc
00000000001081b0 00000000000000ec T nvc0_validate_samplers
00000000001082a0 0000000000000094 t nvc0_upload_tsc0
0000000000108340 0000000000000190 T nve4_set_tex_handles
00000000001084d0 00000000000000b4 t nvc0_mark_image_range_valid
0000000000108590 00000000000000f0 t nve4_make_image_handle_resident
0000000000108680 00000000000002e8 t nve4_set_surface_info
0000000000108970 000000000000019c t nve4_create_image_handle
0000000000108b10 00000000000005b4 t nvc0_validate_suf
00000000001090d0 00000000000004dc T nvc0_validate_surfaces
00000000001095b0 0000000000000088 t nvc0_init_bindless_functions
0000000000109640 0000000000000224 t nvc0_m2mf_copy_linear
0000000000109870 0000000000000204 t nve4_p2mf_push_linear
0000000000109a80 0000000000000254 t nvc0_m2mf_push_linear
0000000000109ce0 0000000000000190 t nve4_m2mf_copy_linear
0000000000109e70 000000000000050c t nvc0_m2mf_transfer_rect
000000000010a380 0000000000000364 t nve4_m2mf_transfer_rect
000000000010a6f0 00000000000005b8 T nvc0_miptree_transfer_map
000000000010acb0 0000000000000160 T nvc0_miptree_transfer_unmap
000000000010ae10 00000000000001a4 t nvc0_cb_bo_push
000000000010afc0 00000000000000e8 t nvc0_cb_push
000000000010b0b0 000000000000007c t nvc0_init_transfer_functions
000000000010b130 000000000000016c t nve4_upload_indirect_desc
000000000010b2a0 00000000000000ac t nve4_compute_validate_samplers
000000000010b350 000000000000025c t nve4_compute_validate_buffers
000000000010b5b0 0000000000000384 t nve4_compute_validate_constbufs
000000000010b940 00000000000001f4 t nve4_compute_set_tex_handles
000000000010bb40 000000000000048c t nve4_compute_validate_textures
000000000010bfd0 00000000000005ec t nve4_compute_validate_surfaces
000000000010c5c0 00000000000006c0 t nve4_screen_compute_setup
000000000010cc80 0000000000000c58 T nve4_launch_grid
000000000010d8e0 00000000000000f8 t env_var_as_boolean
000000000010d9e0 0000000000000398 t XXH32_finalize
000000000010dd80 00000000000000f4 t hash_table_search
000000000010de80 0000000000000020 T _mesa_hash_pointer
000000000010dea0 000000000000000c T _mesa_key_pointer_equal
000000000010deb0 000000000000016c t _mesa_hash_table_rehash
000000000010e020 00000000000001b8 t hash_table_insert
000000000010e1e0 0000000000000098 t _mesa_hash_table_create
000000000010e280 00000000000000bc t _mesa_hash_table_destroy
000000000010e340 0000000000000080 t _mesa_hash_table_clear
000000000010e3c0 0000000000000008 t _mesa_hash_table_set_deleted_key
000000000010e3d0 0000000000000038 t _mesa_hash_table_search
000000000010e410 0000000000000004 t _mesa_hash_table_search_pre_hashed
000000000010e420 0000000000000048 t _mesa_hash_table_insert
000000000010e470 0000000000000004 t _mesa_hash_table_insert_pre_hashed
000000000010e480 0000000000000020 t _mesa_hash_table_remove
000000000010e4a0 0000000000000054 t _mesa_hash_table_next_entry
000000000010e500 00000000000001e8 t _mesa_hash_data
000000000010e6f0 0000000000000034 t _mesa_hash_string
000000000010e730 000000000000001c T _mesa_key_string_equal
000000000010e750 0000000000000014 t _mesa_pointer_hash_table_create
000000000010e770 000000000000005c t _mesa_hash_table_u64_create
000000000010e7d0 00000000000000ac t _mesa_hash_table_u64_clear
000000000010e880 000000000000003c t _mesa_hash_table_u64_destroy
000000000010e8c0 0000000000000074 t _mesa_hash_table_u64_insert
000000000010e940 0000000000000058 t _mesa_hash_table_u64_search
000000000010e9a0 000000000000009c t _mesa_hash_table_u64_remove
000000000010ea40 0000000000000084 t resize
000000000010ead0 0000000000000034 t printf_length
000000000010eb10 00000000000001ec t unsafe_free
000000000010ed00 0000000000000058 t ralloc_context
000000000010ed60 0000000000000058 t ralloc_size
000000000010edc0 0000000000000038 t rzalloc_size
000000000010ee00 0000000000000018 t reralloc_size
000000000010ee20 0000000000000080 t ralloc_array_size
000000000010eea0 0000000000000050 t rzalloc_array_size
000000000010eef0 000000000000002c t reralloc_array_size
000000000010ef20 0000000000000098 t ralloc_free
000000000010efc0 00000000000000a0 t ralloc_steal
000000000010f060 0000000000000020 t ralloc_parent
000000000010f080 0000000000000008 t ralloc_set_destructor
000000000010f090 0000000000000070 t ralloc_strdup
000000000010f100 0000000000000074 t ralloc_strndup
000000000010f180 0000000000000098 t ralloc_strcat
000000000010f220 00000000000000d8 t ralloc_asprintf
000000000010f300 0000000000000084 t ralloc_vasprintf
000000000010f390 000000000000014c t ralloc_vasprintf_rewrite_tail
000000000010f4e0 0000000000000060 t ralloc_vasprintf_append
000000000010f540 000000000000006c t ralloc_asprintf_rewrite_tail
000000000010f5b0 00000000000000b8 t ralloc_asprintf_append
000000000010f670 00000000000000b4 t linear_alloc_child
000000000010f730 0000000000000084 t linear_alloc_parent
000000000010f7c0 0000000000000038 t linear_zalloc_child
000000000010f800 0000000000000080 t linear_strdup
000000000010f880 00000000000000d8 t linear_asprintf
000000000010f960 000000000000017c t linear_vasprintf_rewrite_tail
000000000010fae0 00000000000000c0 t linear_asprintf_append
000000000010fba0 00000000000000dc t linear_strcat
000000000010fc80 000000000000009c t _debug_printf
000000000010fd20 0000000000000040 t _debug_vprintf
000000000010fd60 0000000000000074 t _pipe_debug_message
000000000010fde0 000000000000010c t debug_get_bool_option
000000000010fef0 000000000000021c t debug_get_flags_option
0000000000110110 0000000000000064 t debug_dump_enum
0000000000110180 00000000000001a0 t util_copy_rect
0000000000110320 0000000000000078 t util_format_is_float
00000000001103a0 0000000000000038 t util_format_has_alpha
00000000001103e0 000000000000003c t util_format_is_luminance
0000000000110420 0000000000000040 t util_format_is_alpha
0000000000110460 0000000000000070 t util_format_is_pure_integer
00000000001104d0 0000000000000080 t util_format_is_pure_sint
0000000000110550 0000000000000080 t util_format_is_pure_uint
00000000001105d0 000000000000001c t util_format_is_snorm
00000000001105f0 000000000000003c t util_format_is_luminance_alpha
0000000000110630 0000000000000038 t util_format_is_intensity
0000000000110670 000000000000008c t util_format_read_4f
0000000000110700 000000000000008c t util_format_read_4ub
0000000000110790 000000000000008c t util_format_read_4ui
0000000000110820 000000000000008c t util_format_read_4i
00000000001108b0 0000000000000110 t util_format_apply_color_swizzle
00000000001109c0 000000000000006c t util_format_none_unpack_rgba_float
0000000000110a30 0000000000000088 t util_format_none_pack_rgba_float
0000000000110ac0 000000000000001c t util_format_none_fetch_rgba_float
0000000000110ae0 0000000000000074 t util_format_none_unpack_rgba_8unorm
0000000000110b60 000000000000006c t util_format_none_pack_rgba_8unorm
0000000000110bd0 00000000000000a4 t util_format_b8g8r8a8_unorm_unpack_rgba_float
0000000000110c80 0000000000000054 t util_format_b8g8r8a8_unorm_fetch_rgba_float
0000000000110ce0 0000000000000078 t util_format_b8g8r8a8_unorm_unpack_rgba_8unorm
0000000000110d60 000000000000007c t util_format_b8g8r8a8_unorm_pack_rgba_8unorm
0000000000110de0 000000000000009c t util_format_b8g8r8x8_unorm_unpack_rgba_float
0000000000110e80 000000000000004c t util_format_b8g8r8x8_unorm_fetch_rgba_float
0000000000110ed0 0000000000000074 t util_format_b8g8r8x8_unorm_unpack_rgba_8unorm
0000000000110f50 0000000000000074 t util_format_b8g8r8x8_unorm_pack_rgba_8unorm
0000000000110fd0 00000000000000a4 t util_format_a8r8g8b8_unorm_unpack_rgba_float
0000000000111080 0000000000000054 t util_format_a8r8g8b8_unorm_fetch_rgba_float
00000000001110e0 0000000000000078 t util_format_a8r8g8b8_unorm_unpack_rgba_8unorm
0000000000111160 000000000000007c t util_format_a8r8g8b8_unorm_pack_rgba_8unorm
00000000001111e0 000000000000009c t util_format_x8r8g8b8_unorm_unpack_rgba_float
0000000000111280 000000000000004c t util_format_x8r8g8b8_unorm_fetch_rgba_float
00000000001112d0 0000000000000078 t util_format_x8r8g8b8_unorm_unpack_rgba_8unorm
0000000000111350 0000000000000074 t util_format_x8r8g8b8_unorm_pack_rgba_8unorm
00000000001113d0 00000000000000a4 t util_format_a8b8g8r8_unorm_unpack_rgba_float
0000000000111480 0000000000000054 t util_format_a8b8g8r8_unorm_fetch_rgba_float
00000000001114e0 0000000000000078 t util_format_a8b8g8r8_unorm_unpack_rgba_8unorm
0000000000111560 0000000000000048 t util_format_a8b8g8r8_unorm_pack_rgba_8unorm
00000000001115b0 000000000000009c t util_format_x8b8g8r8_unorm_unpack_rgba_float
0000000000111650 0000000000000050 t util_format_x8b8g8r8_unorm_fetch_rgba_float
00000000001116a0 0000000000000078 t util_format_x8b8g8r8_unorm_unpack_rgba_8unorm
0000000000111720 0000000000000070 t util_format_x8b8g8r8_unorm_pack_rgba_8unorm
0000000000111790 000000000000009c t util_format_r8g8b8x8_unorm_unpack_rgba_float
0000000000111830 000000000000004c t util_format_r8g8b8x8_unorm_fetch_rgba_float
0000000000111880 0000000000000074 t util_format_r8g8b8x8_unorm_unpack_rgba_8unorm
0000000000111900 0000000000000070 t util_format_r8g8b8x8_unorm_pack_rgba_8unorm
0000000000111970 000000000000009c t util_format_r5g5b5a1_unorm_unpack_rgba_float
0000000000111a10 000000000000017c t util_format_r5g5b5a1_unorm_pack_rgba_float
0000000000111b90 000000000000004c t util_format_r5g5b5a1_unorm_fetch_rgba_float
0000000000111be0 00000000000000d8 t util_format_r5g5b5a1_unorm_unpack_rgba_8unorm
0000000000111cc0 0000000000000090 t util_format_r5g5b5a1_unorm_pack_rgba_8unorm
0000000000111d50 0000000000000098 t util_format_b5g5r5x1_unorm_unpack_rgba_float
0000000000111df0 0000000000000150 t util_format_b5g5r5x1_unorm_pack_rgba_float
0000000000111f40 0000000000000048 t util_format_b5g5r5x1_unorm_fetch_rgba_float
0000000000111f90 00000000000000d4 t util_format_b5g5r5x1_unorm_unpack_rgba_8unorm
0000000000112070 000000000000007c t util_format_b5g5r5x1_unorm_pack_rgba_8unorm
00000000001120f0 000000000000009c t util_format_b5g5r5a1_unorm_unpack_rgba_float
0000000000112190 000000000000017c t util_format_b5g5r5a1_unorm_pack_rgba_float
0000000000112310 000000000000004c t util_format_b5g5r5a1_unorm_fetch_rgba_float
0000000000112360 00000000000000d8 t util_format_b5g5r5a1_unorm_unpack_rgba_8unorm
0000000000112440 000000000000008c t util_format_b5g5r5a1_unorm_pack_rgba_8unorm
00000000001124d0 000000000000009c t util_format_x1b5g5r5_unorm_unpack_rgba_float
0000000000112570 0000000000000150 t util_format_x1b5g5r5_unorm_pack_rgba_float
00000000001126c0 0000000000000050 t util_format_x1b5g5r5_unorm_fetch_rgba_float
0000000000112710 00000000000000d4 t util_format_x1b5g5r5_unorm_unpack_rgba_8unorm
00000000001127f0 0000000000000084 t util_format_x1b5g5r5_unorm_pack_rgba_8unorm
0000000000112880 000000000000009c t util_format_a1r5g5b5_unorm_unpack_rgba_float
0000000000112920 0000000000000180 t util_format_a1r5g5b5_unorm_pack_rgba_float
0000000000112aa0 000000000000004c t util_format_a1r5g5b5_unorm_fetch_rgba_float
0000000000112af0 00000000000000d8 t util_format_a1r5g5b5_unorm_unpack_rgba_8unorm
0000000000112bd0 0000000000000090 t util_format_a1r5g5b5_unorm_pack_rgba_8unorm
0000000000112c60 000000000000009c t util_format_a1b5g5r5_unorm_unpack_rgba_float
0000000000112d00 0000000000000180 t util_format_a1b5g5r5_unorm_pack_rgba_float
0000000000112e80 000000000000004c t util_format_a1b5g5r5_unorm_fetch_rgba_float
0000000000112ed0 00000000000000d8 t util_format_a1b5g5r5_unorm_unpack_rgba_8unorm
0000000000112fb0 0000000000000090 t util_format_a1b5g5r5_unorm_pack_rgba_8unorm
0000000000113040 00000000000000a0 t util_format_r4g4b4a4_unorm_unpack_rgba_float
00000000001130e0 00000000000001a0 t util_format_r4g4b4a4_unorm_pack_rgba_float
0000000000113280 0000000000000050 t util_format_r4g4b4a4_unorm_fetch_rgba_float
00000000001132d0 00000000000000c4 t util_format_r4g4b4a4_unorm_unpack_rgba_8unorm
00000000001133a0 000000000000008c t util_format_r4g4b4a4_unorm_pack_rgba_8unorm
0000000000113430 00000000000000a0 t util_format_b4g4r4a4_unorm_unpack_rgba_float
00000000001134d0 00000000000001a0 t util_format_b4g4r4a4_unorm_pack_rgba_float
0000000000113670 0000000000000050 t util_format_b4g4r4a4_unorm_fetch_rgba_float
00000000001136c0 00000000000000c4 t util_format_b4g4r4a4_unorm_unpack_rgba_8unorm
0000000000113790 0000000000000088 t util_format_b4g4r4a4_unorm_pack_rgba_8unorm
0000000000113820 0000000000000098 t util_format_b4g4r4x4_unorm_unpack_rgba_float
00000000001138c0 0000000000000150 t util_format_b4g4r4x4_unorm_pack_rgba_float
0000000000113a10 0000000000000048 t util_format_b4g4r4x4_unorm_fetch_rgba_float
0000000000113a60 00000000000000b0 t util_format_b4g4r4x4_unorm_unpack_rgba_8unorm
0000000000113b10 0000000000000078 t util_format_b4g4r4x4_unorm_pack_rgba_8unorm
0000000000113b90 00000000000000a0 t util_format_a4r4g4b4_unorm_unpack_rgba_float
0000000000113c30 00000000000001a0 t util_format_a4r4g4b4_unorm_pack_rgba_float
0000000000113dd0 0000000000000050 t util_format_a4r4g4b4_unorm_fetch_rgba_float
0000000000113e20 00000000000000c4 t util_format_a4r4g4b4_unorm_unpack_rgba_8unorm
0000000000113ef0 000000000000008c t util_format_a4r4g4b4_unorm_pack_rgba_8unorm
0000000000113f80 00000000000000a0 t util_format_a4b4g4r4_unorm_unpack_rgba_float
0000000000114020 00000000000001a0 t util_format_a4b4g4r4_unorm_pack_rgba_float
00000000001141c0 0000000000000050 t util_format_a4b4g4r4_unorm_fetch_rgba_float
0000000000114210 00000000000000c4 t util_format_a4b4g4r4_unorm_unpack_rgba_8unorm
00000000001142e0 000000000000008c t util_format_a4b4g4r4_unorm_pack_rgba_8unorm
0000000000114370 00000000000000a4 t util_format_r5g6b5_unorm_unpack_rgba_float
0000000000114420 0000000000000158 t util_format_r5g6b5_unorm_pack_rgba_float
0000000000114580 0000000000000058 t util_format_r5g6b5_unorm_fetch_rgba_float
00000000001145e0 00000000000000dc t util_format_r5g6b5_unorm_unpack_rgba_8unorm
00000000001146c0 0000000000000080 t util_format_r5g6b5_unorm_pack_rgba_8unorm
0000000000114740 00000000000000a4 t util_format_b5g6r5_unorm_unpack_rgba_float
00000000001147f0 0000000000000158 t util_format_b5g6r5_unorm_pack_rgba_float
0000000000114950 0000000000000054 t util_format_b5g6r5_unorm_fetch_rgba_float
00000000001149b0 00000000000000dc t util_format_b5g6r5_unorm_unpack_rgba_8unorm
0000000000114a90 000000000000007c t util_format_b5g6r5_unorm_pack_rgba_8unorm
0000000000114b10 00000000000000b0 t util_format_r10g10b10a2_unorm_unpack_rgba_float
0000000000114bc0 00000000000001a8 t util_format_r10g10b10a2_unorm_pack_rgba_float
0000000000114d70 000000000000005c t util_format_r10g10b10a2_unorm_fetch_rgba_float
0000000000114dd0 0000000000000094 t util_format_r10g10b10a2_unorm_unpack_rgba_8unorm
0000000000114e70 00000000000000b8 t util_format_r10g10b10a2_unorm_pack_rgba_8unorm
0000000000114f30 0000000000000098 t util_format_r10g10b10x2_unorm_unpack_rgba_float
0000000000114fd0 0000000000000158 t util_format_r10g10b10x2_unorm_pack_rgba_float
0000000000115130 0000000000000048 t util_format_r10g10b10x2_unorm_fetch_rgba_float
0000000000115180 0000000000000078 t util_format_r10g10b10x2_unorm_unpack_rgba_8unorm
0000000000115200 00000000000000a8 t util_format_r10g10b10x2_unorm_pack_rgba_8unorm
00000000001152b0 00000000000000b0 t util_format_b10g10r10a2_unorm_unpack_rgba_float
0000000000115360 00000000000001a8 t util_format_b10g10r10a2_unorm_pack_rgba_float
0000000000115510 000000000000005c t util_format_b10g10r10a2_unorm_fetch_rgba_float
0000000000115570 0000000000000094 t util_format_b10g10r10a2_unorm_unpack_rgba_8unorm
0000000000115610 00000000000000b8 t util_format_b10g10r10a2_unorm_pack_rgba_8unorm
00000000001156d0 00000000000000b0 t util_format_a2r10g10b10_unorm_unpack_rgba_float
0000000000115780 00000000000001a8 t util_format_a2r10g10b10_unorm_pack_rgba_float
0000000000115930 000000000000005c t util_format_a2r10g10b10_unorm_fetch_rgba_float
0000000000115990 0000000000000094 t util_format_a2r10g10b10_unorm_unpack_rgba_8unorm
0000000000115a30 00000000000000b8 t util_format_a2r10g10b10_unorm_pack_rgba_8unorm
0000000000115af0 00000000000000b0 t util_format_a2b10g10r10_unorm_unpack_rgba_float
0000000000115ba0 00000000000001a8 t util_format_a2b10g10r10_unorm_pack_rgba_float
0000000000115d50 000000000000005c t util_format_a2b10g10r10_unorm_fetch_rgba_float
0000000000115db0 0000000000000094 t util_format_a2b10g10r10_unorm_unpack_rgba_8unorm
0000000000115e50 00000000000000b8 t util_format_a2b10g10r10_unorm_pack_rgba_8unorm
0000000000115f10 00000000000000a4 t util_format_r3g3b2_unorm_unpack_rgba_float
0000000000115fc0 0000000000000158 t util_format_r3g3b2_unorm_pack_rgba_float
0000000000116120 0000000000000058 t util_format_r3g3b2_unorm_fetch_rgba_float
0000000000116180 00000000000000d0 t util_format_r3g3b2_unorm_unpack_rgba_8unorm
0000000000116250 0000000000000078 t util_format_r3g3b2_unorm_pack_rgba_8unorm
00000000001162d0 00000000000000a4 t util_format_b2g3r3_unorm_unpack_rgba_float
0000000000116380 0000000000000158 t util_format_b2g3r3_unorm_pack_rgba_float
00000000001164e0 000000000000005c t util_format_b2g3r3_unorm_fetch_rgba_float
0000000000116540 00000000000000d0 t util_format_b2g3r3_unorm_unpack_rgba_8unorm
0000000000116610 000000000000007c t util_format_b2g3r3_unorm_pack_rgba_8unorm
0000000000116690 000000000000007c t util_format_l8_unorm_unpack_rgba_float
0000000000116710 0000000000000028 t util_format_l8_unorm_fetch_rgba_float
0000000000116740 000000000000006c t util_format_l8_unorm_unpack_rgba_8unorm
00000000001167b0 000000000000005c t util_format_l8_unorm_pack_rgba_8unorm
0000000000116810 0000000000000078 t util_format_a8_unorm_unpack_rgba_float
0000000000116890 0000000000000028 t util_format_a8_unorm_fetch_rgba_float
00000000001168c0 000000000000006c t util_format_a8_unorm_unpack_rgba_8unorm
0000000000116930 0000000000000060 t util_format_a8_unorm_pack_rgba_8unorm
0000000000116990 0000000000000074 t util_format_i8_unorm_unpack_rgba_float
0000000000116a10 0000000000000024 t util_format_i8_unorm_fetch_rgba_float
0000000000116a40 000000000000006c t util_format_i8_unorm_unpack_rgba_8unorm
0000000000116ab0 0000000000000088 t util_format_l4a4_unorm_unpack_rgba_float
0000000000116b40 0000000000000100 t util_format_l4a4_unorm_pack_rgba_float
0000000000116c40 0000000000000038 t util_format_l4a4_unorm_fetch_rgba_float
0000000000116c80 000000000000009c t util_format_l4a4_unorm_unpack_rgba_8unorm
0000000000116d20 000000000000006c t util_format_l4a4_unorm_pack_rgba_8unorm
0000000000116d90 000000000000008c t util_format_l8a8_unorm_unpack_rgba_float
0000000000116e20 000000000000003c t util_format_l8a8_unorm_fetch_rgba_float
0000000000116e60 0000000000000074 t util_format_l8a8_unorm_unpack_rgba_8unorm
0000000000116ee0 0000000000000068 t util_format_l8a8_unorm_pack_rgba_8unorm
0000000000116f50 000000000000007c t util_format_l16_unorm_unpack_rgba_float
0000000000116fd0 00000000000000b8 t util_format_l16_unorm_pack_rgba_float
0000000000117090 0000000000000028 t util_format_l16_unorm_fetch_rgba_float
00000000001170c0 0000000000000070 t util_format_l16_unorm_unpack_rgba_8unorm
0000000000117130 0000000000000074 t util_format_l16_unorm_pack_rgba_8unorm
00000000001171b0 0000000000000078 t util_format_a16_unorm_unpack_rgba_float
0000000000117230 00000000000000b8 t util_format_a16_unorm_pack_rgba_float
00000000001172f0 0000000000000028 t util_format_a16_unorm_fetch_rgba_float
0000000000117320 0000000000000070 t util_format_a16_unorm_unpack_rgba_8unorm
0000000000117390 0000000000000078 t util_format_a16_unorm_pack_rgba_8unorm
0000000000117410 0000000000000074 t util_format_i16_unorm_unpack_rgba_float
0000000000117490 0000000000000024 t util_format_i16_unorm_fetch_rgba_float
00000000001174c0 0000000000000070 t util_format_i16_unorm_unpack_rgba_8unorm
0000000000117530 0000000000000088 t util_format_l16a16_unorm_unpack_rgba_float
00000000001175c0 0000000000000104 t util_format_l16a16_unorm_pack_rgba_float
00000000001176d0 0000000000000038 t util_format_l16a16_unorm_fetch_rgba_float
0000000000117710 0000000000000074 t util_format_l16a16_unorm_unpack_rgba_8unorm
0000000000117790 000000000000008c t util_format_l16a16_unorm_pack_rgba_8unorm
0000000000117820 0000000000000078 t util_format_a8_snorm_unpack_rgba_float
00000000001178a0 00000000000000b8 t util_format_a8_snorm_pack_rgba_float
0000000000117960 0000000000000028 t util_format_a8_snorm_fetch_rgba_float
0000000000117990 0000000000000098 t util_format_a8_snorm_unpack_rgba_8unorm
0000000000117a30 0000000000000064 t util_format_a8_snorm_pack_rgba_8unorm
0000000000117aa0 000000000000007c t util_format_l8_snorm_unpack_rgba_float
0000000000117b20 00000000000000b8 t util_format_l8_snorm_pack_rgba_float
0000000000117be0 000000000000002c t util_format_l8_snorm_fetch_rgba_float
0000000000117c10 000000000000009c t util_format_l8_snorm_unpack_rgba_8unorm
0000000000117cb0 0000000000000060 t util_format_l8_snorm_pack_rgba_8unorm
0000000000117d10 0000000000000084 t util_format_l8a8_snorm_unpack_rgba_float
0000000000117da0 0000000000000108 t util_format_l8a8_snorm_pack_rgba_float
0000000000117eb0 0000000000000034 t util_format_l8a8_snorm_fetch_rgba_float
0000000000117ef0 00000000000000c4 t util_format_l8a8_snorm_unpack_rgba_8unorm
0000000000117fc0 0000000000000070 t util_format_l8a8_snorm_pack_rgba_8unorm
0000000000118030 0000000000000074 t util_format_i8_snorm_unpack_rgba_float
00000000001180b0 0000000000000024 t util_format_i8_snorm_fetch_rgba_float
00000000001180e0 000000000000009c t util_format_i8_snorm_unpack_rgba_8unorm
0000000000118180 0000000000000078 t util_format_a16_snorm_unpack_rgba_float
0000000000118200 00000000000000c0 t util_format_a16_snorm_pack_rgba_float
00000000001182c0 0000000000000028 t util_format_a16_snorm_fetch_rgba_float
00000000001182f0 0000000000000078 t util_format_a16_snorm_unpack_rgba_8unorm
0000000000118370 0000000000000078 t util_format_a16_snorm_pack_rgba_8unorm
00000000001183f0 000000000000007c t util_format_l16_snorm_unpack_rgba_float
0000000000118470 00000000000000c0 t util_format_l16_snorm_pack_rgba_float
0000000000118530 000000000000002c t util_format_l16_snorm_fetch_rgba_float
0000000000118560 000000000000007c t util_format_l16_snorm_unpack_rgba_8unorm
00000000001185e0 0000000000000074 t util_format_l16_snorm_pack_rgba_8unorm
0000000000118660 0000000000000088 t util_format_l16a16_snorm_unpack_rgba_float
00000000001186f0 0000000000000114 t util_format_l16a16_snorm_pack_rgba_float
0000000000118810 0000000000000038 t util_format_l16a16_snorm_fetch_rgba_float
0000000000118850 000000000000008c t util_format_l16a16_snorm_unpack_rgba_8unorm
00000000001188e0 000000000000008c t util_format_l16a16_snorm_pack_rgba_8unorm
0000000000118970 0000000000000074 t util_format_i16_snorm_unpack_rgba_float
00000000001189f0 0000000000000024 t util_format_i16_snorm_fetch_rgba_float
0000000000118a20 000000000000007c t util_format_i16_snorm_unpack_rgba_8unorm
0000000000118aa0 00000000000000a8 t util_format_a16_float_unpack_rgba_float
0000000000118b50 0000000000000060 t util_format_a16_float_fetch_rgba_float
0000000000118bb0 00000000000000a8 t util_format_l16_float_unpack_rgba_float
0000000000118c60 0000000000000070 t util_format_l16_float_fetch_rgba_float
0000000000118cd0 00000000000000dc t util_format_l16a16_float_unpack_rgba_float
0000000000118db0 00000000000000a4 t util_format_l16a16_float_fetch_rgba_float
0000000000118e60 00000000000000a8 t util_format_i16_float_unpack_rgba_float
0000000000118f10 0000000000000068 t util_format_i16_float_fetch_rgba_float
0000000000118f80 0000000000000068 t util_format_a32_float_unpack_rgba_float
0000000000118ff0 0000000000000054 t util_format_a32_float_pack_rgba_float
0000000000119050 0000000000000014 t util_format_a32_float_fetch_rgba_float
0000000000119070 000000000000006c t util_format_a32_float_pack_rgba_8unorm
00000000001190e0 0000000000000068 t util_format_l32_float_unpack_rgba_float
0000000000119150 0000000000000054 t util_format_l32_float_pack_rgba_float
00000000001191b0 0000000000000014 t util_format_l32_float_fetch_rgba_float
00000000001191d0 0000000000000064 t util_format_l32_float_pack_rgba_8unorm
0000000000119240 0000000000000070 t util_format_l32a32_float_unpack_rgba_float
00000000001192b0 000000000000006c t util_format_l32a32_float_pack_rgba_float
0000000000119320 000000000000001c t util_format_l32a32_float_fetch_rgba_float
0000000000119340 000000000000008c t util_format_l32a32_float_pack_rgba_8unorm
00000000001193d0 0000000000000068 t util_format_i32_float_unpack_rgba_float
0000000000119440 0000000000000010 t util_format_i32_float_fetch_rgba_float
0000000000119450 0000000000000070 t util_format_l8_srgb_unpack_rgba_float
00000000001194c0 0000000000000024 t util_format_l8_srgb_fetch_rgba_float
00000000001194f0 0000000000000078 t util_format_l8_srgb_unpack_rgba_8unorm
0000000000119570 0000000000000068 t util_format_l8_srgb_pack_rgba_8unorm
00000000001195e0 0000000000000074 t util_format_r8_srgb_unpack_rgba_float
0000000000119660 0000000000000024 t util_format_r8_srgb_fetch_rgba_float
0000000000119690 0000000000000078 t util_format_r8_srgb_unpack_rgba_8unorm
0000000000119710 000000000000008c t util_format_l8a8_srgb_unpack_rgba_float
00000000001197a0 000000000000003c t util_format_l8a8_srgb_fetch_rgba_float
00000000001197e0 0000000000000080 t util_format_l8a8_srgb_unpack_rgba_8unorm
0000000000119860 0000000000000078 t util_format_l8a8_srgb_pack_rgba_8unorm
00000000001198e0 0000000000000080 t util_format_r8g8_srgb_unpack_rgba_float
0000000000119960 000000000000002c t util_format_r8g8_srgb_fetch_rgba_float
0000000000119990 0000000000000084 t util_format_r8g8_srgb_unpack_rgba_8unorm
0000000000119a20 0000000000000078 t util_format_r8g8_srgb_pack_rgba_8unorm
0000000000119aa0 0000000000000080 t util_format_r8g8b8_srgb_unpack_rgba_float
0000000000119b20 0000000000000034 t util_format_r8g8b8_srgb_fetch_rgba_float
0000000000119b60 0000000000000088 t util_format_r8g8b8_srgb_unpack_rgba_8unorm
0000000000119bf0 0000000000000084 t util_format_r8g8b8_srgb_pack_rgba_8unorm
0000000000119c80 0000000000000084 t util_format_b8g8r8_srgb_unpack_rgba_float
0000000000119d10 0000000000000034 t util_format_b8g8r8_srgb_fetch_rgba_float
0000000000119d50 000000000000008c t util_format_b8g8r8_srgb_unpack_rgba_8unorm
0000000000119de0 0000000000000088 t util_format_b8g8r8_srgb_pack_rgba_8unorm
0000000000119e70 000000000000009c t util_format_r8g8b8a8_srgb_unpack_rgba_float
0000000000119f10 000000000000004c t util_format_r8g8b8a8_srgb_fetch_rgba_float
0000000000119f60 0000000000000090 t util_format_r8g8b8a8_srgb_unpack_rgba_8unorm
0000000000119ff0 0000000000000090 t util_format_r8g8b8a8_srgb_pack_rgba_8unorm
000000000011a080 000000000000009c t util_format_a8b8g8r8_srgb_unpack_rgba_float
000000000011a120 000000000000004c t util_format_a8b8g8r8_srgb_fetch_rgba_float
000000000011a170 000000000000008c t util_format_a8b8g8r8_srgb_unpack_rgba_8unorm
000000000011a200 0000000000000090 t util_format_a8b8g8r8_srgb_pack_rgba_8unorm
000000000011a290 0000000000000084 t util_format_x8b8g8r8_srgb_unpack_rgba_float
000000000011a320 0000000000000038 t util_format_x8b8g8r8_srgb_fetch_rgba_float
000000000011a360 000000000000008c t util_format_x8b8g8r8_srgb_unpack_rgba_8unorm
000000000011a3f0 0000000000000084 t util_format_x8b8g8r8_srgb_pack_rgba_8unorm
000000000011a480 000000000000009c t util_format_b8g8r8a8_srgb_unpack_rgba_float
000000000011a520 000000000000004c t util_format_b8g8r8a8_srgb_fetch_rgba_float
000000000011a570 0000000000000090 t util_format_b8g8r8a8_srgb_unpack_rgba_8unorm
000000000011a600 0000000000000090 t util_format_b8g8r8a8_srgb_pack_rgba_8unorm
000000000011a690 0000000000000084 t util_format_b8g8r8x8_srgb_unpack_rgba_float
000000000011a720 0000000000000038 t util_format_b8g8r8x8_srgb_fetch_rgba_float
000000000011a760 000000000000008c t util_format_b8g8r8x8_srgb_unpack_rgba_8unorm
000000000011a7f0 0000000000000088 t util_format_b8g8r8x8_srgb_pack_rgba_8unorm
000000000011a880 000000000000009c t util_format_a8r8g8b8_srgb_unpack_rgba_float
000000000011a920 000000000000004c t util_format_a8r8g8b8_srgb_fetch_rgba_float
000000000011a970 000000000000008c t util_format_a8r8g8b8_srgb_unpack_rgba_8unorm
000000000011aa00 0000000000000090 t util_format_a8r8g8b8_srgb_pack_rgba_8unorm
000000000011aa90 0000000000000084 t util_format_x8r8g8b8_srgb_unpack_rgba_float
000000000011ab20 0000000000000038 t util_format_x8r8g8b8_srgb_fetch_rgba_float
000000000011ab60 000000000000008c t util_format_x8r8g8b8_srgb_unpack_rgba_8unorm
000000000011abf0 0000000000000088 t util_format_x8r8g8b8_srgb_pack_rgba_8unorm
000000000011ac80 00000000000000a0 t util_format_r8sg8sb8ux8u_norm_unpack_rgba_float
000000000011ad20 0000000000000054 t util_format_r8sg8sb8ux8u_norm_fetch_rgba_float
000000000011ad80 00000000000000c8 t util_format_r8sg8sb8ux8u_norm_unpack_rgba_8unorm
000000000011ae50 0000000000000078 t util_format_r8sg8sb8ux8u_norm_pack_rgba_8unorm
000000000011aed0 00000000000000b0 t util_format_r10sg10sb10sa2u_norm_unpack_rgba_float
000000000011af80 00000000000001b0 t util_format_r10sg10sb10sa2u_norm_pack_rgba_float
000000000011b130 000000000000005c t util_format_r10sg10sb10sa2u_norm_fetch_rgba_float
000000000011b190 00000000000000b8 t util_format_r10sg10sb10sa2u_norm_unpack_rgba_8unorm
000000000011b250 00000000000000b8 t util_format_r10sg10sb10sa2u_norm_pack_rgba_8unorm
000000000011b310 00000000000000a4 t util_format_r5sg5sb6u_norm_unpack_rgba_float
000000000011b3c0 0000000000000160 t util_format_r5sg5sb6u_norm_pack_rgba_float
000000000011b520 0000000000000058 t util_format_r5sg5sb6u_norm_fetch_rgba_float
000000000011b580 00000000000000d4 t util_format_r5sg5sb6u_norm_unpack_rgba_8unorm
000000000011b660 000000000000007c t util_format_r5sg5sb6u_norm_pack_rgba_8unorm
000000000011b6e0 00000000000000a4 t util_format_z24_unorm_s8_uint_as_r8g8b8a8_unpack_rgba_float
000000000011b790 0000000000000054 t util_format_z24_unorm_s8_uint_as_r8g8b8a8_fetch_rgba_float
000000000011b7f0 0000000000000078 t util_format_z24_unorm_s8_uint_as_r8g8b8a8_unpack_rgba_8unorm
000000000011b870 0000000000000044 t util_format_z24_unorm_s8_uint_as_r8g8b8a8_pack_rgba_8unorm
000000000011b8c0 000000000000006c t util_format_r64_float_unpack_rgba_float
000000000011b930 000000000000004c t util_format_r64_float_pack_rgba_float
000000000011b980 000000000000001c t util_format_r64_float_fetch_rgba_float
000000000011b9a0 00000000000000d4 t util_format_r64_float_unpack_rgba_8unorm
000000000011ba80 0000000000000064 t util_format_r64_float_pack_rgba_8unorm
000000000011baf0 0000000000000074 t util_format_r64g64_float_unpack_rgba_float
000000000011bb70 000000000000006c t util_format_r64g64_float_pack_rgba_float
000000000011bbe0 000000000000001c t util_format_r64g64_float_fetch_rgba_float
000000000011bc00 0000000000000128 t util_format_r64g64_float_unpack_rgba_8unorm
000000000011bd30 0000000000000088 t util_format_r64g64_float_pack_rgba_8unorm
000000000011bdc0 0000000000000068 t util_format_r32_float_unpack_rgba_float
000000000011be30 0000000000000018 t util_format_r32_float_fetch_rgba_float
000000000011be50 0000000000000074 t util_format_r32g32_float_unpack_rgba_float
000000000011bed0 0000000000000068 t util_format_r32g32_float_pack_rgba_float
000000000011bf40 000000000000001c t util_format_r32g32_float_fetch_rgba_float
000000000011bf60 000000000000008c t util_format_r32g32_float_pack_rgba_8unorm
000000000011bff0 000000000000007c t util_format_r32g32b32a32_float_unpack_rgba_float
000000000011c070 000000000000007c t util_format_r32g32b32a32_float_pack_rgba_float
000000000011c0f0 0000000000000024 t util_format_r32g32b32a32_float_fetch_rgba_float
000000000011c120 00000000000000b8 t util_format_r32g32b32a32_float_pack_rgba_8unorm
000000000011c1e0 0000000000000084 t util_format_r32_unorm_unpack_rgba_float
000000000011c270 000000000000008c t util_format_r32_unorm_pack_rgba_float
000000000011c300 0000000000000030 t util_format_r32_unorm_fetch_rgba_float
000000000011c330 0000000000000070 t util_format_r32_unorm_unpack_rgba_8unorm
000000000011c3a0 000000000000006c t util_format_r32_unorm_pack_rgba_8unorm
000000000011c410 0000000000000094 t util_format_r32g32_unorm_unpack_rgba_float
000000000011c4b0 00000000000000cc t util_format_r32g32_unorm_pack_rgba_float
000000000011c580 000000000000003c t util_format_r32g32_unorm_fetch_rgba_float
000000000011c5c0 0000000000000074 t util_format_r32g32_unorm_unpack_rgba_8unorm
000000000011c640 0000000000000094 t util_format_r32g32_unorm_pack_rgba_8unorm
000000000011c6e0 00000000000000a8 t util_format_r32g32b32a32_unorm_unpack_rgba_float
000000000011c790 0000000000000134 t util_format_r32g32b32a32_unorm_pack_rgba_float
000000000011c8d0 0000000000000054 t util_format_r32g32b32a32_unorm_fetch_rgba_float
000000000011c930 0000000000000080 t util_format_r32g32b32a32_unorm_unpack_rgba_8unorm
000000000011c9b0 00000000000000c8 t util_format_r32g32b32a32_unorm_pack_rgba_8unorm
000000000011ca80 000000000000006c t util_format_r32_uscaled_unpack_rgba_float
000000000011caf0 0000000000000078 t util_format_r32_uscaled_pack_rgba_float
000000000011cb70 000000000000001c t util_format_r32_uscaled_fetch_rgba_float
000000000011cb90 0000000000000074 t util_format_r32_uscaled_unpack_rgba_8unorm
000000000011cc10 0000000000000064 t util_format_r32_uscaled_pack_rgba_8unorm
000000000011cc80 0000000000000074 t util_format_r32g32_uscaled_unpack_rgba_float
000000000011cd00 00000000000000ac t util_format_r32g32_uscaled_pack_rgba_float
000000000011cdb0 0000000000000020 t util_format_r32g32_uscaled_fetch_rgba_float
000000000011cdd0 000000000000007c t util_format_r32g32_uscaled_unpack_rgba_8unorm
000000000011ce50 0000000000000084 t util_format_r32g32_uscaled_pack_rgba_8unorm
000000000011cee0 0000000000000080 t util_format_r32g32b32a32_uscaled_unpack_rgba_float
000000000011cf60 00000000000000fc t util_format_r32g32b32a32_uscaled_pack_rgba_float
000000000011d060 0000000000000028 t util_format_r32g32b32a32_uscaled_fetch_rgba_float
000000000011d090 0000000000000090 t util_format_r32g32b32a32_uscaled_unpack_rgba_8unorm
000000000011d120 00000000000000a8 t util_format_r32g32b32a32_uscaled_pack_rgba_8unorm
000000000011d1d0 0000000000000084 t util_format_r32_snorm_unpack_rgba_float
000000000011d260 000000000000008c t util_format_r32_snorm_pack_rgba_float
000000000011d2f0 0000000000000030 t util_format_r32_snorm_fetch_rgba_float
000000000011d320 0000000000000078 t util_format_r32_snorm_unpack_rgba_8unorm
000000000011d3a0 000000000000006c t util_format_r32_snorm_pack_rgba_8unorm
000000000011d410 0000000000000094 t util_format_r32g32_snorm_unpack_rgba_float
000000000011d4b0 00000000000000cc t util_format_r32g32_snorm_pack_rgba_float
000000000011d580 000000000000003c t util_format_r32g32_snorm_fetch_rgba_float
000000000011d5c0 0000000000000088 t util_format_r32g32_snorm_unpack_rgba_8unorm
000000000011d650 0000000000000094 t util_format_r32g32_snorm_pack_rgba_8unorm
000000000011d6f0 00000000000000a8 t util_format_r32g32b32a32_snorm_unpack_rgba_float
000000000011d7a0 0000000000000134 t util_format_r32g32b32a32_snorm_pack_rgba_float
000000000011d8e0 0000000000000054 t util_format_r32g32b32a32_snorm_fetch_rgba_float
000000000011d940 00000000000000a8 t util_format_r32g32b32a32_snorm_unpack_rgba_8unorm
000000000011d9f0 00000000000000c8 t util_format_r32g32b32a32_snorm_pack_rgba_8unorm
000000000011dac0 000000000000006c t util_format_r32_sscaled_unpack_rgba_float
000000000011db30 0000000000000078 t util_format_r32_sscaled_pack_rgba_float
000000000011dbb0 000000000000001c t util_format_r32_sscaled_fetch_rgba_float
000000000011dbd0 0000000000000074 t util_format_r32_sscaled_unpack_rgba_8unorm
000000000011dc50 0000000000000074 t util_format_r32g32_sscaled_unpack_rgba_float
000000000011dcd0 00000000000000ac t util_format_r32g32_sscaled_pack_rgba_float
000000000011dd80 0000000000000020 t util_format_r32g32_sscaled_fetch_rgba_float
000000000011dda0 0000000000000080 t util_format_r32g32_sscaled_unpack_rgba_8unorm
000000000011de20 0000000000000084 t util_format_r32g32_sscaled_pack_rgba_8unorm
000000000011deb0 0000000000000080 t util_format_r32g32b32a32_sscaled_unpack_rgba_float
000000000011df30 00000000000000fc t util_format_r32g32b32a32_sscaled_pack_rgba_float
000000000011e030 0000000000000028 t util_format_r32g32b32a32_sscaled_fetch_rgba_float
000000000011e060 0000000000000098 t util_format_r32g32b32a32_sscaled_unpack_rgba_8unorm
000000000011e100 00000000000000a8 t util_format_r32g32b32a32_sscaled_pack_rgba_8unorm
000000000011e1b0 00000000000000ac t util_format_r16_float_unpack_rgba_float
000000000011e260 0000000000000070 t util_format_r16_float_fetch_rgba_float
000000000011e2d0 00000000000000e0 t util_format_r16g16_float_unpack_rgba_float
000000000011e3b0 00000000000000ac t util_format_r16g16_float_fetch_rgba_float
000000000011e460 0000000000000144 t util_format_r16g16b16a16_float_unpack_rgba_float
000000000011e5b0 0000000000000128 t util_format_r16g16b16a16_float_fetch_rgba_float
000000000011e6e0 0000000000000080 t util_format_r16_unorm_unpack_rgba_float
000000000011e760 000000000000002c t util_format_r16_unorm_fetch_rgba_float
000000000011e790 0000000000000070 t util_format_r16_unorm_unpack_rgba_8unorm
000000000011e800 0000000000000094 t util_format_r16g16_unorm_unpack_rgba_float
000000000011e8a0 0000000000000104 t util_format_r16g16_unorm_pack_rgba_float
000000000011e9b0 000000000000003c t util_format_r16g16_unorm_fetch_rgba_float
000000000011e9f0 0000000000000074 t util_format_r16g16_unorm_unpack_rgba_8unorm
000000000011ea70 000000000000008c t util_format_r16g16_unorm_pack_rgba_8unorm
000000000011eb00 00000000000000a8 t util_format_r16g16b16a16_unorm_unpack_rgba_float
000000000011ebb0 00000000000001ac t util_format_r16g16b16a16_unorm_pack_rgba_float
000000000011ed60 0000000000000058 t util_format_r16g16b16a16_unorm_fetch_rgba_float
000000000011edc0 000000000000007c t util_format_r16g16b16a16_unorm_unpack_rgba_8unorm
000000000011ee40 00000000000000c4 t util_format_r16g16b16a16_unorm_pack_rgba_8unorm
000000000011ef10 000000000000006c t util_format_r16_uscaled_unpack_rgba_float
000000000011ef80 0000000000000090 t util_format_r16_uscaled_pack_rgba_float
000000000011f010 000000000000001c t util_format_r16_uscaled_fetch_rgba_float
000000000011f030 0000000000000074 t util_format_r16_uscaled_unpack_rgba_8unorm
000000000011f0b0 000000000000006c t util_format_r16_uscaled_pack_rgba_8unorm
000000000011f120 000000000000007c t util_format_r16g16_uscaled_unpack_rgba_float
000000000011f1a0 00000000000000b0 t util_format_r16g16_uscaled_pack_rgba_float
000000000011f250 000000000000002c t util_format_r16g16_uscaled_fetch_rgba_float
000000000011f280 000000000000007c t util_format_r16g16_uscaled_unpack_rgba_8unorm
000000000011f300 000000000000007c t util_format_r16g16_uscaled_pack_rgba_8unorm
000000000011f380 0000000000000090 t util_format_r16g16b16a16_uscaled_unpack_rgba_float
000000000011f410 000000000000010c t util_format_r16g16b16a16_uscaled_pack_rgba_float
000000000011f520 000000000000003c t util_format_r16g16b16a16_uscaled_fetch_rgba_float
000000000011f560 000000000000008c t util_format_r16g16b16a16_uscaled_unpack_rgba_8unorm
000000000011f5f0 00000000000000a4 t util_format_r16g16b16a16_uscaled_pack_rgba_8unorm
000000000011f6a0 0000000000000080 t util_format_r16_snorm_unpack_rgba_float
000000000011f720 000000000000002c t util_format_r16_snorm_fetch_rgba_float
000000000011f750 000000000000007c t util_format_r16_snorm_unpack_rgba_8unorm
000000000011f7d0 0000000000000094 t util_format_r16g16_snorm_unpack_rgba_float
000000000011f870 0000000000000114 t util_format_r16g16_snorm_pack_rgba_float
000000000011f990 000000000000003c t util_format_r16g16_snorm_fetch_rgba_float
000000000011f9d0 000000000000008c t util_format_r16g16_snorm_unpack_rgba_8unorm
000000000011fa60 000000000000008c t util_format_r16g16_snorm_pack_rgba_8unorm
000000000011faf0 00000000000000a4 t util_format_r16g16b16a16_snorm_unpack_rgba_float
000000000011fba0 00000000000001b4 t util_format_r16g16b16a16_snorm_pack_rgba_float
000000000011fd60 0000000000000054 t util_format_r16g16b16a16_snorm_fetch_rgba_float
000000000011fdc0 00000000000000ac t util_format_r16g16b16a16_snorm_unpack_rgba_8unorm
000000000011fe70 00000000000000c4 t util_format_r16g16b16a16_snorm_pack_rgba_8unorm
000000000011ff40 000000000000006c t util_format_r16_sscaled_unpack_rgba_float
000000000011ffb0 0000000000000090 t util_format_r16_sscaled_pack_rgba_float
0000000000120040 000000000000001c t util_format_r16_sscaled_fetch_rgba_float
0000000000120060 0000000000000074 t util_format_r16_sscaled_unpack_rgba_8unorm
00000000001200e0 000000000000007c t util_format_r16g16_sscaled_unpack_rgba_float
0000000000120160 00000000000000c0 t util_format_r16g16_sscaled_pack_rgba_float
0000000000120220 000000000000002c t util_format_r16g16_sscaled_fetch_rgba_float
0000000000120250 0000000000000084 t util_format_r16g16_sscaled_unpack_rgba_8unorm
00000000001202e0 000000000000007c t util_format_r16g16_sscaled_pack_rgba_8unorm
0000000000120360 000000000000008c t util_format_r16g16b16a16_sscaled_unpack_rgba_float
00000000001203f0 000000000000010c t util_format_r16g16b16a16_sscaled_pack_rgba_float
0000000000120500 0000000000000038 t util_format_r16g16b16a16_sscaled_fetch_rgba_float
0000000000120540 000000000000009c t util_format_r16g16b16a16_sscaled_unpack_rgba_8unorm
00000000001205e0 00000000000000a4 t util_format_r16g16b16a16_sscaled_pack_rgba_8unorm
0000000000120690 0000000000000080 t util_format_r8_unorm_unpack_rgba_float
0000000000120710 000000000000002c t util_format_r8_unorm_fetch_rgba_float
0000000000120740 000000000000006c t util_format_r8_unorm_unpack_rgba_8unorm
00000000001207b0 0000000000000098 t util_format_r8g8_unorm_unpack_rgba_float
0000000000120850 0000000000000040 t util_format_r8g8_unorm_fetch_rgba_float
0000000000120890 0000000000000070 t util_format_r8g8_unorm_unpack_rgba_8unorm
0000000000120900 0000000000000054 t util_format_r8g8_unorm_pack_rgba_8unorm
0000000000120960 0000000000000094 t util_format_r8g8b8_unorm_unpack_rgba_float
0000000000120a00 0000000000000040 t util_format_r8g8b8_unorm_fetch_rgba_float
0000000000120a40 0000000000000078 t util_format_r8g8b8_unorm_unpack_rgba_8unorm
0000000000120ac0 0000000000000074 t util_format_r8g8b8_unorm_pack_rgba_8unorm
0000000000120b40 0000000000000098 t util_format_b8g8r8_unorm_unpack_rgba_float
0000000000120be0 0000000000000040 t util_format_b8g8r8_unorm_fetch_rgba_float
0000000000120c20 0000000000000078 t util_format_b8g8r8_unorm_unpack_rgba_8unorm
0000000000120ca0 0000000000000070 t util_format_b8g8r8_unorm_pack_rgba_8unorm
0000000000120d10 0000000000000080 t util_format_r8g8_uscaled_unpack_rgba_float
0000000000120d90 00000000000000b0 t util_format_r8g8_uscaled_pack_rgba_float
0000000000120e40 0000000000000030 t util_format_r8g8_uscaled_fetch_rgba_float
0000000000120e70 000000000000007c t util_format_r8g8_uscaled_unpack_rgba_8unorm
0000000000120ef0 000000000000007c t util_format_r8g8_uscaled_pack_rgba_8unorm
0000000000120f70 0000000000000078 t util_format_r8g8b8_uscaled_unpack_rgba_float
0000000000120ff0 00000000000000dc t util_format_r8g8b8_uscaled_pack_rgba_float
00000000001210d0 0000000000000028 t util_format_r8g8b8_uscaled_fetch_rgba_float
0000000000121100 000000000000008c t util_format_r8g8b8_uscaled_unpack_rgba_8unorm
0000000000121190 0000000000000090 t util_format_r8g8b8_uscaled_pack_rgba_8unorm
0000000000121220 000000000000007c t util_format_b8g8r8_uscaled_unpack_rgba_float
00000000001212a0 00000000000000dc t util_format_b8g8r8_uscaled_pack_rgba_float
0000000000121380 0000000000000028 t util_format_b8g8r8_uscaled_fetch_rgba_float
00000000001213b0 0000000000000090 t util_format_b8g8r8_uscaled_unpack_rgba_8unorm
0000000000121440 0000000000000094 t util_format_b8g8r8_uscaled_pack_rgba_8unorm
00000000001214e0 0000000000000088 t util_format_r8g8b8a8_uscaled_unpack_rgba_float
0000000000121570 00000000000000fc t util_format_r8g8b8a8_uscaled_pack_rgba_float
0000000000121670 0000000000000034 t util_format_r8g8b8a8_uscaled_fetch_rgba_float
00000000001216b0 000000000000008c t util_format_r8g8b8a8_uscaled_unpack_rgba_8unorm
0000000000121740 00000000000000a0 t util_format_r8g8b8a8_uscaled_pack_rgba_8unorm
00000000001217e0 0000000000000088 t util_format_b8g8r8a8_uscaled_unpack_rgba_float
0000000000121870 00000000000000fc t util_format_b8g8r8a8_uscaled_pack_rgba_float
0000000000121970 0000000000000034 t util_format_b8g8r8a8_uscaled_fetch_rgba_float
00000000001219b0 000000000000008c t util_format_b8g8r8a8_uscaled_unpack_rgba_8unorm
0000000000121a40 00000000000000a4 t util_format_b8g8r8a8_uscaled_pack_rgba_8unorm
0000000000121af0 0000000000000088 t util_format_a8b8g8r8_uscaled_unpack_rgba_float
0000000000121b80 00000000000000fc t util_format_a8b8g8r8_uscaled_pack_rgba_float
0000000000121c80 0000000000000034 t util_format_a8b8g8r8_uscaled_fetch_rgba_float
0000000000121cc0 000000000000008c t util_format_a8b8g8r8_uscaled_unpack_rgba_8unorm
0000000000121d50 00000000000000a4 t util_format_a8b8g8r8_uscaled_pack_rgba_8unorm
0000000000121e00 0000000000000080 t util_format_r8_snorm_unpack_rgba_float
0000000000121e80 000000000000002c t util_format_r8_snorm_fetch_rgba_float
0000000000121eb0 000000000000009c t util_format_r8_snorm_unpack_rgba_8unorm
0000000000121f50 0000000000000090 t util_format_r8g8_snorm_unpack_rgba_float
0000000000121fe0 0000000000000108 t util_format_r8g8_snorm_pack_rgba_float
00000000001220f0 0000000000000038 t util_format_r8g8_snorm_fetch_rgba_float
0000000000122130 00000000000000c4 t util_format_r8g8_snorm_unpack_rgba_8unorm
0000000000122200 0000000000000070 t util_format_r8g8_snorm_pack_rgba_8unorm
0000000000122270 0000000000000094 t util_format_r8g8b8_snorm_unpack_rgba_float
0000000000122310 000000000000015c t util_format_r8g8b8_snorm_pack_rgba_float
0000000000122470 0000000000000044 t util_format_r8g8b8_snorm_fetch_rgba_float
00000000001224c0 00000000000000ec t util_format_r8g8b8_snorm_unpack_rgba_8unorm
00000000001225b0 000000000000007c t util_format_r8g8b8_snorm_pack_rgba_8unorm
0000000000122630 0000000000000098 t util_format_b8g8r8_snorm_unpack_rgba_float
00000000001226d0 000000000000015c t util_format_b8g8r8_snorm_pack_rgba_float
0000000000122830 0000000000000044 t util_format_b8g8r8_snorm_fetch_rgba_float
0000000000122880 00000000000000f0 t util_format_b8g8r8_snorm_unpack_rgba_8unorm
0000000000122970 0000000000000080 t util_format_b8g8r8_snorm_pack_rgba_8unorm
00000000001229f0 00000000000000a0 t util_format_r8g8b8a8_snorm_unpack_rgba_float
0000000000122a90 00000000000001b0 t util_format_r8g8b8a8_snorm_pack_rgba_float
0000000000122c40 0000000000000050 t util_format_r8g8b8a8_snorm_fetch_rgba_float
0000000000122c90 0000000000000114 t util_format_r8g8b8a8_snorm_unpack_rgba_8unorm
0000000000122db0 0000000000000088 t util_format_r8g8b8a8_snorm_pack_rgba_8unorm
0000000000122e40 00000000000000a0 t util_format_b8g8r8a8_snorm_unpack_rgba_float
0000000000122ee0 00000000000001b0 t util_format_b8g8r8a8_snorm_pack_rgba_float
0000000000123090 0000000000000050 t util_format_b8g8r8a8_snorm_fetch_rgba_float
00000000001230e0 0000000000000114 t util_format_b8g8r8a8_snorm_unpack_rgba_8unorm
0000000000123200 000000000000008c t util_format_b8g8r8a8_snorm_pack_rgba_8unorm
0000000000123290 000000000000006c t util_format_r8_sscaled_unpack_rgba_float
0000000000123300 0000000000000090 t util_format_r8_sscaled_pack_rgba_float
0000000000123390 000000000000001c t util_format_r8_sscaled_fetch_rgba_float
00000000001233b0 0000000000000074 t util_format_r8_sscaled_unpack_rgba_8unorm
0000000000123430 0000000000000078 t util_format_r8g8_sscaled_unpack_rgba_float
00000000001234b0 00000000000000b8 t util_format_r8g8_sscaled_pack_rgba_float
0000000000123570 0000000000000024 t util_format_r8g8_sscaled_fetch_rgba_float
00000000001235a0 0000000000000084 t util_format_r8g8_sscaled_unpack_rgba_8unorm
0000000000123630 0000000000000080 t util_format_r8g8_sscaled_pack_rgba_8unorm
00000000001236b0 0000000000000078 t util_format_r8g8b8_sscaled_unpack_rgba_float
0000000000123730 00000000000000e4 t util_format_r8g8b8_sscaled_pack_rgba_float
0000000000123820 000000000000002c t util_format_r8g8b8_sscaled_fetch_rgba_float
0000000000123850 000000000000008c t util_format_r8g8b8_sscaled_unpack_rgba_8unorm
00000000001238e0 0000000000000090 t util_format_r8g8b8_sscaled_pack_rgba_8unorm
0000000000123970 000000000000007c t util_format_b8g8r8_sscaled_unpack_rgba_float
00000000001239f0 00000000000000e4 t util_format_b8g8r8_sscaled_pack_rgba_float
0000000000123ae0 000000000000002c t util_format_b8g8r8_sscaled_fetch_rgba_float
0000000000123b10 0000000000000090 t util_format_b8g8r8_sscaled_unpack_rgba_8unorm
0000000000123ba0 0000000000000094 t util_format_b8g8r8_sscaled_pack_rgba_8unorm
0000000000123c40 0000000000000088 t util_format_r8g8b8a8_sscaled_unpack_rgba_float
0000000000123cd0 0000000000000114 t util_format_r8g8b8a8_sscaled_pack_rgba_float
0000000000123df0 0000000000000034 t util_format_r8g8b8a8_sscaled_fetch_rgba_float
0000000000123e30 000000000000009c t util_format_r8g8b8a8_sscaled_unpack_rgba_8unorm
0000000000123ed0 00000000000000a0 t util_format_r8g8b8a8_sscaled_pack_rgba_8unorm
0000000000123f70 0000000000000088 t util_format_b8g8r8a8_sscaled_unpack_rgba_float
0000000000124000 0000000000000114 t util_format_b8g8r8a8_sscaled_pack_rgba_float
0000000000124120 0000000000000034 t util_format_b8g8r8a8_sscaled_fetch_rgba_float
0000000000124160 000000000000009c t util_format_b8g8r8a8_sscaled_unpack_rgba_8unorm
0000000000124200 00000000000000a4 t util_format_b8g8r8a8_sscaled_pack_rgba_8unorm
00000000001242b0 0000000000000088 t util_format_a8b8g8r8_sscaled_unpack_rgba_float
0000000000124340 0000000000000114 t util_format_a8b8g8r8_sscaled_pack_rgba_float
0000000000124460 0000000000000034 t util_format_a8b8g8r8_sscaled_fetch_rgba_float
00000000001244a0 000000000000009c t util_format_a8b8g8r8_sscaled_unpack_rgba_8unorm
0000000000124540 00000000000000a4 t util_format_a8b8g8r8_sscaled_pack_rgba_8unorm
00000000001245f0 000000000000007c t util_format_r32_fixed_unpack_rgba_float
0000000000124670 0000000000000088 t util_format_r32_fixed_pack_rgba_float
0000000000124700 0000000000000020 t util_format_r32_fixed_fetch_rgba_float
0000000000124720 00000000000000d4 t util_format_r32_fixed_unpack_rgba_8unorm
0000000000124800 000000000000006c t util_format_r32_fixed_pack_rgba_8unorm
0000000000124870 000000000000008c t util_format_r32g32_fixed_unpack_rgba_float
0000000000124900 00000000000000c4 t util_format_r32g32_fixed_pack_rgba_float
00000000001249d0 0000000000000038 t util_format_r32g32_fixed_fetch_rgba_float
0000000000124a10 0000000000000124 t util_format_r32g32_fixed_unpack_rgba_8unorm
0000000000124b40 0000000000000094 t util_format_r32g32_fixed_pack_rgba_8unorm
0000000000124be0 00000000000000a8 t util_format_r32g32b32a32_fixed_unpack_rgba_float
0000000000124c90 0000000000000124 t util_format_r32g32b32a32_fixed_pack_rgba_float
0000000000124dc0 0000000000000050 t util_format_r32g32b32a32_fixed_fetch_rgba_float
0000000000124e10 00000000000001c0 t util_format_r32g32b32a32_fixed_unpack_rgba_8unorm
0000000000124fd0 00000000000000c8 t util_format_r32g32b32a32_fixed_pack_rgba_8unorm
00000000001250a0 000000000000007c t util_format_r10g10b10x2_uscaled_unpack_rgba_float
0000000000125120 00000000000000e0 t util_format_r10g10b10x2_uscaled_pack_rgba_float
0000000000125200 0000000000000030 t util_format_r10g10b10x2_uscaled_fetch_rgba_float
0000000000125230 0000000000000084 t util_format_r10g10b10x2_uscaled_unpack_rgba_8unorm
00000000001252c0 0000000000000090 t util_format_r10g10b10x2_uscaled_pack_rgba_8unorm
0000000000125350 0000000000000098 t util_format_r10g10b10x2_snorm_unpack_rgba_float
00000000001253f0 0000000000000168 t util_format_r10g10b10x2_snorm_pack_rgba_float
0000000000125560 0000000000000048 t util_format_r10g10b10x2_snorm_fetch_rgba_float
00000000001255b0 000000000000009c t util_format_r10g10b10x2_snorm_unpack_rgba_8unorm
0000000000125650 00000000000000a8 t util_format_r10g10b10x2_snorm_pack_rgba_8unorm
0000000000125700 000000000000008c t util_format_a4r4_unorm_unpack_rgba_float
0000000000125790 0000000000000100 t util_format_a4r4_unorm_pack_rgba_float
0000000000125890 000000000000003c t util_format_a4r4_unorm_fetch_rgba_float
00000000001258d0 000000000000009c t util_format_a4r4_unorm_unpack_rgba_8unorm
0000000000125970 0000000000000070 t util_format_a4r4_unorm_pack_rgba_8unorm
00000000001259e0 000000000000008c t util_format_r4a4_unorm_unpack_rgba_float
0000000000125a70 000000000000003c t util_format_r4a4_unorm_fetch_rgba_float
0000000000125ab0 000000000000009c t util_format_r4a4_unorm_unpack_rgba_8unorm
0000000000125b50 0000000000000090 t util_format_r8a8_unorm_unpack_rgba_float
0000000000125be0 0000000000000040 t util_format_r8a8_unorm_fetch_rgba_float
0000000000125c20 0000000000000070 t util_format_r8a8_unorm_unpack_rgba_8unorm
0000000000125c90 0000000000000090 t util_format_a8r8_unorm_unpack_rgba_float
0000000000125d20 0000000000000040 t util_format_a8r8_unorm_fetch_rgba_float
0000000000125d60 0000000000000070 t util_format_a8r8_unorm_unpack_rgba_8unorm
0000000000125dd0 000000000000006c t util_format_a8r8_unorm_pack_rgba_8unorm
0000000000125e40 0000000000000088 t util_format_r10g10b10a2_uscaled_unpack_rgba_float
0000000000125ed0 0000000000000104 t util_format_r10g10b10a2_uscaled_pack_rgba_float
0000000000125fe0 0000000000000034 t util_format_r10g10b10a2_uscaled_fetch_rgba_float
0000000000126020 000000000000008c t util_format_r10g10b10a2_uscaled_unpack_rgba_8unorm
00000000001260b0 00000000000000a0 t util_format_r10g10b10a2_uscaled_pack_rgba_8unorm
0000000000126150 0000000000000088 t util_format_r10g10b10a2_sscaled_unpack_rgba_float
00000000001261e0 000000000000010c t util_format_r10g10b10a2_sscaled_pack_rgba_float
00000000001262f0 0000000000000034 t util_format_r10g10b10a2_sscaled_fetch_rgba_float
0000000000126330 00000000000000a0 t util_format_r10g10b10a2_sscaled_unpack_rgba_8unorm
00000000001263d0 000000000000009c t util_format_r10g10b10a2_snorm_unpack_rgba_float
0000000000126470 00000000000001bc t util_format_r10g10b10a2_snorm_pack_rgba_float
0000000000126630 000000000000004c t util_format_r10g10b10a2_snorm_fetch_rgba_float
0000000000126680 00000000000000ac t util_format_r10g10b10a2_snorm_unpack_rgba_8unorm
0000000000126730 00000000000000b8 t util_format_r10g10b10a2_snorm_pack_rgba_8unorm
00000000001267f0 0000000000000088 t util_format_b10g10r10a2_uscaled_unpack_rgba_float
0000000000126880 0000000000000104 t util_format_b10g10r10a2_uscaled_pack_rgba_float
0000000000126990 0000000000000034 t util_format_b10g10r10a2_uscaled_fetch_rgba_float
00000000001269d0 000000000000008c t util_format_b10g10r10a2_uscaled_unpack_rgba_8unorm
0000000000126a60 00000000000000a4 t util_format_b10g10r10a2_uscaled_pack_rgba_8unorm
0000000000126b10 0000000000000088 t util_format_b10g10r10a2_sscaled_unpack_rgba_float
0000000000126ba0 000000000000010c t util_format_b10g10r10a2_sscaled_pack_rgba_float
0000000000126cb0 0000000000000034 t util_format_b10g10r10a2_sscaled_fetch_rgba_float
0000000000126cf0 00000000000000a0 t util_format_b10g10r10a2_sscaled_unpack_rgba_8unorm
0000000000126d90 000000000000009c t util_format_b10g10r10a2_snorm_unpack_rgba_float
0000000000126e30 00000000000001bc t util_format_b10g10r10a2_snorm_pack_rgba_float
0000000000126ff0 000000000000004c t util_format_b10g10r10a2_snorm_fetch_rgba_float
0000000000127040 00000000000000ac t util_format_b10g10r10a2_snorm_unpack_rgba_8unorm
00000000001270f0 00000000000000b8 t util_format_b10g10r10a2_snorm_pack_rgba_8unorm
00000000001271b0 0000000000000064 t util_format_r8_uint_unpack_unsigned
0000000000127220 0000000000000064 t util_format_r8_uint_pack_unsigned
0000000000127290 0000000000000018 t util_format_r8_uint_fetch_unsigned
00000000001272b0 0000000000000078 t util_format_r8_uint_pack_signed
0000000000127330 000000000000006c t util_format_r8g8_uint_unpack_unsigned
00000000001273a0 0000000000000080 t util_format_r8g8_uint_pack_unsigned
0000000000127420 000000000000001c t util_format_r8g8_uint_fetch_unsigned
0000000000127440 0000000000000098 t util_format_r8g8_uint_pack_signed
00000000001274e0 000000000000006c t util_format_r8g8b8_uint_unpack_unsigned
0000000000127550 0000000000000088 t util_format_r8g8b8_uint_pack_unsigned
00000000001275e0 000000000000001c t util_format_r8g8b8_uint_fetch_unsigned
0000000000127600 00000000000000bc t util_format_r8g8b8_uint_pack_signed
00000000001276c0 0000000000000074 t util_format_r8g8b8a8_uint_unpack_unsigned
0000000000127740 00000000000000ac t util_format_r8g8b8a8_uint_pack_unsigned
00000000001277f0 0000000000000020 t util_format_r8g8b8a8_uint_fetch_unsigned
0000000000127810 00000000000000c8 t util_format_r8g8b8a8_uint_pack_signed
00000000001278e0 0000000000000064 t util_format_r8_sint_unpack_signed
0000000000127950 0000000000000078 t util_format_r8_sint_pack_signed
00000000001279d0 0000000000000018 t util_format_r8_sint_fetch_signed
00000000001279f0 0000000000000064 t util_format_r8_sint_pack_unsigned
0000000000127a60 000000000000006c t util_format_r8g8_sint_unpack_signed
0000000000127ad0 00000000000000a0 t util_format_r8g8_sint_pack_signed
0000000000127b70 000000000000001c t util_format_r8g8_sint_fetch_signed
0000000000127b90 0000000000000080 t util_format_r8g8_sint_pack_unsigned
0000000000127c10 000000000000006c t util_format_r8g8b8_sint_unpack_signed
0000000000127c80 00000000000000bc t util_format_r8g8b8_sint_pack_signed
0000000000127d40 000000000000001c t util_format_r8g8b8_sint_fetch_signed
0000000000127d60 0000000000000088 t util_format_r8g8b8_sint_pack_unsigned
0000000000127df0 0000000000000074 t util_format_r8g8b8a8_sint_unpack_signed
0000000000127e70 00000000000000f8 t util_format_r8g8b8a8_sint_pack_signed
0000000000127f70 0000000000000020 t util_format_r8g8b8a8_sint_fetch_signed
0000000000127f90 00000000000000ac t util_format_r8g8b8a8_sint_pack_unsigned
0000000000128040 0000000000000064 t util_format_r16_uint_unpack_unsigned
00000000001280b0 000000000000006c t util_format_r16_uint_pack_unsigned
0000000000128120 0000000000000018 t util_format_r16_uint_fetch_unsigned
0000000000128140 0000000000000078 t util_format_r16_uint_pack_signed
00000000001281c0 000000000000006c t util_format_r16g16_uint_unpack_unsigned
0000000000128230 0000000000000088 t util_format_r16g16_uint_pack_unsigned
00000000001282c0 000000000000001c t util_format_r16g16_uint_fetch_unsigned
00000000001282e0 0000000000000094 t util_format_r16g16_uint_pack_signed
0000000000128380 0000000000000074 t util_format_r16g16b16a16_uint_unpack_unsigned
0000000000128400 00000000000000a0 t util_format_r16g16b16a16_uint_pack_unsigned
00000000001284a0 0000000000000020 t util_format_r16g16b16a16_uint_fetch_unsigned
00000000001284c0 00000000000000dc t util_format_r16g16b16a16_uint_pack_signed
00000000001285a0 0000000000000064 t util_format_r16_sint_unpack_signed
0000000000128610 0000000000000080 t util_format_r16_sint_pack_signed
0000000000128690 0000000000000018 t util_format_r16_sint_fetch_signed
00000000001286b0 000000000000006c t util_format_r16_sint_pack_unsigned
0000000000128720 000000000000006c t util_format_r16g16_sint_unpack_signed
0000000000128790 00000000000000a4 t util_format_r16g16_sint_pack_signed
0000000000128840 000000000000001c t util_format_r16g16_sint_fetch_signed
0000000000128860 0000000000000088 t util_format_r16g16_sint_pack_unsigned
00000000001288f0 0000000000000074 t util_format_r16g16b16a16_sint_unpack_signed
0000000000128970 00000000000000e4 t util_format_r16g16b16a16_sint_pack_signed
0000000000128a60 0000000000000020 t util_format_r16g16b16a16_sint_fetch_signed
0000000000128a80 00000000000000a0 t util_format_r16g16b16a16_sint_pack_unsigned
0000000000128b20 0000000000000064 t util_format_r32_uint_unpack_unsigned
0000000000128b90 0000000000000054 t util_format_r32_uint_pack_unsigned
0000000000128bf0 0000000000000018 t util_format_r32_uint_fetch_unsigned
0000000000128c10 000000000000005c t util_format_r32_uint_pack_signed
0000000000128c70 0000000000000068 t util_format_r32g32_uint_unpack_unsigned
0000000000128ce0 0000000000000068 t util_format_r32g32_uint_pack_unsigned
0000000000128d50 000000000000001c t util_format_r32g32_uint_fetch_unsigned
0000000000128d70 0000000000000078 t util_format_r32g32_uint_pack_signed
0000000000128df0 0000000000000074 t util_format_r32g32b32a32_uint_unpack_unsigned
0000000000128e70 000000000000007c t util_format_r32g32b32a32_uint_pack_unsigned
0000000000128ef0 000000000000001c t util_format_r32g32b32a32_uint_fetch_unsigned
0000000000128f10 000000000000009c t util_format_r32g32b32a32_uint_pack_signed
0000000000128fb0 0000000000000064 t util_format_r32_sint_unpack_signed
0000000000129020 0000000000000054 t util_format_r32_sint_pack_signed
0000000000129080 0000000000000018 t util_format_r32_sint_fetch_signed
00000000001290a0 000000000000005c t util_format_r32_sint_pack_unsigned
0000000000129100 0000000000000068 t util_format_r32g32_sint_unpack_signed
0000000000129170 0000000000000068 t util_format_r32g32_sint_pack_signed
00000000001291e0 000000000000001c t util_format_r32g32_sint_fetch_signed
0000000000129200 0000000000000080 t util_format_r32g32_sint_pack_unsigned
0000000000129280 0000000000000074 t util_format_r32g32b32a32_sint_unpack_signed
0000000000129300 000000000000007c t util_format_r32g32b32a32_sint_pack_signed
0000000000129380 000000000000001c t util_format_r32g32b32a32_sint_fetch_signed
00000000001293a0 00000000000000a4 t util_format_r32g32b32a32_sint_pack_unsigned
0000000000129450 0000000000000064 t util_format_a8_uint_unpack_unsigned
00000000001294c0 0000000000000068 t util_format_a8_uint_pack_unsigned
0000000000129530 0000000000000010 t util_format_a8_uint_fetch_unsigned
0000000000129540 0000000000000078 t util_format_a8_uint_pack_signed
00000000001295c0 0000000000000064 t util_format_i8_uint_unpack_unsigned
0000000000129630 0000000000000010 t util_format_i8_uint_fetch_unsigned
0000000000129640 0000000000000064 t util_format_l8_uint_unpack_unsigned
00000000001296b0 0000000000000014 t util_format_l8_uint_fetch_unsigned
00000000001296d0 000000000000006c t util_format_l8a8_uint_unpack_unsigned
0000000000129740 0000000000000084 t util_format_l8a8_uint_pack_unsigned
00000000001297d0 0000000000000018 t util_format_l8a8_uint_fetch_unsigned
00000000001297f0 0000000000000098 t util_format_l8a8_uint_pack_signed
0000000000129890 0000000000000064 t util_format_a8_sint_unpack_signed
0000000000129900 0000000000000078 t util_format_a8_sint_pack_signed
0000000000129980 0000000000000010 t util_format_a8_sint_fetch_signed
0000000000129990 0000000000000068 t util_format_a8_sint_pack_unsigned
0000000000129a00 0000000000000064 t util_format_i8_sint_unpack_signed
0000000000129a70 0000000000000010 t util_format_i8_sint_fetch_signed
0000000000129a80 0000000000000064 t util_format_l8_sint_unpack_signed
0000000000129af0 0000000000000014 t util_format_l8_sint_fetch_signed
0000000000129b10 000000000000006c t util_format_l8a8_sint_unpack_signed
0000000000129b80 00000000000000a0 t util_format_l8a8_sint_pack_signed
0000000000129c20 0000000000000018 t util_format_l8a8_sint_fetch_signed
0000000000129c40 0000000000000084 t util_format_l8a8_sint_pack_unsigned
0000000000129cd0 0000000000000064 t util_format_a16_uint_unpack_unsigned
0000000000129d40 0000000000000070 t util_format_a16_uint_pack_unsigned
0000000000129db0 0000000000000010 t util_format_a16_uint_fetch_unsigned
0000000000129dc0 0000000000000078 t util_format_a16_uint_pack_signed
0000000000129e40 0000000000000064 t util_format_i16_uint_unpack_unsigned
0000000000129eb0 0000000000000010 t util_format_i16_uint_fetch_unsigned
0000000000129ec0 0000000000000064 t util_format_l16_uint_unpack_unsigned
0000000000129f30 0000000000000014 t util_format_l16_uint_fetch_unsigned
0000000000129f50 000000000000006c t util_format_l16a16_uint_unpack_unsigned
0000000000129fc0 0000000000000088 t util_format_l16a16_uint_pack_unsigned
000000000012a050 0000000000000018 t util_format_l16a16_uint_fetch_unsigned
000000000012a070 0000000000000094 t util_format_l16a16_uint_pack_signed
000000000012a110 0000000000000064 t util_format_a16_sint_unpack_signed
000000000012a180 0000000000000080 t util_format_a16_sint_pack_signed
000000000012a200 0000000000000010 t util_format_a16_sint_fetch_signed
000000000012a210 0000000000000070 t util_format_a16_sint_pack_unsigned
000000000012a280 0000000000000064 t util_format_i16_sint_unpack_signed
000000000012a2f0 0000000000000010 t util_format_i16_sint_fetch_signed
000000000012a300 0000000000000064 t util_format_l16_sint_unpack_signed
000000000012a370 0000000000000014 t util_format_l16_sint_fetch_signed
000000000012a390 000000000000006c t util_format_l16a16_sint_unpack_signed
000000000012a400 00000000000000a4 t util_format_l16a16_sint_pack_signed
000000000012a4b0 0000000000000018 t util_format_l16a16_sint_fetch_signed
000000000012a4d0 0000000000000088 t util_format_l16a16_sint_pack_unsigned
000000000012a560 0000000000000064 t util_format_a32_uint_unpack_unsigned
000000000012a5d0 0000000000000054 t util_format_a32_uint_pack_unsigned
000000000012a630 0000000000000010 t util_format_a32_uint_fetch_unsigned
000000000012a640 000000000000005c t util_format_a32_uint_pack_signed
000000000012a6a0 0000000000000064 t util_format_i32_uint_unpack_unsigned
000000000012a710 0000000000000010 t util_format_i32_uint_fetch_unsigned
000000000012a720 0000000000000064 t util_format_l32_uint_unpack_unsigned
000000000012a790 0000000000000014 t util_format_l32_uint_fetch_unsigned
000000000012a7b0 0000000000000068 t util_format_l32a32_uint_unpack_unsigned
000000000012a820 000000000000006c t util_format_l32a32_uint_pack_unsigned
000000000012a890 0000000000000014 t util_format_l32a32_uint_fetch_unsigned
000000000012a8b0 000000000000007c t util_format_l32a32_uint_pack_signed
000000000012a930 0000000000000064 t util_format_a32_sint_unpack_signed
000000000012a9a0 0000000000000054 t util_format_a32_sint_pack_signed
000000000012aa00 0000000000000010 t util_format_a32_sint_fetch_signed
000000000012aa10 0000000000000064 t util_format_a32_sint_pack_unsigned
000000000012aa80 0000000000000064 t util_format_i32_sint_unpack_signed
000000000012aaf0 0000000000000010 t util_format_i32_sint_fetch_signed
000000000012ab00 0000000000000064 t util_format_l32_sint_unpack_signed
000000000012ab70 0000000000000014 t util_format_l32_sint_fetch_signed
000000000012ab90 0000000000000068 t util_format_l32a32_sint_unpack_signed
000000000012ac00 000000000000006c t util_format_l32a32_sint_pack_signed
000000000012ac70 0000000000000014 t util_format_l32a32_sint_fetch_signed
000000000012ac90 0000000000000084 t util_format_l32a32_sint_pack_unsigned
000000000012ad20 0000000000000070 t util_format_b8g8r8_uint_unpack_unsigned
000000000012ad90 0000000000000084 t util_format_b8g8r8_uint_pack_unsigned
000000000012ae20 000000000000001c t util_format_b8g8r8_uint_fetch_unsigned
000000000012ae40 00000000000000bc t util_format_b8g8r8_uint_pack_signed
000000000012af00 0000000000000074 t util_format_b8g8r8a8_uint_unpack_unsigned
000000000012af80 00000000000000ac t util_format_b8g8r8a8_uint_pack_unsigned
000000000012b030 0000000000000020 t util_format_b8g8r8a8_uint_fetch_unsigned
000000000012b050 00000000000000c8 t util_format_b8g8r8a8_uint_pack_signed
000000000012b120 0000000000000070 t util_format_b8g8r8_sint_unpack_signed
000000000012b190 00000000000000bc t util_format_b8g8r8_sint_pack_signed
000000000012b250 000000000000001c t util_format_b8g8r8_sint_fetch_signed
000000000012b270 0000000000000084 t util_format_b8g8r8_sint_pack_unsigned
000000000012b300 0000000000000074 t util_format_b8g8r8a8_sint_unpack_signed
000000000012b380 00000000000000f8 t util_format_b8g8r8a8_sint_pack_signed
000000000012b480 0000000000000020 t util_format_b8g8r8a8_sint_fetch_signed
000000000012b4a0 00000000000000ac t util_format_b8g8r8a8_sint_pack_unsigned
000000000012b550 0000000000000074 t util_format_a8r8g8b8_uint_unpack_unsigned
000000000012b5d0 00000000000000ac t util_format_a8r8g8b8_uint_pack_unsigned
000000000012b680 0000000000000020 t util_format_a8r8g8b8_uint_fetch_unsigned
000000000012b6a0 00000000000000c8 t util_format_a8r8g8b8_uint_pack_signed
000000000012b770 0000000000000074 t util_format_a8b8g8r8_uint_unpack_unsigned
000000000012b7f0 00000000000000ac t util_format_a8b8g8r8_uint_pack_unsigned
000000000012b8a0 0000000000000020 t util_format_a8b8g8r8_uint_fetch_unsigned
000000000012b8c0 00000000000000c8 t util_format_a8b8g8r8_uint_pack_signed
000000000012b990 0000000000000074 t util_format_a2r10g10b10_uint_unpack_unsigned
000000000012ba10 000000000000009c t util_format_a2r10g10b10_uint_pack_unsigned
000000000012bab0 0000000000000020 t util_format_a2r10g10b10_uint_fetch_unsigned
000000000012bad0 00000000000000c4 t util_format_a2r10g10b10_uint_pack_signed
000000000012bba0 0000000000000074 t util_format_a2b10g10r10_uint_unpack_unsigned
000000000012bc20 000000000000009c t util_format_a2b10g10r10_uint_pack_unsigned
000000000012bcc0 0000000000000020 t util_format_a2b10g10r10_uint_fetch_unsigned
000000000012bce0 00000000000000c4 t util_format_a2b10g10r10_uint_pack_signed
000000000012bdb0 0000000000000074 t util_format_b10g10r10a2_uint_unpack_unsigned
000000000012be30 000000000000009c t util_format_b10g10r10a2_uint_pack_unsigned
000000000012bed0 0000000000000020 t util_format_b10g10r10a2_uint_fetch_unsigned
000000000012bef0 00000000000000c4 t util_format_b10g10r10a2_uint_pack_signed
000000000012bfc0 0000000000000074 t util_format_b10g10r10a2_sint_unpack_signed
000000000012c040 00000000000000e0 t util_format_b10g10r10a2_sint_pack_signed
000000000012c120 0000000000000020 t util_format_b10g10r10a2_sint_fetch_signed
000000000012c140 0000000000000094 t util_format_b10g10r10a2_sint_pack_unsigned
000000000012c1e0 0000000000000070 t util_format_r5g6b5_uint_unpack_unsigned
000000000012c250 0000000000000098 t util_format_r5g6b5_uint_pack_unsigned
000000000012c2f0 0000000000000024 t util_format_r5g6b5_uint_fetch_unsigned
000000000012c320 00000000000000b8 t util_format_r5g6b5_uint_pack_signed
000000000012c3e0 0000000000000070 t util_format_b5g6r5_uint_unpack_unsigned
000000000012c450 0000000000000094 t util_format_b5g6r5_uint_pack_unsigned
000000000012c4f0 0000000000000024 t util_format_b5g6r5_uint_fetch_unsigned
000000000012c520 00000000000000b8 t util_format_b5g6r5_uint_pack_signed
000000000012c5e0 0000000000000070 t util_format_r3g3b2_uint_unpack_unsigned
000000000012c650 0000000000000098 t util_format_r3g3b2_uint_pack_unsigned
000000000012c6f0 0000000000000024 t util_format_r3g3b2_uint_fetch_unsigned
000000000012c720 00000000000000b8 t util_format_r3g3b2_uint_pack_signed
000000000012c7e0 0000000000000070 t util_format_b2g3r3_uint_unpack_unsigned
000000000012c850 0000000000000094 t util_format_b2g3r3_uint_pack_unsigned
000000000012c8f0 0000000000000024 t util_format_b2g3r3_uint_fetch_unsigned
000000000012c920 00000000000000b8 t util_format_b2g3r3_uint_pack_signed
000000000012c9e0 0000000000000074 t util_format_r4g4b4a4_uint_unpack_unsigned
000000000012ca60 00000000000000b0 t util_format_r4g4b4a4_uint_pack_unsigned
000000000012cb10 0000000000000020 t util_format_r4g4b4a4_uint_fetch_unsigned
000000000012cb30 00000000000000d8 t util_format_r4g4b4a4_uint_pack_signed
000000000012cc10 0000000000000074 t util_format_b4g4r4a4_uint_unpack_unsigned
000000000012cc90 00000000000000b0 t util_format_b4g4r4a4_uint_pack_unsigned
000000000012cd40 0000000000000020 t util_format_b4g4r4a4_uint_fetch_unsigned
000000000012cd60 00000000000000d8 t util_format_b4g4r4a4_uint_pack_signed
000000000012ce40 0000000000000074 t util_format_a4r4g4b4_uint_unpack_unsigned
000000000012cec0 00000000000000b0 t util_format_a4r4g4b4_uint_pack_unsigned
000000000012cf70 0000000000000020 t util_format_a4r4g4b4_uint_fetch_unsigned
000000000012cf90 00000000000000d8 t util_format_a4r4g4b4_uint_pack_signed
000000000012d070 0000000000000074 t util_format_a4b4g4r4_uint_unpack_unsigned
000000000012d0f0 00000000000000b0 t util_format_a4b4g4r4_uint_pack_unsigned
000000000012d1a0 0000000000000020 t util_format_a4b4g4r4_uint_fetch_unsigned
000000000012d1c0 00000000000000d8 t util_format_a4b4g4r4_uint_pack_signed
000000000012d2a0 0000000000000074 t util_format_a1r5g5b5_uint_unpack_unsigned
000000000012d320 00000000000000a4 t util_format_a1r5g5b5_uint_pack_unsigned
000000000012d3d0 0000000000000020 t util_format_a1r5g5b5_uint_fetch_unsigned
000000000012d3f0 00000000000000c4 t util_format_a1r5g5b5_uint_pack_signed
000000000012d4c0 0000000000000074 t util_format_r5g5b5a1_uint_unpack_unsigned
000000000012d540 00000000000000a4 t util_format_r5g5b5a1_uint_pack_unsigned
000000000012d5f0 0000000000000020 t util_format_r5g5b5a1_uint_fetch_unsigned
000000000012d610 00000000000000d0 t util_format_r5g5b5a1_uint_pack_signed
000000000012d6e0 0000000000000074 t util_format_b5g5r5a1_uint_unpack_unsigned
000000000012d760 00000000000000a4 t util_format_b5g5r5a1_uint_pack_unsigned
000000000012d810 0000000000000020 t util_format_b5g5r5a1_uint_fetch_unsigned
000000000012d830 00000000000000d0 t util_format_b5g5r5a1_uint_pack_signed
000000000012d900 0000000000000098 t util_format_r8g8b8x8_snorm_unpack_rgba_float
000000000012d9a0 0000000000000158 t util_format_r8g8b8x8_snorm_pack_rgba_float
000000000012db00 0000000000000048 t util_format_r8g8b8x8_snorm_fetch_rgba_float
000000000012db50 00000000000000ec t util_format_r8g8b8x8_snorm_unpack_rgba_8unorm
000000000012dc40 0000000000000078 t util_format_r8g8b8x8_snorm_pack_rgba_8unorm
000000000012dcc0 0000000000000084 t util_format_r8g8b8x8_srgb_unpack_rgba_float
000000000012dd50 0000000000000038 t util_format_r8g8b8x8_srgb_fetch_rgba_float
000000000012dd90 000000000000008c t util_format_r8g8b8x8_srgb_unpack_rgba_8unorm
000000000012de20 0000000000000084 t util_format_r8g8b8x8_srgb_pack_rgba_8unorm
000000000012deb0 0000000000000070 t util_format_r8g8b8x8_uint_unpack_unsigned
000000000012df20 0000000000000094 t util_format_r8g8b8x8_uint_pack_unsigned
000000000012dfc0 0000000000000024 t util_format_r8g8b8x8_uint_fetch_unsigned
000000000012dff0 00000000000000ac t util_format_r8g8b8x8_uint_pack_signed
000000000012e0a0 0000000000000070 t util_format_r8g8b8x8_sint_unpack_signed
000000000012e110 00000000000000c0 t util_format_r8g8b8x8_sint_pack_signed
000000000012e1d0 0000000000000024 t util_format_r8g8b8x8_sint_fetch_signed
000000000012e200 0000000000000094 t util_format_r8g8b8x8_sint_pack_unsigned
000000000012e2a0 0000000000000098 t util_format_b10g10r10x2_unorm_unpack_rgba_float
000000000012e340 0000000000000158 t util_format_b10g10r10x2_unorm_pack_rgba_float
000000000012e4a0 0000000000000048 t util_format_b10g10r10x2_unorm_fetch_rgba_float
000000000012e4f0 0000000000000078 t util_format_b10g10r10x2_unorm_unpack_rgba_8unorm
000000000012e570 00000000000000ac t util_format_b10g10r10x2_unorm_pack_rgba_8unorm
000000000012e620 00000000000000a0 t util_format_r16g16b16x16_unorm_unpack_rgba_float
000000000012e6c0 000000000000015c t util_format_r16g16b16x16_unorm_pack_rgba_float
000000000012e820 0000000000000050 t util_format_r16g16b16x16_unorm_fetch_rgba_float
000000000012e870 0000000000000078 t util_format_r16g16b16x16_unorm_unpack_rgba_8unorm
000000000012e8f0 00000000000000ac t util_format_r16g16b16x16_unorm_pack_rgba_8unorm
000000000012e9a0 000000000000009c t util_format_r16g16b16x16_snorm_unpack_rgba_float
000000000012ea40 0000000000000164 t util_format_r16g16b16x16_snorm_pack_rgba_float
000000000012ebb0 000000000000004c t util_format_r16g16b16x16_snorm_fetch_rgba_float
000000000012ec00 0000000000000098 t util_format_r16g16b16x16_snorm_unpack_rgba_8unorm
000000000012eca0 00000000000000ac t util_format_r16g16b16x16_snorm_pack_rgba_8unorm
000000000012ed50 0000000000000118 t util_format_r16g16b16x16_float_unpack_rgba_float
000000000012ee70 00000000000000f4 t util_format_r16g16b16x16_float_fetch_rgba_float
000000000012ef70 0000000000000070 t util_format_r16g16b16x16_uint_unpack_unsigned
000000000012efe0 0000000000000090 t util_format_r16g16b16x16_uint_pack_unsigned
000000000012f070 0000000000000024 t util_format_r16g16b16x16_uint_fetch_unsigned
000000000012f0a0 00000000000000bc t util_format_r16g16b16x16_uint_pack_signed
000000000012f160 0000000000000070 t util_format_r16g16b16x16_sint_unpack_signed
000000000012f1d0 00000000000000c4 t util_format_r16g16b16x16_sint_pack_signed
000000000012f2a0 0000000000000024 t util_format_r16g16b16x16_sint_fetch_signed
000000000012f2d0 0000000000000090 t util_format_r16g16b16x16_sint_pack_unsigned
000000000012f360 0000000000000078 t util_format_r32g32b32x32_float_unpack_rgba_float
000000000012f3e0 0000000000000074 t util_format_r32g32b32x32_float_pack_rgba_float
000000000012f460 0000000000000024 t util_format_r32g32b32x32_float_fetch_rgba_float
000000000012f490 00000000000000a4 t util_format_r32g32b32x32_float_pack_rgba_8unorm
000000000012f540 000000000000006c t util_format_r32g32b32x32_uint_unpack_unsigned
000000000012f5b0 0000000000000074 t util_format_r32g32b32x32_uint_pack_unsigned
000000000012f630 000000000000001c t util_format_r32g32b32x32_uint_fetch_unsigned
000000000012f650 000000000000008c t util_format_r32g32b32x32_uint_pack_signed
000000000012f6e0 000000000000006c t util_format_r32g32b32x32_sint_unpack_signed
000000000012f750 0000000000000074 t util_format_r32g32b32x32_sint_pack_signed
000000000012f7d0 000000000000001c t util_format_r32g32b32x32_sint_fetch_signed
000000000012f7f0 0000000000000094 t util_format_r32g32b32x32_sint_pack_unsigned
000000000012f890 0000000000000088 t util_format_r8a8_snorm_unpack_rgba_float
000000000012f920 0000000000000038 t util_format_r8a8_snorm_fetch_rgba_float
000000000012f960 00000000000000c4 t util_format_r8a8_snorm_unpack_rgba_8unorm
000000000012fa30 000000000000008c t util_format_r16a16_unorm_unpack_rgba_float
000000000012fac0 000000000000003c t util_format_r16a16_unorm_fetch_rgba_float
000000000012fb00 0000000000000074 t util_format_r16a16_unorm_unpack_rgba_8unorm
000000000012fb80 000000000000008c t util_format_r16a16_snorm_unpack_rgba_float
000000000012fc10 000000000000003c t util_format_r16a16_snorm_fetch_rgba_float
000000000012fc50 000000000000008c t util_format_r16a16_snorm_unpack_rgba_8unorm
000000000012fce0 00000000000000e0 t util_format_r16a16_float_unpack_rgba_float
000000000012fdc0 00000000000000a0 t util_format_r16a16_float_fetch_rgba_float
000000000012fe60 000000000000006c t util_format_r32a32_float_unpack_rgba_float
000000000012fed0 000000000000006c t util_format_r32a32_float_pack_rgba_float
000000000012ff40 0000000000000018 t util_format_r32a32_float_fetch_rgba_float
000000000012ff60 000000000000008c t util_format_r32a32_float_pack_rgba_8unorm
000000000012fff0 000000000000006c t util_format_r8a8_uint_unpack_unsigned
0000000000130060 000000000000001c t util_format_r8a8_uint_fetch_unsigned
0000000000130080 000000000000006c t util_format_r8a8_sint_unpack_signed
00000000001300f0 000000000000001c t util_format_r8a8_sint_fetch_signed
0000000000130110 000000000000006c t util_format_r16a16_uint_unpack_unsigned
0000000000130180 000000000000001c t util_format_r16a16_uint_fetch_unsigned
00000000001301a0 000000000000006c t util_format_r16a16_sint_unpack_signed
0000000000130210 000000000000001c t util_format_r16a16_sint_fetch_signed
0000000000130230 0000000000000068 t util_format_r32a32_uint_unpack_unsigned
00000000001302a0 000000000000006c t util_format_r32a32_uint_pack_unsigned
0000000000130310 0000000000000018 t util_format_r32a32_uint_fetch_unsigned
0000000000130330 000000000000007c t util_format_r32a32_uint_pack_signed
00000000001303b0 0000000000000068 t util_format_r32a32_sint_unpack_signed
0000000000130420 000000000000006c t util_format_r32a32_sint_pack_signed
0000000000130490 0000000000000018 t util_format_r32a32_sint_fetch_signed
00000000001304b0 0000000000000084 t util_format_r32a32_sint_pack_unsigned
0000000000130540 0000000000000074 t util_format_r10g10b10a2_uint_unpack_unsigned
00000000001305c0 000000000000009c t util_format_r10g10b10a2_uint_pack_unsigned
0000000000130660 0000000000000020 t util_format_r10g10b10a2_uint_fetch_unsigned
0000000000130680 00000000000000c4 t util_format_r10g10b10a2_uint_pack_signed
0000000000130750 0000000000000074 t util_format_r10g10b10a2_sint_unpack_signed
00000000001307d0 00000000000000e0 t util_format_r10g10b10a2_sint_pack_signed
00000000001308b0 0000000000000020 t util_format_r10g10b10a2_sint_fetch_signed
00000000001308d0 0000000000000094 t util_format_r10g10b10a2_sint_pack_unsigned
0000000000130970 000000000000009c t util_format_b5g6r5_srgb_unpack_rgba_float
0000000000130a10 0000000000000050 t util_format_b5g6r5_srgb_fetch_rgba_float
0000000000130a60 00000000000000a4 t util_format_b5g6r5_srgb_unpack_rgba_8unorm
0000000000130b10 000000000000008c t util_format_b5g6r5_srgb_pack_rgba_8unorm
0000000000130ba0 0000000000000098 t util_format_g8r8_unorm_unpack_rgba_float
0000000000130c40 0000000000000040 t util_format_g8r8_unorm_fetch_rgba_float
0000000000130c80 0000000000000070 t util_format_g8r8_unorm_unpack_rgba_8unorm
0000000000130cf0 0000000000000058 t util_format_g8r8_unorm_pack_rgba_8unorm
0000000000130d50 0000000000000090 t util_format_g8r8_snorm_unpack_rgba_float
0000000000130de0 0000000000000108 t util_format_g8r8_snorm_pack_rgba_float
0000000000130ef0 0000000000000038 t util_format_g8r8_snorm_fetch_rgba_float
0000000000130f30 00000000000000c4 t util_format_g8r8_snorm_unpack_rgba_8unorm
0000000000131000 000000000000006c t util_format_g8r8_snorm_pack_rgba_8unorm
0000000000131070 000000000000006c t util_format_g8r8_sint_unpack_signed
00000000001310e0 00000000000000a0 t util_format_g8r8_sint_pack_signed
0000000000131180 000000000000001c t util_format_g8r8_sint_fetch_signed
00000000001311a0 0000000000000080 t util_format_g8r8_sint_pack_unsigned
0000000000131220 0000000000000094 t util_format_g16r16_unorm_unpack_rgba_float
00000000001312c0 0000000000000104 t util_format_g16r16_unorm_pack_rgba_float
00000000001313d0 000000000000003c t util_format_g16r16_unorm_fetch_rgba_float
0000000000131410 0000000000000074 t util_format_g16r16_unorm_unpack_rgba_8unorm
0000000000131490 000000000000008c t util_format_g16r16_unorm_pack_rgba_8unorm
0000000000131520 0000000000000094 t util_format_g16r16_snorm_unpack_rgba_float
00000000001315c0 0000000000000114 t util_format_g16r16_snorm_pack_rgba_float
00000000001316e0 000000000000003c t util_format_g16r16_snorm_fetch_rgba_float
0000000000131720 000000000000008c t util_format_g16r16_snorm_unpack_rgba_8unorm
00000000001317b0 000000000000008c t util_format_g16r16_snorm_pack_rgba_8unorm
0000000000131840 00000000000000a0 t util_format_a8b8g8r8_snorm_unpack_rgba_float
00000000001318e0 00000000000001b0 t util_format_a8b8g8r8_snorm_pack_rgba_float
0000000000131a90 0000000000000050 t util_format_a8b8g8r8_snorm_fetch_rgba_float
0000000000131ae0 0000000000000114 t util_format_a8b8g8r8_snorm_unpack_rgba_8unorm
0000000000131c00 000000000000008c t util_format_a8b8g8r8_snorm_pack_rgba_8unorm
0000000000131c90 0000000000000074 t util_format_a8b8g8r8_sint_unpack_signed
0000000000131d10 00000000000000f8 t util_format_a8b8g8r8_sint_pack_signed
0000000000131e10 0000000000000020 t util_format_a8b8g8r8_sint_fetch_signed
0000000000131e30 00000000000000ac t util_format_a8b8g8r8_sint_pack_unsigned
0000000000131ee0 000000000000009c t util_format_x8b8g8r8_snorm_unpack_rgba_float
0000000000131f80 0000000000000160 t util_format_x8b8g8r8_snorm_pack_rgba_float
00000000001320e0 0000000000000050 t util_format_x8b8g8r8_snorm_fetch_rgba_float
0000000000132130 00000000000000ec t util_format_x8b8g8r8_snorm_unpack_rgba_8unorm
0000000000132220 000000000000007c t util_format_x8b8g8r8_snorm_pack_rgba_8unorm
00000000001322a0 0000000000000070 t util_format_x8b8g8r8_sint_unpack_signed
0000000000132310 00000000000000c0 t util_format_x8b8g8r8_sint_pack_signed
00000000001323d0 0000000000000024 t util_format_x8b8g8r8_sint_fetch_signed
0000000000132400 0000000000000094 t util_format_x8b8g8r8_sint_pack_unsigned
00000000001324a0 0000000000000040 t util_format_r64g64b64_float_fetch_rgba_float
00000000001324e0 0000000000000090 t util_format_r64g64b64_float_pack_rgba_float
0000000000132570 000000000000009c t util_format_r64g64b64_float_unpack_rgba_float
0000000000132610 00000000000000bc t util_format_r64g64b64_float_pack_rgba_8unorm
00000000001326d0 000000000000018c t util_format_r64g64b64_float_unpack_rgba_8unorm
0000000000132860 0000000000000034 t util_format_r64g64b64a64_float_fetch_rgba_float
00000000001328a0 0000000000000094 t util_format_r64g64b64a64_float_pack_rgba_float
0000000000132940 0000000000000094 t util_format_r64g64b64a64_float_unpack_rgba_float
00000000001329e0 00000000000000c4 t util_format_r64g64b64a64_float_pack_rgba_8unorm
0000000000132ab0 00000000000001d4 t util_format_r64g64b64a64_float_unpack_rgba_8unorm
0000000000132c90 000000000000002c t util_format_r32g32b32_float_fetch_rgba_float
0000000000132cc0 0000000000000084 t util_format_r32g32b32_float_pack_rgba_float
0000000000132d50 0000000000000090 t util_format_r32g32b32_float_unpack_rgba_float
0000000000132de0 00000000000000b0 t util_format_r32g32b32_float_pack_rgba_8unorm
0000000000132e90 0000000000000058 t util_format_r32g32b32_unorm_fetch_rgba_float
0000000000132ef0 000000000000010c t util_format_r32g32b32_unorm_pack_rgba_float
0000000000133000 00000000000000b4 t util_format_r32g32b32_unorm_unpack_rgba_float
00000000001330c0 00000000000000bc t util_format_r32g32b32_unorm_pack_rgba_8unorm
0000000000133180 0000000000000098 t util_format_r32g32b32_unorm_unpack_rgba_8unorm
0000000000133220 0000000000000030 t util_format_r32g32b32_uscaled_fetch_rgba_float
0000000000133250 00000000000000e8 t util_format_r32g32b32_uscaled_pack_rgba_float
0000000000133340 0000000000000098 t util_format_r32g32b32_uscaled_unpack_rgba_float
00000000001333e0 00000000000000a4 t util_format_r32g32b32_uscaled_pack_rgba_8unorm
0000000000133490 00000000000000a4 t util_format_r32g32b32_uscaled_unpack_rgba_8unorm
0000000000133540 0000000000000058 t util_format_r32g32b32_snorm_fetch_rgba_float
00000000001335a0 0000000000000114 t util_format_r32g32b32_snorm_pack_rgba_float
00000000001336c0 00000000000000b4 t util_format_r32g32b32_snorm_unpack_rgba_float
0000000000133780 00000000000000bc t util_format_r32g32b32_snorm_pack_rgba_8unorm
0000000000133840 00000000000000b4 t util_format_r32g32b32_snorm_unpack_rgba_8unorm
0000000000133900 0000000000000030 t util_format_r32g32b32_sscaled_fetch_rgba_float
0000000000133930 00000000000000e8 t util_format_r32g32b32_sscaled_pack_rgba_float
0000000000133a20 0000000000000098 t util_format_r32g32b32_sscaled_unpack_rgba_float
0000000000133ac0 00000000000000a4 t util_format_r32g32b32_sscaled_pack_rgba_8unorm
0000000000133b70 00000000000000a8 t util_format_r32g32b32_sscaled_unpack_rgba_8unorm
0000000000133c20 0000000000000114 t util_format_r16g16b16_float_fetch_rgba_float
0000000000133d40 0000000000000134 t util_format_r16g16b16_float_unpack_rgba_float
0000000000133e80 0000000000000060 t util_format_r16g16b16_unorm_fetch_rgba_float
0000000000133ee0 0000000000000174 t util_format_r16g16b16_unorm_pack_rgba_float
0000000000134060 00000000000000c0 t util_format_r16g16b16_unorm_unpack_rgba_float
0000000000134120 00000000000000c0 t util_format_r16g16b16_unorm_pack_rgba_8unorm
00000000001341e0 0000000000000098 t util_format_r16g16b16_unorm_unpack_rgba_8unorm
0000000000134280 0000000000000048 t util_format_r16g16b16_uscaled_fetch_rgba_float
00000000001342d0 00000000000000f4 t util_format_r16g16b16_uscaled_pack_rgba_float
00000000001343d0 00000000000000ac t util_format_r16g16b16_uscaled_unpack_rgba_float
0000000000134480 00000000000000a8 t util_format_r16g16b16_uscaled_pack_rgba_8unorm
0000000000134530 00000000000000a4 t util_format_r16g16b16_uscaled_unpack_rgba_8unorm
00000000001345e0 0000000000000058 t util_format_r16g16b16_snorm_fetch_rgba_float
0000000000134640 0000000000000174 t util_format_r16g16b16_snorm_pack_rgba_float
00000000001347c0 00000000000000b8 t util_format_r16g16b16_snorm_unpack_rgba_float
0000000000134880 00000000000000c0 t util_format_r16g16b16_snorm_pack_rgba_8unorm
0000000000134940 00000000000000b4 t util_format_r16g16b16_snorm_unpack_rgba_8unorm
0000000000134a00 0000000000000040 t util_format_r16g16b16_sscaled_fetch_rgba_float
0000000000134a40 00000000000000fc t util_format_r16g16b16_sscaled_pack_rgba_float
0000000000134b40 00000000000000a4 t util_format_r16g16b16_sscaled_unpack_rgba_float
0000000000134bf0 00000000000000a8 t util_format_r16g16b16_sscaled_pack_rgba_8unorm
0000000000134ca0 00000000000000b0 t util_format_r16g16b16_sscaled_unpack_rgba_8unorm
0000000000134d50 0000000000000054 t util_format_r32g32b32_fixed_fetch_rgba_float
0000000000134db0 0000000000000108 t util_format_r32g32b32_fixed_pack_rgba_float
0000000000134ec0 00000000000000b4 t util_format_r32g32b32_fixed_unpack_rgba_float
0000000000134f80 00000000000000c4 t util_format_r32g32b32_fixed_pack_rgba_8unorm
0000000000135050 0000000000000190 t util_format_r32g32b32_fixed_unpack_rgba_8unorm
00000000001351e0 000000000000002c t util_format_r16g16b16_uint_fetch_unsigned
0000000000135210 00000000000000d4 t util_format_r16g16b16_uint_pack_signed
00000000001352f0 00000000000000a0 t util_format_r16g16b16_uint_pack_unsigned
0000000000135390 0000000000000094 t util_format_r16g16b16_uint_unpack_unsigned
0000000000135430 000000000000002c t util_format_r16g16b16_sint_fetch_signed
0000000000135460 00000000000000d4 t util_format_r16g16b16_sint_pack_signed
0000000000135540 0000000000000094 t util_format_r16g16b16_sint_unpack_signed
00000000001355e0 00000000000000a0 t util_format_r16g16b16_sint_pack_unsigned
0000000000135680 0000000000000020 t util_format_r32g32b32_uint_fetch_unsigned
00000000001356a0 0000000000000094 t util_format_r32g32b32_uint_pack_signed
0000000000135740 000000000000007c t util_format_r32g32b32_uint_pack_unsigned
00000000001357c0 0000000000000088 t util_format_r32g32b32_uint_unpack_unsigned
0000000000135850 0000000000000020 t util_format_r32g32b32_sint_fetch_signed
0000000000135870 000000000000007c t util_format_r32g32b32_sint_pack_signed
00000000001358f0 0000000000000088 t util_format_r32g32b32_sint_unpack_signed
0000000000135980 000000000000009c t util_format_r32g32b32_sint_pack_unsigned
0000000000135a20 000000000000001c t util_format_r8_uscaled_fetch_rgba_float
0000000000135a40 0000000000000020 t util_format_a1b5g5r5_uint_fetch_unsigned
0000000000135a60 0000000000000064 t util_format_r32_sscaled_pack_rgba_8unorm
0000000000135ad0 000000000000006c t util_format_r16_sscaled_pack_rgba_8unorm
0000000000135b40 0000000000000098 t util_format_l8_unorm_pack_rgba_float
0000000000135be0 0000000000000098 t util_format_a8_unorm_pack_rgba_float
0000000000135c80 00000000000000a8 t util_format_r32_float_unpack_rgba_8unorm
0000000000135d30 00000000000000ac t util_format_a32_float_unpack_rgba_8unorm
0000000000135de0 00000000000000a8 t util_format_l32_float_unpack_rgba_8unorm
0000000000135e90 00000000000000a8 t util_format_i32_float_unpack_rgba_8unorm
0000000000135f40 0000000000000068 t util_format_r8_srgb_pack_rgba_8unorm
0000000000135fb0 00000000000000e0 t util_format_r32g32_float_unpack_rgba_8unorm
0000000000136090 00000000000000e0 t util_format_l32a32_float_unpack_rgba_8unorm
0000000000136170 00000000000000e0 t util_format_r32a32_float_unpack_rgba_8unorm
0000000000136250 00000000000000c8 t util_format_r8g8_unorm_pack_rgba_float
0000000000136320 00000000000000c8 t util_format_g8r8_unorm_pack_rgba_float
00000000001363f0 00000000000000c8 t util_format_l8a8_unorm_pack_rgba_float
00000000001364c0 00000000000000c8 t util_format_a8r8_unorm_pack_rgba_float
0000000000136590 00000000000000e8 t util_format_a16_float_unpack_rgba_8unorm
0000000000136680 00000000000000e8 t util_format_r16_float_unpack_rgba_8unorm
0000000000136770 00000000000000e8 t util_format_i16_float_unpack_rgba_8unorm
0000000000136860 00000000000000e8 t util_format_l16_float_unpack_rgba_8unorm
0000000000136950 0000000000000110 t util_format_r32g32b32x32_float_unpack_rgba_8unorm
0000000000136a60 000000000000005c t util_format_r8_unorm_pack_rgba_8unorm
0000000000136ac0 000000000000005c t util_format_i8_unorm_pack_rgba_8unorm
0000000000136b20 00000000000000fc t util_format_r8g8b8_unorm_pack_rgba_float
0000000000136c20 00000000000000fc t util_format_b8g8r8_unorm_pack_rgba_float
0000000000136d20 00000000000000f8 t util_format_r8g8b8x8_unorm_pack_rgba_float
0000000000136e20 00000000000000f8 t util_format_b8g8r8x8_unorm_pack_rgba_float
0000000000136f20 0000000000000120 t util_format_r32g32b32_float_unpack_rgba_8unorm
0000000000137040 00000000000000f4 t util_format_x8b8g8r8_unorm_pack_rgba_float
0000000000137140 00000000000000f4 t util_format_x8r8g8b8_unorm_pack_rgba_float
0000000000137240 0000000000000140 t util_format_r32g32b32a32_float_unpack_rgba_8unorm
0000000000137380 0000000000000068 t util_format_r8a8_unorm_pack_rgba_8unorm
00000000001373f0 0000000000000144 t util_format_l16a16_float_unpack_rgba_8unorm
0000000000137540 0000000000000144 t util_format_r16a16_float_unpack_rgba_8unorm
0000000000137690 0000000000000144 t util_format_r16g16_float_unpack_rgba_8unorm
00000000001377e0 0000000000000124 t util_format_a8r8g8b8_unorm_pack_rgba_float
0000000000137910 0000000000000124 t util_format_a8b8g8r8_unorm_pack_rgba_float
0000000000137a40 0000000000000124 t util_format_z24_unorm_s8_uint_as_r8g8b8a8_pack_rgba_float
0000000000137b70 0000000000000124 t util_format_b8g8r8a8_unorm_pack_rgba_float
0000000000137ca0 0000000000000148 t util_format_r8sg8sb8ux8u_norm_pack_rgba_float
0000000000137df0 0000000000000054 t util_format_r8g8b8a8_unorm_fetch_rgba_float
0000000000137e50 00000000000001a4 t util_format_r16g16b16x16_float_unpack_rgba_8unorm
0000000000138000 0000000000000060 t util_format_i8_snorm_pack_rgba_8unorm
0000000000138060 000000000000006c t util_format_r8_uscaled_pack_rgba_8unorm
00000000001380d0 0000000000000060 t util_format_r8_snorm_pack_rgba_8unorm
0000000000138130 000000000000006c t util_format_r8_sscaled_pack_rgba_8unorm
00000000001381a0 00000000000001c0 t util_format_r16g16b16_float_unpack_rgba_8unorm
0000000000138360 0000000000000200 t util_format_r16g16b16a16_float_unpack_rgba_8unorm
0000000000138560 0000000000000074 t util_format_r8_uscaled_unpack_rgba_8unorm
00000000001385e0 000000000000006c t util_format_r4a4_unorm_pack_rgba_8unorm
0000000000138650 0000000000000070 t util_format_r8a8_snorm_pack_rgba_8unorm
00000000001386c0 0000000000000054 t util_format_r32_float_pack_rgba_float
0000000000138720 0000000000000064 t util_format_i32_float_pack_rgba_8unorm
0000000000138790 0000000000000054 t util_format_i32_sint_pack_signed
00000000001387f0 0000000000000054 t util_format_l32_sint_pack_signed
0000000000138850 0000000000000054 t util_format_i32_uint_pack_unsigned
00000000001388b0 0000000000000054 t util_format_l32_uint_pack_unsigned
0000000000138910 0000000000000054 t util_format_i32_float_pack_rgba_float
0000000000138970 0000000000000074 t util_format_i16_unorm_pack_rgba_8unorm
00000000001389f0 0000000000000074 t util_format_r16_unorm_pack_rgba_8unorm
0000000000138a70 0000000000000074 t util_format_r16_snorm_pack_rgba_8unorm
0000000000138af0 0000000000000074 t util_format_i16_snorm_pack_rgba_8unorm
0000000000138b70 0000000000000064 t util_format_r32_float_pack_rgba_8unorm
0000000000138be0 0000000000000078 t util_format_r8g8b8a8_unorm_unpack_rgba_8unorm
0000000000138c60 000000000000006c t util_format_r8_uscaled_unpack_rgba_float
0000000000138cd0 000000000000005c t util_format_i32_uint_pack_signed
0000000000138d30 000000000000005c t util_format_l32_uint_pack_signed
0000000000138d90 000000000000005c t util_format_i32_sint_pack_unsigned
0000000000138df0 000000000000005c t util_format_l32_sint_pack_unsigned
0000000000138e50 0000000000000088 t util_format_r8_uscaled_pack_rgba_float
0000000000138ee0 000000000000008c t util_format_r16a16_unorm_pack_rgba_8unorm
0000000000138f70 000000000000008c t util_format_r16a16_snorm_pack_rgba_8unorm
0000000000139000 000000000000006c t util_format_i16_sint_pack_unsigned
0000000000139070 000000000000006c t util_format_l16_sint_pack_unsigned
00000000001390e0 0000000000000064 t util_format_i8_uint_pack_unsigned
0000000000139150 0000000000000064 t util_format_l8_uint_pack_unsigned
00000000001391c0 0000000000000064 t util_format_i8_sint_pack_unsigned
0000000000139230 0000000000000064 t util_format_l8_sint_pack_unsigned
00000000001392a0 000000000000006c t util_format_i16_uint_pack_unsigned
0000000000139310 000000000000006c t util_format_l16_uint_pack_unsigned
0000000000139380 0000000000000084 t util_format_r8a8_sint_pack_unsigned
0000000000139410 0000000000000088 t util_format_r16a16_uint_pack_unsigned
00000000001394a0 0000000000000088 t util_format_r16a16_sint_pack_unsigned
0000000000139530 0000000000000044 t util_format_r8g8b8a8_unorm_pack_rgba_8unorm
0000000000139580 0000000000000084 t util_format_r8a8_uint_pack_unsigned
0000000000139610 0000000000000074 t util_format_a1b5g5r5_uint_unpack_unsigned
0000000000139690 0000000000000080 t util_format_l16_sint_pack_signed
0000000000139710 0000000000000078 t util_format_i8_uint_pack_signed
0000000000139790 0000000000000078 t util_format_l8_uint_pack_signed
0000000000139810 0000000000000078 t util_format_i8_sint_pack_signed
0000000000139890 0000000000000080 t util_format_i16_sint_pack_signed
0000000000139910 0000000000000078 t util_format_l16_uint_pack_signed
0000000000139990 0000000000000078 t util_format_l8_sint_pack_signed
0000000000139a10 0000000000000078 t util_format_i16_uint_pack_signed
0000000000139a90 0000000000000094 t util_format_r16a16_uint_pack_signed
0000000000139b30 0000000000000098 t util_format_r8a8_uint_pack_signed
0000000000139bd0 0000000000000098 t util_format_r8_unorm_pack_rgba_float
0000000000139c70 0000000000000098 t util_format_i8_unorm_pack_rgba_float
0000000000139d10 00000000000000a0 t util_format_r8a8_sint_pack_signed
0000000000139db0 00000000000000a4 t util_format_r16a16_sint_pack_signed
0000000000139e60 00000000000000a0 t util_format_r10g10b10a2_sscaled_pack_rgba_8unorm
0000000000139f00 00000000000000a4 t util_format_b10g10r10a2_sscaled_pack_rgba_8unorm
0000000000139fb0 00000000000000c8 t util_format_r8a8_unorm_pack_rgba_float
000000000013a080 00000000000000a4 t util_format_r8g8b8a8_unorm_unpack_rgba_float
000000000013a130 00000000000000d0 t util_format_r16_float_pack_rgba_8unorm
000000000013a200 00000000000000d0 t util_format_a16_float_pack_rgba_8unorm
000000000013a2d0 00000000000000b4 t util_format_l16_float_pack_rgba_float
000000000013a390 00000000000000d0 t util_format_l16_float_pack_rgba_8unorm
000000000013a460 00000000000000b4 t util_format_r16_float_pack_rgba_float
000000000013a520 00000000000000b4 t util_format_a16_float_pack_rgba_float
000000000013a5e0 00000000000000d0 t util_format_i16_float_pack_rgba_8unorm
000000000013a6b0 00000000000000b4 t util_format_i16_float_pack_rgba_float
000000000013a770 00000000000000c8 t util_format_l8_srgb_pack_rgba_float
000000000013a840 00000000000000c8 t util_format_r8_srgb_pack_rgba_float
000000000013a910 00000000000000a4 t util_format_a1b5g5r5_uint_pack_unsigned
000000000013a9c0 00000000000000b8 t util_format_i8_snorm_pack_rgba_float
000000000013aa80 00000000000000b8 t util_format_i16_unorm_pack_rgba_float
000000000013ab40 00000000000000b8 t util_format_r8_snorm_pack_rgba_float
000000000013ac00 00000000000000c0 t util_format_i16_snorm_pack_rgba_float
000000000013acc0 00000000000000b8 t util_format_r16_unorm_pack_rgba_float
000000000013ad80 00000000000000c0 t util_format_r16_snorm_pack_rgba_float
000000000013ae40 0000000000000108 t util_format_r16a16_float_pack_rgba_float
000000000013af50 0000000000000108 t util_format_l16a16_float_pack_rgba_float
000000000013b060 0000000000000108 t util_format_r16g16_float_pack_rgba_float
000000000013b170 0000000000000108 t util_format_l8a8_srgb_pack_rgba_float
000000000013b280 0000000000000128 t util_format_l16a16_float_pack_rgba_8unorm
000000000013b3b0 0000000000000128 t util_format_r16g16_float_pack_rgba_8unorm
000000000013b4e0 0000000000000128 t util_format_r16a16_float_pack_rgba_8unorm
000000000013b610 0000000000000120 t util_format_r8g8_srgb_pack_rgba_float
000000000013b730 000000000000019c t util_format_r16g16b16x16_float_pack_rgba_float
000000000013b8d0 0000000000000170 t util_format_r16g16b16_float_pack_rgba_float
000000000013ba40 00000000000001c8 t util_format_r16g16b16x16_float_pack_rgba_8unorm
000000000013bc10 00000000000001a0 t util_format_r16g16b16_float_pack_rgba_8unorm
000000000013bdb0 00000000000001dc t util_format_r16g16b16a16_float_pack_rgba_8unorm
000000000013bf90 00000000000001b8 t util_format_r8g8b8a8_srgb_pack_rgba_float
000000000013c150 000000000000019c t util_format_r16g16b16a16_float_pack_rgba_float
000000000013c2f0 000000000000017c t util_format_r8g8b8_srgb_pack_rgba_float
000000000013c470 000000000000017c t util_format_b8g8r8_srgb_pack_rgba_float
000000000013c5f0 000000000000017c t util_format_r8g8b8x8_srgb_pack_rgba_float
000000000013c770 000000000000017c t util_format_b8g8r8x8_srgb_pack_rgba_float
000000000013c8f0 000000000000017c t util_format_x8b8g8r8_srgb_pack_rgba_float
000000000013ca70 000000000000017c t util_format_x8r8g8b8_srgb_pack_rgba_float
000000000013cbf0 0000000000000178 t util_format_b5g6r5_srgb_pack_rgba_float
000000000013cd70 00000000000001bc t util_format_a8r8g8b8_srgb_pack_rgba_float
000000000013cf30 00000000000001bc t util_format_a8b8g8r8_srgb_pack_rgba_float
000000000013d0f0 00000000000001b8 t util_format_b8g8r8a8_srgb_pack_rgba_float
000000000013d2b0 00000000000000c4 t util_format_a1b5g5r5_uint_pack_signed
000000000013d380 0000000000000114 t util_format_r16a16_snorm_pack_rgba_float
000000000013d4a0 0000000000000108 t util_format_r8a8_snorm_pack_rgba_float
000000000013d5b0 0000000000000104 t util_format_r16a16_unorm_pack_rgba_float
000000000013d6c0 0000000000000100 t util_format_r4a4_unorm_pack_rgba_float
000000000013d7c0 0000000000000124 t util_format_r8g8b8a8_unorm_pack_rgba_float
000000000013d8f0 00000000000011d4 t util_format_description
000000000013ead0 0000000000000078 t _eglGrowArray
000000000013eb50 0000000000000078 t _eglCreateArray
000000000013ebd0 0000000000000068 t _eglDestroyArray
000000000013ec40 0000000000000050 t _eglAppendArray
000000000013ec90 0000000000000044 t _eglFindArray
000000000013ece0 00000000000000e0 t _eglFilterArray
000000000013edc0 00000000000000c0 t _eglFlattenArray
000000000013ee80 0000000000000014 t one_time_fini
000000000013eea0 0000000000000034 t generic_nop
000000000013eee0 0000000000000128 t check_compatible
000000000013f010 00000000000000a4 t _mesa_initialize
000000000013f0c0 00000000000003d8 t _mesa_init_constants
000000000013f4a0 0000000000000078 t _mesa_alloc_dispatch_table
000000000013f520 0000000000000038 t _mesa_initialize_dispatch_tables
000000000013f560 00000000000006c8 t _mesa_initialize_context
000000000013fc30 0000000000000344 t _mesa_copy_context
000000000013ff80 000000000000048c t _mesa_make_current
0000000000140410 00000000000003cc t _mesa_free_context_data
00000000001407e0 000000000000002c t _mesa_destroy_context
0000000000140810 00000000000000b8 t _mesa_share_state
00000000001408d0 0000000000000004 t _mesa_get_current_context
00000000001408e0 0000000000000088 T _mesa_Finish
0000000000140970 0000000000000088 T _mesa_Flush
0000000000140a00 0000000000000004 t _mesa_get_cpu_features
0000000000140a10 00000000000000a4 t _mesa_print_info
0000000000140ac0 0000000000000024 t _mesa_init_debug
0000000000140af0 0000000000000170 t validate_params
0000000000140c60 000000000000011c t _mesa_lock_debug_state
0000000000140d80 00000000000000a0 t validate_length
0000000000140e20 0000000000000104 t debug_message_store
0000000000140f30 00000000000000bc t debug_clear_group
0000000000140ff0 000000000000027c t debug_make_group_writable.isra.0
0000000000141270 0000000000000214 t log_msg_locked_and_unlock
0000000000141490 000000000000005c t _mesa_debug_get_id
00000000001414f0 0000000000000088 t _mesa_debug_is_message_enabled
0000000000141580 0000000000000090 t _mesa_set_debug_state_int
0000000000141610 00000000000000d0 t _mesa_get_debug_state_int
00000000001416e0 0000000000000070 t _mesa_get_debug_state_ptr
0000000000141750 0000000000000088 t _mesa_log_msg
00000000001417e0 0000000000000250 T _mesa_DebugMessageInsert
0000000000141a30 00000000000002ac T _mesa_GetDebugMessageLog
0000000000141ce0 000000000000058c T _mesa_DebugMessageControl
0000000000142270 0000000000000064 T _mesa_DebugMessageCallback
00000000001422e0 00000000000001e0 T _mesa_PushDebugGroup
00000000001424c0 0000000000000144 T _mesa_PopDebugGroup
0000000000142610 0000000000000010 t _mesa_init_debug_output
0000000000142620 000000000000010c t _mesa_free_errors_data
0000000000142730 000000000000009c T _mesa_StringMarkerGREMEDY
00000000001427d0 0000000000000050 t _mesa_ClearDepth
0000000000142820 0000000000000054 t _mesa_ClearDepthf
0000000000142880 00000000000000b8 T _mesa_DepthFunc_no_error
0000000000142940 00000000000000e4 t _mesa_DepthFunc
0000000000142a30 00000000000000b8 t _mesa_DepthMask
0000000000142af0 000000000000010c t _mesa_DepthBoundsEXT
0000000000142c00 0000000000000024 t _mesa_init_depth
0000000000142c30 0000000000000038 t check_atlas_for_deleted_list
0000000000142c70 000000000000010c t dlist_alloc
0000000000142d80 00000000000000b8 t save_SetFragmentShaderConstantATI
0000000000142e40 0000000000000084 t save_BindFragmentShaderATI
0000000000142ed0 000000000000002c t save_MultiDrawElementsIndirect
0000000000142f00 000000000000002c t save_MultiDrawArraysIndirect
0000000000142f30 000000000000002c t save_DrawElementsIndirect
0000000000142f60 000000000000002c t save_DrawArraysIndirect
0000000000142f90 000000000000002c t save_DrawElementsInstancedBaseVertexBaseInstance
0000000000142fc0 000000000000002c t save_DrawElementsInstancedBaseInstance
0000000000142ff0 000000000000002c t save_DrawArraysInstancedBaseInstance
0000000000143020 000000000000002c t save_DrawElementsInstancedBaseVertexARB
0000000000143050 000000000000002c t save_DrawElementsInstancedARB
0000000000143080 000000000000002c t save_DrawArraysInstancedARB
00000000001430b0 000000000000002c t save_DispatchComputeIndirect
00000000001430e0 000000000000002c t save_NewList
0000000000143110 0000000000000180 t save_VertexAttrib4fvNV
0000000000143290 00000000000001bc t save_VertexAttribL1ui64vARB
0000000000143450 00000000000001b0 t save_VertexAttribL1ui64ARB
0000000000143600 0000000000000220 t save_VertexAttribL2dv
0000000000143820 00000000000001d8 t save_VertexAttribL1dv
0000000000143a00 0000000000000220 t save_VertexAttribL2d
0000000000143c20 00000000000001d8 t save_VertexAttribL1d
0000000000143e00 00000000000001d4 t save_MultiTexCoordP4uiv
0000000000143fe0 00000000000001d0 t save_MultiTexCoordP4ui
00000000001441b0 00000000000001b8 t save_MultiTexCoordP3uiv
0000000000144370 00000000000001b4 t save_MultiTexCoordP3ui
0000000000144530 000000000000017c t save_MultiTexCoordP2uiv
00000000001446b0 0000000000000178 t save_MultiTexCoordP2ui
0000000000144830 0000000000000158 t save_MultiTexCoordP1uiv
0000000000144990 0000000000000154 t save_MultiTexCoordP1ui
0000000000144af0 00000000000001b4 t save_TexCoordP4uiv
0000000000144cb0 00000000000001b0 t save_TexCoordP4ui
0000000000144e60 0000000000000198 t save_TexCoordP3uiv
0000000000145000 0000000000000194 t save_TexCoordP3ui
00000000001451a0 000000000000015c t save_TexCoordP2uiv
0000000000145300 0000000000000158 t save_TexCoordP2ui
0000000000145460 0000000000000138 t save_TexCoordP1uiv
00000000001455a0 0000000000000134 t save_TexCoordP1ui
00000000001456e0 00000000000001b0 t save_VertexP4uiv
0000000000145890 00000000000001ac t save_VertexP4ui
0000000000145a40 0000000000000194 t save_VertexP3uiv
0000000000145be0 0000000000000190 t save_VertexP3ui
0000000000145d70 0000000000000158 t save_VertexP2uiv
0000000000145ed0 0000000000000154 t save_VertexP2ui
0000000000146030 0000000000000230 t save_VertexAttribI4uiv
0000000000146260 000000000000020c t save_VertexAttribI3uiv
0000000000146470 00000000000001fc t save_VertexAttribI2uiv
0000000000146670 0000000000000228 t save_VertexAttribI4ui
00000000001468a0 0000000000000204 t save_VertexAttribI3ui
0000000000146ab0 00000000000001f4 t save_VertexAttribI2ui
0000000000146cb0 00000000000001c8 t save_VertexAttribI1ui
0000000000146e80 0000000000000238 t save_VertexAttribI4iv
00000000001470c0 0000000000000230 t save_VertexAttribI3iv
00000000001472f0 00000000000001f4 t save_VertexAttribI2iv
00000000001474f0 0000000000000228 t save_VertexAttribI4i
0000000000147720 0000000000000204 t save_VertexAttribI3i
0000000000147930 00000000000001f4 t save_VertexAttribI2i
0000000000147b30 00000000000001c8 t save_VertexAttribI1i
0000000000147d00 000000000000023c t save_VertexAttrib4fvARB
0000000000147f40 000000000000023c t save_VertexAttrib4fARB
0000000000148180 0000000000000224 t save_VertexAttrib3fvARB
00000000001483b0 000000000000021c t save_VertexAttrib3fARB
00000000001485d0 0000000000000214 t save_VertexAttrib2fvARB
00000000001487f0 0000000000000214 t save_VertexAttrib2fARB
0000000000148a10 00000000000001e8 t save_VertexAttrib1fvARB
0000000000148c00 00000000000001e0 t save_VertexAttrib1fARB
0000000000148de0 000000000000009c t save_EvalPoint2
0000000000148e80 0000000000000088 t save_EvalPoint1
0000000000148f10 000000000000009c t save_EvalCoord2f
0000000000148fb0 0000000000000008 t save_EvalCoord2fv
0000000000148fc0 0000000000000094 t save_EvalCoord1f
0000000000149060 0000000000000008 t save_EvalCoord1fv
0000000000149070 0000000000000080 t save_End
00000000001490f0 0000000000000278 t save_VertexAttribL4dv
0000000000149370 000000000000026c t save_VertexAttribL3dv
00000000001495e0 0000000000000278 t save_VertexAttribL4d
0000000000149860 0000000000000268 t save_VertexAttribL3d
0000000000149ad0 0000000000000178 t unpack_image.part.0
0000000000149c50 00000000000000dc t save_TexCoord1f
0000000000149d30 00000000000000dc t save_FogCoordfEXT
0000000000149e10 00000000000000dc t save_Indexf
0000000000149ef0 00000000000000e0 t save_TexCoord1fv
0000000000149fd0 00000000000000e0 t save_Indexfv
000000000014a0b0 00000000000000e0 t save_EdgeFlag
000000000014a190 00000000000000e0 t save_FogCoordfvEXT
000000000014a270 00000000000000e8 t save_Vertex2f
000000000014a360 00000000000000ec t save_TexCoord2f
000000000014a450 00000000000000ec t save_TexCoord2fv
000000000014a540 0000000000000114 t save_TexCoord3f
000000000014a660 00000000000000e8 t save_Vertex2fv
000000000014a750 0000000000000110 t save_Vertex3f
000000000014a860 0000000000000114 t save_SecondaryColor3fEXT
000000000014a980 0000000000000114 t save_Color3f
000000000014aaa0 0000000000000114 t save_Normal3f
000000000014abc0 0000000000000120 t save_TexCoord4f
000000000014ace0 0000000000000120 t save_Color4f
000000000014ae00 000000000000011c t save_Vertex4f
000000000014af20 0000000000000114 t save_Color3fv
000000000014b040 0000000000000110 t save_Vertex3fv
000000000014b150 0000000000000114 t save_Normal3fv
000000000014b270 0000000000000100 t save_MultiTexCoord1f
000000000014b370 0000000000000114 t save_SecondaryColor3fvEXT
000000000014b490 0000000000000114 t save_TexCoord3fv
000000000014b5b0 0000000000000100 t save_MultiTexCoord1fv
000000000014b6b0 0000000000000110 t save_MultiTexCoord2f
000000000014b7c0 0000000000000118 t save_Vertex4fv
000000000014b8e0 000000000000011c t save_Color4fv
000000000014ba00 000000000000011c t save_TexCoord4fv
000000000014bb20 000000000000010c t save_MultiTexCoord2fv
000000000014bc30 0000000000000138 t save_MultiTexCoord3f
000000000014bd70 0000000000000144 t save_MultiTexCoord4f
000000000014bec0 0000000000000134 t save_MultiTexCoord3fv
000000000014c000 000000000000013c t save_MultiTexCoord4fv
000000000014c140 000000000000005c t execute_list
000000000014c1a0 0000000000004ba8 t execute_list.part.0
0000000000150d50 0000000000000144 t save_VertexAttrib1fNV
0000000000150ea0 0000000000000144 t save_VertexAttrib1fvNV
0000000000150ff0 0000000000000154 t save_VertexAttrib2fNV
0000000000151150 0000000000000150 t save_VertexAttrib2fvNV
00000000001512a0 000000000000017c t save_VertexAttrib3fNV
0000000000151420 0000000000000178 t save_VertexAttrib3fvNV
00000000001515a0 0000000000000188 t save_VertexAttrib4fNV
0000000000151730 000000000000017c t r11g11b10f_to_float3.constprop.0
00000000001518b0 00000000000003f0 t save_SecondaryColorP3ui
0000000000151ca0 00000000000003f0 t save_ColorP3ui
0000000000152090 00000000000003f0 t save_NormalP3ui
0000000000152480 00000000000003f8 t save_SecondaryColorP3uiv
0000000000152880 00000000000003f8 t save_NormalP3uiv
0000000000152c80 00000000000003f8 t save_ColorP3uiv
0000000000153080 00000000000004c4 t save_ColorP4ui
0000000000153550 00000000000004c8 t save_ColorP4uiv
0000000000153a20 0000000000000150 t save_CallLists
0000000000153b70 0000000000000954 t save_VertexAttribP4ui
00000000001544d0 000000000000095c t save_VertexAttribP4uiv
0000000000154e30 00000000000003e8 t save_VertexAttribP1ui
0000000000155220 00000000000003fc t save_VertexAttribP1uiv
0000000000155620 000000000000070c t save_VertexAttribP2ui
0000000000155d30 00000000000006f0 t save_VertexAttribP2uiv
0000000000156420 0000000000000a90 t save_VertexAttribP3uiv
0000000000156eb0 0000000000000a90 t save_VertexAttribP3ui
0000000000157940 000000000000003c t _mesa_delete_bitmap_atlas
0000000000157980 000000000000000c t _mesa_lookup_list
0000000000157990 0000000000000410 t _mesa_delete_list
0000000000157da0 00000000000000a4 t destroy_list
0000000000157e50 0000000000000024 t _mesa_dlist_alloc_aligned
0000000000157e80 0000000000000050 t _mesa_dlist_alloc_opcode
0000000000157ed0 0000000000000088 t _mesa_compile_error
0000000000157f60 0000000000000128 t save_NamedProgramLocalParameter4fEXT
0000000000158090 000000000000000c t save_NamedProgramLocalParameter4fvEXT
00000000001580a0 000000000000001c t save_NamedProgramLocalParameter4dvEXT
00000000001580c0 0000000000000014 t save_NamedProgramLocalParameter4dEXT
00000000001580e0 0000000000000170 t save_NamedProgramStringEXT
0000000000158250 0000000000000218 t save_CompressedMultiTexSubImage3DEXT
0000000000158470 00000000000001f0 t save_CompressedMultiTexSubImage2DEXT
0000000000158660 00000000000001c4 t save_CompressedMultiTexSubImage1DEXT
0000000000158830 0000000000000284 t save_CompressedMultiTexImage3DEXT
0000000000158ac0 0000000000000264 t save_CompressedMultiTexImage2DEXT
0000000000158d30 0000000000000250 t save_CompressedMultiTexImage1DEXT
0000000000158f80 0000000000000218 t save_CompressedTextureSubImage3DEXT
00000000001591a0 00000000000001f0 t save_CompressedTextureSubImage2DEXT
0000000000159390 00000000000001c4 t save_CompressedTextureSubImage1DEXT
0000000000159560 0000000000000284 t save_CompressedTextureImage3DEXT
00000000001597f0 0000000000000264 t save_CompressedTextureImage2DEXT
0000000000159a60 0000000000000250 t save_CompressedTextureImage1DEXT
0000000000159cb0 0000000000000148 t save_MultiTexEnvfvEXT
0000000000159e00 00000000000000c4 t save_MultiTexEnvivEXT
0000000000159ed0 000000000000002c t save_MultiTexEnviEXT
0000000000159f00 0000000000000024 t save_MultiTexEnvfEXT
0000000000159f30 0000000000000160 t save_CopyMultiTexSubImage3DEXT
000000000015a090 000000000000014c t save_CopyMultiTexSubImage2DEXT
000000000015a1e0 0000000000000128 t save_CopyMultiTexSubImage1DEXT
000000000015a310 000000000000014c t save_CopyMultiTexImage2DEXT
000000000015a460 000000000000013c t save_CopyMultiTexImage1DEXT
000000000015a5a0 00000000000001f8 t save_MultiTexSubImage3DEXT
000000000015a7a0 00000000000001e4 t save_MultiTexSubImage2DEXT
000000000015a990 00000000000001b4 t save_MultiTexSubImage1DEXT
000000000015ab50 0000000000000264 t save_MultiTexImage3DEXT
000000000015adc0 0000000000000258 t save_MultiTexImage2DEXT
000000000015b020 0000000000000240 t save_MultiTexImage1DEXT
000000000015b260 000000000000011c t save_MultiTexParameterfvEXT
000000000015b380 0000000000000024 t save_MultiTexParameterfEXT
000000000015b3b0 000000000000011c t save_MultiTexParameterIuivEXT
000000000015b4d0 000000000000011c t save_MultiTexParameterIivEXT
000000000015b5f0 000000000000011c t save_MultiTexParameterivEXT
000000000015b710 0000000000000024 t save_MultiTexParameteriEXT
000000000015b740 00000000000000e8 t save_BindMultiTextureEXT
000000000015b830 0000000000000160 t save_CopyTextureSubImage3DEXT
000000000015b990 000000000000014c t save_CopyTextureSubImage2DEXT
000000000015bae0 0000000000000128 t save_CopyTextureSubImage1DEXT
000000000015bc10 000000000000014c t save_CopyTextureImage2DEXT
000000000015bd60 000000000000013c t save_CopyTextureImage1DEXT
000000000015bea0 00000000000001f8 t save_TextureSubImage3DEXT
000000000015c0a0 00000000000001e4 t save_TextureSubImage2DEXT
000000000015c290 00000000000001b4 t save_TextureSubImage1DEXT
000000000015c450 0000000000000264 t save_TextureImage3DEXT
000000000015c6c0 0000000000000258 t save_TextureImage2DEXT
000000000015c920 0000000000000240 t save_TextureImage1DEXT
000000000015cb60 000000000000011c t save_TextureParameterIuivEXT
000000000015cc80 000000000000011c t save_TextureParameterIivEXT
000000000015cda0 000000000000011c t save_TextureParameterfvEXT
000000000015cec0 0000000000000024 t save_TextureParameterfEXT
000000000015cef0 000000000000011c t save_TextureParameterivEXT
000000000015d010 0000000000000024 t save_TextureParameteriEXT
000000000015d040 00000000000000c4 t save_MatrixPopEXT
000000000015d110 00000000000000c4 t save_MatrixPushEXT
000000000015d1e0 000000000000013c t save_MatrixFrustumEXT
000000000015d320 000000000000013c t save_MatrixOrthoEXT
000000000015d460 00000000000000c4 t save_MatrixLoadIdentityEXT
000000000015d530 00000000000000fc t save_MatrixTranslatefEXT
000000000015d630 0000000000000010 t save_MatrixTranslatedEXT
000000000015d640 00000000000000fc t save_MatrixScalefEXT
000000000015d740 0000000000000010 t save_MatrixScaledEXT
000000000015d750 0000000000000104 t save_MatrixRotatefEXT
000000000015d860 0000000000000014 t save_MatrixRotatedEXT
000000000015d880 00000000000000fc t save_MatrixMultfEXT
000000000015d980 0000000000000034 t save_MatrixMultTransposedEXT
000000000015d9c0 0000000000000034 t save_MatrixMultTransposefEXT
000000000015da00 0000000000000040 t save_MatrixMultdEXT
000000000015da40 00000000000000fc t save_MatrixLoadfEXT
000000000015db40 0000000000000034 t save_MatrixLoadTransposedEXT
000000000015db80 0000000000000034 t save_MatrixLoadTransposefEXT
000000000015dbc0 0000000000000040 t save_MatrixLoaddEXT
000000000015dc00 00000000000000dc t save_ConservativeRasterParameteriNV
000000000015dce0 00000000000000dc t save_ConservativeRasterParameterfNV
000000000015ddc0 00000000000000dc t save_SubpixelPrecisionBiasNV
000000000015dea0 0000000000000154 t save_WindowRectanglesEXT
000000000015e000 00000000000000f0 t save_PolygonOffsetClampEXT
000000000015e0f0 0000000000000164 t save_ProgramUniformMatrix4x3dv
000000000015e260 0000000000000164 t save_ProgramUniformMatrix3x4dv
000000000015e3d0 0000000000000160 t save_ProgramUniformMatrix4x2dv
000000000015e530 0000000000000160 t save_ProgramUniformMatrix2x4dv
000000000015e690 0000000000000164 t save_ProgramUniformMatrix3x2dv
000000000015e800 0000000000000164 t save_ProgramUniformMatrix2x3dv
000000000015e970 0000000000000160 t save_ProgramUniformMatrix4dv
000000000015ead0 0000000000000164 t save_ProgramUniformMatrix3dv
000000000015ec40 0000000000000160 t save_ProgramUniformMatrix2dv
000000000015eda0 0000000000000164 t save_ProgramUniformMatrix4x3fv
000000000015ef10 0000000000000164 t save_ProgramUniformMatrix3x4fv
000000000015f080 0000000000000160 t save_ProgramUniformMatrix4x2fv
000000000015f1e0 0000000000000160 t save_ProgramUniformMatrix2x4fv
000000000015f340 0000000000000164 t save_ProgramUniformMatrix3x2fv
000000000015f4b0 0000000000000164 t save_ProgramUniformMatrix2x3fv
000000000015f620 0000000000000160 t save_ProgramUniformMatrix4fv
000000000015f780 0000000000000164 t save_ProgramUniformMatrix3fv
000000000015f8f0 0000000000000160 t save_ProgramUniformMatrix2fv
000000000015fa50 0000000000000148 t save_ProgramUniform4uiv
000000000015fba0 000000000000014c t save_ProgramUniform3uiv
000000000015fcf0 0000000000000148 t save_ProgramUniform2uiv
000000000015fe40 0000000000000148 t save_ProgramUniform1uiv
000000000015ff90 0000000000000120 t save_ProgramUniform4ui
00000000001600b0 000000000000010c t save_ProgramUniform3ui
00000000001601c0 00000000000000fc t save_ProgramUniform2ui
00000000001602c0 00000000000000e8 t save_ProgramUniform1ui
00000000001603b0 0000000000000148 t save_ProgramUniform4iv
0000000000160500 000000000000014c t save_ProgramUniform3iv
0000000000160650 0000000000000148 t save_ProgramUniform2iv
00000000001607a0 0000000000000148 t save_ProgramUniform1iv
00000000001608f0 0000000000000120 t save_ProgramUniform4i
0000000000160a10 000000000000010c t save_ProgramUniform3i
0000000000160b20 00000000000000fc t save_ProgramUniform2i
0000000000160c20 00000000000000e8 t save_ProgramUniform1i
0000000000160d10 0000000000000148 t save_ProgramUniform4dv
0000000000160e60 000000000000014c t save_ProgramUniform3dv
0000000000160fb0 0000000000000148 t save_ProgramUniform2dv
0000000000161100 0000000000000148 t save_ProgramUniform1dv
0000000000161250 0000000000000148 t save_ProgramUniform4d
00000000001613a0 0000000000000130 t save_ProgramUniform3d
00000000001614d0 0000000000000110 t save_ProgramUniform2d
00000000001615e0 00000000000000fc t save_ProgramUniform1d
00000000001616e0 0000000000000148 t save_ProgramUniform4fv
0000000000161830 000000000000014c t save_ProgramUniform3fv
0000000000161980 0000000000000148 t save_ProgramUniform2fv
0000000000161ad0 0000000000000148 t save_ProgramUniform1fv
0000000000161c20 000000000000011c t save_ProgramUniform4f
0000000000161d40 0000000000000114 t save_ProgramUniform3f
0000000000161e60 00000000000000fc t save_ProgramUniform2f
0000000000161f60 00000000000000f4 t save_ProgramUniform1f
0000000000162060 00000000000000e8 t save_UseProgramStages
0000000000162150 0000000000000154 t save_UniformSubroutinesuiv
00000000001622b0 00000000000000e8 t save_UniformBlockBinding
00000000001623a0 00000000000000e8 t save_WaitSync
0000000000162490 00000000000000b4 t save_EndConditionalRender
0000000000162550 00000000000000dc t save_BeginConditionalRender
0000000000162630 00000000000000e8 t save_BlendEquationSeparatei
0000000000162720 00000000000000dc t save_BlendEquationi
0000000000162800 000000000000010c t save_BlendFuncSeparatei
0000000000162910 00000000000000e8 t save_BlendFunci
0000000000162a00 0000000000000128 t save_SamplerParameterIuiv
0000000000162b30 0000000000000128 t save_SamplerParameterIiv
0000000000162c60 0000000000000128 t save_SamplerParameterfv
0000000000162d90 0000000000000024 t save_SamplerParameterf
0000000000162dc0 0000000000000128 t save_SamplerParameteriv
0000000000162ef0 0000000000000024 t save_SamplerParameteri
0000000000162f20 00000000000000dc t save_BindSampler
0000000000163000 00000000000000b4 t save_TextureBarrierNV
00000000001630c0 00000000000000dc t save_VertexAttribDivisor
00000000001631a0 00000000000000dc t save_EndQueryIndexed
0000000000163280 00000000000000e8 t save_BeginQueryIndexed
0000000000163370 00000000000000fc t save_DrawTransformFeedbackStreamInstanced
0000000000163470 00000000000000e8 t save_DrawTransformFeedbackInstanced
0000000000163560 00000000000000e8 t save_DrawTransformFeedbackStream
0000000000163650 00000000000000dc t save_DrawTransformFeedback
0000000000163730 00000000000000b4 t save_ResumeTransformFeedback
00000000001637f0 00000000000000b4 t save_PauseTransformFeedback
00000000001638b0 00000000000000dc t save_BindTransformFeedback
0000000000163990 00000000000000b4 t save_EndTransformFeedback
0000000000163a50 00000000000000c4 t save_BeginTransformFeedback
0000000000163b20 0000000000000148 t save_ProgramUniform4ui64vARB
0000000000163c70 0000000000000148 t save_ProgramUniform3ui64vARB
0000000000163dc0 0000000000000148 t save_ProgramUniform2ui64vARB
0000000000163f10 0000000000000148 t save_ProgramUniform1ui64vARB
0000000000164060 0000000000000124 t save_ProgramUniform4ui64ARB
0000000000164190 0000000000000110 t save_ProgramUniform3ui64ARB
00000000001642a0 0000000000000100 t save_ProgramUniform2ui64ARB
00000000001643a0 00000000000000e8 t save_ProgramUniform1ui64ARB
0000000000164490 0000000000000148 t save_ProgramUniform4i64vARB
00000000001645e0 0000000000000148 t save_ProgramUniform3i64vARB
0000000000164730 0000000000000148 t save_ProgramUniform2i64vARB
0000000000164880 0000000000000148 t save_ProgramUniform1i64vARB
00000000001649d0 0000000000000124 t save_ProgramUniform4i64ARB
0000000000164b00 0000000000000110 t save_ProgramUniform3i64ARB
0000000000164c10 0000000000000100 t save_ProgramUniform2i64ARB
0000000000164d10 00000000000000e8 t save_ProgramUniform1i64ARB
0000000000164e00 000000000000013c t save_Uniform4ui64vARB
0000000000164f40 0000000000000140 t save_Uniform3ui64vARB
0000000000165080 000000000000013c t save_Uniform2ui64vARB
00000000001651c0 000000000000013c t save_Uniform1ui64vARB
0000000000165300 000000000000010c t save_Uniform4ui64ARB
0000000000165410 0000000000000100 t save_Uniform3ui64ARB
0000000000165510 00000000000000e8 t save_Uniform2ui64ARB
0000000000165600 00000000000000e0 t save_Uniform1ui64ARB
00000000001656e0 000000000000013c t save_Uniform4i64vARB
0000000000165820 0000000000000140 t save_Uniform3i64vARB
0000000000165960 000000000000013c t save_Uniform2i64vARB
0000000000165aa0 000000000000013c t save_Uniform1i64vARB
0000000000165be0 000000000000010c t save_Uniform4i64ARB
0000000000165cf0 0000000000000100 t save_Uniform3i64ARB
0000000000165df0 00000000000000e8 t save_Uniform2i64ARB
0000000000165ee0 00000000000000e0 t save_Uniform1i64ARB
0000000000165fc0 0000000000000154 t save_UniformMatrix4x3dv
0000000000166120 0000000000000154 t save_UniformMatrix3x4dv
0000000000166280 0000000000000150 t save_UniformMatrix4x2dv
00000000001663d0 0000000000000150 t save_UniformMatrix2x4dv
0000000000166520 0000000000000154 t save_UniformMatrix3x2dv
0000000000166680 0000000000000154 t save_UniformMatrix2x3dv
00000000001667e0 0000000000000150 t save_UniformMatrix4dv
0000000000166930 0000000000000154 t save_UniformMatrix3dv
0000000000166a90 0000000000000150 t save_UniformMatrix2dv
0000000000166be0 000000000000013c t save_Uniform4dv
0000000000166d20 0000000000000140 t save_Uniform3dv
0000000000166e60 000000000000013c t save_Uniform2dv
0000000000166fa0 000000000000013c t save_Uniform1dv
00000000001670e0 000000000000012c t save_Uniform4d
0000000000167210 0000000000000118 t save_Uniform3d
0000000000167330 00000000000000f8 t save_Uniform2d
0000000000167430 00000000000000e4 t save_Uniform1d
0000000000167520 000000000000013c t save_Uniform4uiv
0000000000167660 0000000000000140 t save_Uniform3uiv
00000000001677a0 000000000000013c t save_Uniform2uiv
00000000001678e0 000000000000013c t save_Uniform1uiv
0000000000167a20 000000000000010c t save_Uniform4ui
0000000000167b30 00000000000000fc t save_Uniform3ui
0000000000167c30 00000000000000e8 t save_Uniform2ui
0000000000167d20 00000000000000dc t save_Uniform1ui
0000000000167e00 0000000000000100 t save_ClearBufferfi
0000000000167f00 0000000000000128 t save_ClearBufferfv
0000000000168030 0000000000000128 t save_ClearBufferuiv
0000000000168160 0000000000000128 t save_ClearBufferiv
0000000000168290 00000000000000dc t save_ClampColorARB
0000000000168370 00000000000000dc t save_ClipControl
0000000000168450 0000000000000104 t save_TexParameterIuiv
0000000000168560 0000000000000104 t save_TexParameterIiv
0000000000168670 00000000000000fc t save_ClearColorIui
0000000000168770 00000000000000fc t save_ClearColorIi
0000000000168870 00000000000000a4 t save_ProvokingVertexEXT
0000000000168920 0000000000000140 t save_ProgramLocalParameters4fvEXT
0000000000168a60 0000000000000140 t save_ProgramEnvParameters4fvEXT
0000000000168ba0 00000000000000dc t save_BlendEquationSeparateEXT
0000000000168c80 0000000000000154 t save_UniformMatrix4x3fv
0000000000168de0 0000000000000154 t save_UniformMatrix3x4fv
0000000000168f40 0000000000000150 t save_UniformMatrix4x2fv
0000000000169090 0000000000000150 t save_UniformMatrix2x4fv
00000000001691e0 0000000000000154 t save_UniformMatrix3x2fv
0000000000169340 0000000000000154 t save_UniformMatrix2x3fv
00000000001694a0 0000000000000150 t save_UniformMatrix4fvARB
00000000001695f0 0000000000000154 t save_UniformMatrix3fvARB
0000000000169750 0000000000000150 t save_UniformMatrix2fvARB
00000000001698a0 000000000000013c t save_Uniform4ivARB
00000000001699e0 0000000000000140 t save_Uniform3ivARB
0000000000169b20 000000000000013c t save_Uniform2ivARB
0000000000169c60 000000000000013c t save_Uniform1ivARB
0000000000169da0 000000000000010c t save_Uniform4iARB
0000000000169eb0 00000000000000fc t save_Uniform3iARB
0000000000169fb0 00000000000000e8 t save_Uniform2iARB
000000000016a0a0 00000000000000dc t save_Uniform1iARB
000000000016a180 000000000000013c t save_Uniform4fvARB
000000000016a2c0 0000000000000140 t save_Uniform3fvARB
000000000016a400 000000000000013c t save_Uniform2fvARB
000000000016a540 000000000000013c t save_Uniform1fvARB
000000000016a680 0000000000000104 t save_Uniform4fARB
000000000016a790 00000000000000fc t save_Uniform3fARB
000000000016a890 00000000000000e4 t save_Uniform2fARB
000000000016a980 00000000000000dc t save_Uniform1fARB
000000000016aa60 00000000000000c4 t save_UseProgram
000000000016ab30 0000000000000160 t save_BlitFramebufferEXT
000000000016ac90 0000000000000110 t save_DrawBuffersARB
000000000016ada0 00000000000000dc t save_QueryCounter
000000000016ae80 00000000000000c4 t save_EndQueryARB
000000000016af50 00000000000000dc t save_BeginQueryARB
000000000016b030 0000000000000104 t save_ProgramLocalParameter4fvARB
000000000016b140 000000000000011c t save_ProgramLocalParameter4fARB
000000000016b260 0000000000000104 t save_ProgramLocalParameter4dvARB
000000000016b370 000000000000012c t save_ProgramLocalParameter4dARB
000000000016b4a0 000000000000011c t save_ProgramEnvParameter4fARB
000000000016b5c0 000000000000000c t save_ProgramEnvParameter4fvARB
000000000016b5d0 000000000000001c t save_ProgramEnvParameter4dvARB
000000000016b5f0 0000000000000014 t save_ProgramEnvParameter4dARB
000000000016b610 00000000000000dc t save_BindProgramARB
000000000016b6f0 0000000000000158 t save_ProgramStringARB
000000000016b850 00000000000001b4 t save_CompressedTexSubImage1DARB
000000000016ba10 00000000000001d8 t save_CompressedTexSubImage2DARB
000000000016bbf0 0000000000000200 t save_CompressedTexSubImage3DARB
000000000016bdf0 000000000000023c t save_CompressedTexImage1DARB
000000000016c030 0000000000000250 t save_CompressedTexImage2DARB
000000000016c280 0000000000000264 t save_CompressedTexImage3DARB
000000000016c4f0 00000000000000dc t save_SampleCoverageARB
000000000016c5d0 00000000000000b0 t save_ActiveTextureARB
000000000016c680 00000000000000e0 t save_DepthBoundsEXT
000000000016c760 00000000000000c4 t save_ActiveStencilFaceEXT
000000000016c830 00000000000000f8 t save_WindowPos4fMESA
000000000016c930 0000000000000024 t save_WindowPos4svMESA
000000000016c960 0000000000000024 t save_WindowPos4sMESA
000000000016c990 000000000000001c t save_WindowPos4ivMESA
000000000016c9b0 0000000000000014 t save_WindowPos4iMESA
000000000016c9d0 000000000000000c t save_WindowPos4fvMESA
000000000016c9e0 000000000000001c t save_WindowPos4dvMESA
000000000016ca00 0000000000000014 t save_WindowPos4dMESA
000000000016ca20 0000000000000020 t save_WindowPos3svMESA
000000000016ca40 0000000000000020 t save_WindowPos3sMESA
000000000016ca60 000000000000001c t save_WindowPos3ivMESA
000000000016ca80 0000000000000014 t save_WindowPos3iMESA
000000000016caa0 0000000000000010 t save_WindowPos3fvMESA
000000000016cab0 0000000000000008 t save_WindowPos3fMESA
000000000016cac0 000000000000001c t save_WindowPos3dvMESA
000000000016cae0 0000000000000014 t save_WindowPos3dMESA
000000000016cb00 000000000000001c t save_WindowPos2svMESA
000000000016cb20 000000000000001c t save_WindowPos2sMESA
000000000016cb40 0000000000000018 t save_WindowPos2ivMESA
000000000016cb60 0000000000000014 t save_WindowPos2iMESA
000000000016cb80 0000000000000010 t save_WindowPos2fvMESA
000000000016cb90 000000000000000c t save_WindowPos2fMESA
000000000016cba0 0000000000000018 t save_WindowPos2dvMESA
000000000016cbc0 0000000000000014 t save_WindowPos2dMESA
000000000016cbe0 00000000000000fc t save_BlendFuncSeparateEXT
000000000016cce0 000000000000000c t save_BlendFunc
000000000016ccf0 00000000000000e8 t save_DispatchCompute
000000000016cde0 00000000000000ec t save_DepthRangeIndexed
000000000016ced0 000000000000013c t save_DepthRangeArrayv
000000000016d010 00000000000000fc t save_ScissorIndexedv
000000000016d110 000000000000010c t save_ScissorIndexed
000000000016d220 000000000000013c t save_ScissorArrayv
000000000016d360 00000000000000fc t save_ViewportIndexedfv
000000000016d460 0000000000000104 t save_ViewportIndexedf
000000000016d570 000000000000013c t save_ViewportArrayv
000000000016d6b0 0000000000000140 t save_PatchParameterfv
000000000016d7f0 00000000000000dc t save_PatchParameteri
000000000016d8d0 00000000000000f4 t save_PointParameterfvEXT
000000000016d9d0 000000000000002c t save_PointParameterivNV
000000000016da00 0000000000000028 t save_PointParameteriNV
000000000016da30 0000000000000020 t save_PointParameterfEXT
000000000016da50 00000000000000b0 t save_BlendEquation
000000000016db00 00000000000000e4 t save_BlendColor
000000000016dbf0 0000000000000154 t save_StencilFuncSeparateATI
000000000016dd50 00000000000000fc t save_StencilOpSeparate
000000000016de50 00000000000000dc t save_StencilMaskSeparate
000000000016df30 00000000000000fc t save_StencilFuncSeparate
000000000016e030 00000000000001dc t save_TexSubImage3D
000000000016e210 0000000000000210 t save_TexImage3D
000000000016e420 0000000000000138 t save_CopyTexSubImage3D
000000000016e560 00000000000001b8 t save_TexSubImage2D
000000000016e720 0000000000000198 t save_TexSubImage1D
000000000016e8c0 0000000000000108 t save_PrioritizeTextures
000000000016e9d0 0000000000000128 t save_CopyTexSubImage2D
000000000016eb00 000000000000010c t save_CopyTexSubImage1D
000000000016ec10 0000000000000128 t save_CopyTexImage2D
000000000016ed40 0000000000000114 t save_CopyTexImage1D
000000000016ee60 00000000000000c8 t save_BindTexture
000000000016ef30 00000000000000e8 t save_Viewport
000000000016f020 00000000000000dc t save_Translatef
000000000016f100 0000000000000010 t save_Translated
000000000016f110 00000000000000f0 t save_TexParameterfv
000000000016f200 0000000000000030 t save_TexParameteriv
000000000016f230 000000000000002c t save_TexParameteri
000000000016f260 0000000000000024 t save_TexParameterf
000000000016f290 0000000000000204 t save_TexImage2D
000000000016f4a0 00000000000001f0 t save_TexImage1D
000000000016f690 00000000000000f0 t save_TexGenfv
000000000016f780 000000000000003c t save_TexGeniv
000000000016f7c0 0000000000000024 t save_TexGenf
000000000016f7f0 000000000000003c t save_TexGendv
000000000016f830 0000000000000028 t save_TexGend
000000000016f860 000000000000002c t save_TexGeni
000000000016f890 0000000000000118 t save_TexEnvfv
000000000016f9b0 00000000000000c4 t save_TexEnviv
000000000016fa80 000000000000002c t save_TexEnvi
000000000016fab0 0000000000000024 t save_TexEnvf
000000000016fae0 00000000000000d4 t save_StencilOp
000000000016fbc0 00000000000000b0 t save_StencilMask
000000000016fc70 00000000000000d4 t save_StencilFunc
000000000016fd50 00000000000000e0 t save_ShadeModel
000000000016fe30 00000000000000e8 t save_Scissor
000000000016ff20 00000000000000dc t save_Scalef
0000000000170000 0000000000000010 t save_Scaled
0000000000170010 00000000000000e4 t save_Rotatef
0000000000170100 0000000000000014 t save_Rotated
0000000000170120 00000000000000e4 t save_Rectf
0000000000170210 00000000000000b0 t save_ReadBuffer
00000000001702c0 00000000000000e4 t save_RasterPos4f
00000000001703b0 0000000000000024 t save_RasterPos4sv
00000000001703e0 0000000000000024 t save_RasterPos4s
0000000000170410 000000000000001c t save_RasterPos4iv
0000000000170430 0000000000000014 t save_RasterPos4i
0000000000170450 000000000000000c t save_RasterPos4fv
0000000000170460 000000000000001c t save_RasterPos4dv
0000000000170480 0000000000000014 t save_RasterPos4d
00000000001704a0 0000000000000020 t save_RasterPos3sv
00000000001704c0 0000000000000020 t save_RasterPos3s
00000000001704e0 000000000000001c t save_RasterPos3iv
0000000000170500 0000000000000014 t save_RasterPos3i
0000000000170520 0000000000000010 t save_RasterPos3fv
0000000000170530 0000000000000008 t save_RasterPos3f
0000000000170540 000000000000001c t save_RasterPos3dv
0000000000170560 0000000000000014 t save_RasterPos3d
0000000000170580 000000000000001c t save_RasterPos2sv
00000000001705a0 000000000000001c t save_RasterPos2s
00000000001705c0 0000000000000018 t save_RasterPos2iv
00000000001705e0 0000000000000014 t save_RasterPos2i
0000000000170600 0000000000000010 t save_RasterPos2fv
0000000000170610 000000000000000c t save_RasterPos2f
0000000000170620 0000000000000018 t save_RasterPos2dv
0000000000170640 0000000000000014 t save_RasterPos2d
0000000000170660 00000000000000b0 t save_PushName
0000000000170710 00000000000000a0 t save_PushMatrix
00000000001707b0 00000000000000b0 t save_PushAttrib
0000000000170860 00000000000000a0 t save_PopName
0000000000170900 00000000000000a0 t save_PopMatrix
00000000001709a0 00000000000000a0 t save_PopAttrib
0000000000170a40 000000000000012c t save_PolygonStipple
0000000000170b70 00000000000000c4 t save_PolygonOffset
0000000000170c40 00000000000000c8 t save_PolygonMode
0000000000170d10 00000000000000bc t save_PointSize
0000000000170dd0 00000000000000c4 t save_PixelZoom
0000000000170ea0 00000000000000c8 t save_PixelTransferf
0000000000170f70 0000000000000008 t save_PixelTransferi
0000000000170f80 0000000000000128 t save_PixelMapfv
00000000001710b0 00000000000000c8 t save_PixelMapusv
0000000000171180 00000000000000d0 t save_PixelMapuiv
0000000000171250 00000000000000bc t save_PassThrough
0000000000171310 000000000000011c t save_Ortho
0000000000171430 00000000000000c8 t save_MultMatrixf
0000000000171500 0000000000000030 t save_MultTransposeMatrixfARB
0000000000171530 0000000000000030 t save_MultTransposeMatrixdARB
0000000000171560 0000000000000040 t save_MultMatrixd
00000000001715a0 00000000000000b0 t save_MatrixMode
0000000000171650 000000000000010c t save_MapGrid2f
0000000000171760 0000000000000014 t save_MapGrid2d
0000000000171780 00000000000000d0 t save_MapGrid1f
0000000000171850 000000000000000c t save_MapGrid1d
0000000000171860 0000000000000198 t save_Map2f
0000000000171a00 00000000000001a8 t save_Map2d
0000000000171bb0 000000000000013c t save_Map1f
0000000000171cf0 0000000000000144 t save_Map1d
0000000000171e40 00000000000000b0 t save_LogicOp
0000000000171ef0 00000000000000b0 t save_LoadName
0000000000171fa0 00000000000000c8 t save_LoadMatrixf
0000000000172070 0000000000000030 t save_LoadTransposeMatrixfARB
00000000001720a0 0000000000000030 t save_LoadTransposeMatrixdARB
00000000001720d0 0000000000000040 t save_LoadMatrixd
0000000000172110 00000000000000a0 t save_LoadIdentity
00000000001721b0 00000000000000b0 t save_ListBase
0000000000172260 00000000000000bc t save_LineWidth
0000000000172320 00000000000000cc t save_LineStipple
00000000001723f0 0000000000000114 t save_Lightfv
0000000000172510 0000000000000148 t save_Lightiv
0000000000172660 0000000000000024 t save_Lighti
0000000000172690 0000000000000024 t save_Lightf
00000000001726c0 00000000000000e8 t save_LightModelfv
00000000001727b0 0000000000000108 t save_LightModeliv
00000000001728c0 0000000000000024 t save_LightModeli
00000000001728f0 0000000000000024 t save_LightModelf
0000000000172920 00000000000000a0 t save_InitNames
00000000001729c0 00000000000000b0 t save_IndexMask
0000000000172a70 00000000000000c8 t save_Hint
0000000000172b40 000000000000011c t save_Frustum
0000000000172c60 00000000000000b0 t save_FrontFace
0000000000172d10 00000000000000e8 t save_Fogfv
0000000000172e00 0000000000000108 t save_Fogiv
0000000000172f10 0000000000000024 t save_Fogi
0000000000172f40 0000000000000024 t save_Fogf
0000000000172f70 00000000000000f4 t save_EvalMesh2
0000000000173070 00000000000000d4 t save_EvalMesh1
0000000000173150 00000000000000dc t save_EnableIndexed
0000000000173230 00000000000000b0 t save_Enable
00000000001732e0 0000000000000178 t save_DrawPixels
0000000000173460 00000000000000b0 t save_DrawBuffer
0000000000173510 00000000000000dc t save_DisableIndexed
00000000001735f0 00000000000000b0 t save_Disable
00000000001736a0 00000000000000cc t save_DepthRange
0000000000173770 00000000000000b0 t save_DepthMask
0000000000173820 00000000000000b0 t save_DepthFunc
00000000001738d0 00000000000000b0 t save_CullFace
0000000000173980 00000000000000f4 t save_CopyPixels
0000000000173a80 00000000000000c8 t save_ColorMaterial
0000000000173b50 00000000000000bc t save_ColorMaskIndexed
0000000000173c10 00000000000000f0 t save_ColorMask
0000000000173d00 00000000000000e8 t save_ClipPlane
0000000000173df0 00000000000000b0 t save_ClearStencil
0000000000173ea0 00000000000000bc t save_ClearIndex
0000000000173f60 00000000000000c0 t save_ClearDepth
0000000000174020 00000000000000e4 t save_ClearColor
0000000000174110 00000000000000e4 t save_ClearAccum
0000000000174200 00000000000000b0 t save_Clear
00000000001742b0 0000000000000198 t save_Bitmap
0000000000174450 00000000000000c8 t save_AlphaFunc
0000000000174520 00000000000000c8 t save_Accum
00000000001745f0 00000000000002d0 t save_Materialfv
00000000001748c0 00000000000000b4 t save_PrimitiveRestartNV
0000000000174980 0000000000000098 t save_Begin
0000000000174a20 00000000000000a4 T _mesa_IsList
0000000000174ad0 0000000000000130 T _mesa_DeleteLists
0000000000174c00 0000000000000208 T _mesa_GenLists
0000000000174e10 00000000000001cc T _mesa_NewList
0000000000174fe0 000000000000019c T _mesa_EndList
0000000000175180 00000000000000b8 t _mesa_CallList
0000000000175240 00000000000000c0 t save_CallList
0000000000175300 00000000000006cc T _mesa_CallLists
00000000001759d0 0000000000000088 T _mesa_ListBase
0000000000175a60 00000000000027ac t _mesa_initialize_save_table
0000000000178210 000000000000000c t _mesa_install_dlist_vtxfmt
0000000000178220 000000000000061c t _mesa_init_display_list
0000000000178840 0000000000000028 t _mesa_free_display_list_data
0000000000178870 000000000000009c t need_xfb_remaining_prims_check
0000000000178910 0000000000000150 t count_tessellated_primitives
0000000000178a60 00000000000000c0 t valid_draw_indirect_parameters
0000000000178b20 0000000000000164 t check_valid_to_render.part.0
0000000000178c90 0000000000000354 t _mesa_valid_to_render
0000000000178ff0 00000000000000e4 t _mesa_is_valid_prim_mode
00000000001790e0 0000000000000374 t _mesa_valid_prim_mode
0000000000179460 0000000000000210 t valid_draw_indirect
0000000000179670 0000000000000108 t validate_draw_arrays.constprop.0
0000000000179780 0000000000000160 t validate_DrawElements_common.constprop.0
00000000001798e0 000000000000000c t _mesa_validate_DrawElements
00000000001798f0 0000000000000194 t _mesa_validate_MultiDrawElements
0000000000179a90 0000000000000040 t _mesa_validate_DrawRangeElements
0000000000179ad0 0000000000000014 t _mesa_validate_DrawArrays
0000000000179af0 0000000000000098 t _mesa_validate_DrawArraysInstanced
0000000000179b90 0000000000000190 t _mesa_validate_MultiDrawArrays
0000000000179d20 0000000000000060 t _mesa_validate_DrawElementsInstanced
0000000000179d80 0000000000000128 t _mesa_validate_DrawTransformFeedback
0000000000179eb0 0000000000000064 t _mesa_valid_draw_indirect_multi
0000000000179f20 0000000000000010 t _mesa_validate_DrawArraysIndirect
0000000000179f30 00000000000000bc t _mesa_validate_DrawElementsIndirect
0000000000179ff0 0000000000000090 t _mesa_validate_MultiDrawArraysIndirect
000000000017a080 000000000000012c t _mesa_validate_MultiDrawElementsIndirect
000000000017a1b0 00000000000000c4 t _mesa_validate_MultiDrawArraysIndirectCount
000000000017a280 0000000000000154 t _mesa_validate_MultiDrawElementsIndirectCount
000000000017a3e0 000000000000014c t output_if_debug
000000000017a530 0000000000000094 t flush_delayed_errors
000000000017a5d0 000000000000000c t _mesa_get_log_file
000000000017a5e0 00000000000000d0 t _mesa_warning
000000000017a6b0 0000000000000108 t _mesa_problem
000000000017a7c0 00000000000000b0 t _mesa_gl_vdebugf
000000000017a870 0000000000000064 t _mesa_gl_debugf
000000000017a8e0 00000000000002f4 t _mesa_error
000000000017abe0 0000000000000030 t _mesa_error_no_memory
000000000017ac10 0000000000000004 t _mesa_debug
000000000017ac20 00000000000000c4 t _mesa_log
000000000017acf0 0000000000000068 t _mesa_shader_debug
000000000017ad60 00000000000000c4 t get_1d_map
000000000017ae30 00000000000000c0 t get_2d_map
000000000017aef0 0000000000000024 t _mesa_evaluator_components
000000000017af20 00000000000000d8 t _mesa_copy_map_points1f
000000000017b000 00000000000000d4 t _mesa_copy_map_points1d
000000000017b0e0 00000000000001ec t map1
000000000017b2d0 0000000000000190 t _mesa_copy_map_points2f
000000000017b460 0000000000000158 t _mesa_copy_map_points2d
000000000017b5c0 0000000000000260 t map2
000000000017b820 0000000000000008 T _mesa_Map1f
000000000017b830 0000000000000010 T _mesa_Map1d
000000000017b840 0000000000000008 T _mesa_Map2f
000000000017b850 0000000000000018 T _mesa_Map2d
000000000017b870 00000000000001b8 t _mesa_GetnMapdvARB
000000000017ba30 000000000000000c T _mesa_GetMapdv
000000000017ba40 00000000000001b4 t _mesa_GetnMapfvARB
000000000017bc00 000000000000000c T _mesa_GetMapfv
000000000017bc10 00000000000001b0 t _mesa_GetnMapivARB
000000000017bdc0 000000000000000c T _mesa_GetMapiv
000000000017bdd0 000000000000009c t _mesa_MapGrid1f
000000000017be70 000000000000000c T _mesa_MapGrid1d
000000000017be80 00000000000000f8 t _mesa_MapGrid2f
000000000017bf80 0000000000000014 T _mesa_MapGrid2d
000000000017bfa0 000000000000002c t _mesa_install_eval_vtxfmt
000000000017bfd0 0000000000000410 t _mesa_init_eval
000000000017c3e0 00000000000000a8 t _mesa_free_eval_data
000000000017c490 0000000000000040 t free_unknown_extensions_strings
000000000017c4d0 0000000000000008 t extension_name_compare
000000000017c4e0 0000000000000048 t extension_compare
000000000017c530 000000000000006c t _mesa_override_extensions
000000000017c5a0 0000000000000294 t _mesa_one_time_init_extension_overrides
000000000017c840 0000000000000034 t _mesa_init_extensions
000000000017c880 000000000000022c t _mesa_make_extension_string
000000000017cab0 0000000000000098 t _mesa_get_extension_count
000000000017cb50 00000000000000b8 t _mesa_get_enabled_extension
000000000017cc10 0000000000000004 t delete_dummy_renderbuffer
000000000017cc20 0000000000000004 t delete_dummy_framebuffer
000000000017cc30 00000000000000b8 t get_framebuffer_target
000000000017ccf0 00000000000000ec t get_attachment
000000000017cde0 0000000000000078 t driver_RenderTexture_is_safe
000000000017ce60 000000000000009c t validate_framebuffer_parameter_extensions
000000000017cf00 0000000000000268 t framebuffer_parameteri
000000000017d170 0000000000000130 t check_layer
000000000017d2a0 00000000000000b4 t remove_attachment
000000000017d360 000000000000018c t create_framebuffers
000000000017d4f0 00000000000000fc t check_texture_target
000000000017d5f0 0000000000000208 t sample_locations
000000000017d800 0000000000000044 t invalidate_rb
000000000017d850 0000000000000070 t check_end_texture_render
000000000017d8c0 0000000000000198 t discard_framebuffer.part.0
000000000017da60 0000000000000140 t create_render_buffers
000000000017dba0 00000000000002f0 t get_framebuffer_parameteriv
000000000017de90 00000000000001b4 t invalidate_framebuffer_storage.constprop.0
000000000017e050 0000000000000118 t check_layered_texture_target.constprop.0
000000000017e170 0000000000000194 t get_render_buffer_parameteriv
000000000017e310 00000000000000cc t lookup_named_framebuffer_ext_dsa
000000000017e3e0 00000000000007bc t get_framebuffer_attachment_parameter
000000000017eba0 00000000000001f4 t framebuffer_renderbuffer_error
000000000017eda0 0000000000000158 t bind_renderbuffer
000000000017ef00 0000000000000078 t _mesa_init_fbobjects
000000000017ef80 000000000000000c t _mesa_get_incomplete_framebuffer
000000000017ef90 0000000000000018 t _mesa_lookup_renderbuffer
000000000017efb0 0000000000000018 t _mesa_lookup_framebuffer
000000000017efd0 000000000000012c t _mesa_lookup_framebuffer_dsa
000000000017f100 0000000000000080 t _mesa_lookup_framebuffer_err
000000000017f180 0000000000000124 t _mesa_update_texture_renderbuffer
000000000017f2b0 0000000000000110 T _mesa_FramebufferRenderbuffer_sw
000000000017f3c0 0000000000000064 t _mesa_has_depthstencil_combined
000000000017f430 00000000000000a8 t _mesa_is_legal_color_format
000000000017f4e0 000000000000022c t test_attachment_completeness
000000000017f710 0000000000000c54 t _mesa_test_framebuffer_completeness
0000000000180370 0000000000000080 T _mesa_IsRenderbuffer
00000000001803f0 0000000000000004 T _mesa_BindRenderbuffer
0000000000180400 0000000000000004 T _mesa_BindRenderbufferEXT
0000000000180410 00000000000000c4 t _mesa_FramebufferParameteri
00000000001804e0 0000000000000004 T _mesa_FramebufferParameteriMESA
00000000001804f0 00000000000000c4 t _mesa_GetFramebufferParameteriv
00000000001805c0 0000000000000004 T _mesa_GetFramebufferParameterivMESA
00000000001805d0 0000000000000090 t _mesa_detach_renderbuffer
0000000000180660 0000000000000234 T _mesa_DeleteRenderbuffers
00000000001808a0 0000000000000030 T _mesa_GenRenderbuffers_no_error
00000000001808d0 0000000000000050 T _mesa_GenRenderbuffers
0000000000180920 0000000000000030 T _mesa_CreateRenderbuffers_no_error
0000000000180950 0000000000000050 T _mesa_CreateRenderbuffers
00000000001809a0 0000000000000ff8 t _mesa_base_fbo_format
00000000001819a0 0000000000000148 t _mesa_renderbuffer_storage
0000000000181af0 00000000000001a0 t renderbuffer_storage
0000000000181c90 00000000000000e4 T _mesa_EGLImageTargetRenderbufferStorageOES
0000000000181d80 0000000000000094 T _mesa_RenderbufferStorage
0000000000181e20 0000000000000084 T _mesa_RenderbufferStorageMultisample
0000000000181eb0 0000000000000094 T _mesa_RenderbufferStorageMultisampleAdvancedAMD
0000000000181f50 00000000000000c4 T _mesa_NamedRenderbufferStorage
0000000000182020 0000000000000110 T _mesa_NamedRenderbufferStorageEXT
0000000000182130 00000000000000c8 T _mesa_NamedRenderbufferStorageMultisample
0000000000182200 0000000000000118 T _mesa_NamedRenderbufferStorageMultisampleEXT
0000000000182320 00000000000000d8 T _mesa_NamedRenderbufferStorageMultisampleAdvancedAMD
0000000000182400 0000000000000078 T _mesa_GetRenderbufferParameteriv
0000000000182480 00000000000000a0 T _mesa_GetNamedRenderbufferParameteriv
0000000000182520 0000000000000100 T _mesa_GetNamedRenderbufferParameterivEXT
0000000000182620 0000000000000084 T _mesa_IsFramebuffer
00000000001826b0 00000000000001e0 t _mesa_bind_framebuffers
0000000000182890 0000000000000170 t bind_framebuffer
0000000000182a00 0000000000000004 t _mesa_BindFramebuffer
0000000000182a10 0000000000000004 T _mesa_BindFramebufferEXT
0000000000182a20 0000000000000170 T _mesa_DeleteFramebuffers
0000000000182b90 0000000000000008 T _mesa_GenFramebuffers
0000000000182ba0 0000000000000008 T _mesa_CreateFramebuffers
0000000000182bb0 0000000000000160 T _mesa_CheckFramebufferStatus_no_error
0000000000182d10 000000000000016c T _mesa_CheckFramebufferStatus
0000000000182e80 0000000000000170 t _mesa_CheckNamedFramebufferStatus
0000000000182ff0 0000000000000150 T _mesa_CheckNamedFramebufferStatusEXT
0000000000183140 000000000000015c t _mesa_get_and_validate_attachment
00000000001832a0 00000000000002f4 t _mesa_framebuffer_texture
00000000001835a0 00000000000000bc t framebuffer_texture_with_dims_no_error
0000000000183660 000000000000042c t framebuffer_texture_with_dims
0000000000183a90 0000000000000008 T _mesa_FramebufferTexture1D_no_error
0000000000183aa0 0000000000000054 T _mesa_FramebufferTexture1D
0000000000183b00 0000000000000008 T _mesa_FramebufferTexture2D_no_error
0000000000183b10 0000000000000054 T _mesa_FramebufferTexture2D
0000000000183b70 0000000000000058 T _mesa_FramebufferTexture2DMultisampleEXT
0000000000183bd0 0000000000000004 T _mesa_FramebufferTexture3D_no_error
0000000000183be0 0000000000000054 T _mesa_FramebufferTexture3D
0000000000183c40 0000000000000100 T _mesa_FramebufferTextureLayer_no_error
0000000000183d40 0000000000000264 T _mesa_FramebufferTextureLayer
0000000000183fb0 000000000000010c T _mesa_NamedFramebufferTextureLayer_no_error
00000000001840c0 0000000000000280 T _mesa_NamedFramebufferTextureLayer
0000000000184340 0000000000000110 T _mesa_FramebufferTexture_no_error
0000000000184450 0000000000000290 T _mesa_FramebufferTexture
00000000001846e0 000000000000011c T _mesa_NamedFramebufferTexture_no_error
0000000000184800 000000000000028c T _mesa_NamedFramebufferTexture
0000000000184a90 0000000000000058 T _mesa_NamedFramebufferTexture1DEXT
0000000000184af0 0000000000000058 T _mesa_NamedFramebufferTexture2DEXT
0000000000184b50 0000000000000058 T _mesa_NamedFramebufferTexture3DEXT
0000000000184bb0 00000000000000bc T _mesa_FramebufferRenderbuffer_no_error
0000000000184c70 0000000000000104 T _mesa_FramebufferRenderbuffer
0000000000184d80 00000000000000c8 T _mesa_NamedFramebufferRenderbuffer_no_error
0000000000184e50 00000000000000bc T _mesa_NamedFramebufferRenderbuffer
0000000000184f10 0000000000000084 T _mesa_NamedFramebufferRenderbufferEXT
0000000000184fa0 0000000000000104 T _mesa_GetFramebufferAttachmentParameteriv
00000000001850b0 00000000000000c4 T _mesa_GetNamedFramebufferAttachmentParameteriv
0000000000185180 000000000000009c T _mesa_GetNamedFramebufferAttachmentParameterivEXT
0000000000185220 00000000000000f8 T _mesa_NamedFramebufferParameteri
0000000000185320 000000000000007c T _mesa_NamedFramebufferParameteriEXT
00000000001853a0 00000000000000e0 T _mesa_GetFramebufferParameterivEXT
0000000000185480 00000000000000ec T _mesa_GetNamedFramebufferParameteriv
0000000000185570 000000000000007c T _mesa_GetNamedFramebufferParameterivEXT
00000000001855f0 0000000000000004 T _mesa_InvalidateSubFramebuffer_no_error
0000000000185600 000000000000008c T _mesa_InvalidateSubFramebuffer
0000000000185690 00000000000000cc T _mesa_InvalidateNamedFramebufferSubData
0000000000185760 00000000000000d4 T _mesa_InvalidateFramebuffer_no_error
0000000000185840 00000000000000d8 T _mesa_InvalidateFramebuffer
0000000000185920 00000000000000bc T _mesa_InvalidateNamedFramebufferData
00000000001859e0 000000000000013c T _mesa_DiscardFramebufferEXT
0000000000185b20 0000000000000108 T _mesa_FramebufferSampleLocationsfvARB
0000000000185c30 00000000000000c8 T _mesa_NamedFramebufferSampleLocationsfvARB
0000000000185d00 0000000000000120 T _mesa_FramebufferSampleLocationsfvARB_no_error
0000000000185e20 0000000000000078 T _mesa_NamedFramebufferSampleLocationsfvARB_no_error
0000000000185ea0 0000000000000058 T _mesa_EvaluateDepthValuesARB
0000000000185f00 0000000000000100 t write_hit_record
0000000000186000 00000000000001a4 T _mesa_FeedbackBuffer
00000000001861b0 00000000000000b0 T _mesa_PassThrough
0000000000186260 0000000000000194 t _mesa_feedback_vertex
0000000000186400 00000000000000e4 T _mesa_SelectBuffer
00000000001864f0 000000000000003c t _mesa_update_hitflag
0000000000186530 000000000000009c T _mesa_InitNames
00000000001865d0 00000000000000ec T _mesa_LoadName
00000000001866c0 00000000000000f4 T _mesa_PushName
00000000001867c0 00000000000000d4 T _mesa_PopName
00000000001868a0 00000000000001f4 T _mesa_RenderMode
0000000000186aa0 0000000000000034 t _mesa_init_feedback
0000000000186ae0 00000000000004e0 t _mesa_Fogfv
0000000000186fc0 0000000000000024 t _mesa_Fogf
0000000000186ff0 000000000000002c t _mesa_Fogi
0000000000187020 00000000000000f8 T _mesa_Fogiv
0000000000187120 0000000000000040 t _mesa_init_fog
0000000000187160 000000000000000c t array_formats_equal
0000000000187170 0000000000000010 t format_array_format_table_destroy
0000000000187180 00000000000000bc t format_array_format_table_init
0000000000187240 0000000000000038 t _mesa_get_format_name
0000000000187280 0000000000000050 t _mesa_get_format_bytes
00000000001872d0 0000000000000250 t _mesa_get_format_bits
0000000000187520 0000000000000094 t _mesa_get_format_max_bits
00000000001875c0 000000000000003c t _mesa_get_format_layout
0000000000187600 000000000000003c t _mesa_get_format_datatype
0000000000187640 0000000000000140 t _mesa_get_format_base_format
0000000000187780 0000000000000048 t _mesa_get_format_block_size
00000000001877d0 0000000000000050 t _mesa_get_format_block_size_3d
0000000000187820 000000000000003c t _mesa_format_to_array_format
0000000000187860 0000000000000068 t _mesa_format_from_array_format
00000000001878d0 0000000000000058 t _mesa_is_format_compressed
0000000000187930 0000000000000048 t _mesa_is_format_packed_depth_stencil
0000000000187980 0000000000000080 t _mesa_is_format_integer_color
0000000000187a00 0000000000000054 t _mesa_is_format_unsigned
0000000000187a60 0000000000000070 t _mesa_is_format_signed
0000000000187ad0 000000000000004c t _mesa_is_format_integer
0000000000187b20 000000000000003c t _mesa_is_format_srgb
0000000000187b60 0000000000000010 t _mesa_is_format_etc2
0000000000187b70 0000000000000010 t _mesa_is_format_astc_2d
0000000000187b80 00000000000000d4 t _mesa_get_uncompressed_format
0000000000187c60 0000000000000098 t _mesa_format_num_components
0000000000187d00 00000000000000b8 t _mesa_format_has_color_component
0000000000187dc0 0000000000000098 t _mesa_format_image_size
0000000000187e60 00000000000000b4 t _mesa_format_image_size64
0000000000187f20 000000000000006c t _mesa_format_row_stride
0000000000187f90 00000000000004b4 t _mesa_uncompressed_format_to_type_and_comps
0000000000188450 0000000000000148 t _mesa_format_matches_format_and_type
00000000001885a0 0000000000000140 t renderbuffer_exists.part.0
00000000001886e0 00000000000001c0 t update_framebuffer
00000000001888a0 0000000000000070 T _mesa_new_framebuffer
0000000000188910 0000000000000170 t _mesa_initialize_window_framebuffer
0000000000188a80 0000000000000074 t _mesa_free_framebuffer_data
0000000000188b00 0000000000000034 T _mesa_destroy_framebuffer
0000000000188b40 0000000000000084 t _mesa_reference_framebuffer_
0000000000188bd0 00000000000000b0 t _mesa_intersect_scissor_bounding_box
0000000000188c80 0000000000000128 t _mesa_resize_framebuffer
0000000000188db0 0000000000000078 t _mesa_update_draw_buffer_bounds
0000000000188e30 0000000000000260 t _mesa_update_framebuffer_visual
0000000000189090 000000000000005c t _mesa_update_framebuffer
00000000001890f0 0000000000000078 t _mesa_source_buffer_exists
0000000000189170 0000000000000078 t _mesa_dest_buffer_exists
00000000001891f0 000000000000019c t _mesa_get_color_read_format
0000000000189390 0000000000000098 t _mesa_get_color_read_type
0000000000189430 0000000000000084 t _mesa_get_read_renderbuffer_for_format
00000000001894c0 0000000000000044 t _mesa_is_multisample_enabled
0000000000189510 0000000000000024 t _mesa_is_alpha_test_enabled
0000000000189540 00000000000003c8 t _mesa_GetString
0000000000189910 00000000000001b8 T _mesa_GetStringi
0000000000189ad0 00000000000001e8 t _get_vao_pointerv
0000000000189cc0 0000000000000060 T _mesa_GetPointerv
0000000000189d20 0000000000000064 T _mesa_GetPointerIndexedvEXT
0000000000189d90 0000000000000078 T _mesa_GetError
0000000000189e10 00000000000001cc t get_map_idx
0000000000189fe0 000000000000007c t _mesa_compute_component_mapping
000000000018a060 000000000000009c t _mesa_type_is_packed
000000000018a100 00000000000000b8 t _mesa_sizeof_type
000000000018a1c0 0000000000000170 t _mesa_sizeof_packed_type
000000000018a330 0000000000000180 t _mesa_components_in_format
000000000018a4b0 0000000000000300 t _mesa_bytes_per_pixel
000000000018a7b0 00000000000000e0 t _mesa_bytes_per_vertex_attrib
000000000018a890 00000000000000ec t _mesa_is_enum_format_unsized
000000000018a980 00000000000000fc t _mesa_is_enum_format_unorm
000000000018aa80 0000000000000030 t _mesa_is_enum_format_snorm
000000000018aab0 000000000000005c t _mesa_is_enum_format_unsigned_int
000000000018ab10 000000000000004c t _mesa_is_enum_format_signed_int
000000000018ab60 0000000000000064 t _mesa_is_astc_format
000000000018abd0 0000000000000014 t _mesa_is_etc2_format
000000000018abf0 00000000000000a8 t _mesa_is_enum_format_integer
000000000018aca0 0000000000000070 t _mesa_is_type_unsigned
000000000018ad10 000000000000027c t _mesa_is_color_format
000000000018af90 0000000000000040 t _mesa_is_depth_format
000000000018afd0 0000000000000010 t _mesa_is_stencil_format
000000000018afe0 0000000000000010 t _mesa_is_ycbcr_format
000000000018aff0 0000000000000030 t _mesa_is_depthstencil_format
000000000018b020 000000000000008c t _mesa_is_depth_or_stencil_format
000000000018b0b0 000000000000042c t _mesa_is_compressed_format
000000000018b4e0 0000000000000084 t _mesa_is_srgb_format
000000000018b570 00000000000000cc t _mesa_unpack_format_to_base_format
000000000018b640 00000000000000cc t _mesa_base_format_to_integer_format
000000000018b710 0000000000000298 t _mesa_base_format_has_channel
000000000018b9b0 00000000000000e4 t _mesa_generic_compressed_format_to_uncompressed_format
000000000018baa0 00000000000001cc t _mesa_get_nongeneric_internalformat
000000000018bc70 0000000000000020 t _mesa_get_linear_internalformat
000000000018bc90 00000000000008ec t _mesa_error_check_format_and_type
000000000018c580 0000000000000214 t _mesa_es_error_check_format_and_type
000000000018c7a0 0000000000000b88 t _mesa_base_tex_format
000000000018d330 0000000000001318 t _mesa_gles_error_check_format_and_type
000000000018e650 000000000000008c t _mesa_swap_bytes_in_type_enum
000000000018e6e0 0000000000001158 t _mesa_format_from_format_and_type
000000000018f840 000000000000021c t _mesa_is_es3_color_renderable
000000000018fa60 00000000000001ac t _mesa_is_es3_texture_filterable
000000000018fc10 000000000000000c t uint_key_compare
000000000018fc20 0000000000000004 t uint_key_hash
000000000018fc30 0000000000000088 t hash_walk_unlocked
000000000018fcc0 0000000000000090 t _mesa_NewHashTable
000000000018fd50 0000000000000058 t _mesa_DeleteHashTable
000000000018fdb0 0000000000000084 t _mesa_HashLookup
000000000018fe40 0000000000000034 t _mesa_HashLookupLocked
000000000018fe80 0000000000000094 t _mesa_HashInsertLocked
000000000018ff20 00000000000000ac t _mesa_HashInsert
000000000018ffd0 0000000000000048 t _mesa_HashRemoveLocked
0000000000190020 0000000000000074 t _mesa_HashRemove
00000000001900a0 00000000000000ac t _mesa_HashDeleteAll
0000000000190150 000000000000004c t _mesa_HashWalk
00000000001901a0 0000000000000004 t _mesa_HashWalkLocked
00000000001901b0 00000000000000d4 t _mesa_HashFindFreeKeyBlock
0000000000190290 0000000000000380 t _mesa_Hint
0000000000190610 0000000000000040 T _mesa_MaxShaderCompilerThreadsKHR
0000000000190650 0000000000000028 t _mesa_init_hint
0000000000190680 0000000000000028 t _mesa_swap2
00000000001906b0 0000000000000024 t _mesa_swap4
00000000001906e0 0000000000000130 t _mesa_image_offset
0000000000190810 0000000000000050 t _mesa_image_address
0000000000190860 0000000000000044 t _mesa_image_address2d
00000000001908b0 00000000000000b4 t _mesa_image_row_stride
0000000000190970 00000000000000cc t _mesa_image_image_stride
0000000000190a40 00000000000001cc t _mesa_expand_bitmap
0000000000190c10 000000000000016c t _mesa_clip_drawpixels
0000000000190d80 00000000000000e8 t _mesa_clip_readpixels
0000000000190e70 00000000000000d4 t _mesa_clip_copytexsubimage
0000000000190f50 00000000000006c4 t _mesa_clip_blit
0000000000191620 0000000000000130 t _mesa_swap_bytes_2d_image
0000000000191750 00000000000000b0 t update_modelview_scale
0000000000191800 00000000000003fc t _mesa_update_material.part.0
0000000000191c00 0000000000000594 t compute_light_positions.part.0
00000000001921a0 00000000000000e4 t _mesa_ShadeModel
0000000000192290 00000000000000a8 t _mesa_ProvokingVertex
0000000000192340 000000000000073c t _mesa_light
0000000000192a80 00000000000002cc t _mesa_Lightfv
0000000000192d50 0000000000000024 t _mesa_Lightf
0000000000192d80 0000000000000148 t _mesa_Lightiv
0000000000192ed0 0000000000000024 T _mesa_Lighti
0000000000192f00 000000000000029c t _mesa_GetLightfv
00000000001931a0 00000000000002f0 T _mesa_GetLightiv
0000000000193490 00000000000002a0 t _mesa_LightModelfv
0000000000193730 00000000000000ec t _mesa_LightModeliv
0000000000193820 0000000000000024 T _mesa_LightModeli
0000000000193850 0000000000000024 t _mesa_LightModelf
0000000000193880 00000000000000f8 t _mesa_material_bitmask
0000000000193980 0000000000000060 t _mesa_update_color_material
00000000001939e0 000000000000015c t _mesa_ColorMaterial
0000000000193b40 00000000000001ec t _mesa_GetMaterialfv
0000000000193d30 0000000000000234 T _mesa_GetMaterialiv
0000000000193f70 00000000000000e8 t _mesa_update_lighting
0000000000194060 0000000000000130 t _mesa_update_tnl_spaces
0000000000194190 00000000000001f4 t _mesa_init_lighting
0000000000194390 00000000000000a0 T _mesa_LineWidth_no_error
0000000000194430 00000000000000e8 t _mesa_LineWidth
0000000000194520 00000000000000e8 t _mesa_LineStipple
0000000000194610 000000000000001c t _mesa_init_line
0000000000194630 0000000000000110 t get_named_matrix_stack
0000000000194740 000000000000018c t push_matrix
00000000001948d0 000000000000010c t matrix_load.constprop.0
00000000001949e0 00000000000000d8 t _mesa_Frustum
0000000000194ac0 00000000000001e0 T _mesa_MatrixFrustumEXT
0000000000194ca0 00000000000000c8 t _mesa_Ortho
0000000000194d70 00000000000001d0 T _mesa_MatrixOrthoEXT
0000000000194f40 000000000000017c t _mesa_MatrixMode
00000000001950c0 0000000000000038 T _mesa_PushMatrix
0000000000195100 00000000000001a8 T _mesa_MatrixPushEXT
00000000001952b0 00000000000000e4 T _mesa_PopMatrix
00000000001953a0 00000000000001e4 T _mesa_MatrixPopEXT
0000000000195590 0000000000000064 T _mesa_LoadIdentity
0000000000195600 0000000000000184 T _mesa_MatrixLoadIdentityEXT
0000000000195790 0000000000000108 t _mesa_LoadMatrixf
00000000001958a0 0000000000000130 T _mesa_MatrixLoadfEXT
00000000001959d0 000000000000007c t _mesa_MultMatrixf
0000000000195a50 0000000000000188 t _mesa_MatrixMultfEXT
0000000000195be0 000000000000008c t _mesa_Rotatef
0000000000195c70 00000000000001b0 T _mesa_MatrixRotatefEXT
0000000000195e20 0000000000000078 t _mesa_Scalef
0000000000195ea0 0000000000000184 t _mesa_MatrixScalefEXT
0000000000196030 0000000000000078 t _mesa_Translatef
00000000001960b0 0000000000000184 t _mesa_MatrixTranslatefEXT
0000000000196240 000000000000005c T _mesa_LoadMatrixd
00000000001962a0 000000000000007c T _mesa_MatrixLoaddEXT
0000000000196320 0000000000000044 T _mesa_MultMatrixd
0000000000196370 0000000000000044 T _mesa_MatrixMultdEXT
00000000001963c0 00000000000000b4 T _mesa_Rotated
0000000000196480 00000000000001c0 T _mesa_MatrixRotatedEXT
0000000000196640 0000000000000084 T _mesa_Scaled
00000000001966d0 0000000000000010 T _mesa_MatrixScaledEXT
00000000001966e0 0000000000000084 T _mesa_Translated
0000000000196770 0000000000000010 T _mesa_MatrixTranslatedEXT
0000000000196780 0000000000000050 T _mesa_LoadTransposeMatrixf
00000000001967d0 000000000000005c T _mesa_MatrixLoadTransposefEXT
0000000000196830 0000000000000050 T _mesa_LoadTransposeMatrixd
0000000000196880 000000000000005c T _mesa_MatrixLoadTransposedEXT
00000000001968e0 0000000000000038 T _mesa_MultTransposeMatrixf
0000000000196920 000000000000003c T _mesa_MatrixMultTransposefEXT
0000000000196960 0000000000000038 T _mesa_MultTransposeMatrixd
00000000001969a0 000000000000003c T _mesa_MatrixMultTransposedEXT
00000000001969e0 00000000000000cc t _mesa_update_modelview_project
0000000000196ab0 0000000000000164 t _mesa_init_matrix
0000000000196c20 000000000000016c t _mesa_free_matrix_data
0000000000196d90 000000000000005c t _mesa_init_transform
0000000000196df0 00000000000000dc t _mesa_SampleCoverage
0000000000196ed0 000000000000003c t _mesa_init_multisample
0000000000196f10 0000000000000138 T _mesa_GetMultisamplefv
0000000000197050 0000000000000088 T _mesa_SampleMaski_no_error
00000000001970e0 00000000000000d4 T _mesa_SampleMaski
00000000001971c0 00000000000000a4 T _mesa_MinSampleShading_no_error
0000000000197270 000000000000011c T _mesa_MinSampleShading
0000000000197390 00000000000001ec t _mesa_check_sample_count
0000000000197580 00000000000000ac t _mesa_AlphaToCoverageDitherControlNV
0000000000197630 0000000000000074 t flip_bytes
00000000001976b0 000000000000048c t extract_uint_indexes
0000000000197b40 0000000000000350 t _mesa_unpack_image.part.0
0000000000197e90 00000000000000e0 t convert_integer_luminance64
0000000000197f70 0000000000000074 t _mesa_unpack_polygon_stipple
0000000000197ff0 00000000000001fc t _mesa_pack_bitmap
00000000001981f0 0000000000000060 t _mesa_pack_polygon_stipple
0000000000198250 00000000000002d8 t _mesa_unpack_stencil_span
0000000000198530 00000000000003a8 t _mesa_pack_stencil_span
00000000001988e0 00000000000008ac t _mesa_unpack_depth_span
0000000000199190 0000000000000388 t _mesa_pack_depth_span
0000000000199520 00000000000001e0 t _mesa_pack_depth_stencil_span
0000000000199700 0000000000000020 t _mesa_unpack_image
0000000000199720 0000000000000140 t _mesa_pack_luminance_from_rgba_float
0000000000199860 0000000000000280 t _mesa_pack_luminance_from_rgba_integer
0000000000199ae0 00000000000001a4 t _mesa_unpack_color_index_to_rgba_float
0000000000199c90 00000000000000e0 t _mesa_unpack_color_index_to_rgba_ubyte
0000000000199d70 0000000000000198 t _mesa_validate_pbo_access
0000000000199f10 000000000000005c t _mesa_map_pbo_source
0000000000199f70 0000000000000110 t _mesa_validate_pbo_source
000000000019a080 0000000000000088 t _mesa_validate_pbo_source_compressed
000000000019a110 000000000000009c t _mesa_map_validate_pbo_source
000000000019a1b0 0000000000000020 t _mesa_unmap_pbo_source
000000000019a1d0 000000000000005c t _mesa_map_pbo_dest
000000000019a230 000000000000015c t _mesa_map_validate_pbo_dest
000000000019a390 0000000000000020 t _mesa_unmap_pbo_dest
000000000019a3b0 00000000000000f4 t _mesa_validate_pbo_teximage
000000000019a4b0 00000000000000c0 t _mesa_validate_pbo_compressed_teximage
000000000019a570 0000000000000020 t _mesa_unmap_teximage_pbo
000000000019a590 0000000000000044 t free_performance_monitor
000000000019a5e0 0000000000000034 t _mesa_init_performance_monitors
000000000019a620 0000000000000034 t _mesa_free_performance_monitors
000000000019a660 00000000000000a4 T _mesa_GetPerfMonitorGroupsAMD
000000000019a710 00000000000000fc T _mesa_GetPerfMonitorCountersAMD
000000000019a810 00000000000000fc T _mesa_GetPerfMonitorGroupStringAMD
000000000019a910 000000000000013c T _mesa_GetPerfMonitorCounterStringAMD
000000000019aa50 0000000000000194 T _mesa_GetPerfMonitorCounterInfoAMD
000000000019abf0 0000000000000218 T _mesa_GenPerfMonitorsAMD
000000000019ae10 0000000000000114 T _mesa_DeletePerfMonitorsAMD
000000000019af30 000000000000021c T _mesa_SelectPerfMonitorCountersAMD
000000000019b150 00000000000000c0 T _mesa_BeginPerfMonitorAMD
000000000019b210 000000000000009c T _mesa_EndPerfMonitorAMD
000000000019b2b0 0000000000000294 T _mesa_GetPerfMonitorCounterDataAMD
000000000019b550 0000000000000020 t free_performance_query
000000000019b570 0000000000000028 t _mesa_init_performance_queries
000000000019b5a0 0000000000000034 t _mesa_free_performance_queries
000000000019b5e0 000000000000008c T _mesa_GetFirstPerfQueryIdINTEL
000000000019b670 000000000000009c T _mesa_GetNextPerfQueryIdINTEL
000000000019b710 0000000000000114 T _mesa_GetPerfQueryIdByNameINTEL
000000000019b830 000000000000012c T _mesa_GetPerfQueryInfoINTEL
000000000019b960 0000000000000208 T _mesa_GetPerfCounterInfoINTEL
000000000019bb70 000000000000011c T _mesa_CreatePerfQueryINTEL
000000000019bc90 000000000000011c T _mesa_BeginPerfQueryINTEL
000000000019bdb0 00000000000000a0 t _mesa_EndPerfQueryINTEL
000000000019be50 00000000000000d8 T _mesa_DeletePerfQueryINTEL
000000000019bf30 00000000000001c4 T _mesa_GetPerfQueryDataINTEL
000000000019c100 0000000000000120 t create_program_pipelines
000000000019c220 0000000000000170 t use_program_stages
000000000019c390 0000000000000090 t _mesa_delete_pipeline_object
000000000019c420 0000000000000008 t delete_pipelineobj_cb
000000000019c430 00000000000000ac t _mesa_init_pipeline
000000000019c4e0 0000000000000068 t _mesa_free_pipeline_data
000000000019c550 0000000000000018 t _mesa_lookup_pipeline_object
000000000019c570 000000000000005c t _mesa_reference_pipeline_object_
000000000019c5d0 0000000000000088 T _mesa_UseProgramStages_no_error
000000000019c660 0000000000000268 T _mesa_UseProgramStages
000000000019c8d0 0000000000000098 T _mesa_ActiveShaderProgram_no_error
000000000019c970 0000000000000118 T _mesa_ActiveShaderProgram
000000000019ca90 0000000000000190 t _mesa_bind_pipeline
000000000019cc20 0000000000000070 t _mesa_BindProgramPipeline_no_error
000000000019cc90 00000000000000cc t _mesa_BindProgramPipeline
000000000019cd60 00000000000000fc T _mesa_DeleteProgramPipelines
000000000019ce60 0000000000000030 T _mesa_GenProgramPipelines_no_error
000000000019ce90 0000000000000050 T _mesa_GenProgramPipelines
000000000019cee0 0000000000000030 T _mesa_CreateProgramPipelines_no_error
000000000019cf10 0000000000000050 T _mesa_CreateProgramPipelines
000000000019cf60 0000000000000048 T _mesa_IsProgramPipeline
000000000019cfb0 00000000000002cc T _mesa_GetProgramPipelineiv
000000000019d280 0000000000000284 t _mesa_validate_program_pipeline
000000000019d510 0000000000000064 T _mesa_ValidateProgramPipeline
000000000019d580 00000000000000ac T _mesa_GetProgramPipelineInfoLog
000000000019d630 00000000000000d0 t get_pixelmap
000000000019d700 0000000000000104 t store_pixelmap
000000000019d810 0000000000000120 t validate_pbo_access.constprop.0
000000000019d930 0000000000000084 T _mesa_PixelZoom
000000000019d9c0 0000000000000150 T _mesa_PixelMapfv
000000000019db10 00000000000001f4 T _mesa_PixelMapuiv
000000000019dd10 00000000000001f4 T _mesa_PixelMapusv
000000000019df10 0000000000000160 t _mesa_GetnPixelMapfvARB
000000000019e070 000000000000000c T _mesa_GetPixelMapfv
000000000019e080 0000000000000160 t _mesa_GetnPixelMapuivARB
000000000019e1e0 000000000000000c T _mesa_GetPixelMapuiv
000000000019e1f0 0000000000000210 t _mesa_GetnPixelMapusvARB
000000000019e400 000000000000000c T _mesa_GetPixelMapusv
000000000019e410 00000000000004ec t _mesa_PixelTransferf
000000000019e900 0000000000000008 T _mesa_PixelTransferi
000000000019e910 00000000000000a0 t _mesa_update_pixel
000000000019e9b0 00000000000000b0 t _mesa_init_pixel
000000000019ea60 000000000000053c t _mesa_PixelStorei
000000000019efa0 0000000000000008 T _mesa_PixelStoref
000000000019efb0 0000000000000234 t _mesa_PixelStorei_no_error
000000000019f1f0 0000000000000008 T _mesa_PixelStoref_no_error
000000000019f200 00000000000000e8 t _mesa_init_pixelstore
000000000019f2f0 00000000000000fc t _mesa_compressed_pixel_storage_error_check
000000000019f3f0 0000000000000150 t _mesa_scale_and_bias_rgba
000000000019f540 0000000000000150 t _mesa_map_rgba
000000000019f690 0000000000000098 t _mesa_map_ci_to_rgba
000000000019f730 0000000000000050 t _mesa_scale_and_bias_depth
000000000019f780 0000000000000070 t _mesa_scale_and_bias_depth_uint
000000000019f7f0 0000000000000120 t _mesa_apply_rgba_transfer_ops
000000000019f910 00000000000000b0 t _mesa_shift_and_offset_ci
000000000019f9c0 0000000000000130 t _mesa_apply_stencil_transfer_ops
000000000019faf0 00000000000000a4 T _mesa_PointSize_no_error
000000000019fba0 00000000000000c8 t _mesa_PointSize
000000000019fc70 00000000000003b0 t _mesa_PointParameterfv
00000000001a0020 0000000000000028 t _mesa_PointParameteri
00000000001a0050 0000000000000040 T _mesa_PointParameteriv
00000000001a0090 0000000000000020 t _mesa_PointParameterf
00000000001a00b0 0000000000000064 t _mesa_init_point
00000000001a0120 00000000000000b0 T _mesa_CullFace_no_error
00000000001a01d0 00000000000000e4 t _mesa_CullFace
00000000001a02c0 00000000000000b0 T _mesa_FrontFace_no_error
00000000001a0370 00000000000000dc t _mesa_FrontFace
00000000001a0450 0000000000000190 T _mesa_PolygonMode_no_error
00000000001a05e0 0000000000000210 t _mesa_PolygonMode
00000000001a07f0 000000000000010c T _mesa_PolygonStipple
00000000001a0900 00000000000000a4 t _mesa_GetnPolygonStippleARB
00000000001a09b0 000000000000000c T _mesa_GetPolygonStipple
00000000001a09c0 00000000000000bc t _mesa_polygon_offset_clamp
00000000001a0a80 00000000000000c4 t _mesa_PolygonOffset
00000000001a0b50 00000000000000f0 T _mesa_PolygonOffsetClampEXT
00000000001a0c40 0000000000000060 t _mesa_init_polygon
00000000001a0ca0 0000000000000014 t delete_queryobj_cb
00000000001a0cc0 0000000000000028 t _mesa_delete_query
00000000001a0cf0 0000000000000120 t create_queries
00000000001a0e10 0000000000000370 t get_query_object
00000000001a1180 00000000000005c0 t get_query_binding_point
00000000001a1740 0000000000000030 T _mesa_GenQueries
00000000001a1770 00000000000000d8 T _mesa_CreateQueries
00000000001a1850 0000000000000128 T _mesa_DeleteQueries
00000000001a1980 0000000000000074 T _mesa_IsQuery
00000000001a1a00 0000000000000254 t _mesa_BeginQueryIndexed
00000000001a1c60 0000000000000184 t _mesa_EndQueryIndexed
00000000001a1df0 000000000000000c T _mesa_BeginQuery
00000000001a1e00 0000000000000008 T _mesa_EndQuery
00000000001a1e10 000000000000016c T _mesa_QueryCounter
00000000001a1f80 0000000000000494 t _mesa_GetQueryIndexediv
00000000001a2420 0000000000000010 T _mesa_GetQueryiv
00000000001a2430 0000000000000044 T _mesa_GetQueryObjectiv
00000000001a2480 0000000000000044 T _mesa_GetQueryObjectuiv
00000000001a24d0 0000000000000044 T _mesa_GetQueryObjecti64v
00000000001a2520 0000000000000044 T _mesa_GetQueryObjectui64v
00000000001a2570 000000000000008c T _mesa_GetQueryBufferObjectiv
00000000001a2600 000000000000008c T _mesa_GetQueryBufferObjectuiv
00000000001a2690 000000000000008c T _mesa_GetQueryBufferObjecti64v
00000000001a2720 000000000000008c T _mesa_GetQueryBufferObjectui64v
00000000001a27b0 000000000000004c t _mesa_init_queryobj
00000000001a2800 0000000000000034 t _mesa_free_queryobj_data
00000000001a2840 0000000000000338 t window_pos3f
00000000001a2b80 00000000000000ac t rasterpos
00000000001a2c30 0000000000000014 T _mesa_RasterPos2d
00000000001a2c50 000000000000000c T _mesa_RasterPos2f
00000000001a2c60 0000000000000014 T _mesa_RasterPos2i
00000000001a2c80 000000000000001c T _mesa_RasterPos2s
00000000001a2ca0 0000000000000014 T _mesa_RasterPos3d
00000000001a2cc0 0000000000000008 T _mesa_RasterPos3f
00000000001a2cd0 0000000000000014 T _mesa_RasterPos3i
00000000001a2cf0 0000000000000020 T _mesa_RasterPos3s
00000000001a2d10 0000000000000014 T _mesa_RasterPos4d
00000000001a2d30 0000000000000004 T _mesa_RasterPos4f
00000000001a2d40 0000000000000014 T _mesa_RasterPos4i
00000000001a2d60 0000000000000024 T _mesa_RasterPos4s
00000000001a2d90 0000000000000018 T _mesa_RasterPos2dv
00000000001a2db0 0000000000000010 T _mesa_RasterPos2fv
00000000001a2dc0 0000000000000018 T _mesa_RasterPos2iv
00000000001a2de0 000000000000001c T _mesa_RasterPos2sv
00000000001a2e00 000000000000001c T _mesa_RasterPos3dv
00000000001a2e20 0000000000000010 T _mesa_RasterPos3fv
00000000001a2e30 000000000000001c T _mesa_RasterPos3iv
00000000001a2e50 0000000000000020 T _mesa_RasterPos3sv
00000000001a2e70 000000000000001c T _mesa_RasterPos4dv
00000000001a2e90 000000000000000c T _mesa_RasterPos4fv
00000000001a2ea0 000000000000001c T _mesa_RasterPos4iv
00000000001a2ec0 0000000000000024 T _mesa_RasterPos4sv
00000000001a2ef0 0000000000000044 T _mesa_WindowPos2d
00000000001a2f40 000000000000003c T _mesa_WindowPos2f
00000000001a2f80 0000000000000048 T _mesa_WindowPos2i
00000000001a2fd0 000000000000004c T _mesa_WindowPos2s
00000000001a3020 0000000000000044 T _mesa_WindowPos3d
00000000001a3070 0000000000000038 T _mesa_WindowPos3f
00000000001a30b0 0000000000000048 T _mesa_WindowPos3i
00000000001a3100 0000000000000050 T _mesa_WindowPos3s
00000000001a3150 0000000000000050 T _mesa_WindowPos4dMESA
00000000001a31a0 0000000000000040 T _mesa_WindowPos4fMESA
00000000001a31e0 0000000000000054 T _mesa_WindowPos4iMESA
00000000001a3240 0000000000000054 T _mesa_WindowPos4sMESA
00000000001a32a0 000000000000004c T _mesa_WindowPos2dv
00000000001a32f0 0000000000000044 T _mesa_WindowPos2fv
00000000001a3340 000000000000004c T _mesa_WindowPos2iv
00000000001a3390 0000000000000050 T _mesa_WindowPos2sv
00000000001a33e0 0000000000000050 T _mesa_WindowPos3dv
00000000001a3430 0000000000000044 T _mesa_WindowPos3fv
00000000001a3480 0000000000000050 T _mesa_WindowPos3iv
00000000001a34d0 0000000000000054 T _mesa_WindowPos3sv
00000000001a3530 000000000000005c T _mesa_WindowPos4dvMESA
00000000001a3590 000000000000004c T _mesa_WindowPos4fvMESA
00000000001a35e0 000000000000005c T _mesa_WindowPos4ivMESA
00000000001a3640 0000000000000060 T _mesa_WindowPos4svMESA
00000000001a36a0 0000000000000068 t _mesa_init_rastpos
00000000001a3710 0000000000000144 t _mesa_get_readpixels_transfer_ops
00000000001a3860 0000000000000170 t _mesa_readpixels_needs_slow_path
00000000001a39d0 0000000000000ffc t _mesa_readpixels
00000000001a49d0 000000000000010c t _mesa_ReadnPixelsARB_no_error
00000000001a4ae0 0000000000000750 t _mesa_ReadnPixelsARB
00000000001a5230 000000000000000c T _mesa_ReadPixels_no_error
00000000001a5240 000000000000000c T _mesa_ReadPixels
00000000001a5250 0000000000000158 t _mesa_init_remap_table
00000000001a53b0 0000000000000030 t _mesa_delete_renderbuffer
00000000001a53e0 0000000000000084 t _mesa_init_renderbuffer
00000000001a5470 0000000000000094 t _mesa_reference_renderbuffer_
00000000001a5510 000000000000006c t _mesa_attach_and_own_rb
00000000001a5580 0000000000000040 t _mesa_attach_and_reference_rb
00000000001a55c0 00000000000000d0 t set_scissor_no_notify
00000000001a5690 0000000000000120 t scissor_array
00000000001a57b0 0000000000000130 T _mesa_Scissor_no_error
00000000001a58e0 0000000000000158 T _mesa_Scissor
00000000001a5a40 0000000000000104 t _mesa_set_scissor
00000000001a5b50 0000000000000034 T _mesa_ScissorArrayv_no_error
00000000001a5b90 00000000000000a8 T _mesa_ScissorArrayv
00000000001a5c40 0000000000000114 T _mesa_ScissorIndexed_no_error
00000000001a5d60 00000000000000dc T _mesa_ScissorIndexed
00000000001a5e40 0000000000000110 T _mesa_ScissorIndexedv_no_error
00000000001a5f50 00000000000000d0 T _mesa_ScissorIndexedv
00000000001a6020 000000000000017c t _mesa_WindowRectanglesEXT
00000000001a61a0 00000000000000d4 t _mesa_init_scissor
00000000001a6280 000000000000008c t attach_shader
00000000001a6310 00000000000000bc t get_attached_shaders
00000000001a63d0 00000000000000ec t attach_shader_err
00000000001a64c0 000000000000006c t create_shader_program
00000000001a6530 0000000000000164 t detach_shader_error
00000000001a66a0 0000000000000114 t detach_shader_no_error
00000000001a67c0 000000000000016c t get_shaderiv
00000000001a6930 0000000000000038 t destroy_shader_include
00000000001a6970 000000000000025c t validate_and_tokenise_sh_incl
00000000001a6bd0 00000000000001e0 t lookup_shader_include
00000000001a6db0 0000000000000078 t copy_string
00000000001a6e30 00000000000001fc t _mesa_compile_shader.part.0
00000000001a7030 00000000000000cc t create_shader
00000000001a7100 0000000000000950 t get_programiv
00000000001a7a50 0000000000000144 t _mesa_get_shader_flags
00000000001a7ba0 0000000000000054 t _mesa_get_shader_capture_path
00000000001a7c00 00000000000000b0 t _mesa_init_shader_state
00000000001a7cb0 00000000000000d0 t _mesa_free_shader_state
00000000001a7d80 0000000000000050 t _mesa_copy_string
00000000001a7dd0 0000000000000198 t _mesa_validate_shader_target
00000000001a7f70 0000000000000054 t _mesa_active_program
00000000001a7fd0 0000000000000058 T _mesa_AttachObjectARB_no_error
00000000001a8030 0000000000000034 T _mesa_AttachObjectARB
00000000001a8070 0000000000000058 T _mesa_AttachShader_no_error
00000000001a80d0 0000000000000034 T _mesa_AttachShader
00000000001a8110 0000000000000078 T _mesa_CompileShader
00000000001a8190 0000000000000024 T _mesa_CreateShader_no_error
00000000001a81c0 0000000000000080 T _mesa_CreateShader
00000000001a8240 0000000000000024 T _mesa_CreateShaderObjectARB_no_error
00000000001a8270 0000000000000080 T _mesa_CreateShaderObjectARB
00000000001a82f0 0000000000000020 T _mesa_CreateProgram
00000000001a8310 0000000000000020 T _mesa_CreateProgramObjectARB
00000000001a8330 0000000000000104 T _mesa_DeleteObjectARB
00000000001a8440 00000000000000bc T _mesa_DeleteProgram
00000000001a8500 00000000000000bc T _mesa_DeleteShader
00000000001a85c0 000000000000002c T _mesa_DetachObjectARB_no_error
00000000001a85f0 000000000000002c T _mesa_DetachObjectARB
00000000001a8620 000000000000002c T _mesa_DetachShader_no_error
00000000001a8650 000000000000002c T _mesa_DetachShader
00000000001a8680 0000000000000040 T _mesa_GetAttachedObjectsARB
00000000001a86c0 0000000000000040 T _mesa_GetAttachedShaders
00000000001a8700 00000000000001a0 T _mesa_GetInfoLogARB
00000000001a88a0 00000000000000e8 T _mesa_GetObjectParameterivARB
00000000001a8990 0000000000000108 T _mesa_GetObjectParameterfvARB
00000000001a8aa0 0000000000000034 T _mesa_GetProgramiv
00000000001a8ae0 0000000000000034 T _mesa_GetShaderiv
00000000001a8b20 00000000000000c0 T _mesa_GetProgramInfoLog
00000000001a8be0 00000000000000c0 T _mesa_GetShaderInfoLog
00000000001a8ca0 00000000000000c0 T _mesa_GetShaderSource
00000000001a8d60 0000000000000064 T _mesa_GetHandleARB
00000000001a8dd0 0000000000000030 T _mesa_IsProgram
00000000001a8e00 0000000000000030 T _mesa_IsShader
00000000001a8e30 00000000000001cc T _mesa_ShaderSource_no_error
00000000001a9000 000000000000022c t _mesa_ShaderSource
00000000001a9230 00000000000000d4 T _mesa_ValidateProgram
00000000001a9310 0000000000000118 T _mesa_GetShaderPrecisionFormat
00000000001a9430 0000000000000048 T _mesa_ReleaseShaderCompiler
00000000001a9480 0000000000000174 T _mesa_ShaderBinary
00000000001a9600 0000000000000124 T _mesa_GetProgramBinary
00000000001a9730 0000000000000108 T _mesa_ProgramBinary
00000000001a9840 0000000000000068 T _mesa_ProgramParameteri_no_error
00000000001a98b0 00000000000000f0 T _mesa_ProgramParameteri
00000000001a99a0 000000000000008c t _mesa_copy_linked_program_data
00000000001a9a30 0000000000000060 T _mesa_PatchParameteri_no_error
00000000001a9a90 00000000000000fc T _mesa_PatchParameteri
00000000001a9b90 0000000000000148 T _mesa_PatchParameterfv
00000000001a9ce0 000000000000011c T _mesa_GetSubroutineUniformLocation
00000000001a9e00 0000000000000160 T _mesa_GetSubroutineIndex
00000000001a9f60 0000000000000288 T _mesa_GetActiveSubroutineUniformiv
00000000001aa1f0 000000000000015c T _mesa_GetActiveSubroutineUniformName
00000000001aa350 000000000000015c T _mesa_GetActiveSubroutineName
00000000001aa4b0 0000000000000294 T _mesa_UniformSubroutinesuiv
00000000001aa750 0000000000000108 T _mesa_GetUniformSubroutineuiv
00000000001aa860 00000000000002ac T _mesa_GetProgramStageiv
00000000001aab10 000000000000004c t _mesa_init_shader_includes
00000000001aab60 000000000000000c t _mesa_get_shader_include_cursor
00000000001aab70 000000000000000c t _mesa_set_shader_include_cursor
00000000001aab80 0000000000000034 t _mesa_destroy_shader_includes
00000000001aabc0 000000000000001c t _mesa_lookup_shader_include
00000000001aabe0 0000000000000220 T _mesa_NamedStringARB
00000000001aae00 00000000000000d0 T _mesa_DeleteNamedStringARB
00000000001aaed0 00000000000001ec T _mesa_CompileShaderIncludeARB
00000000001ab0c0 000000000000008c T _mesa_IsNamedStringARB
00000000001ab150 0000000000000108 T _mesa_GetNamedStringARB
00000000001ab260 0000000000000140 T _mesa_GetNamedStringivARB
00000000001ab3a0 00000000000000d0 t _mesa_shader_write_subroutine_indices
00000000001ab470 00000000000000e4 t _mesa_program_init_subroutine_defaults
00000000001ab560 0000000000000124 t _mesa_use_program
00000000001ab690 000000000000035c t link_program_error.part.0
00000000001ab9f0 0000000000000220 T _mesa_CreateShaderProgramv
00000000001abc10 0000000000000088 T _mesa_LinkProgram
00000000001abca0 0000000000000378 T _mesa_LinkProgram_no_error
00000000001ac020 000000000000007c t update_programs_in_pipeline
00000000001ac0a0 0000000000000088 t _mesa_use_shader_program
00000000001ac130 0000000000000114 T _mesa_UseProgram_no_error
00000000001ac250 0000000000000298 T _mesa_UseProgram
00000000001ac4f0 0000000000000248 t _mesa_get_shader_image_format
00000000001ac740 00000000000000b4 t set_image_binding
00000000001ac800 000000000000004c t _mesa_get_image_format_class
00000000001ac850 000000000000018c t _mesa_is_shader_image_format_supported
00000000001ac9e0 0000000000000050 t _mesa_default_image_unit
00000000001aca30 0000000000000098 t _mesa_init_image_units
00000000001acad0 000000000000004c t _mesa_free_image_textures
00000000001acb20 00000000000001cc t _mesa_is_image_unit_valid
00000000001accf0 00000000000000e4 T _mesa_BindImageTexture_no_error
00000000001acde0 0000000000000240 T _mesa_BindImageTexture
00000000001ad020 000000000000018c T _mesa_BindImageTextureEXT
00000000001ad1b0 00000000000001a8 T _mesa_BindImageTextures_no_error
00000000001ad360 00000000000002ec T _mesa_BindImageTextures
00000000001ad650 00000000000000c4 t _mesa_reference_shader
00000000001ad720 0000000000000050 t _mesa_new_shader
00000000001ad770 0000000000000044 t _mesa_delete_shader
00000000001ad7c0 0000000000000048 t _mesa_delete_linked_shader
00000000001ad810 0000000000000048 t _mesa_lookup_shader
00000000001ad860 000000000000008c t _mesa_lookup_shader_err
00000000001ad8f0 00000000000000a4 t _mesa_reference_shader_program_data
00000000001ad9a0 0000000000000048 t _mesa_create_shader_program_data
00000000001ad9f0 00000000000000c8 t _mesa_new_shader_program
00000000001adac0 00000000000000d0 t _mesa_clear_shader_program_data
00000000001adb90 00000000000000e0 t _mesa_free_shader_program_data
00000000001adc70 00000000000000b0 t _mesa_reference_shader_program_
00000000001add20 0000000000000024 t _mesa_delete_shader_program
00000000001add50 0000000000000048 t _mesa_lookup_shader_program
00000000001adda0 0000000000000094 t _mesa_lookup_shader_program_err
00000000001ade40 000000000000012c t program_resource_location(gl_program_resource*, unsigned int)
00000000001adf70 0000000000000078 t compute_resource_key(unsigned int, char const*)
00000000001adff0 000000000000009c T _mesa_BindAttribLocation_no_error
00000000001ae090 000000000000012c T _mesa_BindAttribLocation
00000000001ae1c0 0000000000000068 t _mesa_count_active_attribs
00000000001ae230 00000000000000c0 t _mesa_longest_attribute_name_length
00000000001ae2f0 00000000000000f4 T _mesa_BindFragDataLocation_no_error
00000000001ae3f0 00000000000001b8 t _mesa_BindFragDataLocationIndexed
00000000001ae5b0 000000000000000c T _mesa_BindFragDataLocation
00000000001ae5c0 00000000000000f4 T _mesa_BindFragDataLocationIndexed_no_error
00000000001ae6c0 00000000000000a4 t _mesa_program_resource_name
00000000001ae770 00000000000000b8 t _mesa_program_resource_array_size
00000000001ae830 0000000000000330 t _mesa_program_resource_find_name
00000000001aeb60 00000000000000a0 T _mesa_GetAttribLocation
00000000001aec00 00000000000000e0 T _mesa_GetFragDataLocation
00000000001aece0 00000000000000fc T _mesa_GetFragDataIndex
00000000001aede0 0000000000000108 t _mesa_program_resource_find_active_variable
00000000001aeef0 00000000000000a8 t _mesa_program_resource_index
00000000001aefa0 000000000000011c t _mesa_program_resource_find_index
00000000001af0c0 00000000000000ec t _mesa_program_resource_name_len
00000000001af1b0 0000000000000170 t _mesa_get_program_resource_name
00000000001af320 0000000000000030 t _mesa_program_resource_location
00000000001af350 0000000000000050 t _mesa_program_resource_location_index
00000000001af3a0 0000000000000a7c t _mesa_program_resource_prop
00000000001afe20 0000000000000188 T _mesa_GetActiveAttrib
00000000001affb0 0000000000000144 t _mesa_get_program_resourceiv
00000000001b0100 000000000000041c t _mesa_validate_pipeline_io
00000000001b0520 00000000000000a4 t _mesa_create_program_resource_hash
00000000001b05d0 0000000000000014 t delete_texture_cb
00000000001b05f0 000000000000002c t delete_program_cb
00000000001b0620 000000000000001c t delete_framebuffer_cb
00000000001b0640 000000000000001c t delete_renderbuffer_cb
00000000001b0660 0000000000000014 t delete_memory_object_cb
00000000001b0680 0000000000000014 t delete_semaphore_object_cb
00000000001b06a0 0000000000000008 t delete_fragshader_cb
00000000001b06b0 0000000000000028 t delete_sampler_object_cb
00000000001b06e0 0000000000000040 t delete_bufferobj_cb
00000000001b0720 0000000000000048 t delete_shader_cb
00000000001b0770 000000000000001c t free_shader_program_data_cb
00000000001b0790 0000000000000008 t delete_bitmap_atlas_cb
00000000001b07a0 0000000000000008 t delete_displaylist_cb
00000000001b07b0 0000000000000194 t _mesa_alloc_shared_state
00000000001b0950 0000000000000354 t _mesa_reference_shared_state
00000000001b0cb0 000000000000001c t _mesa_get_spirv_extension_count
00000000001b0cd0 00000000000000cc t _mesa_spirv_extensions_to_string
00000000001b0da0 0000000000000044 t _mesa_get_enabled_spirv_extension
00000000001b0df0 0000000000000074 t _mesa_fill_supported_spirv_extensions
00000000001b0e70 000000000000038c t update_program
00000000001b1200 0000000000000120 t _mesa_update_allow_draw_out_of_order
00000000001b1320 000000000000030c t _mesa_update_state_locked
00000000001b1630 000000000000002c t _mesa_update_state
00000000001b1660 000000000000002c t _mesa_set_vp_override
00000000001b1690 00000000000000b0 t _mesa_update_vertex_processing_mode
00000000001b1740 0000000000000140 t _mesa_set_draw_vao
00000000001b1880 0000000000000214 t stencil_func
00000000001b1aa0 0000000000000208 t stencil_op
00000000001b1cb0 00000000000001b4 t stencil_op_separate
00000000001b1e70 000000000000002c t _mesa_ClearStencil
00000000001b1ea0 000000000000018c T _mesa_StencilFuncSeparateATI
00000000001b2030 0000000000000034 T _mesa_StencilFunc_no_error
00000000001b2070 0000000000000050 T _mesa_StencilFunc
00000000001b20c0 0000000000000178 T _mesa_StencilMask
00000000001b2240 0000000000000034 T _mesa_StencilOp_no_error
00000000001b2280 0000000000000114 T _mesa_StencilOp
00000000001b23a0 0000000000000078 t _mesa_ActiveStencilFaceEXT
00000000001b2420 000000000000003c T _mesa_StencilOpSeparate_no_error
00000000001b2460 0000000000000140 t _mesa_StencilOpSeparate
00000000001b25a0 00000000000000f8 T _mesa_StencilFuncSeparate_no_error
00000000001b26a0 0000000000000144 t _mesa_StencilFuncSeparate
00000000001b27f0 00000000000000c4 T _mesa_StencilMaskSeparate_no_error
00000000001b28c0 00000000000000ec t _mesa_StencilMaskSeparate
00000000001b29b0 0000000000000050 t _mesa_init_stencil
00000000001b2a00 00000000000000a4 t fence_sync
00000000001b2ab0 0000000000000004 t _mesa_init_sync
00000000001b2ac0 0000000000000004 t _mesa_free_sync_data
00000000001b2ad0 0000000000000090 t _mesa_get_and_ref_sync
00000000001b2b60 0000000000000090 t _mesa_unref_sync_object
00000000001b2bf0 0000000000000094 t client_wait_sync
00000000001b2c90 00000000000000a4 T _mesa_IsSync
00000000001b2d40 000000000000009c T _mesa_DeleteSync_no_error
00000000001b2de0 00000000000000c4 T _mesa_DeleteSync
00000000001b2eb0 000000000000002c T _mesa_FenceSync_no_error
00000000001b2ee0 00000000000000a0 T _mesa_FenceSync
00000000001b2f80 0000000000000090 T _mesa_ClientWaitSync_no_error
00000000001b3010 0000000000000120 T _mesa_ClientWaitSync
00000000001b3130 00000000000000a8 T _mesa_WaitSync_no_error
00000000001b31e0 0000000000000118 T _mesa_WaitSync
00000000001b3300 00000000000001a4 T _mesa_GetSynciv
00000000001b34b0 000000000000032c t _mesa_gl_compressed_format_base_format
00000000001b37e0 00000000000005b8 t _mesa_get_compressed_formats
00000000001b3da0 0000000000000460 t _mesa_glenum_to_compressed_format
00000000001b4200 00000000000002e4 t _mesa_compressed_format_to_glenum
00000000001b44f0 00000000000000a4 t _mesa_get_compressed_fetch_func
00000000001b45a0 00000000000000f4 t _mesa_decompress_image
00000000001b46a0 000000000000006c t write_bits
00000000001b4710 0000000000000070 t count_anchors_before_texel
00000000001b4780 00000000000007f4 t texstore_bptc_rgb_float.constprop.0
00000000001b4f80 00000000000005d8 t fetch_rgb_float_from_block
00000000001b5560 0000000000000070 t fetch_bptc_rgb_unsigned_float
00000000001b55d0 0000000000000070 t fetch_bptc_rgb_signed_float
00000000001b5640 000000000000093c t fetch_rgba_unorm_from_block
00000000001b5f80 00000000000000c0 t fetch_bptc_rgba_unorm
00000000001b6040 00000000000000c4 t fetch_bptc_srgb_alpha_unorm
00000000001b6110 000000000000005c t _mesa_get_bptc_fetch_func
00000000001b6170 00000000000008cc T _mesa_texstore_bptc_rgba_unorm
00000000001b6a40 0000000000000044 T _mesa_texstore_bptc_rgb_signed_float
00000000001b6a90 0000000000000040 T _mesa_texstore_bptc_rgb_unsigned_float
00000000001b6ad0 000000000000013c t etc1_parse_block
00000000001b6c10 00000000000000c8 t etc1_fetch_texel
00000000001b6ce0 00000000000005ec t etc2_rgb8_parse_block
00000000001b72d0 000000000000005c t etc2_alpha8_parse_block
00000000001b7330 00000000000000bc t fetch_etc1_rgb8
00000000001b73f0 0000000000000254 t etc2_rgb8_fetch_texel
00000000001b7650 00000000000000d0 t fetch_etc2_srgb8_punchthrough_alpha1
00000000001b7720 00000000000000cc t fetch_etc2_rgb8_punchthrough_alpha1
00000000001b77f0 00000000000000c4 t fetch_etc2_srgb8
00000000001b78c0 00000000000000c4 t fetch_etc2_rgb8
00000000001b7990 00000000000000c8 t etc2_signed_r11_fetch_texel.isra.0
00000000001b7a60 000000000000011c t fetch_etc2_signed_rg11_eac
00000000001b7b80 00000000000000cc t fetch_etc2_signed_r11_eac
00000000001b7c50 00000000000000a0 t etc2_r11_fetch_texel.isra.0
00000000001b7cf0 0000000000000108 t fetch_etc2_rg11_eac
00000000001b7e00 0000000000000090 t etc2_rgba8_fetch_texel
00000000001b7e90 00000000000000e0 t fetch_etc2_srgb8_alpha8_eac
00000000001b7f70 00000000000000dc t fetch_etc2_rgba8_eac
00000000001b8050 0000000000000180 t fetch_etc2_r11_eac
00000000001b81d0 0000000000000008 T _mesa_texstore_etc1_rgb8
00000000001b81e0 0000000000000128 t _mesa_etc1_unpack_rgba8888
00000000001b8310 0000000000000008 T _mesa_texstore_etc2_rgb8
00000000001b8320 0000000000000008 T _mesa_texstore_etc2_srgb8
00000000001b8330 0000000000000008 T _mesa_texstore_etc2_rgba8_eac
00000000001b8340 0000000000000008 T _mesa_texstore_etc2_srgb8_alpha8_eac
00000000001b8350 0000000000000008 T _mesa_texstore_etc2_r11_eac
00000000001b8360 0000000000000008 T _mesa_texstore_etc2_signed_r11_eac
00000000001b8370 0000000000000008 T _mesa_texstore_etc2_rg11_eac
00000000001b8380 0000000000000008 T _mesa_texstore_etc2_signed_rg11_eac
00000000001b8390 0000000000000008 T _mesa_texstore_etc2_rgb8_punchthrough_alpha1
00000000001b83a0 0000000000000008 T _mesa_texstore_etc2_srgb8_punchthrough_alpha1
00000000001b83b0 0000000000000f4c t _mesa_unpack_etc2_format
00000000001b9300 00000000000000e4 t _mesa_get_etc_fetch_func
00000000001b93f0 0000000000000100 t fxt1_decode_1HI
00000000001b94f0 0000000000000074 t fxt1_decode_1CHROMA
00000000001b9570 0000000000000228 t fxt1_decode_1MIXED
00000000001b97a0 0000000000000210 t fxt1_decode_1ALPHA
00000000001b99b0 0000000000000078 t fxt1_decode_1
00000000001b9a30 0000000000000054 t fetch_rgb_fxt1
00000000001b9a90 000000000000005c t fetch_rgba_fxt1
00000000001b9af0 0000000000000080 t fxt1_variance.constprop.0
00000000001b9b70 0000000000001094 t fxt1_encode
00000000001bac10 0000000000000198 T _mesa_texstore_rgb_fxt1
00000000001badb0 0000000000000174 T _mesa_texstore_rgba_fxt1
00000000001baf30 0000000000000028 t _mesa_get_fxt_fetch_func
00000000001baf60 00000000000000c0 t fetch_signed_la_latc2
00000000001bb020 00000000000000c4 t fetch_signed_rg_rgtc2
00000000001bb0f0 0000000000000060 t fetch_signed_l_latc1
00000000001bb150 0000000000000068 t fetch_signed_red_rgtc1
00000000001bb1c0 0000000000000090 t fetch_la_latc2
00000000001bb250 0000000000000094 t fetch_rg_rgtc2
00000000001bb2f0 0000000000000050 t fetch_l_latc1
00000000001bb340 0000000000000054 t fetch_red_rgtc1
00000000001bb3a0 0000000000000240 T _mesa_texstore_red_rgtc1
00000000001bb5e0 0000000000000264 T _mesa_texstore_signed_red_rgtc1
00000000001bb850 00000000000002f0 T _mesa_texstore_rg_rgtc2
00000000001bbb40 000000000000033c T _mesa_texstore_signed_rg_rgtc2
00000000001bbe80 00000000000000b0 t _mesa_get_compressed_rgtc_func
00000000001bbf30 00000000000001fc t dxt135_decode_imageblock
00000000001bc130 000000000000008c t fetch_2d_texel_rgba_dxt3
00000000001bc1c0 0000000000000150 t fetch_2d_texel_rgba_dxt5
00000000001bc310 0000000000000c44 t encodedxtcolorblockfaster
00000000001bcf60 00000000000000cc t writedxt5encodedalphablock
00000000001bd030 00000000000000a0 t fetch_rgba_dxt1
00000000001bd0d0 0000000000000060 t fetch_rgba_dxt3
00000000001bd130 0000000000000060 t fetch_rgba_dxt5
00000000001bd190 00000000000000a4 t fetch_srgb_dxt1
00000000001bd240 0000000000000064 t fetch_srgba_dxt3
00000000001bd2b0 0000000000000064 t fetch_srgba_dxt5
00000000001bd320 00000000000000a4 t fetch_srgba_dxt1
00000000001bd3d0 00000000000000a0 t fetch_rgb_dxt1
00000000001bd470 0000000000001234 t tx_compress_dxtn
00000000001be6b0 000000000000017c T _mesa_texstore_rgb_dxt1
00000000001be830 000000000000017c T _mesa_texstore_rgba_dxt1
00000000001be9b0 000000000000017c T _mesa_texstore_rgba_dxt3
00000000001beb30 000000000000017c T _mesa_texstore_rgba_dxt5
00000000001becb0 00000000000000ac t _mesa_get_dxt_fetch_func
00000000001bed60 0000000000000078 t adjust_for_oes_float_texture
00000000001bede0 00000000000000bc t strip_texture_border
00000000001beea0 0000000000000110 t copytexsubimage_by_slice
00000000001befb0 00000000000001b0 t get_proxy_tex_image
00000000001bf160 00000000000000b8 t error_check_subtexture_negative_dimensions
00000000001bf220 00000000000000dc t check_texture_buffer_range
00000000001bf300 00000000000000a0 t get_tex_images_for_clear
00000000001bf3a0 0000000000000144 t proxy_target
00000000001bf4f0 00000000000000e0 t check_rtt_cb
00000000001bf5d0 00000000000000b0 t texture_format_error_check_gles
00000000001bf680 00000000000000fc t texture_formats_agree
00000000001bf780 0000000000000318 t error_check_subtexture_dimensions
00000000001bfaa0 0000000000000170 t lookup_texture_ext_dsa
00000000001bfc10 0000000000000100 t formats_differ_in_component_sizes
00000000001bfd10 0000000000000298 t check_clear_tex_image
00000000001bffb0 0000000000000150 t compressed_texture_sub_image
00000000001c0100 00000000000001b8 t texture_sub_image
00000000001c02c0 00000000000001c8 t texturesubimage_no_error.constprop.0
00000000001c0490 00000000000001f0 t copy_texture_sub_image
00000000001c0680 00000000000001c4 t legal_texsubimage_target
00000000001c0850 000000000000021c t legal_teximage_target
00000000001c0a70 000000000000002c t _mesa_delete_texture_image
00000000001c0aa0 000000000000003c t _mesa_is_proxy_texture
00000000001c0ae0 000000000000003c t _mesa_is_array_texture
00000000001c0b20 0000000000000024 t _mesa_is_cube_map_texture
00000000001c0b50 0000000000000028 t _mesa_select_tex_image
00000000001c0b80 00000000000000c4 t _mesa_get_tex_image
00000000001c0c50 00000000000002a4 t egl_image_target_texture
00000000001c0f00 0000000000000064 t egl_image_target_texture_storage
00000000001c0f70 0000000000000290 t _mesa_max_texture_levels
00000000001c1200 00000000000007c0 t compressed_tex_sub_image
00000000001c19c0 0000000000000150 t _mesa_get_texture_dimensions
00000000001c1b10 0000000000000088 t _mesa_tex_target_is_layered
00000000001c1ba0 0000000000000090 t _mesa_get_texture_layers
00000000001c1c30 0000000000000110 t _mesa_get_tex_max_num_levels
00000000001c1d40 0000000000000298 t _mesa_init_teximage_fields_ms
00000000001c1fe0 0000000000000028 t _mesa_init_teximage_fields
00000000001c2010 000000000000004c t _mesa_clear_texture_image
00000000001c2060 0000000000000458 t _mesa_legal_texture_dimensions
00000000001c24c0 00000000000006a4 t texture_image_multisample
00000000001c2b70 0000000000000128 t _mesa_test_proxy_teximage
00000000001c2ca0 000000000000008c t _mesa_format_no_online_compression
00000000001c2d30 000000000000044c t texsubimage_error_check
00000000001c3180 00000000000002f8 t texturesubimage_error
00000000001c3480 00000000000001a0 t texsubimage_err
00000000001c3620 000000000000041c t copy_texture_sub_image_err
00000000001c3a40 0000000000000218 t _mesa_target_can_be_compressed
00000000001c3c60 0000000000000290 t compressed_texture_error_check
00000000001c3ef0 0000000000000698 t copytexture_error_check
00000000001c4590 0000000000000174 t _mesa_legal_texture_base_format_for_target
00000000001c4710 0000000000000554 t texture_error_check
00000000001c4c70 0000000000000044 t _mesa_update_fbo_texture
00000000001c4cc0 0000000000000078 t _mesa_choose_texture_format
00000000001c4d40 00000000000006d8 t teximage_err
00000000001c5420 0000000000000464 t teximage_no_error
00000000001c5890 00000000000005c8 t copyteximage_err
00000000001c5e60 00000000000004c4 t copyteximage_no_error
00000000001c6330 0000000000000074 T _mesa_TexImage1D
00000000001c63b0 0000000000000580 T _mesa_TextureImage1DEXT
00000000001c6930 0000000000000580 T _mesa_MultiTexImage1DEXT
00000000001c6eb0 0000000000000078 t _mesa_TexImage2D
00000000001c6f30 00000000000005e0 T _mesa_TextureImage2DEXT
00000000001c7510 00000000000005e0 T _mesa_MultiTexImage2DEXT
00000000001c7af0 0000000000000078 T _mesa_TexImage3D
00000000001c7b70 00000000000005e4 T _mesa_TextureImage3DEXT
00000000001c8160 00000000000005e4 T _mesa_MultiTexImage3DEXT
00000000001c8750 0000000000000074 T _mesa_TexImage1D_no_error
00000000001c87d0 0000000000000078 T _mesa_TexImage2D_no_error
00000000001c8850 0000000000000078 T _mesa_TexImage3D_no_error
00000000001c88d0 0000000000000090 T _mesa_EGLImageTargetTexture2DOES
00000000001c8960 0000000000000094 T _mesa_EGLImageTargetTexStorageEXT
00000000001c8a00 00000000000000f8 T _mesa_EGLImageTargetTextureStorageEXT
00000000001c8b00 00000000000000d0 T _mesa_TexSubImage1D_no_error
00000000001c8bd0 0000000000000078 T _mesa_TexSubImage1D
00000000001c8c50 00000000000000e4 T _mesa_TexSubImage2D_no_error
00000000001c8d40 0000000000000078 T _mesa_TexSubImage2D
00000000001c8dc0 00000000000000e8 T _mesa_TexSubImage3D_no_error
00000000001c8eb0 0000000000000084 T _mesa_TexSubImage3D
00000000001c8f40 0000000000000070 T _mesa_TextureSubImage1D_no_error
00000000001c8fb0 0000000000000084 T _mesa_TextureSubImage1DEXT
00000000001c9040 00000000000000e4 T _mesa_MultiTexSubImage1DEXT
00000000001c9130 0000000000000080 T _mesa_TextureSubImage1D
00000000001c91b0 0000000000000078 T _mesa_TextureSubImage2D_no_error
00000000001c9230 0000000000000090 T _mesa_TextureSubImage2DEXT
00000000001c92c0 00000000000000f0 T _mesa_MultiTexSubImage2DEXT
00000000001c93b0 0000000000000088 T _mesa_TextureSubImage2D
00000000001c9440 000000000000007c T _mesa_TextureSubImage3D_no_error
00000000001c94c0 0000000000000094 T _mesa_TextureSubImage3DEXT
00000000001c9560 00000000000000f4 T _mesa_MultiTexSubImage3DEXT
00000000001c9660 0000000000000088 T _mesa_TextureSubImage3D
00000000001c96f0 0000000000000064 T _mesa_CopyTexImage1D
00000000001c9760 0000000000000588 T _mesa_CopyTextureImage1DEXT
00000000001c9cf0 0000000000000588 T _mesa_CopyMultiTexImage1DEXT
00000000001ca280 0000000000000064 T _mesa_CopyTexImage2D
00000000001ca2f0 00000000000005b0 T _mesa_CopyTextureImage2DEXT
00000000001ca8a0 00000000000005ac T _mesa_CopyMultiTexImage2DEXT
00000000001cae50 0000000000000064 T _mesa_CopyTexImage1D_no_error
00000000001caec0 0000000000000064 T _mesa_CopyTexImage2D_no_error
00000000001caf30 0000000000000100 T _mesa_CopyTexSubImage1D
00000000001cb030 0000000000000198 T _mesa_CopyTexSubImage2D
00000000001cb1d0 0000000000000124 T _mesa_CopyTexSubImage3D
00000000001cb300 0000000000000104 T _mesa_CopyTextureSubImage1D
00000000001cb410 000000000000010c T _mesa_CopyTextureSubImage1DEXT
00000000001cb520 00000000000000bc T _mesa_CopyMultiTexSubImage1DEXT
00000000001cb5e0 0000000000000128 T _mesa_CopyTextureSubImage2D
00000000001cb710 0000000000000130 T _mesa_CopyTextureSubImage2DEXT
00000000001cb840 00000000000000c4 T _mesa_CopyMultiTexSubImage2DEXT
00000000001cb910 0000000000000194 T _mesa_CopyTextureSubImage3D
00000000001cbab0 000000000000019c T _mesa_CopyTextureSubImage3DEXT
00000000001cbc50 0000000000000130 T _mesa_CopyMultiTexSubImage3DEXT
00000000001cbd80 00000000000000f0 T _mesa_CopyTexSubImage1D_no_error
00000000001cbe70 0000000000000100 T _mesa_CopyTexSubImage2D_no_error
00000000001cbf70 0000000000000104 T _mesa_CopyTexSubImage3D_no_error
00000000001cc080 00000000000000f4 T _mesa_CopyTextureSubImage1D_no_error
00000000001cc180 0000000000000104 T _mesa_CopyTextureSubImage2D_no_error
00000000001cc290 00000000000001c0 T _mesa_CopyTextureSubImage3D_no_error
00000000001cc450 0000000000000318 T _mesa_ClearTexSubImage
00000000001cc770 00000000000001c4 T _mesa_ClearTexImage
00000000001cc940 0000000000000070 T _mesa_CompressedTexImage1D
00000000001cc9b0 00000000000004f4 T _mesa_CompressedTextureImage1DEXT
00000000001cceb0 00000000000004f4 T _mesa_CompressedMultiTexImage1DEXT
00000000001cd3b0 0000000000000074 T _mesa_CompressedTexImage2D
00000000001cd430 000000000000058c T _mesa_CompressedTextureImage2DEXT
00000000001cd9c0 000000000000058c T _mesa_CompressedMultiTexImage2DEXT
00000000001cdf50 0000000000000074 T _mesa_CompressedTexImage3D
00000000001cdfd0 0000000000000554 T _mesa_CompressedTextureImage3DEXT
00000000001ce530 0000000000000554 T _mesa_CompressedMultiTexImage3DEXT
00000000001cea90 0000000000000070 T _mesa_CompressedTexImage1D_no_error
00000000001ceb00 0000000000000074 T _mesa_CompressedTexImage2D_no_error
00000000001ceb80 0000000000000074 T _mesa_CompressedTexImage3D_no_error
00000000001cec00 0000000000000068 T _mesa_CompressedTexSubImage1D_no_error
00000000001cec70 0000000000000068 T _mesa_CompressedTexSubImage1D
00000000001cece0 0000000000000068 T _mesa_CompressedTextureSubImage1D_no_error
00000000001ced50 0000000000000068 T _mesa_CompressedTextureSubImage1D
00000000001cedc0 000000000000006c T _mesa_CompressedTextureSubImage1DEXT
00000000001cee30 0000000000000070 T _mesa_CompressedMultiTexSubImage1DEXT
00000000001ceea0 000000000000006c T _mesa_CompressedTexSubImage2D_no_error
00000000001cef10 000000000000006c T _mesa_CompressedTexSubImage2D
00000000001cef80 0000000000000078 T _mesa_CompressedTextureSubImage2DEXT
00000000001cf000 000000000000007c T _mesa_CompressedMultiTexSubImage2DEXT
00000000001cf080 0000000000000070 T _mesa_CompressedTextureSubImage2D_no_error
00000000001cf0f0 0000000000000070 T _mesa_CompressedTextureSubImage2D
00000000001cf160 0000000000000074 T _mesa_CompressedTexSubImage3D_no_error
00000000001cf1e0 0000000000000078 T _mesa_CompressedTexSubImage3D
00000000001cf260 0000000000000078 T _mesa_CompressedTextureSubImage3D_no_error
00000000001cf2e0 0000000000000078 T _mesa_CompressedTextureSubImage3D
00000000001cf360 0000000000000080 T _mesa_CompressedTextureSubImage3DEXT
00000000001cf3e0 0000000000000084 T _mesa_CompressedMultiTexSubImage3DEXT
00000000001cf470 00000000000004e8 t _mesa_get_texbuffer_format
00000000001cf960 000000000000009c t _mesa_validate_texbuffer_format
00000000001cfa00 0000000000000238 t texture_buffer_range
00000000001cfc40 00000000000000f8 T _mesa_TexBuffer
00000000001cfd40 000000000000010c T _mesa_TexBufferRange
00000000001cfe50 0000000000000144 T _mesa_TextureBufferRangeEXT
00000000001cffa0 000000000000010c T _mesa_TextureBuffer
00000000001d00b0 0000000000000114 T _mesa_TextureBufferEXT
00000000001d01d0 0000000000000114 T _mesa_MultiTexBufferEXT
00000000001d02f0 000000000000012c T _mesa_TextureBufferRange
00000000001d0420 000000000000003c t _mesa_is_renderable_texture_format
00000000001d0460 00000000000000b4 T _mesa_TexImage2DMultisample
00000000001d0520 00000000000000b4 T _mesa_TexImage3DMultisample
00000000001d05e0 0000000000000110 T _mesa_TexStorage2DMultisample
00000000001d06f0 0000000000000114 T _mesa_TexStorage3DMultisample
00000000001d0810 0000000000000114 T _mesa_TextureStorage2DMultisample
00000000001d0930 0000000000000118 T _mesa_TextureStorage3DMultisample
00000000001d0a50 0000000000000114 T _mesa_TextureStorage2DMultisampleEXT
00000000001d0b70 0000000000000118 T _mesa_TextureStorage3DMultisampleEXT
00000000001d0c90 000000000000004c t _mesa_texture_storage_ms_memory
00000000001d0ce0 0000000000000124 t finish_texture_init
00000000001d0e10 00000000000000e0 t invalidate_tex_image_error_check
00000000001d0ef0 00000000000000a4 t unbind_texobj_from_fbo
00000000001d0fa0 0000000000000100 t create_textures.part.0
00000000001d10a0 000000000000000c t _mesa_lookup_texture
00000000001d10b0 000000000000005c t _mesa_lookup_texture_err
00000000001d1110 000000000000000c t _mesa_lookup_texture_locked
00000000001d1120 0000000000000484 t _mesa_get_current_tex_object
00000000001d15b0 00000000000000b0 t _mesa_delete_texture_object
00000000001d1660 000000000000010c t _mesa_copy_texture_object
00000000001d1770 0000000000000088 t _mesa_clear_texture_object
00000000001d1800 00000000000000c0 t _mesa_reference_texobj_
00000000001d18c0 00000000000000dc t unbind_texobj_from_texunits
00000000001d19a0 00000000000001a0 t delete_textures
00000000001d1b40 00000000000001a8 t bind_texture_object
00000000001d1cf0 00000000000000ec t unbind_textures_from_unit
00000000001d1de0 00000000000003a8 t _mesa_test_texobj_completeness
00000000001d2190 0000000000000090 t _mesa_cube_level_complete
00000000001d2220 000000000000009c t _mesa_cube_complete
00000000001d22c0 0000000000000018 t _mesa_dirty_texobj
00000000001d22e0 0000000000000218 t _mesa_get_fallback_texture
00000000001d2500 0000000000000020 t _mesa_texture_base_format
00000000001d2520 000000000000003c T _mesa_GenTextures_no_error
00000000001d2560 0000000000000060 T _mesa_GenTextures
00000000001d25c0 0000000000000040 T _mesa_CreateTextures_no_error
00000000001d2600 000000000000002c T _mesa_DeleteTextures_no_error
00000000001d2630 0000000000000044 T _mesa_DeleteTextures
00000000001d2680 00000000000002f4 t _mesa_tex_target_to_index
00000000001d2980 00000000000000f4 t _mesa_get_texobj_by_target_and_texunit
00000000001d2a80 000000000000014c t _mesa_initialize_texture_object
00000000001d2bd0 0000000000000054 t _mesa_new_texture_object
00000000001d2c30 000000000000009c T _mesa_CreateTextures
00000000001d2cd0 0000000000000204 t _mesa_lookup_or_create_texture
00000000001d2ee0 0000000000000070 T _mesa_BindTexture_no_error
00000000001d2f50 0000000000000070 t _mesa_BindTexture
00000000001d2fc0 00000000000000b8 T _mesa_BindMultiTextureEXT
00000000001d3080 000000000000005c T _mesa_BindTextureUnit_no_error
00000000001d30e0 00000000000000dc T _mesa_BindTextureUnit
00000000001d31c0 0000000000000124 T _mesa_BindTextures_no_error
00000000001d32f0 000000000000019c T _mesa_BindTextures
00000000001d3490 000000000000010c T _mesa_PrioritizeTextures
00000000001d35a0 0000000000000110 T _mesa_AreTexturesResident
00000000001d36b0 0000000000000098 T _mesa_IsTexture
00000000001d3750 0000000000000050 t _mesa_lock_context_textures
00000000001d37a0 000000000000000c t _mesa_unlock_context_textures
00000000001d37b0 0000000000000004 T _mesa_InvalidateTexSubImage_no_error
00000000001d37c0 00000000000002d8 T _mesa_InvalidateTexSubImage
00000000001d3aa0 0000000000000004 T _mesa_InvalidateTexImage_no_error
00000000001d3ab0 0000000000000034 T _mesa_InvalidateTexImage
00000000001d3af0 00000000000000e8 t tex_combine_translate_mode
00000000001d3be0 0000000000000230 t update_single_program_texture
00000000001d3e10 00000000000002e8 t _mesa_copy_texture_state
00000000001d4100 00000000000000a0 t _mesa_ActiveTexture_no_error
00000000001d41a0 00000000000000f4 t _mesa_ActiveTexture
00000000001d42a0 0000000000000080 t _mesa_ClientActiveTexture
00000000001d4320 00000000000000cc t _mesa_update_texture_matrices
00000000001d43f0 0000000000000f84 t _mesa_update_texture_state
00000000001d5380 0000000000000278 t _mesa_init_texture
00000000001d5600 0000000000000110 t _mesa_free_texture_data
00000000001d5710 0000000000000098 t _mesa_update_default_objects_texture
00000000001d57b0 00000000000002c8 t tex_storage_error_check
00000000001d5a80 000000000000015c t initialize_texture_fields
00000000001d5be0 0000000000000088 t update_fbo_texture
00000000001d5c70 00000000000001e4 t legal_texobj_target
00000000001d5e60 00000000000000d0 t clear_texture_fields
00000000001d5f30 000000000000017c t texture_storage_no_error.constprop.0
00000000001d60b0 00000000000002c8 t texture_storage_error.constprop.0
00000000001d6380 0000000000000110 t _mesa_is_legal_tex_storage_format
00000000001d6490 0000000000000134 t texstorage_error
00000000001d65d0 0000000000000160 t texturestorage_error
00000000001d6730 0000000000000084 T _mesa_TexStorage1D_no_error
00000000001d67c0 0000000000000030 T _mesa_TexStorage1D
00000000001d67f0 000000000000008c T _mesa_TexStorage2D_no_error
00000000001d6880 0000000000000034 T _mesa_TexStorage2D
00000000001d68c0 0000000000000094 T _mesa_TexStorage3D_no_error
00000000001d6960 0000000000000038 T _mesa_TexStorage3D
00000000001d69a0 000000000000007c T _mesa_TextureStorage1D_no_error
00000000001d6a20 0000000000000030 T _mesa_TextureStorage1D
00000000001d6a50 000000000000008c T _mesa_TextureStorage2D_no_error
00000000001d6ae0 0000000000000034 T _mesa_TextureStorage2D
00000000001d6b20 000000000000008c T _mesa_TextureStorage3D_no_error
00000000001d6bb0 0000000000000038 T _mesa_TextureStorage3D
00000000001d6bf0 000000000000009c T _mesa_TextureStorage1DEXT
00000000001d6c90 00000000000000a0 T _mesa_TextureStorage2DEXT
00000000001d6d30 00000000000000b0 T _mesa_TextureStorage3DEXT
00000000001d6de0 0000000000000350 t _mesa_texture_storage_memory
00000000001d7130 000000000000011c t _mesa_texstore_z32
00000000001d7250 000000000000013c t _mesa_texstore_z24_x8
00000000001d7390 0000000000000114 t _mesa_texstore_x8_z24
00000000001d74b0 0000000000000114 t _mesa_texstore_z16
00000000001d75d0 00000000000001bc t _mesa_texstore_z32f_x24s8
00000000001d7790 0000000000000184 t _mesa_texstore_s8
00000000001d7920 0000000000000290 t _mesa_texstore_s8_z24
00000000001d7bb0 0000000000000290 t _mesa_texstore_z24_s8
00000000001d7e40 00000000000001ac t _mesa_memcpy_texture
00000000001d7ff0 00000000000000a4 t _mesa_texstore_needs_transfer_ops
00000000001d80a0 0000000000000118 t _mesa_texstore_can_use_memcpy
00000000001d81c0 000000000000086c t _mesa_texstore
00000000001d8a30 0000000000000424 t store_texsubimage
00000000001d8e60 000000000000004c t _mesa_store_texsubimage
00000000001d8eb0 0000000000000174 t _mesa_compute_compressed_pixelstore
00000000001d9030 000000000000022c t _mesa_store_compressed_texsubimage
00000000001d9260 0000000000000100 t make_texture_handle_resident
00000000001d9360 00000000000000d0 t is_sampler_border_color_valid
00000000001d9430 0000000000000308 t get_texture_handle
00000000001d9740 00000000000002b8 t get_image_handle
00000000001d9a00 000000000000003c t _mesa_init_resident_handles
00000000001d9a40 0000000000000030 t _mesa_free_resident_handles
00000000001d9a70 0000000000000044 t _mesa_init_shared_handles
00000000001d9ac0 0000000000000040 t _mesa_free_shared_handles
00000000001d9b00 000000000000001c t _mesa_init_texture_handles
00000000001d9b20 000000000000013c t _mesa_make_texture_handles_non_resident
00000000001d9c60 00000000000001c8 t _mesa_delete_texture_handles
00000000001d9e30 000000000000000c t _mesa_init_sampler_handles
00000000001d9e40 0000000000000124 t _mesa_delete_sampler_handles
00000000001d9f70 0000000000000134 T _mesa_GetTextureHandleARB_no_error
00000000001da0b0 00000000000002b4 T _mesa_GetTextureHandleARB
00000000001da370 0000000000000148 T _mesa_GetTextureSamplerHandleARB_no_error
00000000001da4c0 00000000000002dc T _mesa_GetTextureSamplerHandleARB
00000000001da7a0 0000000000000064 T _mesa_MakeTextureHandleResidentARB_no_error
00000000001da810 000000000000012c T _mesa_MakeTextureHandleResidentARB
00000000001da940 0000000000000064 T _mesa_MakeTextureHandleNonResidentARB_no_error
00000000001da9b0 000000000000012c T _mesa_MakeTextureHandleNonResidentARB
00000000001daae0 000000000000014c T _mesa_GetImageHandleARB_no_error
00000000001dac30 00000000000003ac T _mesa_GetImageHandleARB
00000000001dafe0 00000000000000b4 T _mesa_MakeImageHandleResidentARB_no_error
00000000001db0a0 0000000000000198 T _mesa_MakeImageHandleResidentARB
00000000001db240 00000000000000ac T _mesa_MakeImageHandleNonResidentARB_no_error
00000000001db2f0 000000000000014c T _mesa_MakeImageHandleNonResidentARB
00000000001db440 0000000000000038 T _mesa_IsTextureHandleResidentARB_no_error
00000000001db480 00000000000000fc T _mesa_IsTextureHandleResidentARB
00000000001db580 0000000000000038 T _mesa_IsImageHandleResidentARB_no_error
00000000001db5c0 0000000000000104 T _mesa_IsImageHandleResidentARB
00000000001db6d0 000000000000016c t initialize_texture_fields
00000000001db840 000000000000018c t _mesa_texture_view_lookup_view_class
00000000001db9d0 0000000000000054 t _mesa_texture_view_compatible_format
00000000001dba30 0000000000000100 t _mesa_set_texture_view_state
00000000001dbb30 000000000000024c T _mesa_TextureView_no_error
00000000001dbd80 0000000000000770 T _mesa_TextureView
00000000001dc4f0 0000000000000080 t reference_transform_feedback_object
00000000001dc570 0000000000000014 t delete_cb
00000000001dc590 000000000000004c t compute_transform_feedback_buffer_sizes
00000000001dc5e0 0000000000000060 t _mesa_delete_transform_feedback_object
00000000001dc640 0000000000000088 t end_transform_feedback
00000000001dc6d0 0000000000000158 t create_transform_feedbacks
00000000001dc830 0000000000000028 t active_xfb_object_references_program
00000000001dc860 0000000000000078 t _mesa_transform_feedback_is_using_program
00000000001dc8e0 0000000000000070 t _mesa_init_transform_feedback
00000000001dc950 000000000000006c t _mesa_free_transform_feedback
00000000001dc9c0 0000000000000010 t _mesa_init_transform_feedback_object
00000000001dc9d0 0000000000000198 T _mesa_BeginTransformFeedback_no_error
00000000001dcb70 0000000000000288 T _mesa_BeginTransformFeedback
00000000001dce00 0000000000000028 T _mesa_EndTransformFeedback_no_error
00000000001dce30 0000000000000044 T _mesa_EndTransformFeedback
00000000001dce80 0000000000000130 t _mesa_validate_buffer_range_xfb
00000000001dcfb0 000000000000013c t _mesa_bind_buffer_base_transform_feedback
00000000001dd0f0 00000000000000e4 T _mesa_TransformFeedbackBufferBase
00000000001dd1e0 0000000000000184 T _mesa_TransformFeedbackBufferRange
00000000001dd370 00000000000000ec T _mesa_BindBufferOffsetEXT_no_error
00000000001dd460 00000000000001b8 T _mesa_BindBufferOffsetEXT
00000000001dd620 0000000000000108 T _mesa_TransformFeedbackVaryings_no_error
00000000001dd730 000000000000033c T _mesa_TransformFeedbackVaryings
00000000001dda70 0000000000000140 T _mesa_GetTransformFeedbackVarying
00000000001ddbb0 0000000000000018 t _mesa_lookup_transform_feedback_object
00000000001ddbd0 0000000000000030 T _mesa_GenTransformFeedbacks
00000000001ddc00 0000000000000030 T _mesa_CreateTransformFeedbacks
00000000001ddc30 0000000000000074 T _mesa_IsTransformFeedback
00000000001ddcb0 00000000000000a4 T _mesa_BindTransformFeedback_no_error
00000000001ddd60 00000000000000d4 T _mesa_BindTransformFeedback
00000000001dde40 0000000000000130 T _mesa_DeleteTransformFeedbacks
00000000001ddf70 0000000000000080 T _mesa_PauseTransformFeedback_no_error
00000000001ddff0 00000000000000a0 T _mesa_PauseTransformFeedback
00000000001de090 000000000000007c T _mesa_ResumeTransformFeedback_no_error
00000000001de110 00000000000000e0 T _mesa_ResumeTransformFeedback
00000000001de1f0 00000000000000e4 T _mesa_GetTransformFeedbackiv
00000000001de2e0 0000000000000110 T _mesa_GetTransformFeedbacki_v
00000000001de3f0 0000000000000170 T _mesa_GetTransformFeedbacki64_v
00000000001de560 0000000000000140 t glsl_type_name(glsl_base_type)
00000000001de6a0 000000000000012c t validate_uniform_parameters(int, int, unsigned int*, gl_context*, gl_shader_program*, char const*)
00000000001de7d0 0000000000000134 t copy_uniform_matrix_to_storage(gl_constant_value*, int, void const*, unsigned int, unsigned int, unsigned int, unsigned int, bool, unsigned int, unsigned int, glsl_base_type) [clone .constprop.0]
00000000001de910 00000000000000c0 t copy_uniforms_to_storage(gl_constant_value*, gl_uniform_storage*, gl_context*, int, void const*, int, unsigned int, unsigned int, glsl_base_type) [clone .constprop.0] [clone .isra.0]
00000000001de9d0 00000000000001b4 t log_uniform(void const*, glsl_base_type, unsigned int, unsigned int, unsigned int, bool, gl_shader_program const*, int, gl_uniform_storage const*) [clone .isra.0]
00000000001deb90 0000000000000160 T _mesa_GetActiveUniform
00000000001decf0 00000000000001e8 T _mesa_GetActiveUniformsiv
00000000001deee0 0000000000000760 t _mesa_get_uniform
00000000001df640 0000000000000298 t _mesa_propagate_uniforms_to_driver_storage
00000000001df8e0 00000000000000e8 t _mesa_flush_vertices_for_uniforms
00000000001df9d0 00000000000006e0 t _mesa_uniform
00000000001e00b0 000000000000032c t _mesa_uniform_matrix
00000000001e03e0 0000000000000344 t _mesa_uniform_handle
00000000001e0730 0000000000000054 t _mesa_sampler_uniforms_are_valid
00000000001e0790 0000000000000108 t _mesa_sampler_uniforms_pipeline_are_valid
00000000001e08a0 00000000000002e8 t mesa_bufferiv
00000000001e0b90 00000000000002e0 t _mesa_update_shader_textures_used
00000000001e0e70 0000000000000078 t _mesa_uniform_attach_driver_storage
00000000001e0ef0 000000000000002c t _mesa_uniform_detach_all_driver_storage
00000000001e0f20 0000000000000050 T _mesa_Uniform1f
00000000001e0f70 0000000000000050 T _mesa_Uniform2f
00000000001e0fc0 0000000000000054 T _mesa_Uniform3f
00000000001e1020 0000000000000050 T _mesa_Uniform4f
00000000001e1070 0000000000000050 T _mesa_Uniform1i
00000000001e10c0 0000000000000058 T _mesa_Uniform2i
00000000001e1120 0000000000000058 T _mesa_Uniform3i
00000000001e1180 0000000000000058 T _mesa_Uniform4i
00000000001e11e0 0000000000000040 T _mesa_Uniform1fv
00000000001e1220 0000000000000040 T _mesa_Uniform2fv
00000000001e1260 0000000000000040 T _mesa_Uniform3fv
00000000001e12a0 0000000000000040 T _mesa_Uniform4fv
00000000001e12e0 0000000000000040 T _mesa_Uniform1iv
00000000001e1320 0000000000000040 T _mesa_Uniform2iv
00000000001e1360 0000000000000040 T _mesa_Uniform3iv
00000000001e13a0 0000000000000040 T _mesa_Uniform4iv
00000000001e13e0 0000000000000048 T _mesa_UniformHandleui64ARB
00000000001e1430 0000000000000038 T _mesa_UniformHandleui64vARB
00000000001e1470 0000000000000068 T _mesa_ProgramUniform1f
00000000001e14e0 0000000000000068 T _mesa_ProgramUniform2f
00000000001e1550 000000000000006c T _mesa_ProgramUniform3f
00000000001e15c0 000000000000006c T _mesa_ProgramUniform4f
00000000001e1630 0000000000000068 T _mesa_ProgramUniform1i
00000000001e16a0 000000000000006c T _mesa_ProgramUniform2i
00000000001e1710 0000000000000070 T _mesa_ProgramUniform3i
00000000001e1780 000000000000006c T _mesa_ProgramUniform4i
00000000001e17f0 0000000000000070 T _mesa_ProgramUniform1fv
00000000001e1860 0000000000000070 T _mesa_ProgramUniform2fv
00000000001e18d0 0000000000000070 T _mesa_ProgramUniform3fv
00000000001e1940 0000000000000070 T _mesa_ProgramUniform4fv
00000000001e19b0 0000000000000070 T _mesa_ProgramUniform1iv
00000000001e1a20 0000000000000070 T _mesa_ProgramUniform2iv
00000000001e1a90 0000000000000070 T _mesa_ProgramUniform3iv
00000000001e1b00 0000000000000070 T _mesa_ProgramUniform4iv
00000000001e1b70 0000000000000060 T _mesa_ProgramUniformHandleui64ARB
00000000001e1bd0 0000000000000068 T _mesa_ProgramUniformHandleui64vARB
00000000001e1c40 0000000000000050 T _mesa_Uniform1ui
00000000001e1c90 0000000000000054 T _mesa_Uniform2ui
00000000001e1cf0 000000000000005c T _mesa_Uniform3ui
00000000001e1d50 0000000000000058 T _mesa_Uniform4ui
00000000001e1db0 0000000000000040 T _mesa_Uniform1uiv
00000000001e1df0 0000000000000040 T _mesa_Uniform2uiv
00000000001e1e30 0000000000000040 T _mesa_Uniform3uiv
00000000001e1e70 0000000000000040 T _mesa_Uniform4uiv
00000000001e1eb0 0000000000000050 T _mesa_UniformMatrix2fv
00000000001e1f00 0000000000000054 T _mesa_UniformMatrix3fv
00000000001e1f60 0000000000000054 T _mesa_UniformMatrix4fv
00000000001e1fc0 0000000000000068 T _mesa_ProgramUniform1ui
00000000001e2030 000000000000006c T _mesa_ProgramUniform2ui
00000000001e20a0 0000000000000070 T _mesa_ProgramUniform3ui
00000000001e2110 000000000000006c T _mesa_ProgramUniform4ui
00000000001e2180 0000000000000070 T _mesa_ProgramUniform1uiv
00000000001e21f0 0000000000000070 T _mesa_ProgramUniform2uiv
00000000001e2260 0000000000000070 T _mesa_ProgramUniform3uiv
00000000001e22d0 0000000000000070 T _mesa_ProgramUniform4uiv
00000000001e2340 0000000000000090 T _mesa_ProgramUniformMatrix2fv
00000000001e23d0 0000000000000094 T _mesa_ProgramUniformMatrix3fv
00000000001e2470 0000000000000094 T _mesa_ProgramUniformMatrix4fv
00000000001e2510 0000000000000050 T _mesa_UniformMatrix2x3fv
00000000001e2560 0000000000000050 T _mesa_UniformMatrix3x2fv
00000000001e25b0 0000000000000050 T _mesa_UniformMatrix2x4fv
00000000001e2600 0000000000000050 T _mesa_UniformMatrix4x2fv
00000000001e2650 0000000000000054 T _mesa_UniformMatrix3x4fv
00000000001e26b0 0000000000000054 T _mesa_UniformMatrix4x3fv
00000000001e2710 0000000000000090 T _mesa_ProgramUniformMatrix2x3fv
00000000001e27a0 0000000000000090 T _mesa_ProgramUniformMatrix3x2fv
00000000001e2830 0000000000000090 T _mesa_ProgramUniformMatrix2x4fv
00000000001e28c0 0000000000000090 T _mesa_ProgramUniformMatrix4x2fv
00000000001e2950 0000000000000094 T _mesa_ProgramUniformMatrix3x4fv
00000000001e29f0 0000000000000094 T _mesa_ProgramUniformMatrix4x3fv
00000000001e2a90 0000000000000040 T _mesa_GetnUniformfvARB
00000000001e2ad0 000000000000003c T _mesa_GetUniformfv
00000000001e2b10 0000000000000040 T _mesa_GetnUniformivARB
00000000001e2b50 000000000000003c T _mesa_GetUniformiv
00000000001e2b90 0000000000000040 T _mesa_GetnUniformuivARB
00000000001e2bd0 000000000000003c T _mesa_GetUniformuiv
00000000001e2c10 0000000000000040 T _mesa_GetnUniformdvARB
00000000001e2c50 000000000000003c T _mesa_GetUniformdv
00000000001e2c90 0000000000000040 T _mesa_GetnUniformi64vARB
00000000001e2cd0 000000000000003c T _mesa_GetUniformi64vARB
00000000001e2d10 0000000000000040 T _mesa_GetnUniformui64vARB
00000000001e2d50 000000000000003c T _mesa_GetUniformui64vARB
00000000001e2d90 0000000000000088 T _mesa_GetUniformLocation
00000000001e2e20 0000000000000040 T _mesa_GetUniformLocation_no_error
00000000001e2e60 0000000000000090 T _mesa_GetUniformBlockIndex
00000000001e2ef0 00000000000000f4 T _mesa_GetUniformIndices
00000000001e2ff0 00000000000000ac T _mesa_UniformBlockBinding_no_error
00000000001e30a0 0000000000000140 T _mesa_UniformBlockBinding
00000000001e31e0 00000000000000ac T _mesa_ShaderStorageBlockBinding_no_error
00000000001e3290 0000000000000140 T _mesa_ShaderStorageBlockBinding
00000000001e33d0 00000000000000a0 T _mesa_GetActiveUniformBlockiv
00000000001e3470 00000000000000d4 T _mesa_GetActiveUniformBlockName
00000000001e3550 00000000000000d4 T _mesa_GetActiveUniformName
00000000001e3630 00000000000000a0 T _mesa_GetActiveAtomicCounterBufferiv
00000000001e36d0 0000000000000050 T _mesa_Uniform1d
00000000001e3720 0000000000000050 T _mesa_Uniform2d
00000000001e3770 0000000000000054 T _mesa_Uniform3d
00000000001e37d0 0000000000000054 T _mesa_Uniform4d
00000000001e3830 0000000000000040 T _mesa_Uniform1dv
00000000001e3870 0000000000000040 T _mesa_Uniform2dv
00000000001e38b0 0000000000000040 T _mesa_Uniform3dv
00000000001e38f0 0000000000000040 T _mesa_Uniform4dv
00000000001e3930 0000000000000054 T _mesa_UniformMatrix2dv
00000000001e3990 0000000000000054 T _mesa_UniformMatrix3dv
00000000001e39f0 0000000000000050 T _mesa_UniformMatrix4dv
00000000001e3a40 0000000000000054 T _mesa_UniformMatrix2x3dv
00000000001e3aa0 0000000000000054 T _mesa_UniformMatrix3x2dv
00000000001e3b00 0000000000000050 T _mesa_UniformMatrix2x4dv
00000000001e3b50 0000000000000050 T _mesa_UniformMatrix4x2dv
00000000001e3ba0 0000000000000050 T _mesa_UniformMatrix3x4dv
00000000001e3bf0 0000000000000050 T _mesa_UniformMatrix4x3dv
00000000001e3c40 0000000000000068 T _mesa_ProgramUniform1d
00000000001e3cb0 0000000000000068 T _mesa_ProgramUniform2d
00000000001e3d20 000000000000006c T _mesa_ProgramUniform3d
00000000001e3d90 0000000000000078 T _mesa_ProgramUniform4d
00000000001e3e10 0000000000000070 T _mesa_ProgramUniform1dv
00000000001e3e80 0000000000000070 T _mesa_ProgramUniform2dv
00000000001e3ef0 0000000000000070 T _mesa_ProgramUniform3dv
00000000001e3f60 0000000000000070 T _mesa_ProgramUniform4dv
00000000001e3fd0 0000000000000094 T _mesa_ProgramUniformMatrix2dv
00000000001e4070 0000000000000094 T _mesa_ProgramUniformMatrix3dv
00000000001e4110 0000000000000090 T _mesa_ProgramUniformMatrix4dv
00000000001e41a0 0000000000000094 T _mesa_ProgramUniformMatrix2x3dv
00000000001e4240 0000000000000094 T _mesa_ProgramUniformMatrix3x2dv
00000000001e42e0 0000000000000090 T _mesa_ProgramUniformMatrix2x4dv
00000000001e4370 0000000000000090 T _mesa_ProgramUniformMatrix4x2dv
00000000001e4400 0000000000000090 T _mesa_ProgramUniformMatrix3x4dv
00000000001e4490 0000000000000090 T _mesa_ProgramUniformMatrix4x3dv
00000000001e4520 0000000000000050 T _mesa_Uniform1i64ARB
00000000001e4570 0000000000000054 T _mesa_Uniform2i64ARB
00000000001e45d0 000000000000005c T _mesa_Uniform3i64ARB
00000000001e4630 0000000000000060 T _mesa_Uniform4i64ARB
00000000001e4690 0000000000000040 T _mesa_Uniform1i64vARB
00000000001e46d0 0000000000000040 T _mesa_Uniform2i64vARB
00000000001e4710 0000000000000040 T _mesa_Uniform3i64vARB
00000000001e4750 0000000000000040 T _mesa_Uniform4i64vARB
00000000001e4790 0000000000000050 T _mesa_Uniform1ui64ARB
00000000001e47e0 0000000000000054 T _mesa_Uniform2ui64ARB
00000000001e4840 000000000000005c T _mesa_Uniform3ui64ARB
00000000001e48a0 0000000000000060 T _mesa_Uniform4ui64ARB
00000000001e4900 0000000000000040 T _mesa_Uniform1ui64vARB
00000000001e4940 0000000000000040 T _mesa_Uniform2ui64vARB
00000000001e4980 0000000000000040 T _mesa_Uniform3ui64vARB
00000000001e49c0 0000000000000040 T _mesa_Uniform4ui64vARB
00000000001e4a00 0000000000000068 T _mesa_ProgramUniform1i64ARB
00000000001e4a70 0000000000000078 T _mesa_ProgramUniform2i64ARB
00000000001e4af0 0000000000000088 T _mesa_ProgramUniform3i64ARB
00000000001e4b80 0000000000000090 T _mesa_ProgramUniform4i64ARB
00000000001e4c10 0000000000000070 T _mesa_ProgramUniform1i64vARB
00000000001e4c80 0000000000000070 T _mesa_ProgramUniform2i64vARB
00000000001e4cf0 0000000000000070 T _mesa_ProgramUniform3i64vARB
00000000001e4d60 0000000000000070 T _mesa_ProgramUniform4i64vARB
00000000001e4dd0 0000000000000068 T _mesa_ProgramUniform1ui64ARB
00000000001e4e40 0000000000000078 T _mesa_ProgramUniform2ui64ARB
00000000001e4ec0 0000000000000088 T _mesa_ProgramUniform3ui64ARB
00000000001e4f50 0000000000000090 T _mesa_ProgramUniform4ui64ARB
00000000001e4fe0 0000000000000070 T _mesa_ProgramUniform1ui64vARB
00000000001e5050 0000000000000070 T _mesa_ProgramUniform2ui64vARB
00000000001e50c0 0000000000000070 T _mesa_ProgramUniform3ui64vARB
00000000001e5130 0000000000000070 T _mesa_ProgramUniform4ui64vARB
00000000001e51a0 00000000000002c0 t get_vertex_array_attrib
00000000001e5460 00000000000000a8 t get_current_attrib
00000000001e5510 0000000000000008 t delete_arrayobj_cb
00000000001e5520 00000000000000cc t _lookup_vao_and_vbo_dsa
00000000001e55f0 00000000000003c0 t validate_array_format.constprop.0
00000000001e59b0 0000000000000154 t validate_array_and_format.isra.0
00000000001e5b10 00000000000000c4 t vertex_array_binding_divisor
00000000001e5be0 00000000000000a0 t _mesa_vertex_attrib_binding
00000000001e5c80 0000000000000074 t vertex_array_attrib_binding
00000000001e5d00 0000000000000184 t _mesa_bind_vertex_buffer
00000000001e5e90 00000000000001e0 t vertex_array_vertex_buffer_err.part.0
00000000001e6070 0000000000000274 t vertex_array_vertex_buffers_err.part.0
00000000001e62f0 00000000000001a4 t _mesa_set_vertex_format
00000000001e64a0 00000000000000b8 t _mesa_update_array_format
00000000001e6560 000000000000020c t vertex_attrib_format
00000000001e6770 00000000000001ec t vertex_array_attrib_format
00000000001e6960 0000000000000108 t update_array.constprop.0
00000000001e6a70 0000000000000140 T _mesa_VertexPointer_no_error
00000000001e6bb0 00000000000000e8 t _mesa_VertexPointer
00000000001e6ca0 0000000000000160 T _mesa_VertexArrayVertexOffsetEXT
00000000001e6e00 0000000000000140 T _mesa_NormalPointer_no_error
00000000001e6f40 00000000000000e8 t _mesa_NormalPointer
00000000001e7030 000000000000015c T _mesa_VertexArrayNormalOffsetEXT
00000000001e7190 000000000000008c T _mesa_ColorPointer_no_error
00000000001e7220 0000000000000140 t _mesa_ColorPointer
00000000001e7360 00000000000001a4 T _mesa_VertexArrayColorOffsetEXT
00000000001e7510 0000000000000140 T _mesa_FogCoordPointer_no_error
00000000001e7650 00000000000000cc t _mesa_FogCoordPointer
00000000001e7720 0000000000000138 T _mesa_VertexArrayFogCoordOffsetEXT
00000000001e7860 0000000000000140 T _mesa_IndexPointer_no_error
00000000001e79a0 00000000000000cc t _mesa_IndexPointer
00000000001e7a70 0000000000000138 T _mesa_VertexArrayIndexOffsetEXT
00000000001e7bb0 000000000000008c T _mesa_SecondaryColorPointer_no_error
00000000001e7c40 0000000000000104 t _mesa_SecondaryColorPointer
00000000001e7d50 0000000000000174 T _mesa_VertexArraySecondaryColorOffsetEXT
00000000001e7ed0 0000000000000064 T _mesa_TexCoordPointer_no_error
00000000001e7f40 00000000000000f0 t _mesa_TexCoordPointer
00000000001e8030 0000000000000158 T _mesa_VertexArrayTexCoordOffsetEXT
00000000001e8190 0000000000000188 T _mesa_VertexArrayMultiTexCoordOffsetEXT
00000000001e8320 0000000000000138 T _mesa_EdgeFlagPointer_no_error
00000000001e8460 00000000000000cc t _mesa_EdgeFlagPointer
00000000001e8530 0000000000000130 T _mesa_VertexArrayEdgeFlagOffsetEXT
00000000001e8660 0000000000000140 T _mesa_PointSizePointerOES_no_error
00000000001e87a0 0000000000000120 T _mesa_PointSizePointerOES
00000000001e88c0 0000000000000088 T _mesa_VertexAttribPointer_no_error
00000000001e8950 0000000000000168 t _mesa_VertexAttribPointer
00000000001e8ac0 0000000000000184 T _mesa_VertexArrayVertexAttribOffsetEXT
00000000001e8c50 0000000000000178 T _mesa_VertexArrayVertexAttribLOffsetEXT
00000000001e8dd0 0000000000000068 T _mesa_VertexAttribIPointer_no_error
00000000001e8e40 0000000000000130 T _mesa_VertexAttribIPointer
00000000001e8f70 0000000000000068 T _mesa_VertexAttribLPointer_no_error
00000000001e8fe0 0000000000000178 T _mesa_VertexArrayVertexAttribIOffsetEXT
00000000001e9160 0000000000000130 T _mesa_VertexAttribLPointer
00000000001e9290 000000000000004c t _mesa_enable_vertex_array_attribs
00000000001e92e0 00000000000000ac T _mesa_EnableVertexAttribArray
00000000001e9390 0000000000000080 T _mesa_EnableVertexAttribArray_no_error
00000000001e9410 00000000000000b0 T _mesa_EnableVertexArrayAttrib
00000000001e94c0 00000000000000b0 T _mesa_EnableVertexArrayAttribEXT
00000000001e9570 0000000000000090 T _mesa_EnableVertexArrayAttrib_no_error
00000000001e9600 000000000000004c t _mesa_disable_vertex_array_attribs
00000000001e9650 00000000000000a4 t _mesa_DisableVertexAttribArray
00000000001e9700 0000000000000080 T _mesa_DisableVertexAttribArray_no_error
00000000001e9780 0000000000000098 T _mesa_DisableVertexArrayAttrib
00000000001e9820 0000000000000098 T _mesa_DisableVertexArrayAttribEXT
00000000001e98c0 0000000000000090 T _mesa_DisableVertexArrayAttrib_no_error
00000000001e9950 00000000000000a0 T _mesa_GetVertexAttribfv
00000000001e99f0 00000000000000a0 T _mesa_GetVertexAttribdv
00000000001e9a90 00000000000000a0 T _mesa_GetVertexAttribLdv
00000000001e9b30 000000000000009c T _mesa_GetVertexAttribiv
00000000001e9bd0 00000000000000a0 T _mesa_GetVertexAttribLui64vARB
00000000001e9c70 000000000000009c T _mesa_GetVertexAttribIiv
00000000001e9d10 000000000000009c T _mesa_GetVertexAttribIuiv
00000000001e9db0 0000000000000080 T _mesa_GetVertexAttribPointerv
00000000001e9e30 0000000000000160 T _mesa_GetVertexArrayIndexediv
00000000001e9f90 00000000000000d0 T _mesa_GetVertexArrayIndexed64iv
00000000001ea060 0000000000000008 T _mesa_VertexPointerEXT
00000000001ea070 0000000000000008 T _mesa_NormalPointerEXT
00000000001ea080 0000000000000008 T _mesa_ColorPointerEXT
00000000001ea090 0000000000000008 T _mesa_IndexPointerEXT
00000000001ea0a0 0000000000000008 T _mesa_TexCoordPointerEXT
00000000001ea0b0 00000000000000e0 T _mesa_MultiTexCoordPointerEXT
00000000001ea190 0000000000000008 T _mesa_EdgeFlagPointerEXT
00000000001ea1a0 00000000000001d8 T _mesa_InterleavedArrays
00000000001ea380 0000000000000080 T _mesa_LockArraysEXT
00000000001ea400 000000000000004c T _mesa_UnlockArraysEXT
00000000001ea450 000000000000002c t _mesa_PrimitiveRestartIndex_no_error
00000000001ea480 000000000000005c T _mesa_PrimitiveRestartIndex
00000000001ea4e0 0000000000000098 T _mesa_VertexAttribDivisor_no_error
00000000001ea580 00000000000000dc T _mesa_VertexAttribDivisor
00000000001ea660 0000000000000128 T _mesa_VertexArrayVertexAttribDivisorEXT
00000000001ea790 00000000000000e4 T _mesa_BindVertexBuffer_no_error
00000000001ea880 00000000000000b0 T _mesa_BindVertexBuffer
00000000001ea930 00000000000000f8 T _mesa_VertexArrayVertexBuffer_no_error
00000000001eaa30 00000000000000d0 T _mesa_VertexArrayVertexBuffer
00000000001eab00 00000000000000d0 T _mesa_VertexArrayBindVertexBufferEXT
00000000001eabd0 0000000000000190 T _mesa_BindVertexBuffers_no_error
00000000001ead60 000000000000009c T _mesa_BindVertexBuffers
00000000001eae00 00000000000001a0 T _mesa_VertexArrayVertexBuffers_no_error
00000000001eafa0 00000000000000e8 T _mesa_VertexArrayVertexBuffers
00000000001eb090 000000000000003c T _mesa_VertexAttribFormat
00000000001eb0d0 0000000000000040 T _mesa_VertexAttribIFormat
00000000001eb110 0000000000000040 T _mesa_VertexAttribLFormat
00000000001eb150 0000000000000060 T _mesa_VertexArrayAttribFormat
00000000001eb1b0 0000000000000060 T _mesa_VertexArrayVertexAttribFormatEXT
00000000001eb210 000000000000005c T _mesa_VertexArrayAttribIFormat
00000000001eb270 000000000000005c T _mesa_VertexArrayVertexAttribIFormatEXT
00000000001eb2d0 000000000000005c T _mesa_VertexArrayAttribLFormat
00000000001eb330 000000000000005c T _mesa_VertexArrayVertexAttribLFormatEXT
00000000001eb390 0000000000000034 T _mesa_VertexAttribBinding_no_error
00000000001eb3d0 00000000000000f8 T _mesa_VertexAttribBinding
00000000001eb4d0 0000000000000058 T _mesa_VertexArrayAttribBinding_no_error
00000000001eb530 0000000000000080 T _mesa_VertexArrayAttribBinding
00000000001eb5b0 0000000000000080 T _mesa_VertexArrayVertexAttribBindingEXT
00000000001eb630 0000000000000088 T _mesa_VertexBindingDivisor_no_error
00000000001eb6c0 0000000000000144 T _mesa_VertexBindingDivisor
00000000001eb810 0000000000000094 T _mesa_VertexArrayBindingDivisor_no_error
00000000001eb8b0 0000000000000080 T _mesa_VertexArrayBindingDivisor
00000000001eb930 0000000000000080 T _mesa_VertexArrayVertexBindingDivisorEXT
00000000001eb9b0 000000000000003c t _mesa_copy_vertex_attrib_array
00000000001eb9f0 0000000000000040 t _mesa_copy_vertex_buffer_binding
00000000001eba30 0000000000000370 t _mesa_init_varray
00000000001ebda0 0000000000000034 t _mesa_free_varray_data
00000000001ebde0 0000000000000464 T _mesa_GetVertexArrayIntegervEXT
00000000001ec250 00000000000000c4 T _mesa_GetVertexArrayPointervEXT
00000000001ec320 0000000000000194 T _mesa_GetVertexArrayIntegeri_vEXT
00000000001ec4c0 00000000000000f4 T _mesa_GetVertexArrayPointeri_vEXT
00000000001ec5c0 00000000000000b8 t create_version_string
00000000001ec680 0000000000000220 t get_gl_override
00000000001ec8a0 00000000000000c4 t _mesa_override_gl_version_contextless
00000000001ec970 00000000000000e0 t _mesa_override_gl_version
00000000001eca50 000000000000007c t _mesa_override_glsl_version
00000000001ecad0 00000000000008ac t _mesa_get_version
00000000001ed380 00000000000001cc t _mesa_compute_version
00000000001ed550 0000000000000010 t _mesa_get_driver_uuid
00000000001ed560 0000000000000010 t _mesa_get_device_uuid
00000000001ed570 00000000000004f0 t _mesa_get_shading_language_version
00000000001eda60 0000000000000108 t clamp_viewport
00000000001edb70 00000000000000e8 t set_depth_range_no_notify
00000000001edc60 0000000000000150 t viewport_array
00000000001eddb0 000000000000013c t viewport
00000000001edef0 000000000000003c T _mesa_Viewport_no_error
00000000001edf30 0000000000000060 T _mesa_Viewport
00000000001edf90 000000000000010c t _mesa_set_viewport
00000000001ee0a0 0000000000000034 T _mesa_ViewportArrayv_no_error
00000000001ee0e0 00000000000000b4 T _mesa_ViewportArrayv
00000000001ee1a0 0000000000000024 T _mesa_ViewportIndexedf_no_error
00000000001ee1d0 0000000000000090 T _mesa_ViewportIndexedf
00000000001ee260 0000000000000030 T _mesa_ViewportIndexedfv_no_error
00000000001ee290 000000000000009c T _mesa_ViewportIndexedfv
00000000001ee330 0000000000000108 t _mesa_set_depth_range
00000000001ee440 0000000000000148 T _mesa_DepthRange
00000000001ee590 0000000000000120 t _mesa_DepthRangef
00000000001ee6b0 0000000000000158 T _mesa_DepthRangeArrayv_no_error
00000000001ee810 000000000000018c T _mesa_DepthRangeArrayv
00000000001ee9a0 000000000000017c T _mesa_DepthRangeArrayfvOES
00000000001eeb20 0000000000000128 T _mesa_DepthRangeIndexed_no_error
00000000001eec50 0000000000000080 T _mesa_DepthRangeIndexed
00000000001eecd0 0000000000000088 T _mesa_DepthRangeIndexedfOES
00000000001eed60 0000000000000074 t _mesa_init_viewport
00000000001eede0 0000000000000128 T _mesa_ClipControl_no_error
00000000001eef10 00000000000001b4 t _mesa_ClipControl
00000000001ef0d0 00000000000000a4 t _mesa_get_viewport_xform
00000000001ef180 0000000000000074 T _mesa_SubpixelPrecisionBiasNV_no_error
00000000001ef200 00000000000000ec t _mesa_SubpixelPrecisionBiasNV
00000000001ef2f0 00000000000000d8 T _mesa_ViewportSwizzleNV_no_error
00000000001ef3d0 00000000000001bc T _mesa_ViewportSwizzleNV
00000000001ef590 00000000000000cc t matmul4
00000000001ef660 00000000000000c4 t matmul34
00000000001ef730 0000000000000734 t invert_matrix_general
00000000001efe70 000000000000008c t invert_matrix_2d_no_rot
00000000001eff00 00000000000000ac t invert_matrix_3d_no_rot
00000000001effb0 0000000000000028 t invert_matrix_identity
00000000001effe0 0000000000000464 t invert_matrix_3d
00000000001f0450 000000000000003c t _math_matrix_mul_matrix
00000000001f0490 0000000000000024 t _math_matrix_mul_floats
00000000001f04c0 000000000000023c t _math_matrix_rotate
00000000001f0700 00000000000000a0 t _math_matrix_frustum
00000000001f07a0 00000000000000b8 t _math_matrix_ortho
00000000001f0860 00000000000000b0 t _math_matrix_scale
00000000001f0910 00000000000000a4 t _math_matrix_translate
00000000001f09c0 000000000000003c t _math_matrix_set_identity
00000000001f0a00 0000000000000590 t _math_matrix_analyse
00000000001f0f90 0000000000000014 t _math_matrix_is_length_preserving
00000000001f0fb0 0000000000000010 t _math_matrix_is_dirty
00000000001f0fc0 000000000000003c t _math_matrix_copy
00000000001f1000 0000000000000020 t _math_matrix_loadf
00000000001f1020 000000000000007c t _math_matrix_ctr
00000000001f10a0 0000000000000034 t _math_matrix_dtr
00000000001f10e0 0000000000000084 t _math_transposef
00000000001f1170 000000000000009c t _math_transposefd
00000000001f1210 00000000000000b0 t _mesa_transform_vector
00000000001f12c0 0000000000000010 t _vbo_install_exec_vtxfmt
00000000001f12d0 0000000000000018 t vbo_exec_update_eval_maps
00000000001f12f0 0000000000000234 t _vbo_CreateContext
00000000001f1530 000000000000008c t _vbo_DestroyContext
00000000001f15c0 0000000000000030 t _vbo_current_attrib
00000000001f15f0 0000000000000140 t vbo_exec_wrap_buffers
00000000001f1730 0000000000000070 t vbo_exec_vtx_wrap
00000000001f17a0 0000000000000204 t vbo_exec_End
00000000001f19b0 0000000000000278 t vbo_exec_copy_to_current
00000000001f1c30 0000000000000568 t vbo_exec_wrap_upgrade_vertex
00000000001f21a0 00000000000000b0 t vbo_exec_fixup_vertex
00000000001f2250 00000000000001b4 t vbo_exec_TexCoordP4uiv
00000000001f2410 0000000000000184 t vbo_exec_TexCoordP4ui
00000000001f25a0 000000000000016c t vbo_exec_TexCoordP3uiv
00000000001f2710 000000000000016c t vbo_exec_TexCoordP3ui
00000000001f2880 0000000000000148 t vbo_exec_TexCoordP2uiv
00000000001f29d0 0000000000000150 t vbo_exec_TexCoordP2ui
00000000001f2b20 0000000000000124 t vbo_exec_TexCoordP1uiv
00000000001f2c50 0000000000000118 t vbo_exec_TexCoordP1ui
00000000001f2d70 0000000000000094 t vbo_exec_Indexfv
00000000001f2e10 000000000000008c t vbo_exec_Indexf
00000000001f2ea0 0000000000000094 t vbo_exec_EdgeFlag
00000000001f2f40 00000000000007f0 t vbo_exec_Materialfv
00000000001f3730 000000000000009c t vbo_exec_TexCoord4fv
00000000001f37d0 00000000000000a8 t vbo_exec_TexCoord4f
00000000001f3880 000000000000009c t vbo_exec_TexCoord3fv
00000000001f3920 00000000000000a0 t vbo_exec_TexCoord3f
00000000001f39c0 0000000000000094 t vbo_exec_TexCoord2fv
00000000001f3a60 0000000000000094 t vbo_exec_TexCoord2f
00000000001f3b00 0000000000000094 t vbo_exec_TexCoord1fv
00000000001f3ba0 000000000000008c t vbo_exec_TexCoord1f
00000000001f3c30 000000000000009c t vbo_exec_SecondaryColor3fvEXT
00000000001f3cd0 00000000000000a0 t vbo_exec_SecondaryColor3fEXT
00000000001f3d70 000000000000009c t vbo_exec_Normal3fv
00000000001f3e10 00000000000000a0 t vbo_exec_Normal3f
00000000001f3eb0 0000000000000094 t vbo_exec_FogCoordfvEXT
00000000001f3f50 000000000000008c t vbo_exec_FogCoordfEXT
00000000001f3fe0 000000000000009c t vbo_exec_Color4fv
00000000001f4080 00000000000000a8 t vbo_exec_Color4f
00000000001f4130 000000000000009c t vbo_exec_Color3fv
00000000001f41d0 00000000000000a0 t vbo_exec_Color3f
00000000001f4270 00000000000001cc t vbo_exec_MultiTexCoordP4uiv
00000000001f4440 000000000000019c t vbo_exec_MultiTexCoordP4ui
00000000001f45e0 0000000000000184 t vbo_exec_MultiTexCoordP3uiv
00000000001f4770 0000000000000184 t vbo_exec_MultiTexCoordP3ui
00000000001f4900 0000000000000160 t vbo_exec_MultiTexCoordP2uiv
00000000001f4a60 0000000000000168 t vbo_exec_MultiTexCoordP2ui
00000000001f4bd0 000000000000013c t vbo_exec_MultiTexCoordP1uiv
00000000001f4d10 000000000000012c t vbo_exec_MultiTexCoordP1ui
00000000001f4e40 00000000000000b4 t vbo_exec_MultiTexCoord4fv
00000000001f4f00 00000000000000c4 t vbo_exec_MultiTexCoord4f
00000000001f4fd0 00000000000000b4 t vbo_exec_MultiTexCoord3fv
00000000001f5090 00000000000000bc t vbo_exec_MultiTexCoord3f
00000000001f5150 00000000000000ac t vbo_exec_MultiTexCoord2fv
00000000001f5200 00000000000000b0 t vbo_exec_MultiTexCoord2f
00000000001f52b0 00000000000000ac t vbo_exec_MultiTexCoord1fv
00000000001f5360 00000000000000a8 t vbo_exec_MultiTexCoord1f
00000000001f5410 00000000000000f0 T _es_VertexAttrib4fv
00000000001f5500 0000000000000130 t vbo_exec_EvalCoord2f
00000000001f5630 0000000000000070 t vbo_exec_EvalPoint2
00000000001f56a0 0000000000000008 t vbo_exec_EvalCoord2fv
00000000001f56b0 00000000000000f0 t vbo_exec_EvalCoord1f
00000000001f57a0 000000000000004c t vbo_exec_EvalPoint1
00000000001f57f0 0000000000000008 t vbo_exec_EvalCoord1fv
00000000001f5800 00000000000001d4 t vbo_exec_VertexAttribL1ui64vARB
00000000001f59e0 00000000000001d0 t vbo_exec_VertexAttribL1ui64ARB
00000000001f5bb0 00000000000001ac t vbo_exec_VertexAttribL4dv
00000000001f5d60 00000000000001bc t vbo_exec_VertexAttribL3dv
00000000001f5f20 00000000000001cc t vbo_exec_VertexAttribL2dv
00000000001f60f0 00000000000001d8 t vbo_exec_VertexAttribL1dv
00000000001f62d0 00000000000001dc t vbo_exec_VertexAttribL4d
00000000001f64b0 00000000000001d8 t vbo_exec_VertexAttribL3d
00000000001f6690 00000000000001d4 t vbo_exec_VertexAttribL2d
00000000001f6870 00000000000001dc t vbo_exec_VertexAttribL1d
00000000001f6a50 000000000000022c t vbo_exec_VertexP4uiv
00000000001f6c80 00000000000001fc t vbo_exec_VertexP4ui
00000000001f6e80 0000000000000230 t vbo_exec_VertexP3uiv
00000000001f70b0 0000000000000210 t vbo_exec_VertexP3ui
00000000001f72c0 0000000000000230 t vbo_exec_VertexP2uiv
00000000001f74f0 00000000000001e4 t vbo_exec_VertexP2ui
00000000001f76e0 00000000000001c4 t vbo_exec_VertexAttribI4uiv
00000000001f78b0 00000000000001cc t vbo_exec_VertexAttribI3uiv
00000000001f7a80 00000000000001d0 t vbo_exec_VertexAttribI2uiv
00000000001f7c50 00000000000001cc t vbo_exec_VertexAttribI4ui
00000000001f7e20 00000000000001cc t vbo_exec_VertexAttribI3ui
00000000001f7ff0 00000000000001d4 t vbo_exec_VertexAttribI2ui
00000000001f81d0 00000000000001c4 t vbo_exec_VertexAttribI1ui
00000000001f83a0 00000000000001c4 t vbo_exec_VertexAttribI4iv
00000000001f8570 00000000000001cc t vbo_exec_VertexAttribI3iv
00000000001f8740 00000000000001d0 t vbo_exec_VertexAttribI2iv
00000000001f8910 00000000000001cc t vbo_exec_VertexAttribI4i
00000000001f8ae0 00000000000001cc t vbo_exec_VertexAttribI3i
00000000001f8cb0 00000000000001d4 t vbo_exec_VertexAttribI2i
00000000001f8e90 00000000000001c4 t vbo_exec_VertexAttribI1i
00000000001f9060 000000000000017c t vbo_exec_VertexAttrib4fvNV
00000000001f91e0 0000000000000194 t vbo_exec_VertexAttrib4fNV
00000000001f9380 000000000000018c t vbo_exec_VertexAttrib3fvNV
00000000001f9510 00000000000001a8 t vbo_exec_VertexAttrib3fNV
00000000001f96c0 0000000000000190 t vbo_exec_VertexAttrib2fvNV
00000000001f9850 000000000000019c t vbo_exec_VertexAttrib2fNV
00000000001f99f0 000000000000019c t vbo_exec_VertexAttrib1fvNV
00000000001f9b90 0000000000000198 t vbo_exec_VertexAttrib1fNV
00000000001f9d30 00000000000001ac t vbo_exec_VertexAttrib4fvARB
00000000001f9ee0 00000000000001dc t vbo_exec_VertexAttrib4fARB
00000000001fa0c0 00000000000001bc t vbo_exec_VertexAttrib3fvARB
00000000001fa280 00000000000001d8 t vbo_exec_VertexAttrib3fARB
00000000001fa460 00000000000001c4 t vbo_exec_VertexAttrib2fvARB
00000000001fa630 00000000000001d0 t vbo_exec_VertexAttrib2fARB
00000000001fa800 00000000000001d0 t vbo_exec_VertexAttrib1fvARB
00000000001fa9d0 00000000000001cc t vbo_exec_VertexAttrib1fARB
00000000001faba0 00000000000000f4 t vbo_exec_Vertex4fv
00000000001faca0 00000000000000f4 t vbo_exec_Vertex4f
00000000001fada0 0000000000000104 t vbo_exec_Vertex3fv
00000000001faeb0 0000000000000114 t vbo_exec_Vertex3f
00000000001fafd0 0000000000000110 t vbo_exec_Vertex2fv
00000000001fb0e0 0000000000000114 t vbo_exec_Vertex2f
00000000001fb200 000000000000017c t r11g11b10f_to_float3
00000000001fb380 00000000000000c8 t vbo_exec_FlushVertices_internal
00000000001fb450 0000000000000158 t vbo_exec_Begin
00000000001fb5b0 0000000000000058 t vbo_exec_PrimitiveRestartNV
00000000001fb610 00000000000000e0 T _es_VertexAttrib4f
00000000001fb6f0 00000000000000d0 T _es_VertexAttrib1f
00000000001fb7c0 00000000000000d4 T _es_VertexAttrib2f
00000000001fb8a0 00000000000000e0 T _es_VertexAttrib3f
00000000001fb980 00000000000000dc T _es_VertexAttrib1fv
00000000001fba60 00000000000000dc T _es_VertexAttrib2fv
00000000001fbb40 00000000000000f0 T _es_VertexAttrib3fv
00000000001fbc30 0000000000000300 t vbo_exec_NormalP3ui
00000000001fbf30 0000000000000300 t vbo_exec_SecondaryColorP3ui
00000000001fc230 0000000000000300 t vbo_exec_ColorP3ui
00000000001fc530 000000000000031c t vbo_exec_ColorP3uiv
00000000001fc850 000000000000031c t vbo_exec_SecondaryColorP3uiv
00000000001fcb70 000000000000031c t vbo_exec_NormalP3uiv
00000000001fce90 000000000000038c t vbo_exec_ColorP4ui
00000000001fd220 00000000000003b4 t vbo_exec_ColorP4uiv
00000000001fd5e0 00000000000009c0 t vbo_exec_VertexAttribP4ui
00000000001fdfa0 0000000000000a68 t vbo_exec_VertexAttribP4uiv
00000000001fea10 00000000000007bc t vbo_exec_VertexAttribP1ui
00000000001ff1d0 0000000000000860 t vbo_exec_VertexAttribP1uiv
00000000001ffa30 000000000000093c t vbo_exec_VertexAttribP2ui
0000000000200370 00000000000009b0 t vbo_exec_VertexAttribP2uiv
0000000000200d20 0000000000000a58 t vbo_exec_VertexAttribP3ui
0000000000201780 0000000000000ae8 t vbo_exec_VertexAttribP3uiv
0000000000202270 00000000000006a8 t vbo_exec_vtx_init
0000000000202920 0000000000000080 t vbo_exec_vtx_destroy
00000000002029a0 0000000000000024 t vbo_exec_FlushVertices
00000000002029d0 00000000000000a8 t _es_Color4f
0000000000202a80 00000000000000a0 t _es_Normal3f
0000000000202b20 00000000000000c4 t _es_MultiTexCoord4f
0000000000202bf0 0000000000000004 t _es_Materialfv
0000000000202c00 0000000000000024 t _es_Materialf
0000000000202c30 0000000000000050 t vbo_exec_init
0000000000202c80 0000000000000010 t vbo_exec_destroy
0000000000202c90 0000000000000050 t vbo_try_prim_conversion
0000000000202ce0 0000000000000148 t vbo_merge_draws
0000000000202e30 000000000000024c t vbo_copy_vertices
0000000000203080 00000000000000ac t vbo_exec_vtx_unmap
0000000000203130 00000000000001a0 t vbo_exec_vtx_map
00000000002032d0 00000000000004b8 t vbo_exec_vtx_flush
0000000000203790 0000000000000300 t vbo_exec_eval_update
0000000000203a90 00000000000001b0 t vbo_exec_do_EvalCoord1f
0000000000203c40 000000000000035c t vbo_exec_do_EvalCoord2f
0000000000203fa0 0000000000000004 t _mesa_noop_Materialfv
0000000000203fb0 0000000000000004 t _mesa_noop_EvalCoord1f
0000000000203fc0 0000000000000004 t _mesa_noop_EvalCoord1fv
0000000000203fd0 0000000000000004 t _mesa_noop_EvalCoord2f
0000000000203fe0 0000000000000004 t _mesa_noop_EvalPoint1
0000000000203ff0 0000000000000004 t _mesa_noop_EvalPoint2
0000000000204000 0000000000000004 t _mesa_noop_Begin
0000000000204010 0000000000000004 t _mesa_noop_End
0000000000204020 0000000000000004 t _mesa_noop_Vertex3f
0000000000204030 0000000000000004 t _mesa_noop_Vertex4f
0000000000204040 0000000000000004 t _mesa_noop_EdgeFlag
0000000000204050 0000000000000004 t _mesa_noop_MultiTexCoord1f
0000000000204060 0000000000000004 t _mesa_noop_MultiTexCoord1fv
0000000000204070 0000000000000004 t _mesa_noop_MultiTexCoord2f
0000000000204080 0000000000000004 t _mesa_noop_MultiTexCoord3f
0000000000204090 0000000000000004 t _mesa_noop_MultiTexCoord4f
00000000002040a0 0000000000000038 t _mesa_noop_VertexAttribL1ui64vARB
00000000002040e0 0000000000000038 t _mesa_noop_VertexAttribL1ui64ARB
0000000000204120 0000000000000038 t _mesa_noop_VertexAttribL4dv
0000000000204160 0000000000000038 t _mesa_noop_VertexAttribL3dv
00000000002041a0 0000000000000038 t _mesa_noop_VertexAttribL2dv
00000000002041e0 0000000000000038 t _mesa_noop_VertexAttribL1dv
0000000000204220 0000000000000038 t _mesa_noop_VertexAttribL4d
0000000000204260 0000000000000038 t _mesa_noop_VertexAttribL3d
00000000002042a0 0000000000000038 t _mesa_noop_VertexAttribL2d
00000000002042e0 0000000000000038 t _mesa_noop_VertexAttribL1d
0000000000204320 0000000000000070 t _mesa_noop_VertexAttribP4uiv
0000000000204390 0000000000000070 t _mesa_noop_VertexAttribP4ui
0000000000204400 000000000000004c t _mesa_noop_SecondaryColorP3uiv
0000000000204450 000000000000004c t _mesa_noop_SecondaryColorP3ui
00000000002044a0 000000000000004c t _mesa_noop_ColorP4uiv
00000000002044f0 000000000000004c t _mesa_noop_ColorP4ui
0000000000204540 000000000000004c t _mesa_noop_ColorP3uiv
0000000000204590 000000000000004c t _mesa_noop_ColorP3ui
00000000002045e0 000000000000004c t _mesa_noop_NormalP3uiv
0000000000204630 000000000000004c t _mesa_noop_NormalP3ui
0000000000204680 000000000000004c t _mesa_noop_MultiTexCoordP4uiv
00000000002046d0 000000000000004c t _mesa_noop_MultiTexCoordP4ui
0000000000204720 000000000000004c t _mesa_noop_MultiTexCoordP3uiv
0000000000204770 000000000000004c t _mesa_noop_MultiTexCoordP3ui
00000000002047c0 000000000000004c t _mesa_noop_MultiTexCoordP2uiv
0000000000204810 000000000000004c t _mesa_noop_MultiTexCoordP2ui
0000000000204860 000000000000004c t _mesa_noop_MultiTexCoordP1uiv
00000000002048b0 000000000000004c t _mesa_noop_MultiTexCoordP1ui
0000000000204900 000000000000004c t _mesa_noop_TexCoordP4uiv
0000000000204950 000000000000004c t _mesa_noop_TexCoordP4ui
00000000002049a0 000000000000004c t _mesa_noop_TexCoordP3uiv
00000000002049f0 000000000000004c t _mesa_noop_TexCoordP3ui
0000000000204a40 000000000000004c t _mesa_noop_TexCoordP2uiv
0000000000204a90 000000000000004c t _mesa_noop_TexCoordP2ui
0000000000204ae0 000000000000004c t _mesa_noop_TexCoordP1uiv
0000000000204b30 000000000000004c t _mesa_noop_TexCoordP1ui
0000000000204b80 000000000000004c t _mesa_noop_VertexP4uiv
0000000000204bd0 000000000000004c t _mesa_noop_VertexP4ui
0000000000204c20 000000000000004c t _mesa_noop_VertexP3uiv
0000000000204c70 000000000000004c t _mesa_noop_VertexP3ui
0000000000204cc0 000000000000004c t _mesa_noop_VertexP2uiv
0000000000204d10 000000000000004c t _mesa_noop_VertexP2ui
0000000000204d60 0000000000000038 t _mesa_noop_VertexAttribI4uiv
0000000000204da0 0000000000000038 t _mesa_noop_VertexAttribI3uiv
0000000000204de0 0000000000000038 t _mesa_noop_VertexAttribI2uiv
0000000000204e20 0000000000000038 t _mesa_noop_VertexAttribI4ui
0000000000204e60 0000000000000038 t _mesa_noop_VertexAttribI3ui
0000000000204ea0 0000000000000038 t _mesa_noop_VertexAttribI2ui
0000000000204ee0 0000000000000038 t _mesa_noop_VertexAttribI1ui
0000000000204f20 0000000000000038 t _mesa_noop_VertexAttribI4iv
0000000000204f60 0000000000000038 t _mesa_noop_VertexAttribI3iv
0000000000204fa0 0000000000000038 t _mesa_noop_VertexAttribI2iv
0000000000204fe0 0000000000000038 t _mesa_noop_VertexAttribI4i
0000000000205020 0000000000000038 t _mesa_noop_VertexAttribI3i
0000000000205060 0000000000000038 t _mesa_noop_VertexAttribI2i
00000000002050a0 0000000000000038 t _mesa_noop_VertexAttribI1i
00000000002050e0 0000000000000038 t _mesa_noop_VertexAttrib4fvARB
0000000000205120 0000000000000038 t _mesa_noop_VertexAttrib4fARB
0000000000205160 0000000000000038 t _mesa_noop_VertexAttrib3fvARB
00000000002051a0 0000000000000038 t _mesa_noop_VertexAttrib3fARB
00000000002051e0 0000000000000038 t _mesa_noop_VertexAttrib2fvARB
0000000000205220 0000000000000038 t _mesa_noop_VertexAttrib2fARB
0000000000205260 0000000000000038 t _mesa_noop_VertexAttrib1fvARB
00000000002052a0 0000000000000038 t _mesa_noop_VertexAttrib1fARB
00000000002052e0 0000000000000004 t _mesa_noop_VertexAttrib4fNV
00000000002052f0 0000000000000004 t _mesa_noop_VertexAttrib3fNV
0000000000205300 0000000000000004 t _mesa_noop_VertexAttrib2fNV
0000000000205310 0000000000000004 t _mesa_noop_VertexAttrib4fvNV
0000000000205320 0000000000000004 t _mesa_noop_Color4f
0000000000205330 0000000000000004 t _mesa_noop_TexCoord3f
0000000000205340 0000000000000004 t _mesa_noop_Vertex2f
0000000000205350 0000000000000004 t _mesa_noop_Vertex4fv
0000000000205360 0000000000000004 t _mesa_noop_TexCoord1f
0000000000205370 0000000000000004 t _mesa_noop_TexCoord4f
0000000000205380 0000000000000004 t _mesa_noop_Normal3f
0000000000205390 0000000000000004 t _mesa_noop_SecondaryColor3fEXT
00000000002053a0 0000000000000004 t _mesa_noop_Color3f
00000000002053b0 0000000000000004 t _mesa_noop_MultiTexCoord3fv
00000000002053c0 0000000000000004 t _mesa_noop_MultiTexCoord4fv
00000000002053d0 0000000000000004 t _mesa_noop_VertexAttrib1fNV
00000000002053e0 0000000000000004 t _mesa_noop_VertexAttrib1fvNV
00000000002053f0 0000000000000004 t _mesa_noop_VertexAttrib2fvNV
0000000000205400 0000000000000004 t _mesa_noop_MultiTexCoord2fv
0000000000205410 0000000000000004 t _mesa_noop_TexCoord2f
0000000000205420 0000000000000004 t _mesa_noop_VertexAttrib3fvNV
0000000000205430 0000000000000004 t _mesa_noop_EvalCoord2fv
0000000000205440 0000000000000004 t _mesa_noop_ArrayElement
0000000000205450 0000000000000004 t _mesa_noop_Color4fv
0000000000205460 0000000000000004 t _mesa_noop_Indexfv
0000000000205470 0000000000000004 t _mesa_noop_SecondaryColor3fvEXT
0000000000205480 0000000000000004 t _mesa_noop_Indexf
0000000000205490 0000000000000004 t _mesa_noop_TexCoord1fv
00000000002054a0 0000000000000004 t _mesa_noop_TexCoord4fv
00000000002054b0 0000000000000004 t _mesa_noop_Normal3fv
00000000002054c0 0000000000000004 t _mesa_noop_FogCoordfEXT
00000000002054d0 0000000000000004 t _mesa_noop_TexCoord3fv
00000000002054e0 0000000000000004 t _mesa_noop_Color3fv
00000000002054f0 0000000000000004 t _mesa_noop_FogCoordfvEXT
0000000000205500 0000000000000004 t _mesa_noop_TexCoord2fv
0000000000205510 0000000000000004 t _mesa_noop_Vertex2fv
0000000000205520 0000000000000004 t _mesa_noop_Vertex3fv
0000000000205530 0000000000000004 t _mesa_noop_PrimitiveRestartNV
0000000000205540 000000000000017c t r11g11b10f_to_float3
00000000002056c0 00000000000000bc t _mesa_noop_VertexAttribP3uiv
0000000000205780 00000000000000bc t _mesa_noop_VertexAttribP3ui
0000000000205840 00000000000000bc t _mesa_noop_VertexAttribP2uiv
0000000000205900 00000000000000bc t _mesa_noop_VertexAttribP2ui
00000000002059c0 00000000000000bc t _mesa_noop_VertexAttribP1uiv
0000000000205a80 00000000000000bc t _mesa_noop_VertexAttribP1ui
0000000000205b40 0000000000000570 t _mesa_noop_vtxfmt_init
00000000002060b0 0000000000000018 t _mesa_using_noop_vtxfmt
00000000002060d0 0000000000000068 t reset_counters
0000000000206140 0000000000000094 t _save_OBE_MultiDrawElements
00000000002061e0 00000000000000bc t _save_OBE_MultiDrawElementsBaseVertex
00000000002062a0 000000000000002c t _save_Begin
00000000002062d0 0000000000000084 t vbo_destroy_vertex_list
0000000000206360 00000000000000f0 t alloc_vertex_store
0000000000206450 00000000000000f4 t vbo_print_vertex_list
0000000000206550 000000000000013c t copy_to_current
0000000000206690 000000000000017c t r11g11b10f_to_float3
0000000000206810 0000000000000074 t vbo_save_map_vertex_store
0000000000206890 0000000000000074 t vbo_save_unmap_vertex_store
0000000000206910 0000000000000868 t compile_vertex_list
0000000000207180 0000000000000070 t wrap_buffers
00000000002071f0 000000000000049c t fixup_vertex
0000000000207690 0000000000000314 t _save_SecondaryColorP3uiv
00000000002079b0 00000000000002f4 t _save_SecondaryColorP3ui
0000000000207cb0 00000000000003b4 t _save_ColorP4uiv
0000000000208070 0000000000000388 t _save_ColorP4ui
0000000000208400 0000000000000314 t _save_ColorP3uiv
0000000000208720 00000000000002f4 t _save_ColorP3ui
0000000000208a20 0000000000000314 t _save_NormalP3uiv
0000000000208d40 00000000000002f4 t _save_NormalP3ui
0000000000209040 0000000000000164 t _save_TexCoordP4uiv
00000000002091b0 0000000000000134 t _save_TexCoordP4ui
00000000002092f0 000000000000013c t _save_TexCoordP3uiv
0000000000209430 000000000000011c t _save_TexCoordP3ui
0000000000209550 0000000000000118 t _save_TexCoordP2uiv
0000000000209670 0000000000000120 t _save_TexCoordP2ui
0000000000209790 0000000000000110 t _save_TexCoordP1uiv
00000000002098a0 00000000000000f0 t _save_TexCoordP1ui
0000000000209990 0000000000000068 t _save_Indexfv
0000000000209a00 0000000000000070 t _save_Indexf
0000000000209a70 0000000000000068 t _save_EdgeFlag
0000000000209ae0 000000000000064c t _save_Materialfv
000000000020a130 0000000000000070 t _save_TexCoord4fv
000000000020a1a0 0000000000000094 t _save_TexCoord4f
000000000020a240 0000000000000070 t _save_TexCoord3fv
000000000020a2b0 000000000000008c t _save_TexCoord3f
000000000020a340 0000000000000068 t _save_TexCoord2fv
000000000020a3b0 0000000000000078 t _save_TexCoord2f
000000000020a430 0000000000000068 t _save_TexCoord1fv
000000000020a4a0 0000000000000070 t _save_TexCoord1f
000000000020a510 0000000000000070 t _save_SecondaryColor3fvEXT
000000000020a580 000000000000008c t _save_SecondaryColor3fEXT
000000000020a610 0000000000000070 t _save_Normal3fv
000000000020a680 000000000000008c t _save_Normal3f
000000000020a710 0000000000000068 t _save_FogCoordfvEXT
000000000020a780 0000000000000070 t _save_FogCoordfEXT
000000000020a7f0 0000000000000070 t _save_Color4fv
000000000020a860 0000000000000094 t _save_Color4f
000000000020a900 0000000000000070 t _save_Color3fv
000000000020a970 000000000000008c t _save_Color3f
000000000020aa00 0000000000000194 t _save_MultiTexCoordP4uiv
000000000020aba0 0000000000000164 t _save_MultiTexCoordP4ui
000000000020ad10 000000000000016c t _save_MultiTexCoordP3uiv
000000000020ae80 000000000000014c t _save_MultiTexCoordP3ui
000000000020afd0 0000000000000148 t _save_MultiTexCoordP2uiv
000000000020b120 0000000000000130 t _save_MultiTexCoordP2ui
000000000020b250 0000000000000124 t _save_MultiTexCoordP1uiv
000000000020b380 00000000000000fc t _save_MultiTexCoordP1ui
000000000020b480 0000000000000094 t _save_MultiTexCoord4fv
000000000020b520 00000000000000b0 t _save_MultiTexCoord4f
000000000020b5d0 0000000000000094 t _save_MultiTexCoord3fv
000000000020b670 00000000000000a8 t _save_MultiTexCoord3f
000000000020b720 000000000000008c t _save_MultiTexCoord2fv
000000000020b7b0 0000000000000094 t _save_MultiTexCoord2f
000000000020b850 000000000000008c t _save_MultiTexCoord1fv
000000000020b8e0 000000000000008c t _save_MultiTexCoord1f
000000000020b970 0000000000000078 t wrap_filled_vertex
000000000020b9f0 0000000000000184 t _save_VertexAttribL1ui64vARB
000000000020bb80 0000000000000178 t _save_VertexAttribL1ui64ARB
000000000020bd00 0000000000000190 t _save_VertexAttribL4dv
000000000020be90 0000000000000190 t _save_VertexAttribL3dv
000000000020c020 0000000000000180 t _save_VertexAttribL2dv
000000000020c1a0 0000000000000184 t _save_VertexAttribL1dv
000000000020c330 00000000000001cc t _save_VertexAttribL4d
000000000020c500 00000000000001bc t _save_VertexAttribL3d
000000000020c6c0 000000000000019c t _save_VertexAttribL2d
000000000020c860 0000000000000184 t _save_VertexAttribL1d
000000000020c9f0 00000000000009ec t _save_VertexAttribP4uiv
000000000020d3e0 000000000000093c t _save_VertexAttribP4ui
000000000020dd20 00000000000009e0 t _save_VertexAttribP3uiv
000000000020e700 0000000000000948 t _save_VertexAttribP3ui
000000000020f050 0000000000000828 t _save_VertexAttribP2uiv
000000000020f880 00000000000007d0 t _save_VertexAttribP2ui
0000000000210050 0000000000000670 t _save_VertexAttribP1uiv
00000000002106c0 0000000000000630 t _save_VertexAttribP1ui
0000000000210cf0 0000000000000228 t _save_VertexP4uiv
0000000000210f20 00000000000001f8 t _save_VertexP4ui
0000000000211120 0000000000000200 t _save_VertexP3uiv
0000000000211320 00000000000001e0 t _save_VertexP3ui
0000000000211500 00000000000001c4 t _save_VertexP2uiv
00000000002116d0 00000000000001a4 t _save_VertexP2ui
0000000000211880 00000000000001b0 t _save_VertexAttribI4uiv
0000000000211a30 00000000000001a0 t _save_VertexAttribI3uiv
0000000000211bd0 0000000000000190 t _save_VertexAttribI2uiv
0000000000211d60 00000000000001ac t _save_VertexAttribI4ui
0000000000211f10 0000000000000198 t _save_VertexAttribI3ui
00000000002120b0 000000000000018c t _save_VertexAttribI2ui
0000000000212240 0000000000000178 t _save_VertexAttribI1ui
00000000002123c0 00000000000001b0 t _save_VertexAttribI4iv
0000000000212570 00000000000001a0 t _save_VertexAttribI3iv
0000000000212710 0000000000000190 t _save_VertexAttribI2iv
00000000002128a0 00000000000001ac t _save_VertexAttribI4i
0000000000212a50 0000000000000198 t _save_VertexAttribI3i
0000000000212bf0 000000000000018c t _save_VertexAttribI2i
0000000000212d80 0000000000000178 t _save_VertexAttribI1i
0000000000212f00 0000000000000114 t _save_VertexAttrib4fvNV
0000000000213020 000000000000012c t _save_VertexAttrib4fNV
0000000000213150 0000000000000114 t _save_VertexAttrib3fvNV
0000000000213270 0000000000000124 t _save_VertexAttrib3fNV
00000000002133a0 000000000000010c t _save_VertexAttrib2fvNV
00000000002134b0 0000000000000114 t _save_VertexAttrib2fNV
00000000002135d0 000000000000010c t _save_VertexAttrib1fvNV
00000000002136e0 000000000000012c t _save_VertexAttrib1fNV
0000000000213810 0000000000000190 t _save_VertexAttrib4fvARB
00000000002139a0 00000000000001cc t _save_VertexAttrib4fARB
0000000000213b70 0000000000000190 t _save_VertexAttrib3fvARB
0000000000213d00 00000000000001bc t _save_VertexAttrib3fARB
0000000000213ec0 0000000000000180 t _save_VertexAttrib2fvARB
0000000000214040 000000000000019c t _save_VertexAttrib2fARB
00000000002141e0 0000000000000184 t _save_VertexAttrib1fvARB
0000000000214370 0000000000000184 t _save_VertexAttrib1fARB
0000000000214500 00000000000000e4 t _save_Vertex4fv
00000000002145f0 000000000000010c t _save_Vertex4f
0000000000214700 00000000000000e4 t _save_Vertex3fv
00000000002147f0 0000000000000104 t _save_Vertex3f
0000000000214900 00000000000000dc t _save_Vertex2fv
00000000002149e0 00000000000000ec t _save_Vertex2f
0000000000214ad0 0000000000000128 t dlist_fallback
0000000000214c00 0000000000000054 t _save_EvalPoint2
0000000000214c60 0000000000000044 t _save_EvalPoint1
0000000000214cb0 0000000000000044 t _save_EvalCoord2fv
0000000000214d00 0000000000000054 t _save_EvalCoord2f
0000000000214d60 0000000000000044 t _save_EvalCoord1fv
0000000000214db0 000000000000004c t _save_EvalCoord1f
0000000000214e00 000000000000005c t _save_CallLists
0000000000214e60 0000000000000044 t _save_CallList
0000000000214eb0 00000000000000b0 t _save_End
0000000000214f60 00000000000000a4 t vbo_save_NotifyBegin
0000000000215010 00000000000000bc t _save_OBE_Rectf
00000000002150d0 0000000000000318 t _save_OBE_DrawElementsBaseVertex
00000000002153f0 0000000000000008 t _save_OBE_DrawElements
0000000000215400 0000000000000160 t _save_OBE_DrawRangeElements
0000000000215560 0000000000000144 t _save_OBE_DrawArrays
00000000002156b0 000000000000010c t _save_OBE_MultiDrawArrays
00000000002157c0 00000000000000a0 t _save_PrimitiveRestartNV
0000000000215860 0000000000000098 t vbo_initialize_save_dispatch
0000000000215900 00000000000000bc t vbo_save_SaveFlushVertices
00000000002159c0 00000000000000dc t vbo_save_NewList
0000000000215aa0 0000000000000098 t vbo_save_EndList
0000000000215b40 0000000000000024 t vbo_save_BeginCallList
0000000000215b70 000000000000002c t vbo_save_EndCallList
0000000000215ba0 000000000000064c t vbo_save_api_init
00000000002161f0 0000000000000050 t vbo_save_init
0000000000216240 00000000000000b8 t vbo_save_destroy
0000000000216300 0000000000000298 t copy_vao
00000000002165a0 00000000000002f4 T vbo_save_playback_vertex_list
00000000002168a0 0000000000000030 t VertexAttrib1fvNV
00000000002168d0 0000000000000030 t VertexAttrib2fvNV
0000000000216900 0000000000000030 t VertexAttrib3fvNV
0000000000216930 0000000000000030 t VertexAttrib4fvNV
0000000000216960 0000000000000318 t _vbo_loopback_vertex_list
0000000000216c80 0000000000000038 t unpack_float_z_X8_UINT_Z24_UNORM
0000000000216cc0 0000000000000038 t unpack_float_z_Z24_UNORM_X8_UINT
0000000000216d00 0000000000000038 t unpack_float_Z_UNORM16
0000000000216d40 0000000000000030 t unpack_float_Z_UNORM32
0000000000216d70 0000000000000024 t unpack_float_z_Z32X24S8
0000000000216da0 0000000000000028 t unpack_uint_z_X8_UINT_Z24_UNORM
0000000000216dd0 0000000000000028 t unpack_uint_z_Z24_UNORM_X8_UINT
0000000000216e00 0000000000000024 t unpack_uint_Z_UNORM16
0000000000216e30 0000000000000058 t unpack_uint_Z_FLOAT32
0000000000216e90 000000000000005c t unpack_uint_Z_FLOAT32_X24S8
0000000000216ef0 0000000000000010 t unpack_float_Z_FLOAT32
0000000000216f00 0000000000000014 t unpack_uint_Z_UNORM32
0000000000216f20 000000000000007c t _mesa_unorm_to_unorm.constprop.0
0000000000216fa0 000000000000252c t _mesa_unpack_rgba_row
00000000002194d0 0000000000001d58 t _mesa_unpack_ubyte_rgba_row
000000000021b230 0000000000000de0 t _mesa_unpack_uint_rgba_row
000000000021c010 00000000000000a0 t _mesa_unpack_float_z_row
000000000021c0b0 00000000000000a0 t _mesa_unpack_uint_z_row
000000000021c150 000000000000009c t _mesa_unpack_ubyte_stencil_row
000000000021c1f0 0000000000000094 t _mesa_unpack_uint_24_8_depth_stencil_row
000000000021c290 00000000000000b4 t _mesa_unpack_float_32_uint_24_8_depth_stencil_row
000000000021c350 0000000000008cec t _mesa_initialize_exec_table
0000000000225040 0000000000000010 t compar_nr
0000000000225050 0000000000000080 t _mesa_enum_to_string
00000000002250d0 0000000000000024 t _mesa_lookup_prim_by_nr
0000000000225100 0000000000000184 t _mesa_get_srgb_format_linear
0000000000225290 00000000000000c0 t _mesa_get_intensity_format_red
0000000000225350 0000000000000298 t setup_render_state
00000000002255f0 0000000000000184 t draw_bitmap_quad
0000000000225780 0000000000000168 t init_bitmap_state
00000000002258f0 00000000000001a4 t st_flush_bitmap_cache.part.0
0000000000225aa0 0000000000000584 t st_Bitmap
0000000000226030 00000000000004c4 t st_DrawAtlasBitmaps
0000000000226500 0000000000000018 t st_flush_bitmap_cache
0000000000226520 0000000000000018 t st_init_bitmap_functions
0000000000226540 0000000000000084 t st_destroy_bitmap
00000000002265d0 00000000000000f8 t get_color_fp_variant
00000000002266d0 0000000000000560 t draw_textured_quad.constprop.0
0000000000226c30 00000000000000d8 t pipe_resource_reference
0000000000226d10 00000000000003ac t make_drawpix_z_stencil_program_tgsi
00000000002270c0 0000000000000068 t st_make_passthrough_vertex_shader
0000000000227130 0000000000000e3c t st_CopyPixels
0000000000227f70 0000000000001518 t st_DrawPixels
0000000000229490 000000000000001c t st_init_drawpixels_functions
00000000002294b0 00000000000000d8 t st_destroy_drawpix
0000000000229590 0000000000000058 t st_discard_framebuffer
00000000002295f0 0000000000000040 t st_UnmapRenderbuffer
0000000000229630 0000000000000050 t st_new_renderbuffer
0000000000229680 0000000000000038 t st_EvaluateDepthValues
00000000002296c0 0000000000000178 t st_MapRenderbuffer
0000000000229840 0000000000000070 t st_DrawBufferAllocate
00000000002298b0 0000000000000070 t st_ReadBuffer
0000000000229920 00000000000000e4 t st_validate_attachment
0000000000229a10 00000000000001c4 t st_validate_framebuffer
0000000000229be0 0000000000000018 t st_finish_render_texture
0000000000229c00 00000000000001f4 t st_renderbuffer_delete
0000000000229e00 00000000000001f0 t st_new_renderbuffer_fb
0000000000229ff0 00000000000004e0 t st_update_renderbuffer_surface
000000000022a4d0 000000000000045c t st_renderbuffer_alloc_storage
000000000022a930 0000000000000124 t st_render_texture
000000000022aa60 0000000000000090 t st_init_fbo_functions
000000000022aaf0 0000000000000010 t st_device_reset_callback
000000000022ab00 0000000000000074 t st_get_graphics_reset_status
000000000022ab80 0000000000000048 t st_glFlush
000000000022abd0 0000000000000044 t st_flush
000000000022ac20 0000000000000080 t st_finish
000000000022aca0 000000000000002c t st_glFinish
000000000022acd0 0000000000000038 t st_install_device_reset_callback
000000000022ad10 000000000000004c t st_init_flush_functions
000000000022ad60 000000000000019c t util_format_linear
000000000022af00 00000000000000dc t guess_base_level_size
000000000022afe0 00000000000000c0 t alpha_to_red
000000000022b0a0 0000000000000018 t st_DeleteTextureHandle
000000000022b0c0 0000000000000018 t st_MakeTextureHandleResident
000000000022b0e0 0000000000000018 t st_DeleteImageHandle
000000000022b100 0000000000000018 t st_MakeImageHandleResident
000000000022b120 0000000000000074 t st_TexParameter
000000000022b1a0 0000000000000044 t st_NewImageHandle
000000000022b1f0 0000000000000004 t st_DeleteTextureImage
000000000022b200 000000000000000c t st_NewTextureImage
000000000022b210 00000000000000b0 t st_NewTextureObject
000000000022b2c0 0000000000000064 t compressed_tex_fallback_allocate.part.0
000000000022b330 0000000000000224 t try_pbo_upload_common
000000000022b560 00000000000000d0 t default_bindings.isra.0
000000000022b630 00000000000000d8 t pipe_resource_reference
000000000022b710 0000000000000098 t st_DeleteTextureObject
000000000022b7b0 00000000000000a4 t st_FreeTextureImageBuffer
000000000022b860 000000000000023c t st_TextureView
000000000022baa0 0000000000000104 t prep_teximage
000000000022bbb0 0000000000000240 t st_ClearTexSubImage
000000000022bdf0 000000000000015c t gl_target_to_pipe
000000000022bf50 000000000000018c t st_TestProxyTexImage
000000000022c0e0 0000000000000290 t guess_and_alloc_texture
000000000022c370 0000000000000064 t st_astc_format_fallback
000000000022c3e0 00000000000000a4 t st_compressed_format_fallback
000000000022c490 0000000000000324 t st_AllocTextureImageBuffer
000000000022c7c0 0000000000000118 t st_UnmapTextureImage
000000000022c8e0 00000000000001a0 t st_MapTextureImage
000000000022ca80 000000000000042c t st_CompressedTexSubImage
000000000022ceb0 00000000000000fc t st_CompressedTexImage
000000000022cfb0 0000000000000350 t st_texture_storage
000000000022d300 000000000000001c t st_SetTextureStorageForMemoryObject
000000000022d320 000000000000000c t st_AllocTextureStorage
000000000022d330 00000000000000a0 t st_get_blit_mask
000000000022d3d0 0000000000000b10 t st_GetTexSubImage
000000000022dee0 0000000000000c08 t st_CopyTexSubImage
000000000022eaf0 0000000000001730 t st_TexSubImage
0000000000230220 00000000000000fc t st_TexImage
0000000000230320 000000000000067c t st_finalize_texture
00000000002309a0 00000000000000e4 t st_NewTextureHandle
0000000000230a90 0000000000000154 t st_init_texture_functions
0000000000230bf0 0000000000000050 t st_query_memory_info
0000000000230c40 000000000000025c t st_invalidate_state
0000000000230ea0 0000000000000018 t st_emit_string_marker
0000000000230ec0 0000000000000018 t st_set_background_context
0000000000230ee0 00000000000001c4 t free_zombie_shaders
00000000002310b0 0000000000000020 t st_get_device_uuid
00000000002310d0 0000000000000020 t st_get_driver_uuid
00000000002310f0 0000000000000058 t st_Enable
0000000000231150 000000000000004c t destroy_framebuffer_attachment_sampler_cb
00000000002311a0 0000000000000008 t destroy_tex_sampler_cb
00000000002311b0 00000000000000c8 t free_zombie_sampler_views
0000000000231280 00000000000001c4 t st_destroy_context_priv
0000000000231450 0000000000000018 t st_invalidate_buffers
0000000000231470 000000000000008c t st_save_zombie_sampler_view
0000000000231500 0000000000000094 t st_save_zombie_shader
00000000002315a0 0000000000000024 t st_context_free_zombie_objects
00000000002315d0 0000000000000b60 t st_create_context
0000000000232130 0000000000000290 t st_destroy_context
00000000002323c0 0000000000000050 t st_debug_message
0000000000232410 000000000000005c t st_debug_init
0000000000232470 000000000000009c t st_update_debug_callback
0000000000232510 0000000000000330 t st_draw_vbo
0000000000232840 00000000000002a4 t st_indirect_draw_vbo
0000000000232af0 0000000000000018 t st_init_draw_functions
0000000000232b10 0000000000000220 t st_draw_quad
0000000000232d30 00000000000000f0 t init_format_extensions
0000000000232e20 0000000000000f78 t st_init_limits
0000000000233da0 00000000000013f0 t st_init_extensions
0000000000235190 0000000000000134 t st_mesa_format_to_pipe_format
00000000002352d0 0000000000000028 t st_pipe_format_to_mesa_format
0000000000235300 00000000000000bc t st_choose_matching_format
00000000002353c0 0000000000000278 t st_choose_format
0000000000235640 0000000000000074 t st_choose_renderbuffer_format
00000000002356c0 00000000000000d4 t st_QuerySamplesForFormat
00000000002357a0 000000000000032c T st_ChooseTextureFormat
0000000000235ad0 00000000000000f0 T st_QueryInternalFormat
0000000000235bc0 0000000000000254 t st_translate_color
0000000000235e20 00000000000004a8 T st_generate_mipmap
00000000002362d0 0000000000000074 t get_pbo_conversion
0000000000236350 0000000000000284 t build_conversion
00000000002365e0 00000000000010e8 t create_fs_tgsi.isra.0
00000000002376d0 00000000000000a8 t st_pbo_addresses_setup
0000000000237780 0000000000000120 t st_pbo_addresses_pixelstore
00000000002378a0 0000000000000024 t st_pbo_addresses_invert_y
00000000002378d0 00000000000002b4 t st_pbo_create_vs
0000000000237b90 0000000000000344 t st_pbo_create_gs
0000000000237ee0 0000000000000344 t st_pbo_draw
0000000000238230 0000000000000064 t st_pbo_get_upload_fs
00000000002382a0 000000000000007c t st_pbo_get_download_fs
0000000000238320 0000000000000194 t st_init_pbo_helpers
00000000002384c0 00000000000000d0 t st_destroy_pbo_helpers
0000000000238590 000000000000017c t delete_variant
0000000000238710 0000000000000164 t st_create_vp_variant
0000000000238880 0000000000000420 t st_create_fp_variant
0000000000238ca0 0000000000000110 t st_unbind_program.isra.0
0000000000238db0 0000000000000094 t set_affected_state_flags.isra.0
0000000000238e50 00000000000000a8 t destroy_program_variants_cb
0000000000238f00 00000000000000e0 t destroy_shader_program_variants_cb
0000000000238fe0 000000000000018c t st_set_prog_affected_state_flags
0000000000239170 000000000000006c t st_release_variants
00000000002391e0 00000000000000d8 t st_release_program
00000000002392c0 00000000000000cc t st_prepare_vertex_program
0000000000239390 00000000000000e4 t st_translate_stream_output_info
0000000000239480 0000000000000318 t st_translate_vertex_program
00000000002397a0 00000000000000dc t st_get_vp_variant
0000000000239880 0000000000000694 t st_translate_fragment_program
0000000000239f20 00000000000000d0 t st_get_fp_variant
0000000000239ff0 0000000000000480 t st_translate_common_program
000000000023a470 0000000000000200 t st_get_common_variant
000000000023a670 0000000000000064 t st_destroy_program_variants
000000000023a6e0 000000000000015c t st_finalize_program
000000000023a840 000000000000008c t st_window_rectangles_to_blit
000000000023a8d0 00000000000001d0 t st_deserialise_ir_program
000000000023aaa0 000000000000013c t st_serialise_ir_program.part.0
000000000023abe0 0000000000000004 T st_get_program_binary_driver_sha1
000000000023abf0 00000000000000bc t st_store_ir_in_disk_cache
000000000023acb0 00000000000000fc t st_load_ir_from_disk_cache
000000000023adb0 0000000000000014 T st_serialise_tgsi_program
000000000023add0 0000000000000014 T st_serialise_tgsi_program_binary
000000000023adf0 0000000000000008 T st_deserialise_tgsi_program
000000000023ae00 0000000000000094 t st_destroy_bound_texture_handles_per_stage
000000000023aea0 0000000000000098 t st_destroy_bound_image_handles_per_stage
000000000023af40 000000000000006c t st_texture_create
000000000023afb0 00000000000001b4 t st_gl_texture_dims_to_pipe_dims
000000000023b170 00000000000000e4 t st_texture_match_image
000000000023b260 0000000000000148 t st_texture_image_map
000000000023b3b0 0000000000000050 t st_texture_image_unmap
000000000023b400 000000000000015c t st_texture_image_copy
000000000023b560 00000000000000a4 t st_create_color_map_texture
000000000023b610 000000000000003c t st_destroy_bound_texture_handles
000000000023b650 000000000000003c t st_destroy_bound_image_handles
000000000023b690 0000000000000170 t st_make_bound_samplers_resident
000000000023b800 0000000000000120 t st_make_bound_images_resident
000000000023b920 00000000000000a8 t transform_decl
000000000023b9d0 00000000000000d4 t prolog_common
000000000023bab0 00000000000000f0 t prolog_last_vertex_stage
000000000023bba0 0000000000000320 t prolog_fs
000000000023bec0 0000000000000388 t epilog_fs
000000000023c250 00000000000004f0 t epilog_last_vertex_stage
000000000023c740 000000000000013c t transform_instr
000000000023c880 0000000000000144 t st_tgsi_lower_depth_clamp
000000000023c9d0 0000000000000008 t st_tgsi_lower_depth_clamp_fs
000000000023c9e0 00000000000000b8 t emit_samp
000000000023caa0 0000000000000424 t yuv_to_rgb
000000000023ced0 0000000000000a20 t transform_instr
000000000023d8f0 00000000000000b0 t st_tgsi_lower_yuv
000000000023d9a0 0000000000000008 t always_available(_mesa_glsl_parse_state const*)
000000000023d9b0 000000000000003c t compatibility_vs_only(_mesa_glsl_parse_state const*)
000000000023d9f0 0000000000000030 t derivatives_only(_mesa_glsl_parse_state const*)
000000000023da20 0000000000000010 t gs_only(_mesa_glsl_parse_state const*)
000000000023da30 000000000000000c t v110(_mesa_glsl_parse_state const*)
000000000023da40 000000000000002c t v120(_mesa_glsl_parse_state const*)
000000000023da70 000000000000002c t v130(_mesa_glsl_parse_state const*)
000000000023daa0 0000000000000030 t v130_desktop(_mesa_glsl_parse_state const*)
000000000023dad0 0000000000000030 t v460_desktop(_mesa_glsl_parse_state const*)
000000000023db00 000000000000002c t v140_or_es3(_mesa_glsl_parse_state const*)
000000000023db30 0000000000000008 t texture_rectangle(_mesa_glsl_parse_state const*)
000000000023db40 0000000000000008 t texture_external(_mesa_glsl_parse_state const*)
000000000023db50 0000000000000008 t shader_texture_lod(_mesa_glsl_parse_state const*)
000000000023db60 0000000000000014 t shader_texture_lod_and_rect(_mesa_glsl_parse_state const*)
000000000023db80 000000000000005c t shader_integer_mix(_mesa_glsl_parse_state const*)
000000000023dbe0 0000000000000008 t gpu_shader4(_mesa_glsl_parse_state const*)
000000000023dbf0 0000000000000024 t gpu_shader4_integer(_mesa_glsl_parse_state const*)
000000000023dc20 0000000000000024 t gpu_shader4_array(_mesa_glsl_parse_state const*)
000000000023dc50 0000000000000030 t gpu_shader4_array_integer(_mesa_glsl_parse_state const*)
000000000023dc80 0000000000000024 t gpu_shader4_rect(_mesa_glsl_parse_state const*)
000000000023dcb0 0000000000000030 t gpu_shader4_rect_integer(_mesa_glsl_parse_state const*)
000000000023dce0 0000000000000024 t gpu_shader4_tbo(_mesa_glsl_parse_state const*)
000000000023dd10 0000000000000030 t gpu_shader4_tbo_integer(_mesa_glsl_parse_state const*)
000000000023dd40 0000000000000038 t v130_or_gpu_shader4(_mesa_glsl_parse_state const*)
000000000023dd80 000000000000004c t gpu_shader5(_mesa_glsl_parse_state const*)
000000000023ddd0 0000000000000038 t gpu_shader5_or_es31(_mesa_glsl_parse_state const*)
000000000023de10 0000000000000038 t texture_multisample(_mesa_glsl_parse_state const*)
000000000023de50 000000000000004c t texture_query_levels(_mesa_glsl_parse_state const*)
000000000023dea0 0000000000000038 t texture_query_lod(_mesa_glsl_parse_state const*)
000000000023dee0 0000000000000008 t texture_texture4(_mesa_glsl_parse_state const*)
000000000023def0 0000000000000068 t texture_gather_only_or_es31(_mesa_glsl_parse_state const*)
000000000023df60 000000000000003c t derivatives_tex3d(_mesa_glsl_parse_state const*)
000000000023dfa0 0000000000000008 t shader_atomic_counter_ops(_mesa_glsl_parse_state const*)
000000000023dfb0 0000000000000008 t shader_ballot(_mesa_glsl_parse_state const*)
000000000023dfc0 0000000000000008 t supports_arb_fragment_shader_interlock(_mesa_glsl_parse_state const*)
000000000023dfd0 0000000000000008 t supports_nv_fragment_shader_interlock(_mesa_glsl_parse_state const*)
000000000023dfe0 0000000000000008 t shader_clock(_mesa_glsl_parse_state const*)
000000000023dff0 0000000000000020 t shader_clock_int64(_mesa_glsl_parse_state const*)
000000000023e010 0000000000000008 t shader_trinary_minmax(_mesa_glsl_parse_state const*)
000000000023e020 0000000000000008 t shader_image_load_store_ext(_mesa_glsl_parse_state const*)
000000000023e030 0000000000000008 t shader_image_atomic_add_float(_mesa_glsl_parse_state const*)
000000000023e040 0000000000000038 t shader_image_size(_mesa_glsl_parse_state const*)
000000000023e080 000000000000004c t shader_samples(_mesa_glsl_parse_state const*)
000000000023e0d0 0000000000000014 t int64(_mesa_glsl_parse_state const*)
000000000023e0f0 0000000000000010 t compute_shader(_mesa_glsl_parse_state const*)
000000000023e100 0000000000000014 t barrier_supported(_mesa_glsl_parse_state const*)
000000000023e120 0000000000000008 t vote(_mesa_glsl_parse_state const*)
000000000023e130 0000000000000014 t integer_functions_supported(_mesa_glsl_parse_state const*)
000000000023e150 0000000000000014 t NV_shader_atomic_float_supported(_mesa_glsl_parse_state const*)
000000000023e170 0000000000000014 t shader_atomic_float_exchange(_mesa_glsl_parse_state const*)
000000000023e190 0000000000000014 t INTEL_shader_atomic_float_minmax_supported(_mesa_glsl_parse_state const*)
000000000023e1b0 0000000000000008 t shader_atomic_float_minmax(_mesa_glsl_parse_state const*)
000000000023e1c0 0000000000000008 t demote_to_helper_invocation(_mesa_glsl_parse_state const*)
000000000023e1d0 0000000000000008 t shader_integer_functions2(_mesa_glsl_parse_state const*)
000000000023e1e0 0000000000000024 t is_nir(_mesa_glsl_parse_state const*)
000000000023e210 0000000000000024 t is_not_nir(_mesa_glsl_parse_state const*)
000000000023e240 0000000000000004 W glsl_symbol_table::_ralloc_destructor(void*)
000000000023e250 00000000000000f8 t (anonymous namespace)::builtin_builder::new_sig(glsl_type const*, bool (*)(_mesa_glsl_parse_state const*), int, ...)
000000000023e350 0000000000000044 t shader_image_load_store(_mesa_glsl_parse_state const*)
000000000023e3a0 000000000000004c t shader_image_atomic_exchange_float(_mesa_glsl_parse_state const*)
000000000023e3f0 0000000000000064 t lod_exists_in_stage(_mesa_glsl_parse_state const*)
000000000023e460 0000000000000044 t texture_multisample_array(_mesa_glsl_parse_state const*)
000000000023e4b0 000000000000006c t derivative_control(_mesa_glsl_parse_state const*)
000000000023e520 0000000000000064 t fs_interpolate_at(_mesa_glsl_parse_state const*)
000000000023e590 0000000000000020 t shader_integer_functions2_int64(_mesa_glsl_parse_state const*)
000000000023e5b0 00000000000000d4 t (anonymous namespace)::builtin_builder::add_function(char const*, ...) [clone .constprop.0]
000000000023e690 000000000000004c t fp64(_mesa_glsl_parse_state const*)
000000000023e6e0 0000000000000044 t compute_shader_supported(_mesa_glsl_parse_state const*)
000000000023e730 0000000000000044 t shader_atomic_counters(_mesa_glsl_parse_state const*)
000000000023e780 0000000000000074 t derivatives(_mesa_glsl_parse_state const*)
000000000023e800 0000000000000044 t shader_bit_encoding(_mesa_glsl_parse_state const*)
000000000023e850 0000000000000050 t shader_packing_or_es3_or_gpu_shader5(_mesa_glsl_parse_state const*)
000000000023e8a0 0000000000000044 t shader_packing_or_es3(_mesa_glsl_parse_state const*)
000000000023e8f0 0000000000000050 t shader_packing_or_es31_or_gpu_shader5(_mesa_glsl_parse_state const*)
000000000023e940 0000000000000044 t texture_buffer(_mesa_glsl_parse_state const*)
000000000023e990 0000000000000038 t texture_external_es3(_mesa_glsl_parse_state const*)
000000000023e9d0 0000000000000044 t texture_gather_or_es31(_mesa_glsl_parse_state const*)
000000000023ea20 0000000000000058 t texture_gather_cube_map_array(_mesa_glsl_parse_state const*)
000000000023ea80 0000000000000050 t gpu_shader5_es(_mesa_glsl_parse_state const*)
000000000023ead0 0000000000000050 t shader_image_atomic(_mesa_glsl_parse_state const*)
000000000023eb20 000000000000004c t shader_atomic_counter_ops_or_v460_desktop(_mesa_glsl_parse_state const*)
000000000023eb70 000000000000002c t texture_array(_mesa_glsl_parse_state const*)
000000000023eba0 0000000000000008 t shader_atomic_float_add(_mesa_glsl_parse_state const*)
000000000023ebb0 000000000000005c t buffer_atomics_supported(_mesa_glsl_parse_state const*)
000000000023ec10 0000000000000050 t texture_array_derivs_only(_mesa_glsl_parse_state const*)
000000000023ec60 0000000000000028 t tex3d(_mesa_glsl_parse_state const*)
000000000023ec90 0000000000000060 t int64_fp64(_mesa_glsl_parse_state const*)
000000000023ecf0 0000000000000050 t gpu_shader5_or_OES_texture_cube_map_array(_mesa_glsl_parse_state const*)
000000000023ed40 000000000000004c t vote_or_v460_desktop(_mesa_glsl_parse_state const*)
000000000023ed90 000000000000004c t texture_cube_map_array(_mesa_glsl_parse_state const*)
000000000023ede0 0000000000000070 t derivatives_texture_cube_map_array(_mesa_glsl_parse_state const*)
000000000023ee50 000000000000003c t texture_samples_identical(_mesa_glsl_parse_state const*)
000000000023ee90 0000000000000044 t gpu_shader5_or_es31_or_integer_functions(_mesa_glsl_parse_state const*)
000000000023eee0 000000000000004c t texture_samples_identical_array(_mesa_glsl_parse_state const*)
000000000023ef30 0000000000000060 t gs_streams(_mesa_glsl_parse_state const*)
000000000023ef90 0000000000000030 t gpu_shader4_derivs_only(_mesa_glsl_parse_state const*)
000000000023efc0 000000000000003c t v110_derivatives_only(_mesa_glsl_parse_state const*)
000000000023f000 000000000000003c t v130_or_gpu_shader4_and_tex_shadow_lod(_mesa_glsl_parse_state const*)
000000000023f040 0000000000000048 t gpu_shader4_integer_derivs_only(_mesa_glsl_parse_state const*)
000000000023f090 0000000000000048 t gpu_shader4_array_derivs_only(_mesa_glsl_parse_state const*)
000000000023f0e0 0000000000000058 t v130_derivatives_only(_mesa_glsl_parse_state const*)
000000000023f140 000000000000006c t v400_derivatives_only(_mesa_glsl_parse_state const*)
000000000023f1b0 0000000000000054 t gpu_shader4_array_integer_derivs_only(_mesa_glsl_parse_state const*)
000000000023f210 0000000000000060 t es31_not_gs5(_mesa_glsl_parse_state const*)
000000000023f270 0000000000000090 t v130_or_gpu_shader4_and_tex_cube_map_array(_mesa_glsl_parse_state const*)
000000000023f300 0000000000000088 t texture_array_lod(_mesa_glsl_parse_state const*)
000000000023f390 000000000000006c t tex3d_lod(_mesa_glsl_parse_state const*)
000000000023f400 000000000000005c t v110_lod(_mesa_glsl_parse_state const*)
000000000023f460 000000000000005c t tex1d_lod(_mesa_glsl_parse_state const*)
000000000023f4c0 00000000000000e4 t (anonymous namespace)::builtin_builder::_EndStreamPrimitive(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000023f5b0 00000000000000e4 t (anonymous namespace)::builtin_builder::_EmitStreamVertex(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000023f6a0 000000000000007c t (anonymous namespace)::builtin_builder::_image_samples_prototype(glsl_type const*, unsigned int, unsigned int)
000000000023f720 00000000000000a4 t (anonymous namespace)::builtin_builder::_atomic_intrinsic2(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, ir_intrinsic_id) [clone .constprop.0]
000000000023f7d0 00000000000000b0 t (anonymous namespace)::builtin_builder::_read_invocation_intrinsic(glsl_type const*) [clone .constprop.0]
000000000023f880 00000000000001dc t (anonymous namespace)::builtin_builder::call(ir_function*, ir_variable*, exec_list) [clone .constprop.0] [clone .isra.0]
000000000023fa60 0000000000000400 t (anonymous namespace)::builtin_builder::add_image_function(char const*, char const*, ir_function_signature* ((anonymous namespace)::builtin_builder::*)(glsl_type const*, unsigned int, unsigned int), unsigned int, unsigned int, ir_intrinsic_id) [clone .constprop.0]
000000000023fe60 000000000000046c t (anonymous namespace)::builtin_builder::add_image_functions(bool) [clone .constprop.0]
00000000002402d0 0000000000000090 t (anonymous namespace)::builtin_builder::_memory_barrier(char const*, bool (*)(_mesa_glsl_parse_state const*)) [clone .constprop.0]
0000000000240360 00000000000000b8 t (anonymous namespace)::builtin_builder::_atomic_counter_intrinsic1(bool (*)(_mesa_glsl_parse_state const*), ir_intrinsic_id) [clone .constprop.0]
0000000000240420 00000000000000b0 t (anonymous namespace)::builtin_builder::_image_size_prototype(glsl_type const*, unsigned int, unsigned int)
00000000002404d0 00000000000000cc t (anonymous namespace)::builtin_builder::_atomic_intrinsic3(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, ir_intrinsic_id) [clone .constprop.0]
00000000002405a0 00000000000000e0 t (anonymous namespace)::builtin_builder::_noise2(glsl_type const*) [clone .constprop.0]
0000000000240680 00000000000000e0 t (anonymous namespace)::builtin_builder::_noise1(glsl_type const*) [clone .constprop.0]
0000000000240760 00000000000000e0 t (anonymous namespace)::builtin_builder::_noise4(glsl_type const*) [clone .constprop.0]
0000000000240840 00000000000000e0 t (anonymous namespace)::builtin_builder::_noise3(glsl_type const*) [clone .constprop.0]
0000000000240920 00000000000000d4 t (anonymous namespace)::builtin_builder::unop(bool (*)(_mesa_glsl_parse_state const*), ir_expression_operation, glsl_type const*, glsl_type const*) [clone .constprop.0]
0000000000240a00 00000000000000cc t (anonymous namespace)::builtin_builder::_interpolateAtCentroid(glsl_type const*) [clone .constprop.0]
0000000000240ad0 00000000000000c8 t (anonymous namespace)::builtin_builder::_doubleBitsToUint64(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000240ba0 00000000000000c8 t (anonymous namespace)::builtin_builder::_uint64BitsToDouble(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000240c70 00000000000000c8 t (anonymous namespace)::builtin_builder::_uintBitsToFloat(glsl_type const*) [clone .constprop.0]
0000000000240d40 00000000000000c8 t (anonymous namespace)::builtin_builder::_int64BitsToDouble(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000240e10 00000000000000c8 t (anonymous namespace)::builtin_builder::_floatBitsToUint(glsl_type const*) [clone .constprop.0]
0000000000240ee0 00000000000000c8 t (anonymous namespace)::builtin_builder::_doubleBitsToInt64(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000240fb0 00000000000000c8 t (anonymous namespace)::builtin_builder::_intBitsToFloat(glsl_type const*) [clone .constprop.0]
0000000000241080 00000000000000c8 t (anonymous namespace)::builtin_builder::_floatBitsToInt(glsl_type const*) [clone .constprop.0]
0000000000241150 00000000000000e8 t (anonymous namespace)::builtin_builder::_degrees(glsl_type const*) [clone .constprop.0]
0000000000241240 00000000000000e8 t (anonymous namespace)::builtin_builder::_radians(glsl_type const*) [clone .constprop.0]
0000000000241330 000000000000011c t (anonymous namespace)::builtin_builder::_textureQueryLevels(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000241450 00000000000000f4 t (anonymous namespace)::builtin_builder::_all(glsl_type const*) [clone .constprop.0]
0000000000241550 000000000000011c t (anonymous namespace)::builtin_builder::_textureSamples(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000241670 00000000000000f4 t (anonymous namespace)::builtin_builder::_any(glsl_type const*) [clone .constprop.0]
0000000000241770 0000000000000138 t (anonymous namespace)::builtin_builder::_shader_clock(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
00000000002418b0 00000000000000e8 t (anonymous namespace)::builtin_builder::_isnan(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
00000000002419a0 0000000000000078 t (anonymous namespace)::builtin_builder::matrix_elt(ir_variable*, int, int) [clone .constprop.0]
0000000000241a20 000000000000010c t (anonymous namespace)::builtin_builder::_read_first_invocation(glsl_type const*) [clone .constprop.0]
0000000000241b30 000000000000011c t (anonymous namespace)::builtin_builder::_vote(char const*, bool (*)(_mesa_glsl_parse_state const*)) [clone .constprop.0]
0000000000241c50 00000000000000ec t (anonymous namespace)::builtin_builder::_length(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000241d40 0000000000000120 t (anonymous namespace)::builtin_builder::_atomic_counter_op(char const*, bool (*)(_mesa_glsl_parse_state const*)) [clone .constprop.0]
0000000000241e60 00000000000000f4 t (anonymous namespace)::builtin_builder::_tan(glsl_type const*) [clone .constprop.0]
0000000000241f60 0000000000000254 t (anonymous namespace)::builtin_builder::asin_expr(ir_variable*, float, float) [clone .constprop.0]
00000000002421c0 00000000000000ec t (anonymous namespace)::builtin_builder::_acos(glsl_type const*) [clone .constprop.0]
00000000002422b0 00000000000000bc t (anonymous namespace)::builtin_builder::_asin(glsl_type const*) [clone .constprop.0]
0000000000242370 0000000000000100 t (anonymous namespace)::builtin_builder::_countTrailingZeros(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000242470 0000000000000120 t (anonymous namespace)::builtin_builder::_interpolateAtSample(glsl_type const*) [clone .constprop.0]
0000000000242590 0000000000000120 t (anonymous namespace)::builtin_builder::_interpolateAtOffset(glsl_type const*) [clone .constprop.0]
00000000002426b0 0000000000000140 t (anonymous namespace)::builtin_builder::_atomic_op2(char const*, bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
00000000002427f0 0000000000000148 t (anonymous namespace)::builtin_builder::_read_invocation(glsl_type const*) [clone .constprop.0]
0000000000242940 0000000000000104 t (anonymous namespace)::builtin_builder::_fwidthFine(glsl_type const*) [clone .constprop.0]
0000000000242a50 0000000000000104 t (anonymous namespace)::builtin_builder::_fwidthCoarse(glsl_type const*) [clone .constprop.0]
0000000000242b60 0000000000000104 t (anonymous namespace)::builtin_builder::_fwidth(glsl_type const*) [clone .constprop.0]
0000000000242c70 0000000000000118 t (anonymous namespace)::builtin_builder::_determinant_mat2(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000242d90 0000000000000160 t (anonymous namespace)::builtin_builder::_textureSamplesIdentical(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
0000000000242ef0 0000000000000160 t (anonymous namespace)::builtin_builder::_textureQueryLod(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
0000000000243050 0000000000000164 t (anonymous namespace)::builtin_builder::_isinf(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
00000000002431c0 0000000000000120 t (anonymous namespace)::builtin_builder::_sinh(glsl_type const*) [clone .constprop.0]
00000000002432e0 0000000000000168 t (anonymous namespace)::builtin_builder::_atomic_op3(char const*, bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000243450 0000000000000120 t (anonymous namespace)::builtin_builder::_cosh(glsl_type const*) [clone .constprop.0]
0000000000243570 0000000000000178 t (anonymous namespace)::builtin_builder::_atomic_counter_op2(char const*, bool (*)(_mesa_glsl_parse_state const*)) [clone .constprop.0]
00000000002436f0 0000000000000160 t (anonymous namespace)::builtin_builder::_mix_sel(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
0000000000243850 0000000000000158 t (anonymous namespace)::builtin_builder::_dfrexp(glsl_type const*, glsl_type const*) [clone .constprop.0]
00000000002439b0 0000000000000168 t (anonymous namespace)::builtin_builder::_clamp(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
0000000000243b20 0000000000000168 t (anonymous namespace)::builtin_builder::_mix_lrp(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
0000000000243c90 000000000000015c t (anonymous namespace)::builtin_builder::_fma(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000243df0 0000000000000164 t (anonymous namespace)::builtin_builder::_max3(glsl_type const*) [clone .constprop.0]
0000000000243f60 0000000000000164 t (anonymous namespace)::builtin_builder::_min3(glsl_type const*) [clone .constprop.0]
00000000002440d0 0000000000000144 t (anonymous namespace)::builtin_builder::_acosh(glsl_type const*) [clone .constprop.0]
0000000000244220 000000000000015c t (anonymous namespace)::builtin_builder::_normalize(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000244380 0000000000000174 t (anonymous namespace)::builtin_builder::binop(bool (*)(_mesa_glsl_parse_state const*), ir_expression_operation, glsl_type const*, glsl_type const*, glsl_type const*, bool) [clone .constprop.0]
0000000000244500 0000000000000090 t (anonymous namespace)::builtin_builder::_absoluteDifference(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000244590 000000000000006c t (anonymous namespace)::builtin_builder::_dot(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000244600 000000000000016c t (anonymous namespace)::builtin_builder::_atanh(glsl_type const*) [clone .constprop.0]
0000000000244770 00000000000001ec t (anonymous namespace)::builtin_builder::_transpose(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000244960 0000000000000184 t (anonymous namespace)::builtin_builder::_asinh(glsl_type const*) [clone .constprop.0]
0000000000244af0 00000000000001c0 t (anonymous namespace)::builtin_builder::_uaddCarry(glsl_type const*) [clone .constprop.0]
0000000000244cb0 00000000000001c0 t (anonymous namespace)::builtin_builder::_usubBorrow(glsl_type const*) [clone .constprop.0]
0000000000244e70 00000000000001ac t (anonymous namespace)::builtin_builder::_cross(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000245020 00000000000001b0 t (anonymous namespace)::builtin_builder::_reflect(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
00000000002451d0 0000000000000204 t (anonymous namespace)::builtin_builder::_matrixCompMult(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
00000000002453e0 00000000000001dc t (anonymous namespace)::builtin_builder::_modf(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
00000000002455c0 00000000000001e8 t (anonymous namespace)::builtin_builder::_faceforward(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
00000000002457b0 00000000000001f0 t (anonymous namespace)::builtin_builder::_bitfieldExtract(glsl_type const*) [clone .constprop.0]
00000000002459a0 00000000000001e4 t (anonymous namespace)::builtin_builder::_mid3(glsl_type const*) [clone .constprop.0]
0000000000245b90 0000000000000234 t (anonymous namespace)::builtin_builder::_bitfieldInsert(glsl_type const*) [clone .constprop.0]
0000000000245dd0 0000000000000580 t (anonymous namespace)::builtin_builder::do_atan(ir_builder::ir_factory&, glsl_type const*, ir_variable*, ir_builder::operand) [clone .constprop.0]
0000000000246350 0000000000000110 t (anonymous namespace)::builtin_builder::_atan(glsl_type const*) [clone .constprop.0]
0000000000246460 0000000000000228 t (anonymous namespace)::builtin_builder::_distance(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000246690 0000000000000274 t (anonymous namespace)::builtin_builder::_atomic_counter_op1(char const*, bool (*)(_mesa_glsl_parse_state const*)) [clone .constprop.0]
0000000000246910 0000000000000234 t (anonymous namespace)::builtin_builder::_tanh(glsl_type const*) [clone .constprop.0]
0000000000246b50 00000000000001d4 t (anonymous namespace)::builtin_builder::_textureSize(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
0000000000246d30 0000000000000274 t (anonymous namespace)::builtin_builder::_determinant_mat3(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000246fb0 00000000000003a8 t (anonymous namespace)::builtin_builder::_smoothstep(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
0000000000247360 0000000000000470 t (anonymous namespace)::builtin_builder::_mulExtended(glsl_type const*) [clone .constprop.0]
00000000002477d0 00000000000004c8 t (anonymous namespace)::builtin_builder::_refract(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000247ca0 00000000000004e8 t (anonymous namespace)::builtin_builder::_frexp(glsl_type const*, glsl_type const*) [clone .constprop.0]
0000000000248190 000000000000023c t (anonymous namespace)::builtin_builder::_outerProduct(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
00000000002483d0 00000000000002f8 t (anonymous namespace)::builtin_builder::_inverse_mat2(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
00000000002486d0 0000000000000748 t (anonymous namespace)::builtin_builder::_atan2(glsl_type const*) [clone .constprop.0]
0000000000248e20 0000000000000274 t (anonymous namespace)::builtin_builder::_image_prototype(glsl_type const*, unsigned int, unsigned int)
00000000002490a0 000000000000025c t (anonymous namespace)::builtin_builder::_textureCubeArrayShadow(ir_texture_opcode, bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000249300 00000000000004fc t (anonymous namespace)::builtin_builder::_step(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
0000000000249800 0000000000000e28 t (anonymous namespace)::builtin_builder::create_intrinsics() [clone .constprop.0]
000000000024a630 000000000000031c t (anonymous namespace)::builtin_builder::_texelFetch(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*, glsl_type const*, glsl_type const*) [clone .constprop.0]
000000000024a950 0000000000000a50 t (anonymous namespace)::builtin_builder::_inverse_mat3(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000024b3a0 000000000000064c t (anonymous namespace)::builtin_builder::_texture(ir_texture_opcode, bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*, glsl_type const*, int) [clone .constprop.0]
000000000024b9f0 0000000000001624 t (anonymous namespace)::builtin_builder::_determinant_mat4(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000024d020 00000000000025dc t (anonymous namespace)::builtin_builder::_inverse_mat4(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000024f600 0000000000016530 t _mesa_glsl_builtin_functions_init_or_ref
0000000000265b30 0000000000000078 t _mesa_glsl_builtin_functions_decref
0000000000265bb0 00000000000000a4 t _mesa_glsl_find_builtin_function(_mesa_glsl_parse_state*, char const*, exec_list*)
0000000000265c60 0000000000000094 t _mesa_glsl_has_builtin_function(_mesa_glsl_parse_state*, char const*)
0000000000265d00 000000000000000c t _mesa_glsl_get_builtin_function_shader()
0000000000265d10 0000000000000064 t _mesa_get_main_function_signature(glsl_symbol_table*)
0000000000265d80 00000000000003cc t generate_ir::umul64(void*, bool (*)(_mesa_glsl_parse_state const*))
0000000000266150 00000000000002b8 t generate_ir::sign64(void*, bool (*)(_mesa_glsl_parse_state const*))
0000000000266410 0000000000001494 t generate_ir::udiv64(void*, bool (*)(_mesa_glsl_parse_state const*))
00000000002678b0 000000000000184c t generate_ir::idiv64(void*, bool (*)(_mesa_glsl_parse_state const*))
0000000000269100 0000000000001570 t generate_ir::umod64(void*, bool (*)(_mesa_glsl_parse_state const*))
000000000026a670 0000000000001940 t generate_ir::imod64(void*, bool (*)(_mesa_glsl_parse_state const*))
000000000026bfb0 0000000000000034 t has_AMD_conservative_depth(gl_context const*, gl_api, unsigned char)
000000000026bff0 0000000000000034 t has_AMD_gpu_shader_int64(gl_context const*, gl_api, unsigned char)
000000000026c030 0000000000000034 t has_AMD_shader_stencil_export(gl_context const*, gl_api, unsigned char)
000000000026c070 0000000000000034 t has_AMD_shader_trinary_minmax(gl_context const*, gl_api, unsigned char)
000000000026c0b0 0000000000000034 t has_AMD_texture_texture4(gl_context const*, gl_api, unsigned char)
000000000026c0f0 0000000000000034 t has_AMD_vertex_shader_layer(gl_context const*, gl_api, unsigned char)
000000000026c130 0000000000000034 t has_AMD_vertex_shader_viewport_index(gl_context const*, gl_api, unsigned char)
000000000026c170 0000000000000034 t has_ANDROID_extension_pack_es31a(gl_context const*, gl_api, unsigned char)
000000000026c1b0 0000000000000034 t has_ARB_ES3_1_compatibility(gl_context const*, gl_api, unsigned char)
000000000026c1f0 0000000000000034 t has_ARB_ES3_2_compatibility(gl_context const*, gl_api, unsigned char)
000000000026c230 0000000000000034 t has_ARB_arrays_of_arrays(gl_context const*, gl_api, unsigned char)
000000000026c270 0000000000000034 t has_ARB_bindless_texture(gl_context const*, gl_api, unsigned char)
000000000026c2b0 0000000000000034 t has_ARB_compatibility(gl_context const*, gl_api, unsigned char)
000000000026c2f0 0000000000000034 t has_ARB_compute_shader(gl_context const*, gl_api, unsigned char)
000000000026c330 0000000000000034 t has_ARB_compute_variable_group_size(gl_context const*, gl_api, unsigned char)
000000000026c370 0000000000000034 t has_ARB_conservative_depth(gl_context const*, gl_api, unsigned char)
000000000026c3b0 0000000000000034 t has_ARB_cull_distance(gl_context const*, gl_api, unsigned char)
000000000026c3f0 0000000000000034 t has_ARB_derivative_control(gl_context const*, gl_api, unsigned char)
000000000026c430 0000000000000034 t has_ARB_draw_buffers(gl_context const*, gl_api, unsigned char)
000000000026c470 0000000000000034 t has_ARB_draw_instanced(gl_context const*, gl_api, unsigned char)
000000000026c4b0 0000000000000034 t has_ARB_enhanced_layouts(gl_context const*, gl_api, unsigned char)
000000000026c4f0 0000000000000034 t has_ARB_explicit_attrib_location(gl_context const*, gl_api, unsigned char)
000000000026c530 0000000000000034 t has_ARB_explicit_uniform_location(gl_context const*, gl_api, unsigned char)
000000000026c570 0000000000000034 t has_ARB_fragment_coord_conventions(gl_context const*, gl_api, unsigned char)
000000000026c5b0 0000000000000034 t has_ARB_fragment_layer_viewport(gl_context const*, gl_api, unsigned char)
000000000026c5f0 0000000000000034 t has_ARB_fragment_shader_interlock(gl_context const*, gl_api, unsigned char)
000000000026c630 0000000000000034 t has_ARB_gpu_shader5(gl_context const*, gl_api, unsigned char)
000000000026c670 0000000000000034 t has_ARB_gpu_shader_fp64(gl_context const*, gl_api, unsigned char)
000000000026c6b0 0000000000000034 t has_ARB_gpu_shader_int64(gl_context const*, gl_api, unsigned char)
000000000026c6f0 0000000000000034 t has_ARB_post_depth_coverage(gl_context const*, gl_api, unsigned char)
000000000026c730 0000000000000034 t has_ARB_sample_shading(gl_context const*, gl_api, unsigned char)
000000000026c770 0000000000000034 t has_ARB_separate_shader_objects(gl_context const*, gl_api, unsigned char)
000000000026c7b0 0000000000000034 t has_ARB_shader_atomic_counter_ops(gl_context const*, gl_api, unsigned char)
000000000026c7f0 0000000000000034 t has_ARB_shader_atomic_counters(gl_context const*, gl_api, unsigned char)
000000000026c830 0000000000000034 t has_ARB_shader_ballot(gl_context const*, gl_api, unsigned char)
000000000026c870 0000000000000034 t has_ARB_shader_bit_encoding(gl_context const*, gl_api, unsigned char)
000000000026c8b0 0000000000000034 t has_ARB_shader_clock(gl_context const*, gl_api, unsigned char)
000000000026c8f0 0000000000000034 t has_ARB_shader_draw_parameters(gl_context const*, gl_api, unsigned char)
000000000026c930 0000000000000034 t has_ARB_shader_group_vote(gl_context const*, gl_api, unsigned char)
000000000026c970 0000000000000034 t has_ARB_shader_image_load_store(gl_context const*, gl_api, unsigned char)
000000000026c9b0 0000000000000034 t has_ARB_shader_image_size(gl_context const*, gl_api, unsigned char)
000000000026c9f0 0000000000000034 t has_ARB_shader_precision(gl_context const*, gl_api, unsigned char)
000000000026ca30 0000000000000034 t has_ARB_shader_stencil_export(gl_context const*, gl_api, unsigned char)
000000000026ca70 0000000000000034 t has_ARB_shader_storage_buffer_object(gl_context const*, gl_api, unsigned char)
000000000026cab0 0000000000000034 t has_ARB_shader_subroutine(gl_context const*, gl_api, unsigned char)
000000000026caf0 0000000000000034 t has_ARB_shader_texture_image_samples(gl_context const*, gl_api, unsigned char)
000000000026cb30 0000000000000034 t has_ARB_shader_texture_lod(gl_context const*, gl_api, unsigned char)
000000000026cb70 0000000000000034 t has_ARB_shader_viewport_layer_array(gl_context const*, gl_api, unsigned char)
000000000026cbb0 0000000000000034 t has_ARB_shading_language_420pack(gl_context const*, gl_api, unsigned char)
000000000026cbf0 0000000000000034 t has_ARB_shading_language_include(gl_context const*, gl_api, unsigned char)
000000000026cc30 0000000000000034 t has_ARB_shading_language_packing(gl_context const*, gl_api, unsigned char)
000000000026cc70 0000000000000034 t has_ARB_tessellation_shader(gl_context const*, gl_api, unsigned char)
000000000026ccb0 0000000000000034 t has_ARB_texture_cube_map_array(gl_context const*, gl_api, unsigned char)
000000000026ccf0 0000000000000034 t has_ARB_texture_gather(gl_context const*, gl_api, unsigned char)
000000000026cd30 0000000000000034 t has_ARB_texture_multisample(gl_context const*, gl_api, unsigned char)
000000000026cd70 0000000000000034 t has_ARB_texture_query_levels(gl_context const*, gl_api, unsigned char)
000000000026cdb0 0000000000000034 t has_ARB_texture_query_lod(gl_context const*, gl_api, unsigned char)
000000000026cdf0 0000000000000034 t has_ARB_texture_rectangle(gl_context const*, gl_api, unsigned char)
000000000026ce30 0000000000000038 t has_ARB_uniform_buffer_object(gl_context const*, gl_api, unsigned char)
000000000026ce70 0000000000000038 t has_ARB_vertex_attrib_64bit(gl_context const*, gl_api, unsigned char)
000000000026ceb0 0000000000000038 t has_ARB_viewport_array(gl_context const*, gl_api, unsigned char)
000000000026cef0 0000000000000038 t has_EXT_blend_func_extended(gl_context const*, gl_api, unsigned char)
000000000026cf30 0000000000000038 t has_EXT_clip_cull_distance(gl_context const*, gl_api, unsigned char)
000000000026cf70 0000000000000038 t has_EXT_demote_to_helper_invocation(gl_context const*, gl_api, unsigned char)
000000000026cfb0 0000000000000038 t has_EXT_draw_buffers(gl_context const*, gl_api, unsigned char)
000000000026cff0 0000000000000038 t has_EXT_draw_instanced(gl_context const*, gl_api, unsigned char)
000000000026d030 0000000000000038 t has_EXT_frag_depth(gl_context const*, gl_api, unsigned char)
000000000026d070 0000000000000038 t has_EXT_geometry_point_size(gl_context const*, gl_api, unsigned char)
000000000026d0b0 0000000000000038 t has_EXT_geometry_shader(gl_context const*, gl_api, unsigned char)
000000000026d0f0 0000000000000038 t has_EXT_gpu_shader4(gl_context const*, gl_api, unsigned char)
000000000026d130 0000000000000038 t has_EXT_gpu_shader5(gl_context const*, gl_api, unsigned char)
000000000026d170 0000000000000038 t has_EXT_primitive_bounding_box(gl_context const*, gl_api, unsigned char)
000000000026d1b0 0000000000000038 t has_EXT_separate_shader_objects(gl_context const*, gl_api, unsigned char)
000000000026d1f0 0000000000000038 t has_EXT_shader_framebuffer_fetch(gl_context const*, gl_api, unsigned char)
000000000026d230 0000000000000038 t has_EXT_shader_framebuffer_fetch_non_coherent(gl_context const*, gl_api, unsigned char)
000000000026d270 0000000000000038 t has_EXT_shader_image_load_formatted(gl_context const*, gl_api, unsigned char)
000000000026d2b0 0000000000000038 t has_EXT_shader_image_load_store(gl_context const*, gl_api, unsigned char)
000000000026d2f0 0000000000000038 t has_EXT_shader_implicit_conversions(gl_context const*, gl_api, unsigned char)
000000000026d330 0000000000000038 t has_EXT_shader_integer_mix(gl_context const*, gl_api, unsigned char)
000000000026d370 0000000000000038 t has_EXT_shader_io_blocks(gl_context const*, gl_api, unsigned char)
000000000026d3b0 0000000000000038 t has_EXT_shader_samples_identical(gl_context const*, gl_api, unsigned char)
000000000026d3f0 0000000000000038 t has_EXT_tessellation_point_size(gl_context const*, gl_api, unsigned char)
000000000026d430 0000000000000038 t has_EXT_tessellation_shader(gl_context const*, gl_api, unsigned char)
000000000026d470 0000000000000038 t has_EXT_texture_array(gl_context const*, gl_api, unsigned char)
000000000026d4b0 0000000000000038 t has_EXT_texture_buffer(gl_context const*, gl_api, unsigned char)
000000000026d4f0 0000000000000038 t has_EXT_texture_cube_map_array(gl_context const*, gl_api, unsigned char)
000000000026d530 0000000000000038 t has_EXT_texture_query_lod(gl_context const*, gl_api, unsigned char)
000000000026d570 0000000000000038 t has_EXT_texture_shadow_lod(gl_context const*, gl_api, unsigned char)
000000000026d5b0 0000000000000038 t has_INTEL_conservative_rasterization(gl_context const*, gl_api, unsigned char)
000000000026d5f0 0000000000000038 t has_INTEL_shader_atomic_float_minmax(gl_context const*, gl_api, unsigned char)
000000000026d630 0000000000000038 t has_INTEL_shader_integer_functions2(gl_context const*, gl_api, unsigned char)
000000000026d670 0000000000000038 t has_KHR_blend_equation_advanced(gl_context const*, gl_api, unsigned char)
000000000026d6b0 0000000000000038 t has_MESA_shader_integer_functions(gl_context const*, gl_api, unsigned char)
000000000026d6f0 0000000000000038 t has_NV_compute_shader_derivatives(gl_context const*, gl_api, unsigned char)
000000000026d730 0000000000000038 t has_NV_fragment_shader_interlock(gl_context const*, gl_api, unsigned char)
000000000026d770 0000000000000038 t has_NV_image_formats(gl_context const*, gl_api, unsigned char)
000000000026d7b0 0000000000000038 t has_NV_shader_atomic_float(gl_context const*, gl_api, unsigned char)
000000000026d7f0 0000000000000038 t has_NV_viewport_array2(gl_context const*, gl_api, unsigned char)
000000000026d830 0000000000000038 t has_OES_EGL_image_external(gl_context const*, gl_api, unsigned char)
000000000026d870 0000000000000038 t has_OES_EGL_image_external_essl3(gl_context const*, gl_api, unsigned char)
000000000026d8b0 0000000000000038 t has_OES_geometry_point_size(gl_context const*, gl_api, unsigned char)
000000000026d8f0 0000000000000038 t has_OES_geometry_shader(gl_context const*, gl_api, unsigned char)
000000000026d930 0000000000000038 t has_OES_gpu_shader5(gl_context const*, gl_api, unsigned char)
000000000026d970 0000000000000038 t has_OES_primitive_bounding_box(gl_context const*, gl_api, unsigned char)
000000000026d9b0 0000000000000038 t has_OES_sample_variables(gl_context const*, gl_api, unsigned char)
000000000026d9f0 0000000000000038 t has_OES_shader_image_atomic(gl_context const*, gl_api, unsigned char)
000000000026da30 0000000000000038 t has_OES_shader_io_blocks(gl_context const*, gl_api, unsigned char)
000000000026da70 0000000000000038 t has_OES_shader_multisample_interpolation(gl_context const*, gl_api, unsigned char)
000000000026dab0 0000000000000038 t has_OES_standard_derivatives(gl_context const*, gl_api, unsigned char)
000000000026daf0 0000000000000038 t has_OES_tessellation_point_size(gl_context const*, gl_api, unsigned char)
000000000026db30 0000000000000038 t has_OES_tessellation_shader(gl_context const*, gl_api, unsigned char)
000000000026db70 0000000000000038 t has_OES_texture_3D(gl_context const*, gl_api, unsigned char)
000000000026dbb0 0000000000000038 t has_OES_texture_buffer(gl_context const*, gl_api, unsigned char)
000000000026dbf0 0000000000000038 t has_OES_texture_cube_map_array(gl_context const*, gl_api, unsigned char)
000000000026dc30 0000000000000038 t has_OES_texture_storage_multisample_2d_array(gl_context const*, gl_api, unsigned char)
000000000026dc70 0000000000000038 t has_OES_viewport_array(gl_context const*, gl_api, unsigned char)
000000000026dcb0 000000000000003c T ast_function_definition::print() const
000000000026dcf0 0000000000000050 T ast_case_statement_list::print() const
000000000026dd40 0000000000000108 t add_builtin_defines
000000000026de50 00000000000000f4 t _mesa_glsl_msg(YYLTYPE const*, _mesa_glsl_parse_state*, unsigned int, char const*, std::__va_list)
000000000026df50 000000000000000c T ast_node::print() const
000000000026df60 0000000000000038 T ast_expression_statement::print() const
000000000026dfa0 000000000000000c T ast_demote_statement::print() const
000000000026dfb0 0000000000000084 T ast_selection_statement::print() const
000000000026e040 0000000000000054 T ast_switch_statement::print() const
000000000026e0a0 000000000000005c T ast_case_label::print() const
000000000026e100 0000000000000120 T ast_iteration_statement::print() const
000000000026e220 0000000000000068 T ast_struct_specifier::print() const
000000000026e290 0000000000000088 T ast_subroutine_list::print() const
000000000026e320 0000000000000068 T ast_compound_statement::print() const
000000000026e390 0000000000000044 T ast_switch_body::print() const
000000000026e3e0 0000000000000054 T ast_case_label_list::print() const
000000000026e440 0000000000000068 T ast_case_statement::print() const
000000000026e4b0 000000000000020c t _mesa_ast_type_qualifier_print(ast_type_qualifier const*)
000000000026e6c0 0000000000000034 T ast_fully_specified_type::print() const
000000000026e700 0000000000000070 T ast_declaration::print() const
000000000026e770 00000000000000a8 T ast_jump_statement::print() const
000000000026e820 0000000000000090 T ast_parameter_declarator::print() const
000000000026e8b0 00000000000000a8 T ast_function::print() const
000000000026e960 00000000000000fc T ast_declarator_list::print() const
000000000026ea60 0000000000000040 t glsl_compute_version_string(void*, bool, unsigned int)
000000000026eaa0 0000000000000080 t _mesa_glsl_error(YYLTYPE*, _mesa_glsl_parse_state*, char const*, ...)
000000000026eb20 0000000000000230 t _mesa_glsl_parse_state::check_version(unsigned int, unsigned int, YYLTYPE*, char const*, ...)
000000000026ed50 0000000000000340 t _mesa_glsl_parse_state::process_version_directive(YYLTYPE*, int, char const*)
000000000026f090 0000000000000080 t _mesa_glsl_warning(YYLTYPE const*, _mesa_glsl_parse_state*, char const*, ...)
000000000026f110 0000000000000300 t _mesa_glsl_process_extension(char const*, YYLTYPE*, char const*, YYLTYPE*, _mesa_glsl_parse_state*)
000000000026f410 0000000000000780 t _mesa_glsl_parse_state::_mesa_glsl_parse_state(gl_context*, gl_shader_stage, void*)
000000000026f410 0000000000000780 T _mesa_glsl_parse_state::_mesa_glsl_parse_state(gl_context*, gl_shader_stage, void*)
000000000026fb90 000000000000019c t _mesa_ast_set_aggregate_type(glsl_type const*, ast_expression*)
000000000026fd30 000000000000043c t _mesa_ast_process_interface_block(YYLTYPE*, _mesa_glsl_parse_state*, ast_interface_block*, ast_type_qualifier const&)
0000000000270170 000000000000001c T ast_node::ast_node()
0000000000270170 000000000000001c t ast_node::ast_node()
0000000000270190 0000000000000050 t ast_compound_statement::ast_compound_statement(int, ast_node*)
0000000000270190 0000000000000050 T ast_compound_statement::ast_compound_statement(int, ast_node*)
00000000002701e0 0000000000000498 T ast_expression::print() const
0000000000270680 0000000000000048 t ast_expression::ast_expression(int, ast_expression*, ast_expression*, ast_expression*)
0000000000270680 0000000000000048 t ast_expression::ast_expression(int, ast_expression*, ast_expression*, ast_expression*)
00000000002706d0 0000000000000020 t ast_expression_statement::ast_expression_statement(ast_expression*)
00000000002706d0 0000000000000020 T ast_expression_statement::ast_expression_statement(ast_expression*)
00000000002706f0 000000000000003c t ast_function::ast_function()
00000000002706f0 000000000000003c T ast_function::ast_function()
0000000000270730 0000000000000024 t ast_declaration::ast_declaration(char const*, ast_array_specifier*, ast_expression*)
0000000000270730 0000000000000024 T ast_declaration::ast_declaration(char const*, ast_array_specifier*, ast_expression*)
0000000000270760 0000000000000038 t ast_declarator_list::ast_declarator_list(ast_fully_specified_type*)
0000000000270760 0000000000000038 T ast_declarator_list::ast_declarator_list(ast_fully_specified_type*)
00000000002707a0 000000000000002c t ast_jump_statement::ast_jump_statement(int, ast_expression*)
00000000002707a0 000000000000002c T ast_jump_statement::ast_jump_statement(int, ast_expression*)
00000000002707d0 0000000000000024 t ast_selection_statement::ast_selection_statement(ast_expression*, ast_node*, ast_node*)
00000000002707d0 0000000000000024 T ast_selection_statement::ast_selection_statement(ast_expression*, ast_node*, ast_node*)
0000000000270800 0000000000000020 t ast_switch_statement::ast_switch_statement(ast_expression*, ast_node*)
0000000000270800 0000000000000020 T ast_switch_statement::ast_switch_statement(ast_expression*, ast_node*)
0000000000270820 0000000000000020 t ast_switch_body::ast_switch_body(ast_case_statement_list*)
0000000000270820 0000000000000020 T ast_switch_body::ast_switch_body(ast_case_statement_list*)
0000000000270840 0000000000000020 t ast_case_label::ast_case_label(ast_expression*)
0000000000270840 0000000000000020 T ast_case_label::ast_case_label(ast_expression*)
0000000000270860 0000000000000030 t ast_case_label_list::ast_case_label_list()
0000000000270860 0000000000000030 T ast_case_label_list::ast_case_label_list()
0000000000270890 0000000000000034 t ast_case_statement::ast_case_statement(ast_case_label_list*)
0000000000270890 0000000000000034 T ast_case_statement::ast_case_statement(ast_case_label_list*)
00000000002708d0 0000000000000030 t ast_case_statement_list::ast_case_statement_list()
00000000002708d0 0000000000000030 T ast_case_statement_list::ast_case_statement_list()
0000000000270900 0000000000000028 t ast_iteration_statement::ast_iteration_statement(int, ast_node*, ast_node*, ast_expression*, ast_node*)
0000000000270900 0000000000000028 T ast_iteration_statement::ast_iteration_statement(int, ast_node*, ast_node*, ast_expression*, ast_node*)
0000000000270930 0000000000000058 t ast_struct_specifier::ast_struct_specifier(char const*, ast_declarator_list*)
0000000000270930 0000000000000058 T ast_struct_specifier::ast_struct_specifier(char const*, ast_declarator_list*)
0000000000270990 00000000000000fc t _mesa_glsl_copy_symbols_from_table
0000000000270a90 000000000000048c t do_common_optimization(exec_list*, bool, bool, gl_shader_compiler_options const*, bool)
0000000000270f20 0000000000000a44 t _mesa_glsl_compile_shader
0000000000271970 0000000000000044 t glsl_symbol_table::glsl_symbol_table()
0000000000271970 0000000000000044 T glsl_symbol_table::glsl_symbol_table()
00000000002719c0 0000000000000028 t glsl_symbol_table::~glsl_symbol_table()
00000000002719c0 0000000000000028 T glsl_symbol_table::~glsl_symbol_table()
00000000002719f0 0000000000000008 t glsl_symbol_table::push_scope()
0000000000271a00 0000000000000008 t glsl_symbol_table::pop_scope()
0000000000271a10 0000000000000020 t glsl_symbol_table::name_declared_this_scope(char const*)
0000000000271a30 0000000000000104 t glsl_symbol_table::add_variable(ir_variable*)
0000000000271b40 0000000000000060 t glsl_symbol_table::add_type(char const*, glsl_type const*)
0000000000271ba0 000000000000015c t glsl_symbol_table::add_interface(char const*, glsl_type const*, ir_variable_mode)
0000000000271d00 000000000000009c t glsl_symbol_table::add_function(ir_function*)
0000000000271da0 00000000000000e4 t glsl_symbol_table::add_default_precision_qualifier(char const*, int)
0000000000271e90 0000000000000020 t glsl_symbol_table::get_variable(char const*)
0000000000271eb0 0000000000000020 t glsl_symbol_table::get_type(char const*)
0000000000271ed0 0000000000000090 t glsl_symbol_table::get_interface(char const*, ir_variable_mode)
0000000000271f60 0000000000000020 t glsl_symbol_table::get_function(char const*)
0000000000271f80 000000000000005c t glsl_symbol_table::get_default_precision_qualifier(char const*)
0000000000271fe0 0000000000000020 t glsl_symbol_table::disable_variable(char const*)
0000000000272000 000000000000002c t glsl_symbol_table::replace_variable(char const*, ir_variable*)
0000000000272030 000000000000002c t ir_builder::ir_factory::emit(ir_instruction*)
0000000000272060 000000000000007c t ir_builder::ir_factory::make_temp(glsl_type const*, char const*)
00000000002720e0 0000000000000058 t ir_builder::assign(ir_builder::deref, ir_builder::operand, ir_builder::operand, int)
0000000000272140 0000000000000064 t ir_builder::assign(ir_builder::deref, ir_builder::operand)
00000000002721b0 0000000000000054 t ir_builder::assign(ir_builder::deref, ir_builder::operand, int)
0000000000272210 0000000000000068 t ir_builder::assign(ir_builder::deref, ir_builder::operand, ir_builder::operand)
0000000000272280 0000000000000048 t ir_builder::ret(ir_builder::operand)
00000000002722d0 000000000000005c t ir_builder::swizzle(ir_builder::operand, int, int)
0000000000272330 00000000000000a0 t ir_builder::swizzle_for_size(ir_builder::operand, unsigned int)
00000000002723d0 000000000000004c t ir_builder::swizzle_xxxx(ir_builder::operand)
0000000000272420 000000000000004c t ir_builder::swizzle_x(ir_builder::operand)
0000000000272470 000000000000004c t ir_builder::swizzle_y(ir_builder::operand)
00000000002724c0 000000000000004c t ir_builder::swizzle_z(ir_builder::operand)
0000000000272510 000000000000004c t ir_builder::swizzle_w(ir_builder::operand)
0000000000272560 000000000000004c t ir_builder::swizzle_xy(ir_builder::operand)
00000000002725b0 000000000000004c t ir_builder::swizzle_xyz(ir_builder::operand)
0000000000272600 0000000000000044 t ir_builder::expr(ir_expression_operation, ir_builder::operand)
0000000000272650 0000000000000054 t ir_builder::expr(ir_expression_operation, ir_builder::operand, ir_builder::operand)
00000000002726b0 000000000000005c t ir_builder::expr(ir_expression_operation, ir_builder::operand, ir_builder::operand, ir_builder::operand)
0000000000272710 0000000000000044 t ir_builder::add(ir_builder::operand, ir_builder::operand)
0000000000272760 0000000000000044 t ir_builder::sub(ir_builder::operand, ir_builder::operand)
00000000002727b0 0000000000000044 t ir_builder::min2(ir_builder::operand, ir_builder::operand)
0000000000272800 0000000000000044 t ir_builder::max2(ir_builder::operand, ir_builder::operand)
0000000000272850 0000000000000044 t ir_builder::mul(ir_builder::operand, ir_builder::operand)
00000000002728a0 0000000000000044 t ir_builder::imul_high(ir_builder::operand, ir_builder::operand)
00000000002728f0 0000000000000044 t ir_builder::div(ir_builder::operand, ir_builder::operand)
0000000000272940 0000000000000044 t ir_builder::carry(ir_builder::operand, ir_builder::operand)
0000000000272990 0000000000000044 t ir_builder::borrow(ir_builder::operand, ir_builder::operand)
00000000002729e0 000000000000003c t ir_builder::trunc(ir_builder::operand)
0000000000272a20 000000000000003c t ir_builder::round_even(ir_builder::operand)
0000000000272a60 000000000000003c t ir_builder::fract(ir_builder::operand)
0000000000272aa0 0000000000000084 t ir_builder::dot(ir_builder::operand, ir_builder::operand)
0000000000272b30 0000000000000074 t ir_builder::clamp(ir_builder::operand, ir_builder::operand, ir_builder::operand)
0000000000272bb0 000000000000003c t ir_builder::saturate(ir_builder::operand)
0000000000272bf0 000000000000003c t ir_builder::abs(ir_builder::operand)
0000000000272c30 000000000000003c t ir_builder::neg(ir_builder::operand)
0000000000272c70 000000000000003c t ir_builder::sin(ir_builder::operand)
0000000000272cb0 000000000000003c t ir_builder::cos(ir_builder::operand)
0000000000272cf0 000000000000003c t ir_builder::exp(ir_builder::operand)
0000000000272d30 000000000000003c t ir_builder::rcp(ir_builder::operand)
0000000000272d70 000000000000003c t ir_builder::rsq(ir_builder::operand)
0000000000272db0 000000000000003c t ir_builder::sqrt(ir_builder::operand)
0000000000272df0 000000000000003c t ir_builder::log(ir_builder::operand)
0000000000272e30 000000000000003c t ir_builder::sign(ir_builder::operand)
0000000000272e70 000000000000003c t ir_builder::subr_to_int(ir_builder::operand)
0000000000272eb0 0000000000000044 t ir_builder::equal(ir_builder::operand, ir_builder::operand)
0000000000272f00 0000000000000044 t ir_builder::nequal(ir_builder::operand, ir_builder::operand)
0000000000272f50 0000000000000044 t ir_builder::less(ir_builder::operand, ir_builder::operand)
0000000000272fa0 0000000000000048 t ir_builder::greater(ir_builder::operand, ir_builder::operand)
0000000000272ff0 0000000000000048 t ir_builder::lequal(ir_builder::operand, ir_builder::operand)
0000000000273040 0000000000000044 t ir_builder::gequal(ir_builder::operand, ir_builder::operand)
0000000000273090 000000000000003c t ir_builder::logic_not(ir_builder::operand)
00000000002730d0 0000000000000044 t ir_builder::logic_and(ir_builder::operand, ir_builder::operand)
0000000000273120 0000000000000044 t ir_builder::logic_or(ir_builder::operand, ir_builder::operand)
0000000000273170 000000000000003c t ir_builder::bit_not(ir_builder::operand)
00000000002731b0 0000000000000044 t ir_builder::bit_and(ir_builder::operand, ir_builder::operand)
0000000000273200 0000000000000044 t ir_builder::bit_or(ir_builder::operand, ir_builder::operand)
0000000000273250 0000000000000044 t ir_builder::lshift(ir_builder::operand, ir_builder::operand)
00000000002732a0 0000000000000044 t ir_builder::rshift(ir_builder::operand, ir_builder::operand)
00000000002732f0 000000000000003c t ir_builder::f2i(ir_builder::operand)
0000000000273330 000000000000003c t ir_builder::bitcast_f2i(ir_builder::operand)
0000000000273370 000000000000003c t ir_builder::i2f(ir_builder::operand)
00000000002733b0 000000000000003c t ir_builder::bitcast_i2f(ir_builder::operand)
00000000002733f0 000000000000003c t ir_builder::i2u(ir_builder::operand)
0000000000273430 000000000000003c t ir_builder::u2i(ir_builder::operand)
0000000000273470 000000000000003c t ir_builder::f2u(ir_builder::operand)
00000000002734b0 000000000000003c t ir_builder::bitcast_f2u(ir_builder::operand)
00000000002734f0 000000000000003c t ir_builder::u2f(ir_builder::operand)
0000000000273530 000000000000003c t ir_builder::bitcast_u2f(ir_builder::operand)
0000000000273570 000000000000003c t ir_builder::b2i(ir_builder::operand)
00000000002735b0 000000000000003c t ir_builder::b2f(ir_builder::operand)
00000000002735f0 000000000000003c t ir_builder::bitcast_d2i64(ir_builder::operand)
0000000000273630 000000000000003c t ir_builder::bitcast_d2u64(ir_builder::operand)
0000000000273670 000000000000003c t ir_builder::bitcast_i642d(ir_builder::operand)
00000000002736b0 000000000000003c t ir_builder::bitcast_u642d(ir_builder::operand)
00000000002736f0 000000000000003c t ir_builder::interpolate_at_centroid(ir_builder::operand)
0000000000273730 0000000000000044 t ir_builder::interpolate_at_offset(ir_builder::operand, ir_builder::operand)
0000000000273780 0000000000000044 t ir_builder::interpolate_at_sample(ir_builder::operand, ir_builder::operand)
00000000002737d0 000000000000003c t ir_builder::f2d(ir_builder::operand)
0000000000273810 0000000000000054 t ir_builder::fma(ir_builder::operand, ir_builder::operand, ir_builder::operand)
0000000000273870 0000000000000054 t ir_builder::lrp(ir_builder::operand, ir_builder::operand, ir_builder::operand)
00000000002738d0 0000000000000054 t ir_builder::csel(ir_builder::operand, ir_builder::operand, ir_builder::operand)
0000000000273930 0000000000000054 t ir_builder::bitfield_extract(ir_builder::operand, ir_builder::operand, ir_builder::operand)
0000000000273990 0000000000000060 t ir_builder::bitfield_insert(ir_builder::operand, ir_builder::operand, ir_builder::operand, ir_builder::operand)
00000000002739f0 0000000000000088 t ir_builder::if_tree(ir_builder::operand, ir_instruction*)
0000000000273a80 00000000000000ac t ir_builder::if_tree(ir_builder::operand, ir_instruction*, ir_instruction*)
0000000000273b30 0000000000000004 W ir_visitor::visit(ir_rvalue*)
0000000000273b40 0000000000000004 W ir_control_flow_visitor::visit(ir_variable*)
0000000000273b50 0000000000000004 W ir_control_flow_visitor::visit(ir_texture*)
0000000000273b60 0000000000000004 W ir_control_flow_visitor::visit(ir_swizzle*)
0000000000273b70 0000000000000004 W ir_control_flow_visitor::visit(ir_dereference_variable*)
0000000000273b80 0000000000000004 W ir_control_flow_visitor::visit(ir_dereference_array*)
0000000000273b90 0000000000000004 W ir_control_flow_visitor::visit(ir_dereference_record*)
0000000000273ba0 0000000000000004 W ir_control_flow_visitor::visit(ir_assignment*)
0000000000273bb0 0000000000000004 W ir_control_flow_visitor::visit(ir_constant*)
0000000000273bc0 0000000000000004 W ir_control_flow_visitor::visit(ir_call*)
0000000000273bd0 0000000000000004 W ir_control_flow_visitor::visit(ir_demote*)
0000000000273be0 0000000000000008 W ir_rvalue::is_lvalue(_mesa_glsl_parse_state const*) const
0000000000273bf0 0000000000000008 W ir_rvalue::variable_referenced() const
0000000000273c00 0000000000000008 W ir_rvalue::whole_variable_referenced()
0000000000273c10 0000000000000008 W ir_rvalue::is_uint16_constant() const
0000000000273c20 000000000000001c W ir_function_signature::accept(ir_visitor*)
0000000000273c40 000000000000001c W ir_function::accept(ir_visitor*)
0000000000273c60 000000000000001c W ir_if::accept(ir_visitor*)
0000000000273c80 000000000000001c W ir_loop::accept(ir_visitor*)
0000000000273ca0 000000000000001c W ir_return::accept(ir_visitor*)
0000000000273cc0 000000000000001c W ir_loop_jump::accept(ir_visitor*)
0000000000273ce0 000000000000001c W ir_discard::accept(ir_visitor*)
0000000000273d00 0000000000000004 W ir_rvalue::~ir_rvalue()
0000000000273d00 0000000000000004 W ir_rvalue::~ir_rvalue()
0000000000273d10 0000000000000040 W ir_swizzle::is_lvalue(_mesa_glsl_parse_state const*) const
0000000000273d50 0000000000000008 W ir_dereference_variable::variable_referenced() const
0000000000273d60 0000000000000010 W ir_dereference_variable::precision() const
0000000000273d70 0000000000000008 W ir_dereference_variable::whole_variable_referenced()
0000000000273d80 0000000000000014 W ir_dereference_array::variable_referenced() const
0000000000273da0 0000000000000028 W ir_dereference_array::precision() const
0000000000273dd0 0000000000000014 W ir_dereference_record::variable_referenced() const
0000000000273df0 0000000000000024 W ir_dereference_record::precision() const
0000000000273e20 0000000000000004 W ir_constant::~ir_constant()
0000000000273e20 0000000000000004 W ir_constant::~ir_constant()
0000000000273e30 0000000000000004 W ir_function_signature::~ir_function_signature()
0000000000273e30 0000000000000004 W ir_function_signature::~ir_function_signature()
0000000000273e40 0000000000000004 W ir_function::~ir_function()
0000000000273e40 0000000000000004 W ir_function::~ir_function()
0000000000273e50 0000000000000004 W ir_assignment::~ir_assignment()
0000000000273e50 0000000000000004 W ir_assignment::~ir_assignment()
0000000000273e60 0000000000000004 W ir_texture::~ir_texture()
0000000000273e60 0000000000000004 W ir_texture::~ir_texture()
0000000000273e70 0000000000000004 W ir_dereference_record::~ir_dereference_record()
0000000000273e70 0000000000000004 W ir_dereference_record::~ir_dereference_record()
0000000000273e80 0000000000000004 W ir_dereference_array::~ir_dereference_array()
0000000000273e80 0000000000000004 W ir_dereference_array::~ir_dereference_array()
0000000000273e90 0000000000000004 W ir_dereference_variable::~ir_dereference_variable()
0000000000273e90 0000000000000004 W ir_dereference_variable::~ir_dereference_variable()
0000000000273ea0 0000000000000004 W ir_call::~ir_call()
0000000000273ea0 0000000000000004 W ir_call::~ir_call()
0000000000273eb0 0000000000000004 W ir_loop::~ir_loop()
0000000000273eb0 0000000000000004 W ir_loop::~ir_loop()
0000000000273ec0 0000000000000004 W ir_if::~ir_if()
0000000000273ec0 0000000000000004 W ir_if::~ir_if()
0000000000273ed0 0000000000000004 W ir_loop_jump::~ir_loop_jump()
0000000000273ed0 0000000000000004 W ir_loop_jump::~ir_loop_jump()
0000000000273ee0 0000000000000004 W ir_demote::~ir_demote()
0000000000273ee0 0000000000000004 W ir_demote::~ir_demote()
0000000000273ef0 0000000000000004 W ir_discard::~ir_discard()
0000000000273ef0 0000000000000004 W ir_discard::~ir_discard()
0000000000273f00 0000000000000004 W ir_return::~ir_return()
0000000000273f00 0000000000000004 W ir_return::~ir_return()
0000000000273f10 0000000000000004 W ir_swizzle::~ir_swizzle()
0000000000273f10 0000000000000004 W ir_swizzle::~ir_swizzle()
0000000000273f20 0000000000000004 W ir_variable::~ir_variable()
0000000000273f20 0000000000000004 W ir_variable::~ir_variable()
0000000000273f30 0000000000000008 T ir_rvalue::clone(void*, hash_table*) const
0000000000273f40 0000000000000158 T ir_if::clone(void*, hash_table*) const
00000000002740a0 0000000000000060 T ir_return::clone(void*, hash_table*) const
0000000000274100 0000000000000044 T ir_loop_jump::clone(void*, hash_table*) const
0000000000274150 0000000000000060 T ir_discard::clone(void*, hash_table*) const
00000000002741b0 0000000000000034 T ir_demote::clone(void*, hash_table*) const
00000000002741f0 00000000000001c8 T ir_variable::clone(void*, hash_table*) const
00000000002743c0 0000000000000064 t ir_swizzle::clone(void*, hash_table*) const
0000000000274430 00000000000000ac T ir_loop::clone(void*, hash_table*) const
00000000002744e0 0000000000000038 W fixup_ir_call_visitor::visit_enter(ir_call*)
0000000000274520 0000000000000068 T ir_dereference_variable::clone(void*, hash_table*) const
0000000000274590 0000000000000080 T ir_dereference_array::clone(void*, hash_table*) const
0000000000274610 0000000000000074 T ir_dereference_record::clone(void*, hash_table*) const
0000000000274690 00000000000001e4 T ir_texture::clone(void*, hash_table*) const
0000000000274880 00000000000000c0 T ir_assignment::clone(void*, hash_table*) const
0000000000274940 000000000000010c T ir_function::clone(void*, hash_table*) const
0000000000274a50 0000000000000004 W ir_rvalue::~ir_rvalue()
0000000000274a60 0000000000000004 W ir_constant::~ir_constant()
0000000000274a70 0000000000000004 W ir_texture::~ir_texture()
0000000000274a80 0000000000000004 W ir_swizzle::~ir_swizzle()
0000000000274a90 0000000000000004 W ir_function_signature::~ir_function_signature()
0000000000274aa0 0000000000000004 W ir_function::~ir_function()
0000000000274ab0 0000000000000004 W ir_assignment::~ir_assignment()
0000000000274ac0 0000000000000004 W ir_call::~ir_call()
0000000000274ad0 0000000000000004 W ir_loop::~ir_loop()
0000000000274ae0 0000000000000004 W ir_if::~ir_if()
0000000000274af0 0000000000000004 W ir_demote::~ir_demote()
0000000000274b00 0000000000000004 W ir_variable::~ir_variable()
0000000000274b10 0000000000000004 W ir_loop_jump::~ir_loop_jump()
0000000000274b20 0000000000000004 W ir_discard::~ir_discard()
0000000000274b30 0000000000000004 W ir_return::~ir_return()
0000000000274b40 0000000000000004 W ir_dereference_record::~ir_dereference_record()
0000000000274b50 0000000000000004 W ir_dereference_array::~ir_dereference_array()
0000000000274b60 0000000000000004 W ir_dereference_variable::~ir_dereference_variable()
0000000000274b70 0000000000000118 T ir_constant::clone(void*, hash_table*) const
0000000000274c90 0000000000000030 W ir_constant::accept(ir_visitor*)
0000000000274cc0 0000000000000030 W ir_rvalue::accept(ir_visitor*)
0000000000274cf0 0000000000000030 W ir_variable::accept(ir_visitor*)
0000000000274d20 0000000000000030 W ir_assignment::accept(ir_visitor*)
0000000000274d50 0000000000000030 W ir_call::accept(ir_visitor*)
0000000000274d80 0000000000000030 W ir_demote::accept(ir_visitor*)
0000000000274db0 0000000000000030 W ir_texture::accept(ir_visitor*)
0000000000274de0 0000000000000030 W ir_swizzle::accept(ir_visitor*)
0000000000274e10 0000000000000030 W ir_dereference_variable::accept(ir_visitor*)
0000000000274e40 0000000000000030 W ir_dereference_array::accept(ir_visitor*)
0000000000274e70 0000000000000030 W ir_dereference_record::accept(ir_visitor*)
0000000000274ea0 000000000000016c T ir_call::clone(void*, hash_table*) const
0000000000275010 00000000000000e0 T ir_expression::clone(void*, hash_table*) const
00000000002750f0 00000000000000cc t ir_function_signature::clone_prototype(void*, hash_table*) const
00000000002751c0 00000000000000b0 T ir_function_signature::clone(void*, hash_table*) const
0000000000275270 00000000000000d0 t clone_ir_list(void*, exec_list*, exec_list const*)
0000000000275340 000000000000024c t constant_referenced(ir_dereference const*, hash_table*, ir_constant*&, int&)
0000000000275590 0000000000000008 T ir_texture::constant_expression_value(void*, hash_table*)
0000000000275590 0000000000000008 T ir_assignment::constant_expression_value(void*, hash_table*)
0000000000275590 0000000000000008 T ir_rvalue::constant_expression_value(void*, hash_table*)
00000000002755a0 00000000000043c0 t ir_expression::constant_expression_value(void*, hash_table*)
0000000000279960 0000000000000230 T ir_swizzle::constant_expression_value(void*, hash_table*)
0000000000279b90 0000000000000080 T ir_dereference_variable::constant_expression_value(void*, hash_table*)
0000000000279c10 0000000000000250 T ir_dereference_array::constant_expression_value(void*, hash_table*)
0000000000279e60 0000000000000044 T ir_dereference_record::constant_expression_value(void*, hash_table*)
0000000000279eb0 0000000000000004 T ir_constant::constant_expression_value(void*, hash_table*)
0000000000279ec0 00000000000002e0 t ir_function_signature::constant_expression_evaluate_expression_list(void*, exec_list const&, hash_table*, ir_constant**)
000000000027a1a0 00000000000001d4 t ir_function_signature::constant_expression_value(void*, exec_list*, hash_table*) [clone .part.0]
000000000027a380 000000000000007c T ir_call::constant_expression_value(void*, hash_table*)
000000000027a400 0000000000000078 t ir_function_signature::constant_expression_value(void*, exec_list*, hash_table*)
000000000027a480 0000000000000008 T ir_rvalue::is_negative_one() const
000000000027a480 0000000000000008 T ir_rvalue::is_one() const
000000000027a480 0000000000000008 T ir_rvalue::is_zero() const
000000000027a490 00000000000000f4 t steal_memory(ir_instruction*, void*)
000000000027a590 00000000000000a0 T ir_dereference::is_lvalue(_mesa_glsl_parse_state const*) const
000000000027a630 000000000000002c T ir_rvalue::ir_rvalue(ir_node_type)
000000000027a630 000000000000002c t ir_rvalue::ir_rvalue(ir_node_type)
000000000027a660 00000000000003c0 t ir_assignment::set_lhs(ir_rvalue*)
000000000027aa20 0000000000000074 t ir_assignment::whole_variable_written()
000000000027aaa0 0000000000000034 t ir_assignment::ir_assignment(ir_dereference*, ir_rvalue*, ir_rvalue*, unsigned int)
000000000027aaa0 0000000000000034 T ir_assignment::ir_assignment(ir_dereference*, ir_rvalue*, ir_rvalue*, unsigned int)
000000000027aae0 000000000000009c t ir_assignment::ir_assignment(ir_rvalue*, ir_rvalue*, ir_rvalue*)
000000000027aae0 000000000000009c T ir_assignment::ir_assignment(ir_rvalue*, ir_rvalue*, ir_rvalue*)
000000000027ab80 000000000000006c t ir_expression::ir_expression(int, glsl_type const*, ir_rvalue*, ir_rvalue*, ir_rvalue*, ir_rvalue*)
000000000027ab80 000000000000006c T ir_expression::ir_expression(int, glsl_type const*, ir_rvalue*, ir_rvalue*, ir_rvalue*, ir_rvalue*)
000000000027abf0 000000000000024c t ir_expression::ir_expression(int, ir_rvalue*)
000000000027abf0 000000000000024c T ir_expression::ir_expression(int, ir_rvalue*)
000000000027ae40 0000000000000288 t ir_expression::ir_expression(int, ir_rvalue*, ir_rvalue*)
000000000027ae40 0000000000000288 T ir_expression::ir_expression(int, ir_rvalue*, ir_rvalue*)
000000000027b0d0 00000000000000d8 t ir_expression::ir_expression(int, ir_rvalue*, ir_rvalue*, ir_rvalue*)
000000000027b0d0 00000000000000d8 T ir_expression::ir_expression(int, ir_rvalue*, ir_rvalue*, ir_rvalue*)
000000000027b1b0 000000000000002c t ir_expression::get_num_operands(ir_expression_operation)
000000000027b1e0 0000000000000068 t depth_layout_string(ir_depth_layout)
000000000027b250 000000000000002c T ir_expression::variable_referenced() const
000000000027b280 0000000000000034 t ir_constant::ir_constant()
000000000027b280 0000000000000034 T ir_constant::ir_constant()
000000000027b2c0 000000000000004c t ir_constant::ir_constant(glsl_type const*, ir_constant_data const*)
000000000027b2c0 000000000000004c T ir_constant::ir_constant(glsl_type const*, ir_constant_data const*)
000000000027b310 00000000000000b4 t ir_constant::ir_constant(float16_t, unsigned int)
000000000027b310 00000000000000b4 T ir_constant::ir_constant(float16_t, unsigned int)
000000000027b3d0 00000000000000b4 t ir_constant::ir_constant(float, unsigned int)
000000000027b3d0 00000000000000b4 T ir_constant::ir_constant(float, unsigned int)
000000000027b490 00000000000000b4 t ir_constant::ir_constant(double, unsigned int)
000000000027b490 00000000000000b4 T ir_constant::ir_constant(double, unsigned int)
000000000027b550 00000000000000b4 t ir_constant::ir_constant(unsigned int, unsigned int)
000000000027b550 00000000000000b4 T ir_constant::ir_constant(unsigned int, unsigned int)
000000000027b610 00000000000000b4 t ir_constant::ir_constant(int, unsigned int)
000000000027b610 00000000000000b4 T ir_constant::ir_constant(int, unsigned int)
000000000027b6d0 00000000000000b4 t ir_constant::ir_constant(unsigned long, unsigned int)
000000000027b6d0 00000000000000b4 T ir_constant::ir_constant(unsigned long, unsigned int)
000000000027b790 00000000000000b4 t ir_constant::ir_constant(long, unsigned int)
000000000027b790 00000000000000b4 T ir_constant::ir_constant(long, unsigned int)
000000000027b850 00000000000000b0 t ir_constant::ir_constant(bool, unsigned int)
000000000027b850 00000000000000b0 T ir_constant::ir_constant(bool, unsigned int)
000000000027b900 0000000000000118 t ir_constant::ir_constant(ir_constant const*, unsigned int)
000000000027b900 0000000000000118 T ir_constant::ir_constant(ir_constant const*, unsigned int)
000000000027ba20 0000000000000164 t ir_constant::zero(void*, glsl_type const*)
000000000027bb90 00000000000000f8 t ir_constant::get_bool_component(unsigned int) const
000000000027bc90 00000000000000ec t ir_constant::get_float_component(unsigned int) const
000000000027bd80 0000000000000104 t ir_constant::get_double_component(unsigned int) const
000000000027be90 00000000000000d4 t ir_constant::get_int_component(unsigned int) const
000000000027bf70 00000000000000d4 t ir_constant::get_uint_component(unsigned int) const
000000000027c050 00000000000000e0 t ir_constant::get_int64_component(unsigned int) const
000000000027c130 00000000000000e0 t ir_constant::get_uint64_component(unsigned int) const
000000000027c210 0000000000000594 t ir_constant::ir_constant(glsl_type const*, exec_list*)
000000000027c210 0000000000000594 T ir_constant::ir_constant(glsl_type const*, exec_list*)
000000000027c7b0 000000000000003c t ir_constant::get_array_element(unsigned int) const
000000000027c7f0 000000000000000c t ir_constant::get_record_field(int)
000000000027c800 0000000000000230 t ir_constant::copy_offset(ir_constant*, int)
000000000027ca30 000000000000028c t ir_constant::copy_masked_offset(ir_constant*, int, unsigned int)
000000000027ccc0 0000000000000250 t ir_constant::has_value(ir_constant const*) const
000000000027cf10 00000000000001e0 T ir_constant::is_value(float, int) const
000000000027d0f0 0000000000000018 T ir_constant::is_zero() const
000000000027d110 0000000000000018 T ir_constant::is_one() const
000000000027d130 0000000000000018 T ir_constant::is_negative_one() const
000000000027d150 000000000000002c T ir_constant::is_uint16_constant() const
000000000027d180 0000000000000034 t ir_loop::ir_loop()
000000000027d180 0000000000000034 T ir_loop::ir_loop()
000000000027d1c0 0000000000000038 t ir_dereference_variable::ir_dereference_variable(ir_variable*)
000000000027d1c0 0000000000000038 T ir_dereference_variable::ir_dereference_variable(ir_variable*)
000000000027d200 00000000000000c4 t ir_dereference_array::set_array(ir_rvalue*)
000000000027d2d0 0000000000000030 t ir_dereference_array::ir_dereference_array(ir_rvalue*, ir_rvalue*)
000000000027d2d0 0000000000000030 T ir_dereference_array::ir_dereference_array(ir_rvalue*, ir_rvalue*)
000000000027d300 0000000000000094 t ir_dereference_array::ir_dereference_array(ir_variable*, ir_rvalue*)
000000000027d300 0000000000000094 T ir_dereference_array::ir_dereference_array(ir_variable*, ir_rvalue*)
000000000027d3a0 0000000000000074 t ir_dereference_record::ir_dereference_record(ir_rvalue*, char const*)
000000000027d3a0 0000000000000074 T ir_dereference_record::ir_dereference_record(ir_rvalue*, char const*)
000000000027d420 0000000000000014 t ir_texture::opcode_string()
000000000027d440 000000000000000c t ir_texture::set_sampler(ir_dereference*, glsl_type const*)
000000000027d450 000000000000014c t ir_swizzle::init_mask(unsigned int const*, unsigned int)
000000000027d5a0 0000000000000058 t ir_swizzle::ir_swizzle(ir_rvalue*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
000000000027d5a0 0000000000000058 T ir_swizzle::ir_swizzle(ir_rvalue*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
000000000027d600 000000000000003c t ir_swizzle::ir_swizzle(ir_rvalue*, unsigned int const*, unsigned int)
000000000027d600 000000000000003c T ir_swizzle::ir_swizzle(ir_rvalue*, unsigned int const*, unsigned int)
000000000027d640 0000000000000074 t ir_swizzle::ir_swizzle(ir_rvalue*, ir_swizzle_mask)
000000000027d640 0000000000000074 T ir_swizzle::ir_swizzle(ir_rvalue*, ir_swizzle_mask)
000000000027d6c0 0000000000000130 t ir_swizzle::create(ir_rvalue*, char const*, unsigned int)
000000000027d7f0 0000000000000014 T ir_swizzle::variable_referenced() const
000000000027d810 0000000000000238 t ir_variable::ir_variable(glsl_type const*, char const*, ir_variable_mode)
000000000027d810 0000000000000238 T ir_variable::ir_variable(glsl_type const*, char const*, ir_variable_mode)
000000000027da50 0000000000000050 t interpolation_string(unsigned int)
000000000027daa0 0000000000000084 t ir_variable::enable_extension_warning(char const*)
000000000027db30 0000000000000060 t ir_function_signature::ir_function_signature(glsl_type const*, bool (*)(_mesa_glsl_parse_state const*))
000000000027db30 0000000000000060 T ir_function_signature::ir_function_signature(glsl_type const*, bool (*)(_mesa_glsl_parse_state const*))
000000000027db90 0000000000000010 t ir_function_signature::is_builtin() const
000000000027dba0 0000000000000020 t ir_function_signature::is_builtin_available(_mesa_glsl_parse_state const*) const
000000000027dbc0 00000000000000bc t ir_function_signature::qualifiers_match(exec_list*)
000000000027dc80 0000000000000050 t ir_function_signature::replace_parameters(exec_list*)
000000000027dcd0 000000000000005c t ir_function::ir_function(char const*)
000000000027dcd0 000000000000005c T ir_function::ir_function(char const*)
000000000027dd30 000000000000003c t ir_function::has_user_signature()
000000000027dd70 0000000000000044 t ir_rvalue::error_value(void*)
000000000027ddc0 000000000000008c t visit_exec_list(exec_list*, ir_visitor*)
000000000027de50 0000000000000068 t reparent_ir(exec_list*, void*)
000000000027dec0 0000000000000020 t vertices_per_prim(unsigned int)
000000000027dee0 00000000000000f4 t mode_string(ir_variable const*)
000000000027dfe0 0000000000000004 W ir_control_flow_visitor::visit(ir_expression*)
000000000027dff0 0000000000000008 T ir_instruction::equals(ir_instruction const*, ir_node_type) const
000000000027e000 0000000000000004 W ir_expression::~ir_expression()
000000000027e000 0000000000000004 W ir_expression::~ir_expression()
000000000027e010 0000000000000004 W ir_expression::~ir_expression()
000000000027e020 00000000000000c0 T ir_expression::equals(ir_instruction const*, ir_node_type) const
000000000027e0e0 0000000000000030 W ir_expression::accept(ir_visitor*)
000000000027e110 0000000000000090 T ir_constant::equals(ir_instruction const*, ir_node_type) const
000000000027e1a0 0000000000000028 T ir_dereference_variable::equals(ir_instruction const*, ir_node_type) const
000000000027e1d0 000000000000009c T ir_dereference_array::equals(ir_instruction const*, ir_node_type) const
000000000027e270 0000000000000068 T ir_swizzle::equals(ir_instruction const*, ir_node_type) const
000000000027e2e0 0000000000000208 T ir_texture::equals(ir_instruction const*, ir_node_type) const
000000000027e4f0 0000000000000414 t ir_function::matching_signature(_mesa_glsl_parse_state*, exec_list const*, bool, bool*)
000000000027e910 0000000000000018 t ir_function::matching_signature(_mesa_glsl_parse_state*, exec_list const*, bool)
000000000027e930 00000000000000c4 t ir_function::exact_matching_signature(_mesa_glsl_parse_state*, exec_list const*)
000000000027ea00 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_discard*)
000000000027ea00 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_swizzle*)
000000000027ea00 0000000000000034 t ir_hierarchical_visitor::visit_enter(ir_texture*)
000000000027ea00 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_function*)
000000000027ea00 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_assignment*)
000000000027ea00 0000000000000034 t ir_hierarchical_visitor::visit_enter(ir_expression*)
000000000027ea00 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_emit_vertex*)
000000000027ea00 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_end_primitive*)
000000000027ea00 0000000000000034 t ir_hierarchical_visitor::visit_enter(ir_dereference_array*)
000000000027ea00 0000000000000034 t ir_hierarchical_visitor::visit_enter(ir_dereference_record*)
000000000027ea00 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_function_signature*)
000000000027ea00 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_if*)
000000000027ea00 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_call*)
000000000027ea00 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_loop*)
000000000027ea00 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_demote*)
000000000027ea00 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_return*)
000000000027ea40 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_discard*)
000000000027ea40 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_swizzle*)
000000000027ea40 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_texture*)
000000000027ea40 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_function*)
000000000027ea40 0000000000000034 t ir_hierarchical_visitor::visit_leave(ir_assignment*)
000000000027ea40 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_expression*)
000000000027ea40 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_emit_vertex*)
000000000027ea40 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_end_primitive*)
000000000027ea40 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_dereference_array*)
000000000027ea40 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_dereference_record*)
000000000027ea40 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_function_signature*)
000000000027ea40 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_if*)
000000000027ea40 0000000000000034 t ir_hierarchical_visitor::visit_leave(ir_call*)
000000000027ea40 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_loop*)
000000000027ea40 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_demote*)
000000000027ea40 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_return*)
000000000027ea80 000000000000004c T ir_hierarchical_visitor::visit(ir_barrier*)
000000000027ea80 000000000000004c T ir_hierarchical_visitor::visit(ir_constant*)
000000000027ea80 000000000000004c T ir_hierarchical_visitor::visit(ir_variable*)
000000000027ea80 000000000000004c T ir_hierarchical_visitor::visit(ir_loop_jump*)
000000000027ea80 000000000000004c T ir_hierarchical_visitor::visit(ir_dereference_variable*)
000000000027ea80 000000000000004c T ir_hierarchical_visitor::visit(ir_rvalue*)
000000000027ead0 000000000000001c T ir_hierarchical_visitor::ir_hierarchical_visitor()
000000000027ead0 000000000000001c t ir_hierarchical_visitor::ir_hierarchical_visitor()
000000000027eaf0 0000000000000008 t ir_hierarchical_visitor::run(exec_list*)
000000000027eb00 000000000000003c t visit_tree(ir_instruction*, void (*)(ir_instruction*, void*), void*, void (*)(ir_instruction*, void*), void*)
000000000027eb40 0000000000000004 W ir_control_flow_visitor::visit(ir_emit_vertex*)
000000000027eb50 0000000000000004 W ir_control_flow_visitor::visit(ir_end_primitive*)
000000000027eb60 0000000000000004 W ir_control_flow_visitor::visit(ir_barrier*)
000000000027eb70 000000000000001c T ir_dereference_variable::accept(ir_hierarchical_visitor*)
000000000027eb90 000000000000001c T ir_barrier::accept(ir_hierarchical_visitor*)
000000000027ebb0 0000000000000004 W ir_barrier::~ir_barrier()
000000000027ebb0 0000000000000004 W ir_barrier::~ir_barrier()
000000000027ebc0 0000000000000004 W ir_end_primitive::~ir_end_primitive()
000000000027ebc0 0000000000000004 W ir_end_primitive::~ir_end_primitive()
000000000027ebd0 0000000000000004 W ir_emit_vertex::~ir_emit_vertex()
000000000027ebd0 0000000000000004 W ir_emit_vertex::~ir_emit_vertex()
000000000027ebe0 0000000000000058 W ir_emit_vertex::clone(void*, hash_table*) const
000000000027ec40 0000000000000058 W ir_end_primitive::clone(void*, hash_table*) const
000000000027eca0 0000000000000034 W ir_barrier::clone(void*, hash_table*) const
000000000027ece0 0000000000000004 W ir_barrier::~ir_barrier()
000000000027ecf0 0000000000000004 W ir_end_primitive::~ir_end_primitive()
000000000027ed00 0000000000000004 W ir_emit_vertex::~ir_emit_vertex()
000000000027ed10 0000000000000088 T ir_emit_vertex::accept(ir_hierarchical_visitor*)
000000000027eda0 0000000000000088 T ir_end_primitive::accept(ir_hierarchical_visitor*)
000000000027ee30 0000000000000030 W ir_barrier::accept(ir_visitor*)
000000000027ee60 0000000000000030 W ir_emit_vertex::accept(ir_visitor*)
000000000027ee90 0000000000000030 W ir_end_primitive::accept(ir_visitor*)
000000000027eec0 00000000000000c0 t visit_list_elements(ir_hierarchical_visitor*, exec_list*, bool)
000000000027ef80 000000000000001c T ir_rvalue::accept(ir_hierarchical_visitor*)
000000000027efa0 000000000000001c T ir_variable::accept(ir_hierarchical_visitor*)
000000000027efc0 0000000000000078 T ir_loop::accept(ir_hierarchical_visitor*)
000000000027f040 000000000000001c T ir_loop_jump::accept(ir_hierarchical_visitor*)
000000000027f060 00000000000000a0 T ir_function_signature::accept(ir_hierarchical_visitor*)
000000000027f100 0000000000000078 T ir_function::accept(ir_hierarchical_visitor*)
000000000027f180 00000000000000bc T ir_expression::accept(ir_hierarchical_visitor*)
000000000027f240 0000000000000168 T ir_texture::accept(ir_hierarchical_visitor*)
000000000027f3b0 000000000000007c T ir_swizzle::accept(ir_hierarchical_visitor*)
000000000027f430 00000000000000c4 T ir_dereference_array::accept(ir_hierarchical_visitor*)
000000000027f500 000000000000007c T ir_dereference_record::accept(ir_hierarchical_visitor*)
000000000027f580 00000000000000cc t ir_assignment::accept(ir_hierarchical_visitor*)
000000000027f650 000000000000001c T ir_constant::accept(ir_hierarchical_visitor*)
000000000027f670 00000000000000d8 T ir_call::accept(ir_hierarchical_visitor*)
000000000027f750 0000000000000080 T ir_return::accept(ir_hierarchical_visitor*)
000000000027f7d0 0000000000000080 T ir_discard::accept(ir_hierarchical_visitor*)
000000000027f850 0000000000000060 T ir_demote::accept(ir_hierarchical_visitor*)
000000000027f8b0 00000000000000c8 T ir_if::accept(ir_hierarchical_visitor*)
000000000027f980 000000000000001c T ir_print_visitor::visit(ir_rvalue*)
000000000027f9a0 0000000000000074 T ir_print_visitor::visit(ir_dereference_array*)
000000000027fa20 0000000000000074 T ir_print_visitor::visit(ir_dereference_record*)
000000000027faa0 000000000000001c T ir_print_visitor::visit(ir_demote*)
000000000027fac0 0000000000000060 T ir_print_visitor::visit(ir_emit_vertex*)
000000000027fb20 0000000000000060 T ir_print_visitor::visit(ir_end_primitive*)
000000000027fb80 000000000000001c T ir_print_visitor::visit(ir_barrier*)
000000000027fba0 00000000000000d4 T ir_print_visitor::visit(ir_swizzle*)
000000000027fc80 00000000000000ec T ir_print_visitor::visit(ir_assignment*)
000000000027fd70 0000000000000068 T ir_print_visitor::visit(ir_discard*)
000000000027fde0 0000000000000068 T ir_print_visitor::visit(ir_return*)
000000000027fe50 00000000000000c4 t print_type(__sFILE*, glsl_type const*)
000000000027ff20 00000000000000b4 T ir_print_visitor::visit(ir_expression*)
000000000027ffe0 0000000000000024 T ir_print_visitor::visit(ir_loop_jump*)
0000000000280010 0000000000000040 T ir_print_visitor::~ir_print_visitor()
0000000000280010 0000000000000040 T ir_print_visitor::~ir_print_visitor()
0000000000280050 0000000000000294 T ir_print_visitor::visit(ir_texture*)
00000000002802f0 0000000000000060 t print_float_constant(__sFILE*, float)
0000000000280350 00000000000000dc T ir_print_visitor::visit(ir_call*)
0000000000280430 00000000000003f8 T ir_print_visitor::visit(ir_constant*)
0000000000280830 000000000000004c T ir_print_visitor::~ir_print_visitor()
0000000000280880 0000000000000130 T ir_print_visitor::visit(ir_loop*)
00000000002809b0 0000000000000188 T ir_print_visitor::visit(ir_function*)
0000000000280b40 0000000000000348 T ir_print_visitor::visit(ir_function_signature*)
0000000000280e90 00000000000002e0 T ir_print_visitor::visit(ir_if*)
0000000000281170 000000000000008c t ir_instruction::fprint(__sFILE*) const
0000000000281200 000000000000002c t ir_instruction::print() const
0000000000281230 000000000000018c t _mesa_print_ir
00000000002813c0 00000000000000e0 t ir_print_visitor::unique_name(ir_variable*)
00000000002814a0 000000000000033c T ir_print_visitor::visit(ir_variable*)
00000000002817e0 0000000000000064 T ir_print_visitor::visit(ir_dereference_variable*)
0000000000281850 0000000000000004 t validate_ir_tree(exec_list*)
0000000000281860 0000000000000014 t (anonymous namespace)::deref_type_updater::visit(ir_dereference_variable*)
0000000000281880 0000000000000024 t (anonymous namespace)::deref_type_updater::visit_leave(ir_dereference_array*)
00000000002818b0 0000000000000028 t (anonymous namespace)::deref_type_updater::visit_leave(ir_dereference_record*)
00000000002818e0 0000000000000004 t (anonymous namespace)::array_resize_visitor::~array_resize_visitor()
00000000002818e0 0000000000000004 t (anonymous namespace)::array_resize_visitor::~array_resize_visitor()
00000000002818f0 000000000000005c t (anonymous namespace)::find_emit_vertex_visitor::visit_leave(ir_emit_vertex*)
0000000000281950 000000000000005c t (anonymous namespace)::find_emit_vertex_visitor::visit_leave(ir_end_primitive*)
00000000002819b0 0000000000000010 t assign_attribute_or_color_locations(void*, gl_shader_program*, gl_constants*, unsigned int, bool)::temp_attr::compare(void const*, void const*)
00000000002819c0 0000000000000170 t match_explicit_outputs_to_inputs(gl_linked_shader*, gl_linked_shader*)
0000000000281b30 000000000000004c t (anonymous namespace)::find_deref_visitor::visit(ir_dereference_variable*)
0000000000281b80 00000000000001dc t move_non_declarations(exec_list*, exec_node*, bool, gl_linked_shader*)
0000000000281d60 0000000000000008 t (anonymous namespace)::array_resize_visitor::~array_resize_visitor()
0000000000281d70 0000000000000098 t linker_optimisation_loop(gl_context*, exec_list*, unsigned int)
0000000000281e10 00000000000000ec t remap_variables(ir_instruction*, gl_linked_shader*, hash_table*)::remap_visitor::visit(ir_dereference_variable*)
0000000000281f00 0000000000000058 t set_always_active_io(exec_list*, ir_variable_mode) [clone .isra.0]
0000000000281f60 0000000000000474 t add_shader_variable(gl_context const*, gl_shader_program*, set*, unsigned int, unsigned int, ir_variable*, char const*, glsl_type const*, bool, int, bool, glsl_type const*) [clone .isra.0]
00000000002823e0 00000000000001fc t add_interface_variables(gl_context const*, gl_shader_program*, set*, unsigned int, unsigned int) [clone .isra.0]
00000000002825e0 00000000000000dc t (anonymous namespace)::dynamic_sampler_array_indexing_visitor::visit_enter(ir_dereference_array*)
00000000002826c0 00000000000002ac t add_packed_varyings(gl_context const*, gl_shader_program*, set*, int, unsigned int) [clone .isra.0]
0000000000282970 00000000000001bc t (anonymous namespace)::find_assignment_visitor::visit_enter(ir_call*)
0000000000282b30 00000000000000a8 t (anonymous namespace)::find_assignment_visitor::visit_enter(ir_assignment*)
0000000000282be0 00000000000000a8 t linker_error
0000000000282c90 0000000000000104 t (anonymous namespace)::array_resize_visitor::visit(ir_variable*)
0000000000282da0 0000000000000240 t analyze_clip_cull_usage(gl_shader_program*, gl_linked_shader*, gl_context*, shader_info*)
0000000000282fe0 00000000000002e0 t interstage_cross_validate_uniform_blocks(gl_shader_program*, bool)
00000000002832c0 00000000000000a0 t linker_warning
0000000000283360 000000000000095c t assign_attribute_or_color_locations(void*, gl_shader_program*, gl_constants*, unsigned int, bool)
0000000000283cc0 00000000000000c8 t parse_program_resource_name(char const*, char const**)
0000000000283d90 000000000000006c t link_invalidate_variable_locations(exec_list*)
0000000000283e00 0000000000000128 t validate_intrastage_arrays(gl_shader_program*, ir_variable*, ir_variable*, bool)
0000000000283f30 0000000000000624 t cross_validate_globals(gl_context*, gl_shader_program*, exec_list*, glsl_symbol_table*, bool) [clone .isra.0]
0000000000284560 00000000000000a8 t array_sizing_visitor::update_interface_members_array(glsl_type const*, glsl_type const*)
0000000000284610 00000000000005d8 W array_sizing_visitor::visit(ir_variable*)
0000000000284bf0 0000000000001340 t link_intrastage_shaders(void*, gl_context*, gl_shader_program*, gl_shader**, unsigned int, bool)
0000000000285f30 00000000000005d0 t build_program_resource_list(gl_context*, gl_shader_program*, bool)
0000000000286500 0000000000001a60 t link_shaders(gl_context*, gl_shader_program*)
0000000000287f60 0000000000000050 t link_util_should_add_buffer_variable
0000000000287fb0 00000000000000e0 t link_util_add_program_resource
0000000000288090 000000000000008c t link_util_find_empty_block
0000000000288120 00000000000000ac t link_util_update_empty_uniform_locations
00000000002881d0 0000000000000098 t link_util_check_subroutine_resources
0000000000288270 0000000000000264 t link_util_check_uniform_resources
00000000002884e0 0000000000000134 t link_util_calculate_subroutine_compat
0000000000288620 00000000000000f4 t _mark_array_elements_referenced(array_deref_range const*, unsigned int, unsigned int, unsigned int, unsigned int*)
0000000000288720 000000000000001c t link_util_mark_array_elements_referenced
0000000000288740 0000000000000018 t (anonymous namespace)::cmp_actives(void const*, void const*)
0000000000288760 00000000000002a4 t (anonymous namespace)::process_atomic_variable(glsl_type const*, gl_shader_program*, unsigned int*, ir_variable*, (anonymous namespace)::active_atomic_buffer*, unsigned int*, int*, unsigned int)
0000000000288a10 00000000000002f8 t (anonymous namespace)::find_active_atomic_counters(gl_context*, gl_shader_program*, unsigned int*)
0000000000288d10 000000000000036c t link_assign_atomic_counter_resources(gl_context*, gl_shader_program*)
0000000000289080 000000000000025c t link_check_atomic_counter_resources(gl_context*, gl_shader_program*)
00000000002892e0 00000000000000c0 t (anonymous namespace)::call_link_visitor::visit_leave(ir_call*)
00000000002893a0 0000000000000064 t find_matching_signature(char const*, exec_list const*, glsl_symbol_table*)
0000000000289410 0000000000000320 t (anonymous namespace)::call_link_visitor::visit_enter(ir_call*)
0000000000289730 000000000000001c t (anonymous namespace)::call_link_visitor::visit(ir_variable*)
0000000000289750 0000000000000180 t (anonymous namespace)::call_link_visitor::visit(ir_dereference_variable*)
00000000002898d0 000000000000009c t link_function_calls(gl_shader_program*, gl_linked_shader*, gl_shader**, unsigned int)
0000000000289970 000000000000011c t (anonymous namespace)::interstage_member_mismatch(gl_shader_program*, glsl_type const*, glsl_type const*)
0000000000289a90 0000000000000260 t (anonymous namespace)::intrastage_match(ir_variable*, ir_variable*, gl_shader_program*, bool)
0000000000289cf0 0000000000000310 t validate_intrastage_interface_blocks(gl_shader_program*, gl_shader const**, unsigned int)
000000000028a000 00000000000004e0 t validate_interstage_inout_blocks(gl_shader_program*, gl_linked_shader const*, gl_linked_shader const*)
000000000028a4e0 00000000000001f0 t validate_interstage_uniform_blocks(gl_shader_program*, gl_linked_shader**)
000000000028a6d0 0000000000000004 T program_resource_visitor::enter_record(glsl_type const*, char const*, bool, glsl_interface_packing)
000000000028a6d0 0000000000000004 T program_resource_visitor::leave_record(glsl_type const*, char const*, bool, glsl_interface_packing)
000000000028a6e0 0000000000000004 T program_resource_visitor::set_buffer_offset(unsigned int)
000000000028a6e0 0000000000000004 T program_resource_visitor::set_record_array_count(unsigned int)
000000000028a6f0 0000000000000008 W parcel_out_uniform_storage::set_buffer_offset(unsigned int)
000000000028a700 0000000000000008 W parcel_out_uniform_storage::set_record_array_count(unsigned int)
000000000028a710 0000000000000028 W parcel_out_uniform_storage::~parcel_out_uniform_storage()
000000000028a710 0000000000000028 W parcel_out_uniform_storage::~parcel_out_uniform_storage()
000000000028a740 000000000000007c t get_top_level_name(char const*)
000000000028a7c0 00000000000000dc t is_top_level_shader_storage_block_member(char const*, char const*, char const*)
000000000028a8a0 0000000000000078 W parcel_out_uniform_storage::leave_record(glsl_type const*, char const*, bool, glsl_interface_packing)
000000000028a920 0000000000000078 W parcel_out_uniform_storage::enter_record(glsl_type const*, char const*, bool, glsl_interface_packing)
000000000028a9a0 0000000000000034 W parcel_out_uniform_storage::~parcel_out_uniform_storage()
000000000028a9e0 0000000000000070 t assign_hidden_uniform_slot_id(char const*, unsigned int, void*)
000000000028aa50 00000000000001dc t parcel_out_uniform_storage::set_opaque_indices(glsl_type const*, gl_uniform_storage*, char const*, unsigned int&, string_to_uint_map*) [clone .isra.0]
000000000028ac30 0000000000000214 t (anonymous namespace)::count_uniform_size::visit_field(glsl_type const*, char const*, bool, glsl_type const*, glsl_interface_packing, bool)
000000000028ae50 0000000000000ad4 W parcel_out_uniform_storage::visit_field(glsl_type const*, char const*, bool, glsl_type const*, glsl_interface_packing, bool)
000000000028b930 00000000000003d4 t program_resource_visitor::recursion(glsl_type const*, char**, unsigned long, bool, glsl_type const*, glsl_interface_packing, bool, unsigned int, glsl_struct_field const*)
000000000028bd10 00000000000000b4 t program_resource_visitor::process(glsl_type const*, char const*, bool)
000000000028bdd0 0000000000000228 t program_resource_visitor::process(ir_variable*, glsl_type const*, bool)
000000000028c000 000000000000001c t program_resource_visitor::process(ir_variable*, bool)
000000000028c020 000000000000005c t link_calculate_matrix_stride(glsl_type const*, bool, glsl_interface_packing)
000000000028c080 00000000000004b8 t parcel_out_uniform_storage::set_and_process(ir_variable*)
000000000028c540 0000000000000ea0 t link_assign_uniform_locations(gl_shader_program*, gl_context*)
000000000028d3e0 0000000000000288 t linker::set_opaque_binding(void*, gl_shader_program*, ir_variable const*, glsl_type const*, char const*, int*)
000000000028d670 00000000000000a8 t linker::copy_constant_to_storage(gl_constant_value*, ir_constant const*, glsl_base_type, unsigned int, unsigned int)
000000000028d720 00000000000002c8 t linker::set_uniform_initializer(void*, gl_shader_program*, char const*, glsl_type const*, ir_constant*, unsigned int)
000000000028d9f0 00000000000001b4 t link_set_uniform_initializers(gl_shader_program*, unsigned int)
000000000028dbb0 0000000000000008 t (anonymous namespace)::ubo_visitor::set_buffer_offset(unsigned int)
000000000028dbc0 0000000000000010 t (anonymous namespace)::count_block_size::visit_field(glsl_type const*, char const*, bool, glsl_type const*, glsl_interface_packing, bool)
000000000028dbd0 0000000000000068 t resize_block_array(glsl_type const*, uniform_block_array_elements*)
000000000028dc40 0000000000000188 t process_block_array_leaf(char const*, gl_uniform_block*, (anonymous namespace)::ubo_visitor*, gl_uniform_buffer_variable*, link_uniform_block_active const*, unsigned int*, unsigned int, unsigned int, gl_context*, gl_shader_program*)
000000000028ddd0 0000000000000204 t (anonymous namespace)::ubo_visitor::visit_field(glsl_type const*, char const*, bool, glsl_type const*, glsl_interface_packing, bool)
000000000028dfe0 0000000000000134 t process_block_array(uniform_block_array_elements*, char**, unsigned long, gl_uniform_block*, (anonymous namespace)::ubo_visitor*, gl_uniform_buffer_variable*, link_uniform_block_active const*, unsigned int*, unsigned int, gl_context*, gl_shader_program*, unsigned int)
000000000028e120 0000000000000068 t (anonymous namespace)::ubo_visitor::enter_record(glsl_type const*, char const*, bool, glsl_interface_packing)
000000000028e120 0000000000000068 t (anonymous namespace)::ubo_visitor::leave_record(glsl_type const*, char const*, bool, glsl_interface_packing)
000000000028e190 00000000000001ac t create_buffer_blocks(void*, gl_context*, gl_shader_program*, gl_uniform_block**, unsigned int, hash_table*, unsigned int, bool) [clone .part.0]
000000000028e340 0000000000000318 t link_uniform_blocks(void*, gl_context*, gl_shader_program*, gl_linked_shader*, gl_uniform_block**, unsigned int*, gl_uniform_block**, unsigned int*)
000000000028e660 000000000000023c t link_cross_validate_uniform_block(void*, gl_uniform_block**, unsigned int*, gl_uniform_block*)
000000000028e8a0 0000000000000090 t compute_variable_location_slot(ir_variable*, gl_shader_stage)
000000000028e930 0000000000000028 t cmp_xfb_offset(void const*, void const*)
000000000028e960 0000000000000028 t (anonymous namespace)::varying_matches::match_comparator(void const*, void const*)
000000000028e990 0000000000000430 t check_location_aliasing(explicit_location_info (*) [4], ir_variable*, unsigned int, unsigned int, unsigned int, glsl_type const*, unsigned int, bool, bool, bool, gl_shader_program*, gl_shader_stage)
000000000028edc0 0000000000000060 t io_variable_cmp(void const*, void const*)
000000000028ee20 0000000000000438 t cross_validate_types_and_qualifiers(gl_context*, gl_shader_program*, ir_variable const*, ir_variable const*, gl_shader_stage, gl_shader_stage)
000000000028f260 0000000000000094 t cross_validate_front_and_back_color(gl_context*, gl_shader_program*, ir_variable const*, ir_variable const*, ir_variable const*, gl_shader_stage, gl_shader_stage)
000000000028f300 000000000000023c t create_xfb_varying_names(void*, glsl_type const*, char**, unsigned long, unsigned int*, char const*, glsl_type const*, char***)
000000000028f540 00000000000000ec t canonicalize_shader_io(exec_list*, ir_variable_mode)
000000000028f630 000000000000007c W tfeedback_candidate_generator::visit_field(glsl_type const*, char const*, bool, glsl_type const*, glsl_interface_packing, bool)
000000000028f6b0 0000000000000048 t (anonymous namespace)::varying_matches::xfb_comparator(void const*, void const*)
000000000028f700 00000000000000d8 t remove_unused_shader_inputs_and_outputs(bool, gl_linked_shader*, ir_variable_mode) [clone .part.0]
000000000028f7e0 0000000000000048 t (anonymous namespace)::varying_matches::not_xfb_comparator(void const*, void const*)
000000000028f830 000000000000029c t validate_explicit_variable_location(gl_context*, explicit_location_info (*) [4], ir_variable*, gl_shader_program*, gl_linked_shader*)
000000000028fad0 0000000000000170 t reserved_varying_slot(gl_linked_shader*, ir_variable_mode)
000000000028fc40 00000000000004a4 t (anonymous namespace)::varying_matches::record(ir_variable*, ir_variable*) [clone .part.0]
00000000002900f0 0000000000000148 t validate_first_and_last_interface_explicit_locations(gl_context*, gl_shader_program*, gl_shader_stage, gl_shader_stage)
0000000000290240 00000000000003ec t cross_validate_outputs_to_inputs(gl_context*, gl_shader_program*, gl_linked_shader*, gl_linked_shader*)
0000000000290630 0000000000000214 t tfeedback_decl::init(gl_context*, void const*, char const*)
0000000000290850 0000000000000304 t tfeedback_decl::assign_location(gl_context*, gl_shader_program*)
0000000000290b60 00000000000000c0 t tfeedback_decl::get_num_outputs() const
0000000000290c20 00000000000004b8 t tfeedback_decl::store(gl_context*, gl_shader_program*, gl_transform_feedback_info*, unsigned int, unsigned int, unsigned int, unsigned int**, bool*, bool, void const*) const
00000000002910e0 00000000000000c0 t tfeedback_decl::find_candidate(gl_shader_program*, hash_table*)
00000000002911a0 0000000000000110 t linker::populate_consumer_input_sets(void*, exec_list*, hash_table*, hash_table*, ir_variable**)
00000000002912b0 00000000000000cc t linker::get_matching_input(void*, ir_variable const*, hash_table*, hash_table*, ir_variable**)
0000000000291380 0000000000001058 t assign_varying_locations(gl_context*, void*, gl_shader_program*, gl_linked_shader*, gl_linked_shader*, unsigned int, tfeedback_decl*, unsigned long)
00000000002923e0 0000000000000c2c t link_varyings(gl_shader_program*, unsigned int, unsigned int, gl_context*, void*)
0000000000293010 0000000000000030 t (anonymous namespace)::loop_analysis::visit(ir_loop_jump*)
0000000000293040 0000000000000028 t (anonymous namespace)::loop_analysis::visit_enter(ir_call*)
0000000000293070 0000000000000024 t (anonymous namespace)::loop_analysis::visit_enter(ir_if*)
00000000002930a0 0000000000000024 t (anonymous namespace)::loop_analysis::visit_leave(ir_if*)
00000000002930d0 0000000000000028 t (anonymous namespace)::loop_analysis::visit_enter(ir_assignment*)
0000000000293100 0000000000000010 t (anonymous namespace)::loop_analysis::visit_leave(ir_assignment*)
0000000000293110 000000000000000c W loop_variable_state::_ralloc_destructor(void*)
0000000000293120 0000000000000088 W examine_rhs::visit(ir_dereference_variable*)
00000000002931b0 0000000000000198 t (anonymous namespace)::loop_analysis::visit(ir_dereference_variable*)
0000000000293350 000000000000002c t loop_state::~loop_state()
0000000000293350 000000000000002c T loop_state::~loop_state()
0000000000293380 00000000000000cc t loop_state::insert(ir_loop*)
0000000000293450 0000000000000040 t (anonymous namespace)::loop_analysis::visit_enter(ir_loop*)
0000000000293490 0000000000000020 t loop_state::get(ir_loop const*)
00000000002934b0 0000000000000038 t loop_variable_state::get(ir_variable const*)
00000000002934f0 000000000000009c t analyze_loop_variables(exec_list*)
0000000000293590 0000000000000b9c t (anonymous namespace)::loop_analysis::visit_leave(ir_loop*)
0000000000294130 0000000000000018 W loop_unroll_count::visit_enter(ir_assignment*)
0000000000294150 0000000000000018 W loop_unroll_count::visit_enter(ir_expression*)
0000000000294170 0000000000000014 W loop_unroll_count::visit_enter(ir_loop*)
0000000000294190 00000000000001e8 W loop_unroll_count::visit_enter(ir_dereference_array*)
0000000000294380 00000000000001c0 t (anonymous namespace)::loop_unroll_visitor::complex_unroll(ir_loop*, int, bool, bool, bool)
0000000000294540 000000000000025c t (anonymous namespace)::loop_unroll_visitor::simple_unroll(ir_loop*, int)
00000000002947a0 000000000000055c t (anonymous namespace)::loop_unroll_visitor::visit_leave(ir_loop*)
0000000000294d00 0000000000000064 t unroll_loops(exec_list*, loop_state*, gl_shader_compiler_options const*)
0000000000294d70 0000000000000058 t (anonymous namespace)::lower_builtins_visitor::visit_leave(ir_call*)
0000000000294dd0 0000000000000050 t lower_builtins(exec_list*)
0000000000294e20 0000000000000008 t (anonymous namespace)::lower_const_array_visitor::visit_enter(ir_texture*)
0000000000294e30 000000000000013c t (anonymous namespace)::lower_const_array_visitor::handle_rvalue(ir_rvalue**)
0000000000294f70 00000000000000c8 t lower_const_arrays_to_uniforms(exec_list*, unsigned int, unsigned int)
0000000000295040 000000000000009c t (anonymous namespace)::lower_cs_derived_visitor::add_system_value(int, glsl_type const*, char const*)
00000000002950e0 00000000000001cc t (anonymous namespace)::lower_cs_derived_visitor::find_sysvals() [clone .part.0]
00000000002952b0 00000000000003b8 t (anonymous namespace)::lower_cs_derived_visitor::visit(ir_dereference_variable*)
0000000000295670 0000000000000098 t lower_cs_derived(gl_linked_shader*)
0000000000295710 00000000000000cc t (anonymous namespace)::lower_discard_flow_visitor::generate_discard_break()
00000000002957e0 000000000000004c t (anonymous namespace)::lower_discard_flow_visitor::visit_enter(ir_loop*)
0000000000295830 00000000000000d8 t (anonymous namespace)::lower_discard_flow_visitor::visit_enter(ir_discard*)
0000000000295910 00000000000000d0 t (anonymous namespace)::lower_discard_flow_visitor::visit_enter(ir_function_signature*)
00000000002959e0 0000000000000068 t (anonymous namespace)::lower_discard_flow_visitor::visit(ir_loop_jump*)
0000000000295a50 00000000000000b0 t lower_discard_flow(exec_list*)
0000000000295b00 0000000000000004 t (anonymous namespace)::lower_distance_visitor_counter::handle_rvalue(ir_rvalue**)
0000000000295b10 0000000000000138 t (anonymous namespace)::lower_distance_visitor_counter::visit(ir_variable*)
0000000000295c50 00000000000000a8 t (anonymous namespace)::lower_distance_visitor::is_distance_vec8(ir_rvalue*)
0000000000295d00 00000000000000a4 t (anonymous namespace)::lower_distance_visitor::fix_lhs(ir_assignment*) [clone .part.0]
0000000000295db0 00000000000001b4 t (anonymous namespace)::lower_distance_visitor::visit(ir_variable*)
0000000000295f70 0000000000000478 t (anonymous namespace)::lower_distance_visitor::handle_rvalue(ir_rvalue**)
00000000002963f0 0000000000000224 t (anonymous namespace)::lower_distance_visitor::visit_leave(ir_assignment*)
0000000000296620 000000000000016c t lower_clip_cull_distance(gl_shader_program*, gl_linked_shader*)
0000000000296790 00000000000002a8 t (anonymous namespace)::lower_distance_visitor::visit_leave(ir_call*)
0000000000296a40 00000000000000e4 t (anonymous namespace)::lower_instructions_visitor::_imm_fp(void*, glsl_type const*, double, unsigned int) [clone .constprop.0] [clone .isra.0]
0000000000296b30 0000000000000078 t (anonymous namespace)::lower_instructions_visitor::_carry(ir_builder::operand, ir_builder::operand) [clone .isra.0]
0000000000296bb0 0000000000000070 t (anonymous namespace)::lower_instructions_visitor::div_to_mul_rcp(ir_expression*)
0000000000296c20 000000000000005c t (anonymous namespace)::lower_instructions_visitor::dfloor_to_dfrac(ir_expression*)
0000000000296c80 00000000000002fc t (anonymous namespace)::lower_instructions_visitor::mod_to_floor(ir_expression*)
0000000000296f80 000000000000023c t (anonymous namespace)::lower_instructions_visitor::int_div_to_mul_rcp(ir_expression*)
00000000002971c0 0000000000000290 t (anonymous namespace)::lower_instructions_visitor::double_dot_to_fma(ir_expression*)
0000000000297450 00000000000001e8 t (anonymous namespace)::lower_instructions_visitor::dceil_to_dfrac(ir_expression*)
0000000000297640 0000000000000318 t (anonymous namespace)::lower_instructions_visitor::dfrexp_exp_to_arith(ir_expression*)
0000000000297960 0000000000000308 t (anonymous namespace)::lower_instructions_visitor::dtrunc_to_dfrac(ir_expression*)
0000000000297c70 0000000000000428 t (anonymous namespace)::lower_instructions_visitor::dround_even_to_dfrac(ir_expression*)
00000000002980a0 000000000000058c t (anonymous namespace)::lower_instructions_visitor::dfrexp_sig_to_arith(ir_expression*)
0000000000298630 0000000000000404 t (anonymous namespace)::lower_instructions_visitor::extract_to_shifts(ir_expression*)
0000000000298a40 0000000000000474 t (anonymous namespace)::lower_instructions_visitor::bit_count_to_math(ir_expression*)
0000000000298ec0 0000000000000ba0 t (anonymous namespace)::lower_instructions_visitor::dldexp_to_arith(ir_expression*)
0000000000299a60 0000000000000af4 t (anonymous namespace)::lower_instructions_visitor::ldexp_to_arith(ir_expression*)
000000000029a560 0000000000001380 t (anonymous namespace)::lower_instructions_visitor::imul_high_to_mul(ir_expression*)
000000000029b8e0 00000000000021e8 t (anonymous namespace)::lower_instructions_visitor::visit_leave(ir_expression*)
000000000029dad0 0000000000000060 t lower_instructions(exec_list*, unsigned int)
000000000029db30 0000000000000004 t (anonymous namespace)::ir_lower_jumps_visitor::visit(ir_discard*)
000000000029db40 0000000000000004 t (anonymous namespace)::ir_lower_jumps_visitor::~ir_lower_jumps_visitor()
000000000029db40 0000000000000004 t (anonymous namespace)::ir_lower_jumps_visitor::~ir_lower_jumps_visitor()
000000000029db50 0000000000000178 t (anonymous namespace)::ir_lower_jumps_visitor::create_lowered_break()
000000000029dcd0 0000000000000284 t (anonymous namespace)::ir_lower_jumps_visitor::insert_lowered_return(ir_return*)
000000000029df60 0000000000000008 t (anonymous namespace)::ir_lower_jumps_visitor::~ir_lower_jumps_visitor()
000000000029df70 0000000000000040 t (anonymous namespace)::ir_lower_jumps_visitor::visit(ir_return*)
000000000029dfb0 000000000000004c t (anonymous namespace)::ir_lower_jumps_visitor::visit(ir_loop_jump*)
000000000029e000 0000000000000070 t (anonymous namespace)::ir_lower_jumps_visitor::visit(ir_function*)
000000000029e070 00000000000001ec t (anonymous namespace)::ir_lower_jumps_visitor::visit(ir_function_signature*)
000000000029e260 0000000000000544 t (anonymous namespace)::ir_lower_jumps_visitor::visit(ir_loop*)
000000000029e7b0 0000000000000ab8 t (anonymous namespace)::ir_lower_jumps_visitor::visit(ir_if*)
000000000029f270 000000000000008c t do_lower_jumps(exec_list*, bool, bool, bool, bool, bool)
000000000029f300 0000000000000094 T lower_packed_varyings_gs_splicer::visit_leave(ir_emit_vertex*)
000000000029f3a0 0000000000000094 T lower_packed_varyings_return_splicer::visit_leave(ir_return*)
000000000029f440 00000000000011b0 t (anonymous namespace)::lower_packed_varyings_visitor::lower_rvalue(ir_rvalue*, unsigned int, ir_variable*, char const*, bool, unsigned int)
00000000002a05f0 0000000000000530 t lower_packed_varyings(void*, unsigned int, unsigned char const*, ir_variable_mode, unsigned int, gl_linked_shader*, bool, bool, bool)
00000000002a0b20 0000000000000144 t (anonymous namespace)::lower_packed_varyings_visitor::lower_arraylike(ir_rvalue*, unsigned int, unsigned int, ir_variable*, char const*, bool, unsigned int)
00000000002a0c70 000000000000008c t process_array_ir(void*, ir_dereference_array*, ir_rvalue*)
00000000002a0d00 0000000000000060 t process_array_type(glsl_type const*, unsigned int)
00000000002a0d60 0000000000000058 t (anonymous namespace)::flatten_named_interface_blocks_declarations::visit_leave(ir_expression*)
00000000002a0dc0 0000000000000170 t (anonymous namespace)::flatten_named_interface_blocks_declarations::handle_rvalue(ir_rvalue**)
00000000002a0f30 00000000000000c4 t (anonymous namespace)::flatten_named_interface_blocks_declarations::visit_leave(ir_assignment*)
00000000002a1000 00000000000003f0 t lower_named_interface_blocks(void*, gl_linked_shader*)
00000000002a13f0 0000000000000008 t (anonymous namespace)::lower_precision_visitor::visit_enter(ir_texture*)
00000000002a13f0 0000000000000008 t (anonymous namespace)::lower_precision_visitor::visit_enter(ir_dereference_array*)
00000000002a13f0 0000000000000008 t (anonymous namespace)::lower_precision_visitor::visit_enter(ir_dereference_record*)
00000000002a13f0 0000000000000008 t (anonymous namespace)::lower_precision_visitor::visit_enter(ir_call*)
00000000002a1400 00000000000000a4 t (anonymous namespace)::find_lowerable_rvalues_visitor::visit_leave(ir_assignment*)
00000000002a14b0 0000000000000070 t (anonymous namespace)::find_lowerable_rvalues_visitor::visit_enter(ir_expression*)
00000000002a1520 0000000000000058 t (anonymous namespace)::lower_precision_visitor::visit_leave(ir_expression*)
00000000002a1580 0000000000000080 t (anonymous namespace)::convert_precision(int, ir_rvalue*)
00000000002a1600 00000000000000e8 t (anonymous namespace)::lower_precision_visitor::handle_rvalue(ir_rvalue**)
00000000002a16f0 00000000000000c8 t (anonymous namespace)::find_precision_visitor::handle_rvalue(ir_rvalue**)
00000000002a17c0 0000000000000104 t (anonymous namespace)::find_lowerable_rvalues_visitor::visit_enter(ir_dereference_array*)
00000000002a18d0 00000000000001b4 t (anonymous namespace)::find_lowerable_rvalues_visitor::stack_enter(ir_instruction*, void*)
00000000002a1a90 000000000000008c t (anonymous namespace)::find_lowerable_rvalues_visitor::visit_enter(ir_texture*)
00000000002a1b20 00000000000000f0 t (anonymous namespace)::find_lowerable_rvalues_visitor::visit_enter(ir_dereference_record*)
00000000002a1c10 000000000000014c t (anonymous namespace)::find_lowerable_rvalues_visitor::visit_leave(ir_call*)
00000000002a1d60 0000000000000150 t lower_precision(exec_list*)
00000000002a1eb0 000000000000016c t (anonymous namespace)::find_precision_visitor::visit_enter(ir_call*)
00000000002a2020 0000000000000128 t void std::vector<ir_instruction*, std::allocator<ir_instruction*> >::_M_realloc_insert<ir_instruction* const&>(__gnu_cxx::__normal_iterator<ir_instruction**, std::vector<ir_instruction*, std::allocator<ir_instruction*> > >, ir_instruction* const&)
00000000002a2150 00000000000001e4 t (anonymous namespace)::find_lowerable_rvalues_visitor::pop_stack_entry()
00000000002a2340 0000000000000008 t (anonymous namespace)::find_lowerable_rvalues_visitor::stack_leave(ir_instruction*, void*)
00000000002a2350 00000000000000ec t (anonymous namespace)::find_lowerable_rvalues_visitor::visit(ir_dereference_variable*)
00000000002a2440 0000000000000064 t (anonymous namespace)::find_lowerable_rvalues_visitor::visit(ir_constant*)
00000000002a24b0 0000000000000324 t (anonymous namespace)::lower_subroutine_visitor::visit_leave(ir_call*)
00000000002a27e0 0000000000000060 t lower_subroutine(exec_list*, _mesa_glsl_parse_state*)
00000000002a2840 0000000000000154 t (anonymous namespace)::lower_tess_level_visitor::handle_rvalue(ir_rvalue**)
00000000002a29a0 0000000000000150 t (anonymous namespace)::lower_tess_level_visitor::visit(ir_variable*)
00000000002a2af0 00000000000000a8 t (anonymous namespace)::lower_tess_level_visitor::is_tess_level_array(ir_rvalue*)
00000000002a2ba0 0000000000000120 t (anonymous namespace)::lower_tess_level_visitor::fix_lhs(ir_assignment*) [clone .part.0]
00000000002a2cc0 0000000000000238 t (anonymous namespace)::lower_tess_level_visitor::visit_leave(ir_assignment*)
00000000002a2f00 00000000000000a4 t lower_tess_level(gl_linked_shader*)
00000000002a2fb0 0000000000000288 t (anonymous namespace)::lower_tess_level_visitor::visit_leave(ir_call*)
00000000002a3240 00000000000000e8 t (anonymous namespace)::ir_vec_index_to_swizzle_visitor::handle_rvalue(ir_rvalue**)
00000000002a3330 000000000000004c t do_vec_index_to_swizzle(exec_list*)
00000000002a3380 0000000000000004 t (anonymous namespace)::vector_deref_visitor::~vector_deref_visitor()
00000000002a3380 0000000000000004 t (anonymous namespace)::vector_deref_visitor::~vector_deref_visitor()
00000000002a3390 0000000000000008 t (anonymous namespace)::vector_deref_visitor::~vector_deref_visitor()
00000000002a33a0 00000000000000e4 t (anonymous namespace)::vector_deref_visitor::handle_rvalue(ir_rvalue**)
00000000002a3490 00000000000004e8 t (anonymous namespace)::vector_deref_visitor::visit_enter(ir_assignment*)
00000000002a3980 000000000000007c t lower_vector_derefs(gl_linked_shader*)
00000000002a3a00 0000000000000004 t (anonymous namespace)::vector_insert_visitor::~vector_insert_visitor()
00000000002a3a00 0000000000000004 t (anonymous namespace)::vector_insert_visitor::~vector_insert_visitor()
00000000002a3a10 0000000000000008 t (anonymous namespace)::vector_insert_visitor::~vector_insert_visitor()
00000000002a3a20 0000000000000394 t (anonymous namespace)::vector_insert_visitor::handle_rvalue(ir_rvalue**)
00000000002a3dc0 0000000000000078 t lower_vector_insert(exec_list*, bool)
00000000002a3e40 000000000000024c t (anonymous namespace)::lower_vertex_id_visitor::visit(ir_dereference_variable*)
00000000002a4090 00000000000000dc t lower_vertex_id(gl_linked_shader*)
00000000002a4170 0000000000000010 t (anonymous namespace)::compute_shader_enabled(_mesa_glsl_parse_state const*)
00000000002a4180 00000000000000cc t (anonymous namespace)::lower_shared_reference_visitor::get_shared_offset(ir_variable const*)
00000000002a4250 000000000000051c t (anonymous namespace)::lower_shared_reference_visitor::visit_enter(ir_call*)
00000000002a4770 0000000000000254 t (anonymous namespace)::lower_shared_reference_visitor::visit_enter(ir_assignment*)
00000000002a49d0 00000000000005a4 t (anonymous namespace)::lower_shared_reference_visitor::insert_buffer_access(void*, ir_dereference*, glsl_type const*, ir_rvalue*, unsigned int, int)
00000000002a4f80 000000000000023c t (anonymous namespace)::lower_shared_reference_visitor::handle_rvalue(ir_rvalue**)
00000000002a51c0 00000000000000e0 t lower_shared_reference(gl_context*, gl_shader_program*, gl_linked_shader*)
00000000002a52a0 0000000000000044 t (anonymous namespace)::shader_storage_buffer_object(_mesa_glsl_parse_state const*)
00000000002a52f0 0000000000000080 t (anonymous namespace)::lower_ubo_reference_visitor::ssbo_access_params()
00000000002a5370 000000000000052c t (anonymous namespace)::lower_ubo_reference_visitor::setup_for_load_or_store(void*, ir_variable*, ir_rvalue*, ir_rvalue**, unsigned int*, bool*, glsl_type const**, glsl_interface_packing)
00000000002a58a0 00000000000005bc t (anonymous namespace)::lower_ubo_reference_visitor::visit_enter(ir_call*)
00000000002a5e60 000000000000028c t (anonymous namespace)::lower_ubo_reference_visitor::handle_rvalue(ir_rvalue**)
00000000002a60f0 0000000000000040 t (anonymous namespace)::lower_ubo_reference_visitor::visit_enter(ir_texture*)
00000000002a6130 0000000000000348 t (anonymous namespace)::lower_ubo_reference_visitor::calculate_ssbo_unsized_array_length(ir_expression*)
00000000002a6480 00000000000000a0 t (anonymous namespace)::lower_ubo_reference_visitor::visit_enter(ir_expression*)
00000000002a6520 00000000000003c8 t (anonymous namespace)::lower_ubo_reference_visitor::ssbo_store(void*, ir_rvalue*, ir_rvalue*, unsigned int)
00000000002a68f0 0000000000000540 t (anonymous namespace)::lower_ubo_reference_visitor::insert_buffer_access(void*, ir_dereference*, glsl_type const*, ir_rvalue*, unsigned int, int)
00000000002a6e30 0000000000000684 t (anonymous namespace)::lower_ubo_reference_visitor::visit_enter(ir_assignment*)
00000000002a74c0 0000000000000074 t lower_ubo_reference(gl_linked_shader*, bool, bool)
00000000002a7540 0000000000000094 t (anonymous namespace)::lower_xfb_var_splicer::visit_leave(ir_return*)
00000000002a75e0 000000000000007c t get_field_name(char const*)
00000000002a7660 0000000000000200 t get_deref(void*, char const*, gl_linked_shader*, ir_dereference**, glsl_type const**)
00000000002a7860 00000000000000d0 t (anonymous namespace)::lower_xfb_var_splicer::visit_leave(ir_function_signature*)
00000000002a7930 0000000000000214 t lower_xfb_varying(void*, gl_linked_shader*, char const*)
00000000002a7b50 0000000000000004 t (anonymous namespace)::ir_algebraic_visitor::~ir_algebraic_visitor()
00000000002a7b50 0000000000000004 t (anonymous namespace)::ir_algebraic_visitor::~ir_algebraic_visitor()
00000000002a7b60 000000000000002c t (anonymous namespace)::ir_algebraic_visitor::visit_enter(ir_assignment*)
00000000002a7b90 000000000000001c t is_vec_negative_one(ir_constant*)
00000000002a7bb0 0000000000000008 t (anonymous namespace)::ir_algebraic_visitor::~ir_algebraic_visitor()
00000000002a7bc0 00000000000000d0 t is_greater_than_zero(ir_constant*)
00000000002a7c90 00000000000000dc t is_less_than_one(ir_constant*)
00000000002a7d70 000000000000026c t (anonymous namespace)::ir_algebraic_visitor::reassociate_constant(ir_expression*, int, ir_constant*, ir_expression*) [clone .part.0] [clone .isra.0]
00000000002a7fe0 0000000000000020 t (anonymous namespace)::ir_algebraic_visitor::reassociate_constant(ir_expression*, int, ir_constant*, ir_expression*) [clone .isra.0]
00000000002a8000 0000000000000040 t ir_builder::operand::operand(ir_variable*)
00000000002a8000 0000000000000040 W ir_builder::operand::operand(ir_variable*)
00000000002a8040 0000000000000040 t ir_builder::deref::deref(ir_variable*)
00000000002a8040 0000000000000040 W ir_builder::deref::deref(ir_variable*)
00000000002a8080 0000000000001d1c t (anonymous namespace)::ir_algebraic_visitor::handle_rvalue(ir_rvalue**)
00000000002a9da0 0000000000000068 t do_algebraic(exec_list*, bool, gl_shader_compiler_options const*)
00000000002a9e10 0000000000000010 t (anonymous namespace)::ir_array_reference_visitor::visit_leave(ir_assignment*)
00000000002a9e20 0000000000000004 W ir_array_splitting_visitor::~ir_array_splitting_visitor()
00000000002a9e20 0000000000000004 W ir_array_splitting_visitor::~ir_array_splitting_visitor()
00000000002a9e30 0000000000000060 t (anonymous namespace)::ir_array_reference_visitor::visit_enter(ir_assignment*)
00000000002a9e90 0000000000000020 t (anonymous namespace)::ir_array_reference_visitor::visit_enter(ir_function_signature*)
00000000002a9eb0 0000000000000008 W ir_array_splitting_visitor::~ir_array_splitting_visitor()
00000000002a9ec0 0000000000000120 t (anonymous namespace)::ir_array_reference_visitor::get_variable_entry(ir_variable*)
00000000002a9fe0 0000000000000040 t (anonymous namespace)::ir_array_reference_visitor::visit(ir_dereference_variable*)
00000000002aa020 0000000000000024 t (anonymous namespace)::ir_array_reference_visitor::visit(ir_variable*)
00000000002aa050 0000000000000074 t (anonymous namespace)::ir_array_reference_visitor::visit_enter(ir_dereference_array*)
00000000002aa0d0 0000000000000138 t ir_array_splitting_visitor::split_deref(ir_dereference**)
00000000002aa210 0000000000000048 T ir_array_splitting_visitor::handle_rvalue(ir_rvalue**)
00000000002aa260 000000000000039c t optimize_split_arrays(exec_list*, bool)
00000000002aa600 000000000000037c T ir_array_splitting_visitor::visit_leave(ir_assignment*)
00000000002aa980 00000000000000c8 t (anonymous namespace)::opt_conditional_discard_visitor::visit_leave(ir_if*)
00000000002aaa50 000000000000004c t opt_conditional_discard(exec_list*)
00000000002aaaa0 0000000000000004 t (anonymous namespace)::ir_constant_folding_visitor::~ir_constant_folding_visitor()
00000000002aaaa0 0000000000000004 t (anonymous namespace)::ir_constant_folding_visitor::~ir_constant_folding_visitor()
00000000002aaab0 0000000000000008 t (anonymous namespace)::ir_constant_folding_visitor::~ir_constant_folding_visitor()
00000000002aaac0 0000000000000110 t ir_constant_fold(ir_rvalue**)
00000000002aabd0 0000000000000034 t (anonymous namespace)::ir_constant_folding_visitor::handle_rvalue(ir_rvalue**)
00000000002aac10 000000000000008c t (anonymous namespace)::ir_constant_folding_visitor::visit_enter(ir_discard*)
00000000002aaca0 000000000000018c t (anonymous namespace)::ir_constant_folding_visitor::visit_enter(ir_call*)
00000000002aae30 00000000000000c4 t (anonymous namespace)::ir_constant_folding_visitor::visit_enter(ir_assignment*)
00000000002aaf00 0000000000000050 t do_constant_folding(exec_list*)
00000000002aaf50 0000000000000008 t (anonymous namespace)::ir_constant_propagation_visitor::visit_enter(ir_function*)
00000000002aaf60 00000000000002c0 t (anonymous namespace)::ir_constant_propagation_visitor::constant_propagation(ir_rvalue**)
00000000002ab220 000000000000008c t (anonymous namespace)::ir_constant_propagation_visitor::visit_enter(ir_function_signature*)
00000000002ab2b0 0000000000000134 t (anonymous namespace)::ir_constant_propagation_visitor::kill(ir_variable*, unsigned int)
00000000002ab3f0 000000000000013c t (anonymous namespace)::ir_constant_propagation_visitor::handle_loop(ir_loop*, bool)
00000000002ab530 000000000000003c t (anonymous namespace)::ir_constant_propagation_visitor::visit_enter(ir_loop*)
00000000002ab570 00000000000000a8 t (anonymous namespace)::ir_constant_propagation_visitor::constant_folding(ir_rvalue**)
00000000002ab620 000000000000002c t (anonymous namespace)::ir_constant_propagation_visitor::handle_rvalue(ir_rvalue**)
00000000002ab650 0000000000000138 t (anonymous namespace)::ir_constant_propagation_visitor::visit_leave(ir_assignment*)
00000000002ab790 00000000000000f4 t (anonymous namespace)::ir_constant_propagation_visitor::handle_if_block(exec_list*, hash_table*, bool*) [clone .constprop.0]
00000000002ab890 0000000000000124 t (anonymous namespace)::ir_constant_propagation_visitor::visit_enter(ir_call*)
00000000002ab9c0 0000000000000124 t (anonymous namespace)::ir_constant_propagation_visitor::visit_enter(ir_if*)
00000000002abaf0 00000000000000b4 t do_constant_propagation(exec_list*)
00000000002abbb0 0000000000000008 t (anonymous namespace)::ir_constant_variable_visitor::visit_enter(ir_dereference_variable*)
00000000002abbc0 0000000000000084 t (anonymous namespace)::ir_constant_variable_visitor::visit(ir_variable*)
00000000002abc50 0000000000000180 t (anonymous namespace)::ir_constant_variable_visitor::visit_enter(ir_call*)
00000000002abdd0 00000000000000f4 t (anonymous namespace)::ir_constant_variable_visitor::visit_enter(ir_assignment*)
00000000002abed0 0000000000000108 t do_constant_variable(exec_list*)
00000000002abfe0 0000000000000090 t do_constant_variable_unlinked(exec_list*)
00000000002ac070 0000000000000008 t (anonymous namespace)::ir_copy_propagation_elements_visitor::visit_leave(ir_swizzle*)
00000000002ac080 000000000000021c t (anonymous namespace)::ir_copy_propagation_elements_visitor::handle_rvalue(ir_rvalue**)
00000000002ac2a0 000000000000009c t (anonymous namespace)::ir_copy_propagation_elements_visitor::visit(ir_dereference_variable*)
00000000002ac340 00000000000000bc t (anonymous namespace)::ir_copy_propagation_elements_visitor::handle_if_block(exec_list*, exec_list*, bool*) [clone .constprop.0]
00000000002ac400 00000000000000cc t (anonymous namespace)::ir_copy_propagation_elements_visitor::visit_enter(ir_function_signature*)
00000000002ac4d0 0000000000000328 t (anonymous namespace)::ir_copy_propagation_elements_visitor::kill((anonymous namespace)::kill_entry*)
00000000002ac800 000000000000012c t (anonymous namespace)::ir_copy_propagation_elements_visitor::visit_enter(ir_if*)
00000000002ac930 0000000000000174 t (anonymous namespace)::ir_copy_propagation_elements_visitor::handle_loop(ir_loop*, bool)
00000000002acab0 000000000000003c t (anonymous namespace)::ir_copy_propagation_elements_visitor::visit_enter(ir_loop*)
00000000002acaf0 00000000000001a8 t (anonymous namespace)::ir_copy_propagation_elements_visitor::visit_enter(ir_call*)
00000000002acca0 000000000000085c t (anonymous namespace)::ir_copy_propagation_elements_visitor::visit_leave(ir_assignment*)
00000000002ad500 00000000000000dc t do_copy_propagation_elements(exec_list*)
00000000002ad5e0 0000000000000148 t optimize_dead_builtin_variables(exec_list*, ir_variable_mode)
00000000002ad730 00000000000001b0 t (anonymous namespace)::replace_varyings_visitor::visit(ir_variable*)
00000000002ad8e0 00000000000000b0 t (anonymous namespace)::varying_info_visitor::visit(ir_variable*)
00000000002ad990 00000000000000d4 t (anonymous namespace)::varying_info_visitor::visit(ir_dereference_variable*)
00000000002ada70 00000000000001f0 t (anonymous namespace)::varying_info_visitor::visit_enter(ir_dereference_array*)
00000000002adc60 00000000000002a4 t (anonymous namespace)::replace_varyings_visitor::handle_rvalue(ir_rvalue**)
00000000002adf10 0000000000000064 t (anonymous namespace)::replace_varyings_visitor::visit_leave(ir_assignment*)
00000000002adf80 0000000000000464 t (anonymous namespace)::replace_varyings_visitor::replace_varyings_visitor(gl_linked_shader*, (anonymous namespace)::varying_info_visitor const*, unsigned int, unsigned int, bool)
00000000002adf80 0000000000000464 t (anonymous namespace)::replace_varyings_visitor::replace_varyings_visitor(gl_linked_shader*, (anonymous namespace)::varying_info_visitor const*, unsigned int, unsigned int, bool)
00000000002ae3f0 0000000000000434 t do_dead_builtin_varyings(gl_context*, gl_linked_shader*, gl_linked_shader*, unsigned int, tfeedback_decl*)
00000000002ae830 00000000000001cc t do_dead_code(exec_list*, bool)
00000000002aea00 0000000000000094 t do_dead_code_unlinked(exec_list*)
00000000002aeaa0 000000000000002c t (anonymous namespace)::array_index_visit::visit_enter(ir_dereference_array*)
00000000002aead0 0000000000000128 t (anonymous namespace)::kill_for_derefs_visitor::visit(ir_swizzle*)
00000000002aec00 0000000000000078 t (anonymous namespace)::kill_for_derefs_visitor::visit_leave(ir_emit_vertex*)
00000000002aec80 0000000000000464 t dead_code_local_basic_block(ir_instruction*, ir_instruction*, void*)
00000000002af0f0 00000000000000c4 t (anonymous namespace)::kill_for_derefs_visitor::visit(ir_dereference_variable*)
00000000002af1c0 0000000000000028 t do_dead_code_local(exec_list*)
00000000002af1f0 0000000000000080 t (anonymous namespace)::ir_dead_functions_visitor::get_signature_entry(ir_function_signature*)
00000000002af270 0000000000000028 t (anonymous namespace)::ir_dead_functions_visitor::visit_enter(ir_call*)
00000000002af2a0 0000000000000048 t (anonymous namespace)::ir_dead_functions_visitor::visit_enter(ir_function_signature*)
00000000002af2f0 0000000000000188 t do_dead_functions(exec_list*)
00000000002af480 0000000000000008 t (anonymous namespace)::nested_if_flattener::visit_enter(ir_assignment*)
00000000002af490 00000000000000fc t (anonymous namespace)::nested_if_flattener::visit_leave(ir_if*)
00000000002af590 000000000000004c t opt_flatten_nested_if_blocks(exec_list*)
00000000002af5e0 0000000000000178 t (anonymous namespace)::matrix_flipper::visit_enter(ir_expression*)
00000000002af760 00000000000000d4 t opt_flip_matrices(exec_list*)
00000000002af840 0000000000000004 t (anonymous namespace)::ir_function_inlining_visitor::~ir_function_inlining_visitor()
00000000002af840 0000000000000004 t (anonymous namespace)::ir_function_inlining_visitor::~ir_function_inlining_visitor()
00000000002af850 0000000000000008 t (anonymous namespace)::ir_function_inlining_visitor::visit_enter(ir_swizzle*)
00000000002af850 0000000000000008 t (anonymous namespace)::ir_function_inlining_visitor::visit_enter(ir_texture*)
00000000002af850 0000000000000008 t (anonymous namespace)::ir_function_inlining_visitor::visit_enter(ir_expression*)
00000000002af850 0000000000000008 t (anonymous namespace)::ir_function_inlining_visitor::visit_enter(ir_return*)
00000000002af860 0000000000000004 W ir_variable_replacement_visitor::~ir_variable_replacement_visitor()
00000000002af860 0000000000000004 W ir_variable_replacement_visitor::~ir_variable_replacement_visitor()
00000000002af870 0000000000000008 t (anonymous namespace)::ir_function_inlining_visitor::~ir_function_inlining_visitor()
00000000002af880 0000000000000008 W ir_variable_replacement_visitor::~ir_variable_replacement_visitor()
00000000002af890 0000000000000138 t (anonymous namespace)::ir_save_lvalue_visitor::visit_enter(ir_dereference_array*)
00000000002af9d0 00000000000000cc t replace_return_with_assignment(ir_instruction*, void*)
00000000002afaa0 00000000000000b0 T ir_variable_replacement_visitor::visit_leave(ir_expression*)
00000000002afb50 0000000000000074 T ir_variable_replacement_visitor::visit_leave(ir_texture*)
00000000002afbd0 0000000000000088 T ir_variable_replacement_visitor::visit_leave(ir_dereference_array*)
00000000002afbd0 0000000000000088 T ir_variable_replacement_visitor::visit_leave(ir_dereference_record*)
00000000002afc60 0000000000000088 T ir_variable_replacement_visitor::visit_leave(ir_return*)
00000000002afcf0 000000000000004c t do_function_inlining(exec_list*)
00000000002afd40 000000000000055c t ir_call::generate_inline(ir_instruction*)
00000000002b02a0 0000000000000068 t (anonymous namespace)::ir_function_inlining_visitor::visit_enter(ir_call*)
00000000002b0310 0000000000000070 t ir_variable_replacement_visitor::replace_deref(ir_dereference**)
00000000002b0380 00000000000000b8 T ir_variable_replacement_visitor::visit_leave(ir_call*)
00000000002b0440 00000000000000a0 T ir_variable_replacement_visitor::visit_leave(ir_assignment*)
00000000002b04e0 0000000000000008 t (anonymous namespace)::ir_if_simplification_visitor::visit_enter(ir_assignment*)
00000000002b04f0 00000000000001e0 t (anonymous namespace)::ir_if_simplification_visitor::visit_leave(ir_if*)
00000000002b06d0 000000000000004c t do_if_simplification(exec_list*)
00000000002b0720 0000000000000250 t (anonymous namespace)::compare_components(ir_constant*, ir_constant*)
00000000002b0970 000000000000028c t (anonymous namespace)::combine_constant(bool, ir_constant*, ir_constant*)
00000000002b0c00 00000000000001b4 t (anonymous namespace)::get_range(ir_rvalue*)
00000000002b0dc0 0000000000000324 t (anonymous namespace)::ir_minmax_visitor::prune_expression(ir_expression*, (anonymous namespace)::minmax_range)
00000000002b10f0 00000000000000e0 t (anonymous namespace)::ir_minmax_visitor::handle_rvalue(ir_rvalue**)
00000000002b11d0 0000000000000050 t do_minmax_prune(exec_list*)
00000000002b1220 000000000000002c t (anonymous namespace)::ir_rebalance_visitor::visit_enter(ir_assignment*)
00000000002b1250 0000000000000180 t handle_expression(ir_expression*)
00000000002b13d0 0000000000000064 t update_types(ir_instruction*, void*)
00000000002b1440 00000000000000a8 t (anonymous namespace)::ir_rebalance_visitor::handle_rvalue(ir_rvalue**)
00000000002b14f0 0000000000000124 t is_reduction(ir_instruction*, void*)
00000000002b1620 000000000000004c t do_rebalance_tree(exec_list*)
00000000002b1670 0000000000000008 t (anonymous namespace)::redundant_jumps_visitor::visit_enter(ir_assignment*)
00000000002b1680 00000000000000d0 t (anonymous namespace)::redundant_jumps_visitor::visit_leave(ir_if*)
00000000002b1750 0000000000000054 t (anonymous namespace)::redundant_jumps_visitor::visit_leave(ir_loop*)
00000000002b17b0 000000000000004c t optimize_redundant_jumps(exec_list*)
00000000002b1800 0000000000000008 t (anonymous namespace)::ir_structure_reference_visitor::visit_enter(ir_dereference_record*)
00000000002b1810 0000000000000004 t (anonymous namespace)::ir_structure_splitting_visitor::~ir_structure_splitting_visitor()
00000000002b1810 0000000000000004 t (anonymous namespace)::ir_structure_splitting_visitor::~ir_structure_splitting_visitor()
00000000002b1820 0000000000000020 t (anonymous namespace)::ir_structure_reference_visitor::visit_enter(ir_function_signature*)
00000000002b1840 0000000000000008 t (anonymous namespace)::ir_structure_splitting_visitor::~ir_structure_splitting_visitor()
00000000002b1850 00000000000000d0 t (anonymous namespace)::ir_structure_reference_visitor::get_variable_entry(ir_variable*)
00000000002b1920 0000000000000024 t (anonymous namespace)::ir_structure_reference_visitor::visit(ir_variable*)
00000000002b1950 000000000000004c t (anonymous namespace)::ir_structure_reference_visitor::visit_enter(ir_assignment*)
00000000002b19a0 0000000000000064 t (anonymous namespace)::ir_structure_reference_visitor::visit(ir_dereference_variable*)
00000000002b1a10 00000000000000c0 t (anonymous namespace)::ir_structure_splitting_visitor::handle_rvalue(ir_rvalue**)
00000000002b1ad0 0000000000000350 t (anonymous namespace)::ir_structure_splitting_visitor::visit_leave(ir_assignment*)
00000000002b1e20 0000000000000328 t do_structure_splitting(exec_list*)
00000000002b2150 00000000000001fc t (anonymous namespace)::ir_opt_swizzle_visitor::handle_rvalue(ir_rvalue**)
00000000002b2350 0000000000000050 t optimize_swizzles(exec_list*)
00000000002b23a0 0000000000000008 t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_loop*)
00000000002b23b0 0000000000000008 t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_function*)
00000000002b23b0 0000000000000008 t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_function_signature*)
00000000002b23c0 00000000000001ec t (anonymous namespace)::tree_grafting_basic_block(ir_instruction*, ir_instruction*, void*)
00000000002b25b0 0000000000000040 t (anonymous namespace)::ir_tree_grafting_visitor::check_graft(ir_instruction*, ir_variable*)
00000000002b25f0 0000000000000064 t (anonymous namespace)::ir_tree_grafting_visitor::do_graft(ir_rvalue**)
00000000002b2660 0000000000000020 t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_if*)
00000000002b2680 000000000000012c t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_call*)
00000000002b27b0 000000000000001c t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_swizzle*)
00000000002b27d0 00000000000000d4 t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_texture*)
00000000002b28b0 0000000000000068 t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_expression*)
00000000002b2920 0000000000000070 t (anonymous namespace)::ir_tree_grafting_visitor::visit_leave(ir_assignment*)
00000000002b2990 000000000000002c t (anonymous namespace)::dereferences_variable_callback(ir_instruction*, void*)
00000000002b29c0 0000000000000064 t do_tree_grafting(exec_list*)
00000000002b2a30 0000000000000098 t (anonymous namespace)::ir_vectorize_visitor::visit_enter(ir_swizzle*)
00000000002b2ad0 0000000000000010 t (anonymous namespace)::ir_vectorize_visitor::visit_enter(ir_texture*)
00000000002b2ad0 0000000000000010 t (anonymous namespace)::ir_vectorize_visitor::visit_enter(ir_dereference_array*)
00000000002b2ae0 0000000000000048 t (anonymous namespace)::ir_vectorize_visitor::visit_enter(ir_expression*)
00000000002b2b30 0000000000000134 t (anonymous namespace)::ir_vectorize_visitor::try_vectorize()
00000000002b2c70 0000000000000058 t (anonymous namespace)::ir_vectorize_visitor::visit_enter(ir_if*)
00000000002b2cd0 00000000000000e8 t (anonymous namespace)::ir_vectorize_visitor::visit_enter(ir_assignment*)
00000000002b2dc0 0000000000000040 t (anonymous namespace)::ir_vectorize_visitor::visit_enter(ir_loop*)
00000000002b2e00 0000000000000154 t rewrite_swizzle(ir_instruction*, void*)
00000000002b2f60 0000000000000064 t (anonymous namespace)::ir_vectorize_visitor::visit_leave(ir_assignment*)
00000000002b2fd0 0000000000000064 t do_vectorize(exec_list*)
00000000002b3040 0000000000000004 t (anonymous namespace)::ir_invariance_propagation_visitor::~ir_invariance_propagation_visitor()
00000000002b3040 0000000000000004 t (anonymous namespace)::ir_invariance_propagation_visitor::~ir_invariance_propagation_visitor()
00000000002b3050 0000000000000058 t (anonymous namespace)::ir_invariance_propagation_visitor::visit_enter(ir_assignment*)
00000000002b30b0 0000000000000010 t (anonymous namespace)::ir_invariance_propagation_visitor::visit_leave(ir_assignment*)
00000000002b30c0 0000000000000008 t (anonymous namespace)::ir_invariance_propagation_visitor::~ir_invariance_propagation_visitor()
00000000002b30d0 0000000000000060 t (anonymous namespace)::ir_invariance_propagation_visitor::visit(ir_dereference_variable*)
00000000002b3130 0000000000000058 t propagate_invariance(exec_list*)
00000000002b3190 0000000000000048 t string_to_uint_map_ctor
00000000002b31e0 0000000000000074 t string_to_uint_map_dtor
00000000002b3260 00000000000000c0 t yytnamerr(char*, char const*)
00000000002b3320 0000000000000280 t yysyntax_error(unsigned long*, char**, short*, int)
00000000002b35a0 0000000000000024 t _mesa_glsl_parse_state::has_shader_storage_buffer_objects() const [clone .part.0] [clone .isra.0]
00000000002b35d0 0000000000000038 t match_layout_qualifier(char const*, char const*, _mesa_glsl_parse_state*) [clone .isra.0]
00000000002b3610 000000000000004c t _mesa_glsl_parse_state::has_tessellation_shader() const
00000000002b3660 0000000000007ec4 t _mesa_glsl_parse(_mesa_glsl_parse_state*)
00000000002bb530 00000000000000f8 t yy_get_previous_state(void*)
00000000002bb630 000000000000022c t literal_integer(char*, int, _mesa_glsl_parse_state*, YYSTYPE*, YYLTYPE*, int)
00000000002bb860 00000000000000b0 t classify_identifier(_mesa_glsl_parse_state*, char const*, unsigned int, YYSTYPE*)
00000000002bb910 0000000000000030 t yy_fatal_error(char const*, void*) [clone .constprop.0]
00000000002bb940 00000000000000a0 t _mesa_glsl_lexer_ensure_buffer_stack(void*)
00000000002bb9e0 00000000000000b4 t _mesa_glsl_lexer__switch_to_buffer(yy_buffer_state*, void*)
00000000002bbaa0 000000000000006c t _mesa_glsl_lexer__delete_buffer(yy_buffer_state*, void*)
00000000002bbb10 000000000000006c t _mesa_glsl_lexer__flush_buffer(yy_buffer_state*, void*)
00000000002bbb80 000000000000007c t _mesa_glsl_lexer__init_buffer(yy_buffer_state*, __sFILE*, void*)
00000000002bbc00 000000000000007c t _mesa_glsl_lexer__create_buffer(__sFILE*, int, void*)
00000000002bbc80 00000000000000bc t _mesa_glsl_lexer_restart(__sFILE*, void*)
00000000002bbd40 000000000000d6a0 t _mesa_glsl_lexer_lex(YYSTYPE*, YYLTYPE*, void*)
00000000002c93e0 000000000000008c t _mesa_glsl_lexer_pop_buffer_state(void*)
00000000002c9470 00000000000000bc t _mesa_glsl_lexer__scan_buffer(char*, unsigned long, void*)
00000000002c9530 00000000000000a4 t _mesa_glsl_lexer__scan_bytes(char const*, int, void*)
00000000002c95e0 0000000000000098 t _mesa_glsl_lexer_lex_init_extra(_mesa_glsl_parse_state*, void**)
00000000002c9680 000000000000007c t _mesa_glsl_lexer_lex_destroy(void*)
00000000002c9700 000000000000003c t _mesa_glsl_lexer_ctor(_mesa_glsl_parse_state*, char const*)
00000000002c9740 0000000000000008 t _mesa_glsl_lexer_dtor(_mesa_glsl_parse_state*)
00000000002c9750 00000000000000d0 t glcpp_error
00000000002c9820 00000000000000bc t glcpp_warning
00000000002c98e0 0000000000000330 t glcpp_preprocess
00000000002c9c10 00000000000000e0 t yy_get_previous_state
00000000002c9cf0 0000000000000030 t yy_fatal_error.constprop.0
00000000002c9d20 00000000000000a0 t glcpp_ensure_buffer_stack
00000000002c9dc0 00000000000000b4 t glcpp__switch_to_buffer
00000000002c9e80 000000000000006c t glcpp__delete_buffer
00000000002c9ef0 000000000000006c t glcpp__flush_buffer
00000000002c9f60 000000000000007c t glcpp__init_buffer
00000000002c9fe0 000000000000007c t glcpp__create_buffer
00000000002ca060 00000000000000bc t glcpp_restart
00000000002ca120 0000000000002710 t glcpp_lex
00000000002cc830 000000000000008c t glcpp_pop_buffer_state
00000000002cc8c0 00000000000000bc t glcpp__scan_buffer
00000000002cc980 00000000000000a4 t glcpp__scan_bytes
00000000002cca30 0000000000000098 t glcpp_lex_init_extra
00000000002ccad0 000000000000007c t glcpp_lex_destroy
00000000002ccb50 0000000000000034 t glcpp_lex_set_source_string
00000000002ccb90 00000000000000c0 t yytnamerr
00000000002ccc50 0000000000000280 t yysyntax_error
00000000002cced0 0000000000000088 t yy_stack_print
00000000002ccf60 00000000000000d4 t _check_for_reserved_macro_name
00000000002cd040 00000000000000b0 t _glcpp_parser_skip_stack_push_if
00000000002cd0f0 000000000000019c t _glcpp_parser_evaluate_defined_in_list
00000000002cd290 0000000000000124 t yy_symbol_print.constprop.0
00000000002cd3c0 0000000000000078 t yydestruct.isra.0
00000000002cd440 0000000000000288 t _macro_equal
00000000002cd6d0 000000000000009c t glcpp_parser_copy_defines
00000000002cd770 00000000000000c8 t _define_object_macro
00000000002cd840 0000000000000130 t _define_function_macro
00000000002cd970 00000000000000d0 t _token_list_copy
00000000002cda40 00000000000000a0 t _token_list_create_with_one_ival
00000000002cdae0 00000000000000b0 t add_builtin_define
00000000002cdb90 0000000000000264 t _glcpp_parser_handle_version_declaration.part.0
00000000002cde00 00000000000001a4 t _token_print
00000000002cdfb0 00000000000004b8 t _glcpp_parser_apply_pastes
00000000002ce470 0000000000000900 t _glcpp_parser_expand_token_list
00000000002ced70 000000000000019c t _glcpp_parser_expand_and_lex_from
00000000002cef10 0000000000000108 t glcpp_parser_create
00000000002cf020 000000000000203c t glcpp_parser_parse
00000000002d1060 0000000000000034 t glcpp_parser_destroy
00000000002d10a0 000000000000002c t glcpp_parser_resolve_implicit_version
00000000002d10d0 0000000000000060 T glsl_type::record_key_hash(void const*)
00000000002d1130 000000000000005c t hash_free_type_function(hash_entry*)
00000000002d1190 0000000000000084 t glsl_type::glsl_type(unsigned int, glsl_base_type, unsigned int, unsigned int, char const*, unsigned int, bool)
00000000002d1190 0000000000000084 T glsl_type::glsl_type(unsigned int, glsl_base_type, unsigned int, unsigned int, char const*, unsigned int, bool)
00000000002d1220 0000000000000074 t glsl_type::glsl_type(unsigned int, glsl_base_type, glsl_sampler_dim, bool, bool, glsl_base_type, char const*)
00000000002d1220 0000000000000074 T glsl_type::glsl_type(unsigned int, glsl_base_type, glsl_sampler_dim, bool, bool, glsl_base_type, char const*)
00000000002d12a0 00000000000000d8 t glsl_type::glsl_type(glsl_struct_field const*, unsigned int, char const*, bool)
00000000002d12a0 00000000000000d8 T glsl_type::glsl_type(glsl_struct_field const*, unsigned int, char const*, bool)
00000000002d1380 00000000000000e0 t glsl_type::glsl_type(glsl_struct_field const*, unsigned int, glsl_interface_packing, bool, char const*)
00000000002d1380 00000000000000e0 T glsl_type::glsl_type(glsl_struct_field const*, unsigned int, glsl_interface_packing, bool, char const*)
00000000002d1460 0000000000000008 t glsl_type::~glsl_type()
00000000002d1460 0000000000000008 T glsl_type::~glsl_type()
00000000002d1470 0000000000000088 t glsl_type::contains_sampler() const
00000000002d1500 0000000000000078 t glsl_type::contains_array() const
00000000002d1580 000000000000009c t glsl_type::contains_integer() const
00000000002d1620 0000000000000088 t glsl_type::contains_double() const
00000000002d16b0 0000000000000098 t glsl_type::contains_opaque() const
00000000002d1750 0000000000000088 t glsl_type::contains_subroutine() const
00000000002d17e0 00000000000000c4 t glsl_type::sampler_index() const
00000000002d18b0 0000000000000088 t glsl_type::contains_image() const
00000000002d1940 00000000000000fc t glsl_type::get_base_type() const
00000000002d1a40 0000000000000048 t glsl_type::get_scalar_type() const
00000000002d1a90 000000000000003c t glsl_type_singleton_init_or_ref
00000000002d1ad0 00000000000000e4 t glsl_type_singleton_decref
00000000002d1bc0 0000000000000158 t glsl_type::glsl_type(glsl_type const*, unsigned int, unsigned int)
00000000002d1bc0 0000000000000158 T glsl_type::glsl_type(glsl_type const*, unsigned int, unsigned int)
00000000002d1d20 00000000000000dc t glsl_type::vec(unsigned int)
00000000002d1e00 00000000000000dc t glsl_type::f16vec(unsigned int)
00000000002d1ee0 00000000000000dc t glsl_type::dvec(unsigned int)
00000000002d1fc0 00000000000000dc t glsl_type::ivec(unsigned int)
00000000002d20a0 00000000000000dc t glsl_type::uvec(unsigned int)
00000000002d2180 00000000000000dc t glsl_type::bvec(unsigned int)
00000000002d2260 00000000000000dc t glsl_type::i64vec(unsigned int)
00000000002d2340 00000000000000dc t glsl_type::u64vec(unsigned int)
00000000002d2420 00000000000000dc t glsl_type::i16vec(unsigned int)
00000000002d2500 00000000000000dc t glsl_type::u16vec(unsigned int)
00000000002d25e0 00000000000000dc t glsl_type::i8vec(unsigned int)
00000000002d26c0 00000000000000dc t glsl_type::u8vec(unsigned int)
00000000002d27a0 00000000000005a8 t glsl_type::get_instance(unsigned int, unsigned int, unsigned int, unsigned int, bool)
00000000002d2d50 00000000000003c0 t glsl_type::get_sampler_instance(glsl_sampler_dim, bool, bool, glsl_base_type)
00000000002d3110 0000000000000390 t glsl_type::get_image_instance(glsl_sampler_dim, bool, glsl_base_type)
00000000002d34a0 00000000000000f8 t glsl_type::get_array_instance(glsl_type const*, unsigned int, unsigned int)
00000000002d35a0 00000000000000c0 t glsl_type::compare_no_precision(glsl_type const*) const
00000000002d3660 0000000000000170 t glsl_type::record_compare(glsl_type const*, bool, bool, bool) const [clone .part.0]
00000000002d37d0 000000000000007c T glsl_type::record_key_compare(void const*, void const*)
00000000002d3850 000000000000004c t glsl_type::record_compare(glsl_type const*, bool, bool, bool) const
00000000002d38a0 0000000000000100 t glsl_type::get_struct_instance(glsl_struct_field const*, unsigned int, char const*, bool)
00000000002d39a0 000000000000010c t glsl_type::get_interface_instance(glsl_struct_field const*, unsigned int, glsl_interface_packing, bool, char const*)
00000000002d3ab0 000000000000011c t glsl_type::get_subroutine_instance(char const*)
00000000002d3bd0 000000000000036c t glsl_type::get_mul_type(glsl_type const*, glsl_type const*)
00000000002d3f40 00000000000000a4 t glsl_type::field_type(char const*) const
00000000002d3ff0 0000000000000090 t glsl_type::field_index(char const*) const
00000000002d4080 0000000000000138 t glsl_type::component_slots() const
00000000002d41c0 0000000000000154 t glsl_type::struct_location_offset(unsigned int) const
00000000002d4320 00000000000000f0 t glsl_type::uniform_locations() const
00000000002d4410 0000000000000138 t glsl_type::varying_count() const
00000000002d4550 00000000000001ac t glsl_type::can_implicitly_convert_to(glsl_type const*, _mesa_glsl_parse_state*) const
00000000002d4700 0000000000000264 t glsl_type::std140_base_alignment(bool) const
00000000002d4970 0000000000000390 t glsl_type::std140_size(bool) const
00000000002d4d00 00000000000001f0 t glsl_type::std430_base_alignment(bool) const
00000000002d4ef0 0000000000000310 t glsl_type::std430_size(bool) const
00000000002d5200 000000000000005c t glsl_type::std430_array_stride(bool) const
00000000002d5260 0000000000000160 t glsl_type::count_vec4_slots(bool, bool) const
00000000002d53c0 0000000000000064 t glsl_type::coordinate_components() const
00000000002d5430 0000000000000378 t encode_type_to_blob
00000000002d57b0 00000000000002a4 t decode_type_from_blob
00000000002d5a60 0000000000000080 t _mesa_shader_stage_to_string
00000000002d5ae0 000000000000013c t cso_set_vertex_elements_direct
00000000002d5c20 0000000000000114 t cso_single_sampler.part.0
00000000002d5d40 0000000000000078 t cso_init_vbuf.constprop.0
00000000002d5dc0 000000000000026c t sanitize_hash
00000000002d6030 000000000000016c t cso_set_vertex_buffers_direct
00000000002d61a0 00000000000005a4 t cso_destroy_context
00000000002d6750 0000000000000138 t cso_create_context
00000000002d6890 0000000000000138 t cso_set_blend
00000000002d69d0 0000000000000110 t cso_set_depth_stencil_alpha
00000000002d6ae0 0000000000000110 t cso_set_rasterizer
00000000002d6bf0 0000000000000028 t cso_set_fragment_shader_handle
00000000002d6c20 0000000000000028 t cso_set_vertex_shader_handle
00000000002d6c50 000000000000006c t cso_set_framebuffer
00000000002d6cc0 000000000000007c t cso_set_viewport
00000000002d6d40 0000000000000054 t cso_set_viewport_dims
00000000002d6da0 0000000000000044 t cso_set_blend_color
00000000002d6df0 0000000000000028 t cso_set_sample_mask
00000000002d6e20 000000000000002c t cso_set_min_samples
00000000002d6e50 000000000000002c t cso_set_stencil_ref
00000000002d6e80 000000000000008c t cso_set_render_condition
00000000002d6f10 0000000000000030 t cso_set_geometry_shader_handle
00000000002d6f40 0000000000000030 t cso_set_tessctrl_shader_handle
00000000002d6f70 0000000000000030 t cso_set_tesseval_shader_handle
00000000002d6fa0 0000000000000030 t cso_set_compute_shader_handle
00000000002d6fd0 0000000000000034 t cso_set_vertex_elements
00000000002d7010 000000000000001c t cso_set_vertex_buffers
00000000002d7030 000000000000025c t cso_set_vertex_buffers_and_elements
00000000002d7290 00000000000000a0 t cso_set_samplers
00000000002d7330 00000000000001b4 t cso_set_sampler_views
00000000002d74f0 0000000000000194 t cso_set_shader_images
00000000002d7690 0000000000000188 t cso_set_stream_outputs
00000000002d7820 0000000000000184 t cso_set_constant_buffer
00000000002d79b0 00000000000000dc t cso_save_constant_buffer_slot0
00000000002d7a90 000000000000019c t cso_restore_constant_buffer_slot0
00000000002d7c30 00000000000004fc t cso_save_state
00000000002d8130 000000000000084c t cso_restore_state
00000000002d8980 0000000000000020 t cso_draw_vbo
00000000002d89a0 0000000000000068 t cso_draw_arrays
00000000002d8a10 0000000000000064 t cso_draw_arrays_instanced
00000000002d8a80 0000000000000278 t cso_data_rehash
00000000002d8d00 00000000000000c8 t cso_hash_insert
00000000002d8dd0 0000000000000014 t cso_hash_init
00000000002d8df0 0000000000000070 t cso_hash_deinit
00000000002d8e60 0000000000000020 t cso_hash_iter_key
00000000002d8e80 0000000000000064 t cso_hash_data_next
00000000002d8ef0 00000000000000cc t cso_hash_take
00000000002d8fc0 0000000000000038 t cso_hash_first_node
00000000002d9000 0000000000000008 t cso_hash_size
00000000002d9010 00000000000000a4 t cso_hash_erase
00000000002d90c0 0000000000000064 t cso_hash_contains
00000000002d9130 0000000000000008 t tgsi_build_header
00000000002d9140 0000000000000014 t tgsi_build_processor
00000000002d9160 0000000000000024 t tgsi_default_full_declaration
00000000002d9190 000000000000020c t tgsi_build_full_declaration
00000000002d93a0 0000000000000010 t tgsi_default_full_immediate
00000000002d93b0 00000000000000b8 t tgsi_build_full_immediate
00000000002d9470 000000000000000c t tgsi_default_instruction
00000000002d9480 0000000000000098 t tgsi_default_full_instruction
00000000002d9520 0000000000000554 t tgsi_build_full_instruction
00000000002d9a80 0000000000000034 t tgsi_default_full_property
00000000002d9ac0 00000000000000e0 t tgsi_build_full_property
00000000002d9ba0 000000000000004c t tgsi_full_src_register_from_dst
00000000002d9bf0 0000000000000090 t dump_ctx_printf
00000000002d9c80 00000000000000b0 t _dump_writemask.part.0
00000000002d9d30 0000000000000070 t prolog
00000000002d9da0 000000000000029c t iter_immediate
00000000002da040 0000000000000228 t iter_property
00000000002da270 0000000000000e3c t iter_instruction
00000000002db0b0 0000000000000a20 t iter_declaration
00000000002dbad0 0000000000000070 t tgsi_dump_to_file
00000000002dbb40 0000000000000008 t tgsi_dump
00000000002dbb50 0000000000000040 t transform_decl
00000000002dbb90 0000000000000208 t transform_instr
00000000002dbda0 00000000000000c0 t tgsi_emulate
00000000002dbe60 0000000000000040 t tgsi_get_generic_gl_varying_index
00000000002dbea0 00000000000001d4 t tgsi_get_gl_varying_semantic
00000000002dc080 00000000000000f0 t tgsi_get_sysval_semantic
00000000002dc170 0000000000000028 t tgsi_get_opcode_info
00000000002dc1a0 0000000000000024 t tgsi_get_opcode_name
00000000002dc1d0 0000000000000134 t tgsi_iterate_shader
00000000002dc310 0000000000000038 t tgsi_parse_init
00000000002dc350 0000000000000004 t tgsi_parse_free
00000000002dc360 0000000000000020 t tgsi_parse_end_of_tokens
00000000002dc380 000000000000042c t tgsi_parse_token
00000000002dc7b0 0000000000000054 t tgsi_dup_tokens
00000000002dc810 0000000000000008 t tgsi_alloc_tokens
00000000002dc820 0000000000000004 t tgsi_free_tokens
00000000002dc830 0000000000000598 t scan_src_operand
00000000002dcdd0 0000000000001048 t tgsi_scan_shader
00000000002dde20 0000000000000024 t tgsi_file_name
00000000002dde50 0000000000000044 t emit_property
00000000002ddea0 0000000000000044 t emit_immediate
00000000002ddef0 0000000000000044 t emit_declaration
00000000002ddf40 0000000000000044 t emit_instruction
00000000002ddf90 00000000000002b0 t tgsi_transform_shader
00000000002de240 0000000000000178 t match_or_expand_immediate
00000000002de3c0 000000000000004c t tokens_error
00000000002de410 0000000000000104 t get_tokens
00000000002de520 00000000000000c0 t emit_decl_semantic
00000000002de5e0 00000000000000ec t alloc_temporary
00000000002de6d0 0000000000000230 t decl_immediate
00000000002de900 0000000000000018 t ureg_property
00000000002de920 0000000000000140 t ureg_DECL_fs_input_cyl_centroid_layout
00000000002dea60 0000000000000034 t ureg_DECL_fs_input_cyl_centroid
00000000002deaa0 000000000000003c t ureg_DECL_vs_input
00000000002deae0 000000000000003c t ureg_DECL_input
00000000002deb20 0000000000000114 t ureg_DECL_system_value
00000000002dec40 0000000000000160 t ureg_DECL_output_layout
00000000002deda0 0000000000000038 t ureg_DECL_output
00000000002dede0 0000000000000040 t ureg_DECL_constant2D
00000000002dee20 0000000000000160 t ureg_DECL_constant
00000000002def80 00000000000000a0 t ureg_DECL_hw_atomic
00000000002df020 0000000000000008 t ureg_DECL_temporary
00000000002df030 0000000000000008 t ureg_DECL_local_temporary
00000000002df040 00000000000000b4 t ureg_DECL_array_temporary
00000000002df100 0000000000000024 t ureg_release_temporary
00000000002df130 0000000000000048 t ureg_DECL_address
00000000002df180 00000000000000d0 t ureg_DECL_sampler
00000000002df250 00000000000000b8 t ureg_DECL_sampler_view
00000000002df310 00000000000000bc t ureg_DECL_image
00000000002df3d0 00000000000000a8 t ureg_DECL_buffer
00000000002df480 000000000000002c t ureg_DECL_memory
00000000002df4b0 000000000000004c t ureg_DECL_immediate
00000000002df500 000000000000003c t ureg_DECL_immediate_f64
00000000002df540 0000000000000008 t ureg_DECL_immediate_uint
00000000002df550 0000000000000008 t ureg_DECL_immediate_int
00000000002df560 000000000000003c t ureg_DECL_immediate_uint64
00000000002df5a0 000000000000003c t ureg_DECL_immediate_int64
00000000002df5e0 000000000000019c t ureg_emit_src
00000000002df780 0000000000000158 t ureg_emit_dst
00000000002df8e0 00000000000000a4 t ureg_emit_insn
00000000002df990 000000000000011c t ureg_emit_texture
00000000002dfab0 0000000000000038 t ureg_fixup_insn_size
00000000002dfaf0 0000000000000170 t ureg_insn
00000000002dfc60 00000000000001fc t ureg_tex_insn
00000000002dfe60 0000000000000184 t ureg_memory_insn
00000000002dfff0 0000000000000afc t ureg_finalize
00000000002e0af0 0000000000000144 t ureg_create_shader
00000000002e0c40 0000000000000044 t ureg_get_tokens
00000000002e0c90 0000000000000004 t ureg_free_tokens
00000000002e0ca0 00000000000000ec t ureg_create_with_screen
00000000002e0d90 0000000000000008 t ureg_create
00000000002e0da0 0000000000000008 t ureg_set_next_shader_processor
00000000002e0db0 000000000000007c t ureg_destroy
00000000002e0e30 0000000000000050 t tgsi_util_get_src_register_swizzle
00000000002e0e80 000000000000046c t tgsi_util_get_inst_usage_mask
00000000002e12f0 0000000000000028 t tgsi_util_get_src_from_ind
00000000002e1320 0000000000000058 t util_bitmask_create
00000000002e1380 0000000000000100 t util_bitmask_set
00000000002e1480 000000000000003c t util_bitmask_clear
00000000002e14c0 000000000000005c t util_bitmask_get
00000000002e1520 000000000000009c t util_bitmask_get_next_index
00000000002e15c0 0000000000000008 t util_bitmask_get_first_index
00000000002e15d0 0000000000000030 t util_bitmask_destroy
00000000002e1600 0000000000000250 t util_copy_framebuffer_state
00000000002e1850 00000000000000b8 t util_unreference_framebuffer_state
00000000002e1910 000000000000007c t util_framebuffer_get_num_layers
00000000002e1990 000000000000009c t util_framebuffer_get_num_samples
00000000002e1a30 00000000000000d0 t util_sample_locations_flip_y
00000000002e1b00 00000000000002e8 t util_gen_mipmap
00000000002e1df0 0000000000000240 t util_set_vertex_buffers_mask
00000000002e2030 000000000000008c t util_set_vertex_buffers_count
00000000002e20c0 0000000000000008 t util_throttle_init
00000000002e20d0 0000000000000050 t util_throttle_deinit
00000000002e2120 000000000000024c t util_throttle_memory_usage
00000000002e2370 0000000000000010 t u_prim_name
00000000002e2380 00000000000000d8 t u_sampler_view_default_template
00000000002e2460 0000000000000198 t u_pipe_screen_get_param_defaults
00000000002e2600 000000000000022c t util_make_vertex_passthrough_shader_with_so
00000000002e2830 000000000000000c t util_make_vertex_passthrough_shader
00000000002e2840 0000000000000034 t util_make_layered_clear_vertex_shader
00000000002e2880 000000000000009c t util_make_layered_clear_helper_vertex_shader
00000000002e2920 000000000000009c t util_make_layered_clear_geometry_shader
00000000002e29c0 00000000000000e0 t util_make_fragment_passthrough_shader
00000000002e2aa0 0000000000000124 t pipe_get_tile_raw
00000000002e2bd0 0000000000000770 t pipe_get_tile_rgba
00000000002e3340 00000000000000a4 t upload_unmap_internal
00000000002e33f0 0000000000000088 t u_upload_create
00000000002e3480 0000000000000014 t u_upload_create_default
00000000002e34a0 0000000000000008 t u_upload_unmap
00000000002e34b0 0000000000000070 t u_upload_destroy
00000000002e3520 000000000000039c t u_upload_alloc
00000000002e38c0 0000000000000050 t u_upload_data
00000000002e3910 0000000000000034 t u_vbuf_delete_vertex_elements
00000000002e3950 00000000000001e8 t u_vbuf_get_minmax_index_mapped
00000000002e3b40 0000000000000068 t u_vbuf_set_driver_vertex_buffers
00000000002e3bb0 0000000000000398 t u_vbuf_set_vertex_elements_internal
00000000002e3f50 00000000000009cc t u_vbuf_translate_begin
00000000002e4920 0000000000000254 t u_vbuf_get_caps
00000000002e4b80 00000000000000ac t u_vbuf_create
00000000002e4c30 0000000000000024 t u_vbuf_set_vertex_elements
00000000002e4c60 0000000000000008 t u_vbuf_unset_vertex_elements
00000000002e4c70 00000000000001a8 t u_vbuf_destroy
00000000002e4e20 0000000000000594 t u_vbuf_set_vertex_buffers
00000000002e53c0 00000000000000c4 t u_vbuf_get_minmax_index
00000000002e5490 00000000000008c0 t u_vbuf_draw_vbo
00000000002e5d50 00000000000000c4 t u_vbuf_split_indexed_multidraw
00000000002e5e20 000000000000000c t u_vbuf_save_vertex_elements
00000000002e5e30 0000000000000048 t u_vbuf_restore_vertex_elements
00000000002e5e80 00000000000000bc t u_vbuf_save_vertex_buffer0
00000000002e5f40 000000000000009c t u_vbuf_restore_vertex_buffer0
00000000002e5fe0 000000000000009c t nouveau_transfer_read
00000000002e6080 000000000000005c t nouveau_scratch_unref_bos
00000000002e60e0 00000000000000e4 t nouveau_transfer_staging.isra.0
00000000002e61d0 00000000000001ec t nouveau_scratch_more
00000000002e63c0 00000000000000f8 t nouveau_buffer_destroy
00000000002e64c0 000000000000013c t nouveau_buffer_cache.isra.0
00000000002e6600 0000000000000190 t nouveau_transfer_write
00000000002e6790 00000000000000dc t nouveau_buffer_transfer_flush_region
00000000002e6870 0000000000000160 t nouveau_buffer_transfer_unmap
00000000002e69d0 0000000000000590 t nouveau_buffer_transfer_map
00000000002e6f60 0000000000000214 t nouveau_copy_buffer
00000000002e7180 0000000000000174 t nouveau_resource_map_offset
00000000002e7300 0000000000000248 t nouveau_buffer_create
00000000002e7550 0000000000000258 t nouveau_buffer_invalidate
00000000002e77b0 000000000000004c t nouveau_scratch_runout_release
00000000002e7800 00000000000000b8 t nouveau_scratch_data
00000000002e78c0 0000000000000094 t nouveau_scratch_get
00000000002e7960 0000000000000064 t nouveau_fence_trigger_work
00000000002e79d0 0000000000000058 t nouveau_fence_new
00000000002e7a30 0000000000000060 t nouveau_fence_emit
00000000002e7a90 00000000000000a8 t nouveau_fence_del
00000000002e7b40 00000000000000ec t nouveau_fence_update
00000000002e7c30 000000000000005c t nouveau_fence_signalled
00000000002e7c90 00000000000000c0 t nouveau_fence_next
00000000002e7d50 0000000000000104 t nouveau_fence_kick
00000000002e7e60 0000000000000114 t nouveau_fence_wait
00000000002e7f80 0000000000000024 T nouveau_fence_unref_bo
00000000002e7fb0 00000000000000d4 t nouveau_fence_work
00000000002e8090 0000000000000054 t nouveau_heap_init
00000000002e80f0 000000000000002c t nouveau_heap_destroy
00000000002e8120 00000000000000e8 t nouveau_heap_alloc
00000000002e8210 00000000000000b8 t nouveau_heap_free
00000000002e82d0 00000000000002d8 t nouveau_mm_allocate
00000000002e85b0 00000000000000dc t nouveau_mm_free
00000000002e8690 0000000000000004 T nouveau_mm_free_work
00000000002e86a0 0000000000000078 t nouveau_mm_create
00000000002e8720 000000000000013c t nouveau_mm_destroy
00000000002e8860 000000000000000c t nouveau_screen_get_vendor
00000000002e8870 000000000000000c t nouveau_screen_get_device_vendor
00000000002e8880 0000000000000008 t nouveau_screen_get_disk_shader_cache
00000000002e8890 0000000000000060 t nouveau_screen_fence_ref
00000000002e88f0 0000000000000040 t nouveau_screen_get_name
00000000002e8930 0000000000000050 t nouveau_screen_get_timestamp
00000000002e8980 000000000000002c t nouveau_set_debug_callback
00000000002e89b0 0000000000000014 t nouveau_screen_fence_finish
00000000002e89d0 0000000000000088 t nouveau_screen_bo_from_handle
00000000002e8a60 0000000000000080 t nouveau_screen_bo_get_handle
00000000002e8ae0 000000000000027c t nouveau_screen_init
00000000002e8d60 0000000000000060 t nouveau_screen_fini
00000000002e8dc0 0000000000000010 t nouveau_context_init
00000000002e8dd0 0000000000000008 t nouveau_vp3_video_buffer_sampler_view_planes
00000000002e8de0 0000000000000008 t nouveau_vp3_video_buffer_sampler_view_components
00000000002e8df0 0000000000000008 t nouveau_vp3_video_buffer_surfaces
00000000002e8e00 0000000000000004 t nouveau_vp3_decoder_flush
00000000002e8e10 0000000000000004 t nouveau_vp3_decoder_begin_frame
00000000002e8e20 00000000000000e4 t nouveau_vp3_decoder_destroy
00000000002e8f10 00000000000000a4 t vp4_getpath
00000000002e8fc0 0000000000000088 t vp3_getpath
00000000002e9050 00000000000001f8 t firmware_present
00000000002e9250 0000000000000004 t nouveau_vp3_decoder_end_frame
00000000002e9260 000000000000014c t nouveau_vp3_video_buffer_destroy
00000000002e93b0 0000000000000320 t nouveau_vp3_video_buffer_create
00000000002e96d0 0000000000000030 t nouveau_vp3_decoder_init_common
00000000002e9700 0000000000000200 t nouveau_vp3_load_firmware
00000000002e9900 0000000000000108 T nouveau_vp3_screen_get_video_param
00000000002e9a10 0000000000000014 T nouveau_vp3_screen_video_supported
00000000002e9a30 000000000000029c T nv50_clear_texture
00000000002e9cd0 0000000000001108 t nv50_blitter_make_fp
00000000002eade0 0000000000000124 t nv50_blit_select_mode
00000000002eaf10 000000000000021c t nv50_m2mf_rect_setup
00000000002eb130 0000000000000570 t nv50_m2mf_transfer_rect
00000000002eb6a0 00000000000003a4 T nv50_miptree_transfer_map
00000000002eba50 000000000000012c T nv50_miptree_transfer_unmap
00000000002ebb80 0000000000000078 T nvc0_compute_validate_globals
00000000002ebc00 0000000000000168 t nvc0_compute_validate_surfaces
00000000002ebd70 00000000000000e8 t nvc0_compute_validate_driverconst
00000000002ebe60 00000000000000ac t nvc0_compute_validate_samplers
00000000002ebf10 0000000000000210 t nvc0_compute_validate_buffers
00000000002ec120 00000000000000fc t nvc0_compute_validate_textures
00000000002ec220 0000000000000330 t nvc0_compute_validate_constbufs
00000000002ec550 0000000000000684 t nvc0_screen_compute_setup
00000000002ecbe0 0000000000000120 t nvc0_update_compute_invocations_counter
00000000002ecd00 00000000000008cc T nvc0_launch_grid
00000000002ed5d0 0000000000000008 t nvc0_get_device_reset_status
00000000002ed5e0 0000000000000044 T nvc0_default_kick_notify
00000000002ed630 000000000000045c t nvc0_invalidate_resource_storage
00000000002eda90 0000000000000084 t nvc0_context_get_sample_position
00000000002edb20 00000000000000bc t nvc0_flush
00000000002edbe0 00000000000000bc t nvc0_texture_barrier
00000000002edca0 000000000000013c t nvc0_emit_string_marker
00000000002edde0 00000000000001d4 t nvc0_memory_barrier
00000000002edfc0 00000000000005a0 t nvc0_destroy
00000000002ee560 0000000000000448 T nvc0_create
00000000002ee9b0 0000000000000110 t nvc0_bufctx_fence
00000000002eeac0 0000000000000054 t nvc0_get_sample_locations
00000000002eeb20 000000000000007c t nvc0_miptree_get_handle
00000000002eeba0 00000000000006c0 t nvc0_miptree_create
00000000002ef260 00000000000000cc t nvc0_mt_zslice_offset
00000000002ef330 0000000000000034 t nvc0_miptree_surface_new
00000000002ef370 00000000000000dc t nvc0_shader_input_address
00000000002ef450 00000000000003d8 t nvc0_program_assign_varying_slots
00000000002ef830 0000000000000298 t nvc0_vtgp_gen_header
00000000002efad0 0000000000000198 t nvc0_program_upload_code
00000000002efc70 00000000000000a8 t nvc0_tp_get_tess_mode.isra.0
00000000002efd20 0000000000000904 t nvc0_program_translate
00000000002f0630 0000000000000088 t nvc0_program_library_upload
00000000002f06c0 00000000000005c8 t nvc0_program_upload
00000000002f0c90 00000000000000c4 t nvc0_program_destroy
00000000002f0d60 0000000000000060 t nvc0_program_symbol_offset
00000000002f0dc0 0000000000000084 t nvc0_program_init_tcp_empty
00000000002f0e50 0000000000000010 t nvc0_destroy_query
00000000002f0e60 0000000000000010 t nvc0_begin_query
00000000002f0e70 0000000000000020 t nvc0_end_query
00000000002f0e90 0000000000000010 t nvc0_get_query_result
00000000002f0ea0 000000000000001c t nvc0_get_query_result_resource
00000000002f0ec0 0000000000000004 t nvc0_set_active_query_state
00000000002f0ed0 0000000000000050 t nvc0_create_query
00000000002f0f20 00000000000002e0 t nvc0_render_condition
00000000002f1200 0000000000000098 T nvc0_screen_get_driver_query_info
00000000002f12a0 00000000000000fc T nvc0_screen_get_driver_query_group_info
00000000002f13a0 0000000000000064 t nvc0_init_query_functions
00000000002f1410 00000000000000b0 t nvc0_hw_query_write_compute_invocations
00000000002f14c0 00000000000002a4 t nvc0_hw_get_query_result
00000000002f1770 00000000000000b8 t nvc0_hw_query_get
00000000002f1830 00000000000000bc t nvc0_hw_destroy_query
00000000002f18f0 000000000000010c t nvc0_hw_query_allocate
00000000002f1a00 00000000000003dc t nvc0_hw_end_query
00000000002f1de0 0000000000000364 t nvc0_hw_begin_query
00000000002f2150 00000000000001a4 t nvc0_hw_create_query
00000000002f2300 0000000000000090 t nvc0_hw_get_driver_query_info
00000000002f2390 0000000000000060 t nvc0_hw_query_pushbuf_submit
00000000002f23f0 000000000000010c t nvc0_hw_query_fifo_wait
00000000002f2500 0000000000000658 t nvc0_hw_get_query_result_resource
00000000002f2b60 000000000000007c t nvc0_hw_metric_begin_query
00000000002f2be0 000000000000005c t nvc0_hw_metric_end_query
00000000002f2c40 0000000000000128 t sm20_hw_metric_calc_result
00000000002f2d70 00000000000001b0 t sm30_hw_metric_calc_result
00000000002f2f20 00000000000002e0 t nvc0_hw_metric_get_query_result
00000000002f3200 0000000000000064 t nvc0_hw_metric_destroy_query
00000000002f3270 0000000000000068 t nvc0_hw_metric_get_num_queries
00000000002f32e0 0000000000000240 t nvc0_hw_metric_create_query
00000000002f3520 00000000000001a4 t nvc0_hw_metric_get_driver_query_info
00000000002f36d0 0000000000000054 t nvc0_hw_sm_destroy_query
00000000002f3730 000000000000012c t nvc0_hw_sm_query_get_cfg.isra.0
00000000002f3860 0000000000000534 t nvc0_hw_sm_begin_query
00000000002f3da0 00000000000004f8 t nvc0_hw_sm_end_query
00000000002f42a0 0000000000000350 t nvc0_hw_sm_get_query_result
00000000002f45f0 0000000000000064 t nvc0_hw_sm_get_num_queries
00000000002f4660 00000000000000d0 t nvc0_hw_sm_create_query
00000000002f4730 00000000000001a0 t nvc0_hw_sm_get_driver_query_info
00000000002f48d0 0000000000000008 t nvc0_sw_create_query
00000000002f48e0 0000000000000008 t nvc0_sw_get_driver_query_info
00000000002f48f0 0000000000000064 t nvc0_query_dmabuf_modifiers
00000000002f4960 0000000000000010 t nvc0_surface_create
00000000002f4970 0000000000000010 t nvc0_resource_create_with_modifiers
00000000002f4980 0000000000000038 t nvc0_resource_create
00000000002f49c0 0000000000000034 t nvc0_resource_from_handle
00000000002f4a00 0000000000000060 t nvc0_init_resource_functions
00000000002f4a60 0000000000000048 t nvc0_screen_init_resource_functions
00000000002f4ab0 0000000000000190 t nvc0_vertprog_validate
00000000002f4c40 000000000000042c T nvc0_fragprog_validate
00000000002f5070 00000000000002b0 T nvc0_tctlprog_validate
00000000002f5320 0000000000000324 t nvc0_tevlprog_validate
00000000002f5650 00000000000002d0 t nvc0_gmtyprog_validate
00000000002f5920 00000000000000e0 T nvc0_compprog_validate
00000000002f5a00 0000000000000130 T nvc0_layer_validate
00000000002f5b30 00000000000004e8 T nvc0_tfb_validate
00000000002f6020 0000000000000014 t nvc0_blend_state_bind
00000000002f6040 0000000000000014 t nvc0_rasterizer_state_bind
00000000002f6060 0000000000000014 t nvc0_zsa_state_bind
00000000002f6080 0000000000000014 t nvc0_vp_state_bind
00000000002f60a0 0000000000000014 t nvc0_fp_state_bind
00000000002f60c0 0000000000000014 t nvc0_gp_state_bind
00000000002f60e0 0000000000000014 t nvc0_tcp_state_bind
00000000002f6100 0000000000000014 t nvc0_tep_state_bind
00000000002f6120 0000000000000014 t nvc0_cp_state_bind
00000000002f6140 0000000000000020 t nvc0_set_blend_color
00000000002f6160 000000000000001c t nvc0_set_stencil_ref
00000000002f6180 0000000000000014 t nvc0_set_sample_mask
00000000002f61a0 0000000000000020 t nvc0_set_min_samples
00000000002f61c0 0000000000000038 t nvc0_set_polygon_stipple
00000000002f6200 0000000000000028 t nvc0_set_tess_state
00000000002f6230 0000000000000014 t nvc0_vertex_state_bind
00000000002f6250 0000000000000008 t nvc0_blend_state_delete
00000000002f6260 0000000000000168 t nvc0_set_vertex_buffers
00000000002f63d0 0000000000000054 t nvc0_set_window_rectangles
00000000002f6430 000000000000005c t nvc0_set_sample_locations
00000000002f6490 0000000000000038 t nvc0_set_clip_state
00000000002f64d0 00000000000000c0 t nvc0_set_viewport_states
00000000002f6590 0000000000000060 t nvc0_set_scissor_states
00000000002f65f0 0000000000000054 t nvc0_set_framebuffer_state
00000000002f6650 000000000000022c t nvc0_zsa_state_create
00000000002f6880 00000000000003e8 t nvc0_rasterizer_state_create
00000000002f6c70 00000000000000b0 t nvc0_cp_state_create
00000000002f6d20 00000000000000b4 t nvc0_sp_state_create
00000000002f6de0 0000000000000008 t nvc0_tep_state_create
00000000002f6df0 0000000000000008 t nvc0_tcp_state_create
00000000002f6e00 0000000000000008 t nvc0_gp_state_create
00000000002f6e10 0000000000000008 t nvc0_fp_state_create
00000000002f6e20 0000000000000008 t nvc0_vp_state_create
00000000002f6e30 0000000000000044 t nvc0_sp_state_delete
00000000002f6e80 00000000000000b0 t nvc0_sampler_state_delete
00000000002f6f30 00000000000000fc t nvc0_bind_sampler_states
00000000002f7030 0000000000000008 t nvc0_zsa_state_delete
00000000002f7040 0000000000000008 t nvc0_rasterizer_state_delete
00000000002f7050 0000000000000308 t nvc0_set_constant_buffer
00000000002f7360 00000000000000c4 t nvc0_so_target_save_offset
00000000002f7430 0000000000000560 t nvc0_blend_state_create
00000000002f7990 00000000000001cc t nvc0_set_compute_resources
00000000002f7b60 000000000000021c t nvc0_set_transform_feedback_targets
00000000002f7d80 0000000000000350 t nvc0_set_sampler_views
00000000002f80d0 0000000000000074 t nvc0_so_target_destroy
00000000002f8150 00000000000000a8 t nvc0_sampler_view_destroy
00000000002f8200 000000000000029c t nvc0_set_global_bindings
00000000002f84a0 0000000000000330 t nvc0_set_shader_buffers
00000000002f87d0 000000000000014c t nvc0_so_target_create
00000000002f8920 00000000000004b0 t nvc0_set_shader_images
00000000002f8dd0 0000000000000270 t nvc0_init_state_functions
00000000002f9040 000000000000006c t nvc0_validate_driverconst
00000000002f90b0 000000000000023c t nvc0_constbufs_validate
00000000002f92f0 0000000000000150 t nvc0_validate_scissor
00000000002f9440 0000000000000248 t nvc0_validate_buffers
00000000002f9690 0000000000000094 t nvc0_validate_tess_state
00000000002f9730 0000000000000070 t nvc0_validate_sample_mask
00000000002f97a0 000000000000008c t nvc0_validate_stipple
00000000002f9830 0000000000000080 t nvc0_validate_blend_colour
00000000002f98b0 0000000000000084 t nvc0_validate_zsa
00000000002f9940 0000000000000084 t nvc0_validate_blend
00000000002f99d0 0000000000000084 t nvc0_validate_rasterizer
00000000002f9a60 00000000000000fc t nvc0_validate_min_samples
00000000002f9b60 00000000000000bc t nvc0_validate_stencil_ref
00000000002f9c20 00000000000003b0 t nvc0_validate_viewport
00000000002f9fd0 00000000000000d0 t nvc0_validate_fp_zsa_rast
00000000002fa0a0 00000000000000b8 t nvc0_validate_rast_fb
00000000002fa160 00000000000001c0 t nvc0_validate_window_rects
00000000002fa320 00000000000003c4 t gm200_validate_sample_locations
00000000002fa6f0 000000000000016c t validate_sample_locations
00000000002fa860 00000000000000e4 t nvc0_validate_zsa_fb
00000000002fa950 00000000000002f8 t nvc0_validate_fbread
00000000002fac50 00000000000002f4 t nvc0_validate_clip
00000000002faf50 000000000000075c t nvc0_validate_fb
00000000002fb6b0 0000000000000200 t nvc0_state_validate
00000000002fb8b0 0000000000000068 t nvc0_state_validate_3d
00000000002fb920 000000000000000c t nvc0_draw_vbo_kick_notify
00000000002fb930 0000000000000170 t nvc0_set_constant_vertex_attrib
00000000002fbaa0 00000000000001a4 t nvc0_update_user_vbufs_shared
00000000002fbc50 0000000000000248 t nvc0_update_user_vbufs
00000000002fbea0 0000000000000030 T nvc0_vertex_state_delete
00000000002fbed0 00000000000003c0 T nvc0_vertex_state_create
00000000002fc290 00000000000008b8 T nvc0_vertex_arrays_validate
00000000002fcb50 000000000000146c T nvc0_draw_vbo
00000000002fdfc0 0000000000001c18 t nvc0_push_vbo
00000000002ffbe0 0000000000000200 t nvc0_push_vbo_indirect
00000000002ffde0 000000000000009c t nvc0_decoder_end_frame
00000000002ffe80 0000000000000014 t nvc0_decoder_decode_bitstream
00000000002ffea0 0000000000000010 t nvc0_decoder_begin_frame
00000000002ffeb0 0000000000000838 T nvc0_create_decoder
00000000003006f0 0000000000000008 T nvc0_video_buffer_create
0000000000300700 0000000000000214 t nvc0_decoder_setup_ppp
0000000000300920 0000000000000228 t nvc0_decoder_ppp
0000000000300b50 0000000000000574 t nvc0_decoder_vp
00000000003010d0 0000000000000098 t grow_to_fit.part.0
0000000000301170 0000000000000010 t blob_init
0000000000301180 0000000000000014 t blob_init_fixed
00000000003011a0 0000000000000100 t blob_write_bytes
00000000003012a0 000000000000007c t blob_write_uint32
0000000000301320 000000000000007c t blob_write_uint64
00000000003013a0 0000000000000038 t blob_overwrite_uint32
00000000003013e0 0000000000000038 t blob_write_string
0000000000301420 0000000000000014 t blob_reader_init
0000000000301440 0000000000000048 t blob_read_bytes
0000000000301490 000000000000004c t blob_copy_bytes
00000000003014e0 0000000000000068 t blob_read_uint32
0000000000301550 0000000000000068 t blob_read_uint64
00000000003015c0 000000000000006c t blob_read_string
0000000000301630 00000000000000e8 t _mesa_float_to_half
0000000000301720 0000000000000058 t _mesa_half_to_float
0000000000301780 000000000000002c t _mesa_half_to_unorm8
00000000003017b0 0000000000000038 t _mesa_uint16_div_64k_to_half
00000000003017f0 0000000000000048 t _mesa_sha1_format
0000000000301840 000000000000003c t os_time_get_nano
0000000000301880 0000000000000038 t os_file_create_unique
00000000003018c0 0000000000000068 t os_log_message
0000000000301930 0000000000000004 t os_get_option
0000000000301940 0000000000000ff0 t SHA1Transform
0000000000302930 0000000000000038 t SHA1Init
0000000000302970 00000000000000ec t SHA1Update
0000000000302a60 00000000000000b0 t SHA1Pad
0000000000302b10 0000000000000060 t SHA1Final
0000000000302b70 00000000000000cc t util_format_unsigned_write_rgtc_encoded_channel
0000000000302c40 00000000000000c4 t util_format_signed_write_rgtc_encoded_channel
0000000000302d10 000000000000011c t util_format_unsigned_fetch_texel_rgtc
0000000000302e30 0000000000000b7c t util_format_unsigned_encode_rgtc_ubyte
00000000003039b0 0000000000000124 t util_format_signed_fetch_texel_rgtc
0000000000303ae0 0000000000000b90 t util_format_signed_encode_rgtc_ubyte
0000000000304670 00000000000000f4 t set_search
0000000000304770 0000000000000168 t set_rehash
00000000003048e0 00000000000001c0 t set_search_or_add
0000000000304aa0 000000000000008c t _mesa_set_create
0000000000304b30 0000000000000084 t _mesa_set_clone
0000000000304bc0 00000000000000c0 t _mesa_set_destroy
0000000000304c80 0000000000000038 t _mesa_set_search
0000000000304cc0 0000000000000048 t _mesa_set_add
0000000000304d10 0000000000000024 t _mesa_set_remove
0000000000304d40 000000000000005c t _mesa_set_remove_key
0000000000304da0 000000000000004c t _mesa_set_next_entry
0000000000304df0 0000000000000014 t _mesa_pointer_set_create
0000000000304e10 000000000000006c t _mesa_string_buffer_create
0000000000304e80 00000000000000c0 t _mesa_string_buffer_append_len
0000000000304f40 00000000000000ec t _mesa_string_buffer_vprintf
0000000000305030 000000000000006c t _mesa_string_buffer_printf
00000000003050a0 000000000000002c t _mesa_locale_init
00000000003050d0 000000000000000c t _mesa_locale_fini
00000000003050e0 000000000000000c t _mesa_strtod
00000000003050f0 000000000000000c t _mesa_strtof
0000000000305100 000000000000002c t util_cpu_detect_once
0000000000305130 0000000000000014 t util_cpu_detect
0000000000305150 000000000000006c t write_bits
00000000003051c0 00000000000006f8 t compress_rgba_unorm
00000000003058c0 00000000000006c4 t compress_rgb_float
0000000000305f90 0000000000000070 t count_anchors_before_texel
0000000000306000 0000000000000308 t extract_float_endpoints
0000000000306310 0000000000000430 t extract_unorm_endpoints
0000000000306740 0000000000000358 t fetch_rgb_float_from_block
0000000000306aa0 0000000000000598 t decompress_rgb_float
0000000000307040 00000000000004ec t fetch_rgba_unorm_from_block
0000000000307530 00000000000006e0 t decompress_rgba_unorm
0000000000307c10 000000000000001c T util_format_bptc_rgba_unorm_unpack_rgba_8unorm
0000000000307c30 000000000000001c T util_format_bptc_rgba_unorm_pack_rgba_8unorm
0000000000307c50 00000000000000ac T util_format_bptc_rgba_unorm_unpack_rgba_float
0000000000307d00 00000000000000ac T util_format_bptc_rgba_unorm_pack_rgba_float
0000000000307db0 0000000000000078 T util_format_bptc_rgba_unorm_fetch_rgba_float
0000000000307e30 000000000000001c T util_format_bptc_srgba_unpack_rgba_8unorm
0000000000307e50 000000000000001c T util_format_bptc_srgba_pack_rgba_8unorm
0000000000307e70 00000000000000ac T util_format_bptc_srgba_unpack_rgba_float
0000000000307f20 0000000000000020 T util_format_bptc_srgba_pack_rgba_float
0000000000307f40 0000000000000084 T util_format_bptc_srgba_fetch_rgba_float
0000000000307fd0 00000000000000b0 T util_format_bptc_rgb_float_unpack_rgba_8unorm
0000000000308080 000000000000001c T util_format_bptc_rgb_float_pack_rgba_8unorm
00000000003080a0 0000000000000020 T util_format_bptc_rgb_float_unpack_rgba_float
00000000003080c0 0000000000000020 T util_format_bptc_rgb_float_pack_rgba_float
00000000003080e0 000000000000002c T util_format_bptc_rgb_float_fetch_rgba_float
0000000000308110 00000000000000b0 T util_format_bptc_rgb_ufloat_unpack_rgba_8unorm
00000000003081c0 000000000000001c T util_format_bptc_rgb_ufloat_pack_rgba_8unorm
00000000003081e0 0000000000000020 T util_format_bptc_rgb_ufloat_unpack_rgba_float
0000000000308200 0000000000000020 T util_format_bptc_rgb_ufloat_pack_rgba_float
0000000000308220 000000000000002c T util_format_bptc_rgb_ufloat_fetch_rgba_float
0000000000308250 000000000000013c t etc1_parse_block
0000000000308390 00000000000000c8 t etc1_fetch_texel
0000000000308460 0000000000000128 T util_format_etc1_rgb8_unpack_rgba_8unorm
0000000000308590 0000000000000004 T util_format_etc1_rgb8_pack_rgba_8unorm
00000000003085a0 0000000000000134 T util_format_etc1_rgb8_unpack_rgba_float
00000000003086e0 0000000000000004 T util_format_etc1_rgb8_pack_rgba_float
00000000003086f0 0000000000000070 T util_format_etc1_rgb8_fetch_rgba_float
0000000000308760 0000000000000040 T util_format_latc1_unorm_fetch_rgba_8unorm
00000000003087a0 0000000000000004 T util_format_latc1_unorm_unpack_rgba_8unorm
00000000003087b0 0000000000000004 T util_format_latc1_unorm_pack_rgba_8unorm
00000000003087c0 0000000000000168 T util_format_latc1_unorm_unpack_rgba_float
0000000000308930 0000000000000004 T util_format_latc1_unorm_pack_rgba_float
0000000000308940 0000000000000050 T util_format_latc1_unorm_fetch_rgba_float
0000000000308990 0000000000000028 T util_format_latc1_snorm_fetch_rgba_8unorm
00000000003089c0 0000000000000028 T util_format_latc1_snorm_unpack_rgba_8unorm
00000000003089f0 0000000000000028 T util_format_latc1_snorm_pack_rgba_8unorm
0000000000308a20 0000000000000004 T util_format_latc1_snorm_pack_rgba_float
0000000000308a30 000000000000016c T util_format_latc1_snorm_unpack_rgba_float
0000000000308ba0 0000000000000058 T util_format_latc1_snorm_fetch_rgba_float
0000000000308c00 0000000000000064 T util_format_latc2_unorm_fetch_rgba_8unorm
0000000000308c70 0000000000000004 T util_format_latc2_unorm_unpack_rgba_8unorm
0000000000308c80 0000000000000004 T util_format_latc2_unorm_pack_rgba_8unorm
0000000000308c90 0000000000000008 T util_format_latc2_unorm_pack_rgba_float
0000000000308ca0 00000000000001e4 T util_format_latc2_unorm_unpack_rgba_float
0000000000308e90 0000000000000088 T util_format_latc2_unorm_fetch_rgba_float
0000000000308f20 0000000000000028 T util_format_latc2_snorm_fetch_rgba_8unorm
0000000000308f50 0000000000000028 T util_format_latc2_snorm_unpack_rgba_8unorm
0000000000308f80 0000000000000028 T util_format_latc2_snorm_pack_rgba_8unorm
0000000000308fb0 00000000000001e4 T util_format_latc2_snorm_unpack_rgba_float
00000000003091a0 0000000000000008 T util_format_latc2_snorm_pack_rgba_float
00000000003091b0 00000000000000a8 T util_format_latc2_snorm_fetch_rgba_float
0000000000309260 0000000000000098 T util_format_r9g9b9e5_float_unpack_rgba_float
0000000000309300 0000000000000268 T util_format_r9g9b9e5_float_pack_rgba_float
0000000000309570 000000000000004c T util_format_r9g9b9e5_float_fetch_rgba_float
00000000003095c0 000000000000012c T util_format_r9g9b9e5_float_unpack_rgba_8unorm
00000000003096f0 0000000000000274 T util_format_r9g9b9e5_float_pack_rgba_8unorm
0000000000309970 00000000000001e4 T util_format_r11g11b10_float_unpack_rgba_float
0000000000309b60 0000000000000218 T util_format_r11g11b10_float_pack_rgba_float
0000000000309d80 000000000000018c T util_format_r11g11b10_float_fetch_rgba_float
0000000000309f10 000000000000025c T util_format_r11g11b10_float_unpack_rgba_8unorm
000000000030a170 0000000000000288 T util_format_r11g11b10_float_pack_rgba_8unorm
000000000030a400 0000000000000004 T util_format_r1_unorm_unpack_rgba_float
000000000030a410 0000000000000004 T util_format_r1_unorm_pack_rgba_float
000000000030a420 0000000000000004 T util_format_r1_unorm_fetch_rgba_float
000000000030a430 0000000000000004 T util_format_r1_unorm_unpack_rgba_8unorm
000000000030a440 0000000000000004 T util_format_r1_unorm_pack_rgba_8unorm
000000000030a450 00000000000000e0 T util_format_r8g8bx_snorm_unpack_rgba_float
000000000030a530 0000000000000150 T util_format_r8g8bx_snorm_unpack_rgba_8unorm
000000000030a680 00000000000000c8 T util_format_r8g8bx_snorm_pack_rgba_float
000000000030a750 000000000000006c T util_format_r8g8bx_snorm_pack_rgba_8unorm
000000000030a7c0 0000000000000090 T util_format_r8g8bx_snorm_fetch_rgba_float
000000000030a850 0000000000000038 T util_format_rgtc1_unorm_fetch_rgba_8unorm
000000000030a890 0000000000000138 t util_format_rgtc1_unorm_unpack_rgba_8unorm
000000000030a9d0 0000000000000110 t util_format_rgtc1_unorm_pack_rgba_8unorm
000000000030aae0 0000000000000168 T util_format_rgtc1_unorm_unpack_rgba_float
000000000030ac50 0000000000000154 t util_format_rgtc1_unorm_pack_rgba_float
000000000030adb0 0000000000000054 T util_format_rgtc1_unorm_fetch_rgba_float
000000000030ae10 0000000000000028 T util_format_rgtc1_snorm_fetch_rgba_8unorm
000000000030ae40 0000000000000028 T util_format_rgtc1_snorm_unpack_rgba_8unorm
000000000030ae70 0000000000000028 T util_format_rgtc1_snorm_pack_rgba_8unorm
000000000030aea0 0000000000000128 t util_format_rgtc1_snorm_pack_rgba_float
000000000030afd0 000000000000016c T util_format_rgtc1_snorm_unpack_rgba_float
000000000030b140 000000000000005c T util_format_rgtc1_snorm_fetch_rgba_float
000000000030b1a0 0000000000000064 T util_format_rgtc2_unorm_fetch_rgba_8unorm
000000000030b210 0000000000000158 t util_format_rgtc2_unorm_unpack_rgba_8unorm
000000000030b370 0000000000000130 t util_format_rgtc2_unorm_pack_rgba_8unorm
000000000030b4a0 00000000000001bc t util_format_rxtc2_unorm_pack_rgba_float
000000000030b660 0000000000000008 T util_format_rgtc2_unorm_pack_rgba_float
000000000030b670 00000000000001e8 T util_format_rgtc2_unorm_unpack_rgba_float
000000000030b860 000000000000008c T util_format_rgtc2_unorm_fetch_rgba_float
000000000030b8f0 0000000000000028 T util_format_rgtc2_snorm_fetch_rgba_8unorm
000000000030b920 0000000000000028 T util_format_rgtc2_snorm_unpack_rgba_8unorm
000000000030b950 0000000000000028 T util_format_rgtc2_snorm_pack_rgba_8unorm
000000000030b980 00000000000001e8 T util_format_rgtc2_snorm_unpack_rgba_float
000000000030bb70 000000000000016c t util_format_rxtc2_snorm_pack_rgba_float
000000000030bce0 0000000000000008 T util_format_rgtc2_snorm_pack_rgba_float
000000000030bcf0 00000000000000ac T util_format_rgtc2_snorm_fetch_rgba_float
000000000030bda0 00000000000001fc t dxt135_decode_imageblock
000000000030bfa0 0000000000000054 t fetch_2d_texel_rgb_dxt1
000000000030c000 0000000000000054 t fetch_2d_texel_rgba_dxt1
000000000030c060 000000000000008c t fetch_2d_texel_rgba_dxt3
000000000030c0f0 0000000000000150 t fetch_2d_texel_rgba_dxt5
000000000030c240 0000000000000c44 t encodedxtcolorblockfaster
000000000030ce90 00000000000000cc t writedxt5encodedalphablock
000000000030cf60 0000000000001268 t tx_compress_dxtn
000000000030e1d0 0000000000000018 T util_format_dxt1_rgb_fetch_rgba_8unorm
000000000030e1f0 0000000000000018 T util_format_dxt1_rgba_fetch_rgba_8unorm
000000000030e210 0000000000000018 T util_format_dxt3_rgba_fetch_rgba_8unorm
000000000030e230 0000000000000018 T util_format_dxt5_rgba_fetch_rgba_8unorm
000000000030e250 000000000000006c T util_format_dxt1_rgb_fetch_rgba_float
000000000030e2c0 0000000000000074 T util_format_dxt1_rgba_fetch_rgba_float
000000000030e340 0000000000000074 T util_format_dxt3_rgba_fetch_rgba_float
000000000030e3c0 0000000000000074 T util_format_dxt5_rgba_fetch_rgba_float
000000000030e440 0000000000000120 T util_format_dxt1_rgb_unpack_rgba_8unorm
000000000030e560 0000000000000120 T util_format_dxt1_rgba_unpack_rgba_8unorm
000000000030e680 0000000000000120 T util_format_dxt3_rgba_unpack_rgba_8unorm
000000000030e7a0 0000000000000120 T util_format_dxt5_rgba_unpack_rgba_8unorm
000000000030e8c0 0000000000000188 T util_format_dxt1_rgb_unpack_rgba_float
000000000030ea50 0000000000000188 T util_format_dxt1_rgba_unpack_rgba_float
000000000030ebe0 0000000000000188 T util_format_dxt3_rgba_unpack_rgba_float
000000000030ed70 0000000000000188 T util_format_dxt5_rgba_unpack_rgba_float
000000000030ef00 0000000000000134 T util_format_dxt1_rgb_pack_rgba_8unorm
000000000030f040 0000000000000134 T util_format_dxt1_rgba_pack_rgba_8unorm
000000000030f180 0000000000000134 T util_format_dxt3_rgba_pack_rgba_8unorm
000000000030f2c0 0000000000000134 T util_format_dxt5_rgba_pack_rgba_8unorm
000000000030f400 00000000000001a4 T util_format_dxt1_rgb_pack_rgba_float
000000000030f5b0 00000000000001a4 T util_format_dxt1_rgba_pack_rgba_float
000000000030f760 00000000000001a4 T util_format_dxt3_rgba_pack_rgba_float
000000000030f910 00000000000001a4 T util_format_dxt5_rgba_pack_rgba_float
000000000030fac0 0000000000000064 T util_format_dxt1_srgb_fetch_rgba_8unorm
000000000030fb30 0000000000000064 T util_format_dxt1_srgba_fetch_rgba_8unorm
000000000030fba0 0000000000000064 T util_format_dxt3_srgba_fetch_rgba_8unorm
000000000030fc10 0000000000000064 T util_format_dxt5_srgba_fetch_rgba_8unorm
000000000030fc80 0000000000000060 T util_format_dxt1_srgb_fetch_rgba_float
000000000030fce0 0000000000000070 T util_format_dxt1_srgba_fetch_rgba_float
000000000030fd50 0000000000000070 T util_format_dxt3_srgba_fetch_rgba_float
000000000030fdc0 0000000000000070 T util_format_dxt5_srgba_fetch_rgba_float
000000000030fe30 0000000000000164 T util_format_dxt1_srgb_unpack_rgba_8unorm
000000000030ffa0 0000000000000164 T util_format_dxt1_srgba_unpack_rgba_8unorm
0000000000310110 0000000000000164 T util_format_dxt3_srgba_unpack_rgba_8unorm
0000000000310280 0000000000000164 T util_format_dxt5_srgba_unpack_rgba_8unorm
00000000003103f0 000000000000018c T util_format_dxt1_srgb_unpack_rgba_float
0000000000310580 000000000000018c T util_format_dxt1_srgba_unpack_rgba_float
0000000000310710 000000000000018c T util_format_dxt3_srgba_unpack_rgba_float
00000000003108a0 000000000000018c T util_format_dxt5_srgba_unpack_rgba_float
0000000000310a30 000000000000014c T util_format_dxt1_srgb_pack_rgba_8unorm
0000000000310b80 000000000000014c T util_format_dxt1_srgba_pack_rgba_8unorm
0000000000310cd0 000000000000014c T util_format_dxt3_srgba_pack_rgba_8unorm
0000000000310e20 000000000000014c T util_format_dxt5_srgba_pack_rgba_8unorm
0000000000310f70 00000000000001e8 T util_format_dxt1_srgb_pack_rgba_float
0000000000311160 00000000000001e8 T util_format_dxt1_srgba_pack_rgba_float
0000000000311350 00000000000001e8 T util_format_dxt3_srgba_pack_rgba_float
0000000000311540 00000000000001e8 T util_format_dxt5_srgba_pack_rgba_float
0000000000311730 000000000000011c T util_format_r8g8_b8g8_unorm_unpack_rgba_float
0000000000311850 00000000000000cc T util_format_r8g8_b8g8_unorm_unpack_rgba_8unorm
0000000000311920 00000000000001f8 T util_format_r8g8_b8g8_unorm_pack_rgba_float
0000000000311b20 00000000000000ec T util_format_r8g8_b8g8_unorm_pack_rgba_8unorm
0000000000311c10 000000000000004c T util_format_r8g8_b8g8_unorm_fetch_rgba_float
0000000000311c60 0000000000000120 T util_format_g8r8_g8b8_unorm_unpack_rgba_float
0000000000311d80 00000000000000cc T util_format_g8r8_g8b8_unorm_unpack_rgba_8unorm
0000000000311e50 00000000000001f4 T util_format_g8r8_g8b8_unorm_pack_rgba_float
0000000000312050 00000000000000ec T util_format_g8r8_g8b8_unorm_pack_rgba_8unorm
0000000000312140 0000000000000048 T util_format_g8r8_g8b8_unorm_fetch_rgba_float
0000000000312190 00000000000001cc T util_format_uyvy_unpack_rgba_float
0000000000312360 0000000000000274 T util_format_uyvy_unpack_rgba_8unorm
00000000003125e0 000000000000043c T util_format_uyvy_pack_rgba_float
0000000000312a20 0000000000000274 T util_format_uyvy_pack_rgba_8unorm
0000000000312ca0 00000000000000b8 T util_format_uyvy_fetch_rgba_float
0000000000312d60 00000000000001cc T util_format_yuyv_unpack_rgba_float
0000000000312f30 0000000000000274 T util_format_yuyv_unpack_rgba_8unorm
00000000003131b0 000000000000043c T util_format_yuyv_pack_rgba_float
00000000003135f0 0000000000000278 T util_format_yuyv_pack_rgba_8unorm
0000000000313870 00000000000000b4 T util_format_yuyv_fetch_rgba_float
0000000000313930 0000000000000004 T util_format_yv12_unpack_rgba_8unorm
0000000000313940 0000000000000004 T util_format_yv12_pack_rgba_8unorm
0000000000313950 0000000000000004 T util_format_yv12_unpack_rgba_float
0000000000313960 0000000000000004 T util_format_yv12_pack_rgba_float
0000000000313970 0000000000000004 T util_format_yv12_fetch_rgba_float
0000000000313980 0000000000000004 T util_format_yv16_unpack_rgba_8unorm
0000000000313990 0000000000000004 T util_format_yv16_pack_rgba_8unorm
00000000003139a0 0000000000000004 T util_format_yv16_unpack_rgba_float
00000000003139b0 0000000000000004 T util_format_yv16_pack_rgba_float
00000000003139c0 0000000000000004 T util_format_yv16_fetch_rgba_float
00000000003139d0 0000000000000004 T util_format_iyuv_unpack_rgba_8unorm
00000000003139e0 0000000000000004 T util_format_iyuv_pack_rgba_8unorm
00000000003139f0 0000000000000004 T util_format_iyuv_unpack_rgba_float
0000000000313a00 0000000000000004 T util_format_iyuv_pack_rgba_float
0000000000313a10 0000000000000004 T util_format_iyuv_fetch_rgba_float
0000000000313a20 0000000000000004 T util_format_nv12_unpack_rgba_8unorm
0000000000313a30 0000000000000004 T util_format_nv12_pack_rgba_8unorm
0000000000313a40 0000000000000004 T util_format_nv12_unpack_rgba_float
0000000000313a50 0000000000000004 T util_format_nv12_pack_rgba_float
0000000000313a60 0000000000000004 T util_format_nv12_fetch_rgba_float
0000000000313a70 0000000000000004 T util_format_nv21_unpack_rgba_8unorm
0000000000313a80 0000000000000004 T util_format_nv21_pack_rgba_8unorm
0000000000313a90 0000000000000004 T util_format_nv21_unpack_rgba_float
0000000000313aa0 0000000000000004 T util_format_nv21_pack_rgba_float
0000000000313ab0 0000000000000004 T util_format_nv21_fetch_rgba_float
0000000000313ac0 0000000000000004 T util_format_p010_unpack_rgba_8unorm
0000000000313ad0 0000000000000004 T util_format_p010_pack_rgba_8unorm
0000000000313ae0 0000000000000004 T util_format_p010_unpack_rgba_float
0000000000313af0 0000000000000004 T util_format_p010_pack_rgba_float
0000000000313b00 0000000000000004 T util_format_p010_fetch_rgba_float
0000000000313b10 0000000000000004 T util_format_p016_unpack_rgba_8unorm
0000000000313b20 0000000000000004 T util_format_p016_pack_rgba_8unorm
0000000000313b30 0000000000000004 T util_format_p016_unpack_rgba_float
0000000000313b40 0000000000000004 T util_format_p016_pack_rgba_float
0000000000313b50 0000000000000004 T util_format_p016_fetch_rgba_float
0000000000313b60 0000000000000004 T util_format_xyuv_unpack_rgba_float
0000000000313b70 0000000000000004 T util_format_xyuv_unpack_rgba_8unorm
0000000000313b80 0000000000000004 T util_format_xyuv_pack_rgba_float
0000000000313b90 0000000000000004 T util_format_xyuv_pack_rgba_8unorm
0000000000313ba0 0000000000000004 T util_format_xyuv_fetch_rgba_float
0000000000313bb0 0000000000000004 T util_format_ayuv_unpack_rgba_float
0000000000313bc0 0000000000000004 T util_format_ayuv_unpack_rgba_8unorm
0000000000313bd0 0000000000000004 T util_format_ayuv_pack_rgba_float
0000000000313be0 0000000000000004 T util_format_ayuv_pack_rgba_8unorm
0000000000313bf0 0000000000000004 T util_format_ayuv_fetch_rgba_float
0000000000313c00 0000000000000004 T util_format_r8g8_r8b8_unorm_unpack_rgba_float
0000000000313c10 0000000000000004 T util_format_r8g8_r8b8_unorm_unpack_rgba_8unorm
0000000000313c20 0000000000000004 T util_format_r8g8_r8b8_unorm_pack_rgba_float
0000000000313c30 0000000000000004 T util_format_r8g8_r8b8_unorm_pack_rgba_8unorm
0000000000313c40 0000000000000004 T util_format_r8g8_r8b8_unorm_fetch_rgba_float
0000000000313c50 0000000000000004 T util_format_g8r8_b8r8_unorm_unpack_rgba_float
0000000000313c60 0000000000000004 T util_format_g8r8_b8r8_unorm_unpack_rgba_8unorm
0000000000313c70 0000000000000004 T util_format_g8r8_b8r8_unorm_pack_rgba_float
0000000000313c80 0000000000000004 T util_format_g8r8_b8r8_unorm_pack_rgba_8unorm
0000000000313c90 0000000000000004 T util_format_g8r8_b8r8_unorm_fetch_rgba_float
0000000000313ca0 0000000000000074 T util_format_s8_uint_unpack_s_8uint
0000000000313d20 0000000000000074 T util_format_s8_uint_pack_s_8uint
0000000000313da0 000000000000005c T util_format_z16_unorm_unpack_z_float
0000000000313e00 0000000000000060 T util_format_z16_unorm_pack_z_float
0000000000313e60 0000000000000048 T util_format_z16_unorm_unpack_z_32unorm
0000000000313eb0 0000000000000048 T util_format_z16_unorm_pack_z_32unorm
0000000000313f00 0000000000000060 T util_format_z32_unorm_unpack_z_float
0000000000313f60 0000000000000060 T util_format_z32_unorm_pack_z_float
0000000000313fc0 0000000000000074 T util_format_z32_unorm_unpack_z_32unorm
0000000000314040 0000000000000074 T util_format_z32_unorm_pack_z_32unorm
00000000003140c0 0000000000000074 T util_format_z32_float_unpack_z_float
0000000000314140 0000000000000074 T util_format_z32_float_pack_z_float
00000000003141c0 0000000000000060 T util_format_z32_float_unpack_z_32unorm
0000000000314220 0000000000000060 T util_format_z32_float_pack_z_32unorm
0000000000314280 000000000000005c T util_format_z24_unorm_s8_uint_unpack_z_float
00000000003142e0 0000000000000068 T util_format_z24_unorm_s8_uint_pack_z_float
0000000000314350 000000000000004c T util_format_z24_unorm_s8_uint_unpack_z_32unorm
00000000003143a0 0000000000000050 T util_format_z24_unorm_s8_uint_pack_z_32unorm
00000000003143f0 0000000000000048 T util_format_z24_unorm_s8_uint_unpack_s_8uint
0000000000314440 0000000000000048 T util_format_z24_unorm_s8_uint_pack_s_8uint
0000000000314490 000000000000005c T util_format_s8_uint_z24_unorm_unpack_z_float
00000000003144f0 0000000000000068 T util_format_s8_uint_z24_unorm_pack_z_float
0000000000314560 000000000000004c T util_format_s8_uint_z24_unorm_unpack_z_32unorm
00000000003145b0 000000000000004c T util_format_s8_uint_z24_unorm_pack_z_32unorm
0000000000314600 0000000000000044 T util_format_s8_uint_z24_unorm_unpack_s_8uint
0000000000314650 0000000000000048 T util_format_s8_uint_z24_unorm_pack_s_8uint
00000000003146a0 000000000000005c T util_format_z24x8_unorm_unpack_z_float
0000000000314700 0000000000000064 T util_format_z24x8_unorm_pack_z_float
0000000000314770 000000000000004c T util_format_z24x8_unorm_unpack_z_32unorm
00000000003147c0 0000000000000048 T util_format_z24x8_unorm_pack_z_32unorm
0000000000314810 000000000000005c T util_format_x8z24_unorm_unpack_z_float
0000000000314870 0000000000000064 T util_format_x8z24_unorm_pack_z_float
00000000003148e0 000000000000004c T util_format_x8z24_unorm_unpack_z_32unorm
0000000000314930 0000000000000048 T util_format_x8z24_unorm_pack_z_32unorm
0000000000314980 0000000000000048 T util_format_z32_float_s8x24_uint_unpack_z_float
00000000003149d0 0000000000000048 T util_format_z32_float_s8x24_uint_pack_z_float
0000000000314a20 0000000000000064 T util_format_z32_float_s8x24_uint_unpack_z_32unorm
0000000000314a90 0000000000000060 T util_format_z32_float_s8x24_uint_pack_z_32unorm
0000000000314af0 000000000000005c T util_format_z32_float_s8x24_uint_unpack_s_8uint
0000000000314b50 000000000000005c T util_format_z32_float_s8x24_uint_pack_s_8uint
0000000000314bb0 0000000000000048 T util_format_x24s8_uint_unpack_s_8uint
0000000000314c00 0000000000000048 T util_format_x24s8_uint_pack_s_8uint
0000000000314c50 0000000000000044 T util_format_s8x24_uint_unpack_s_8uint
0000000000314ca0 0000000000000048 T util_format_s8x24_uint_pack_s_8uint
0000000000314cf0 000000000000005c T util_format_x32_s8x24_uint_unpack_s_8uint
0000000000314d50 000000000000005c T util_format_x32_s8x24_uint_pack_s_8uint
0000000000314db0 00000000000002dc t (anonymous namespace)::add_uniform_to_shader::visit_field(glsl_type const*, char const*, bool, glsl_type const*, glsl_interface_packing, bool)
0000000000315090 00000000000000f4 t _mesa_generate_parameters_list_for_uniforms
0000000000315190 0000000000000408 t _mesa_associate_uniform_storage
00000000003155a0 000000000000024c t _mesa_glsl_link_shader
00000000003157f0 00000000000000f0 t get_src_arg_mask
00000000003158e0 0000000000000018 t compare_start
0000000000315900 0000000000000078 t update_interval
0000000000315980 000000000000019c t find_next_use
0000000000315b20 00000000000000ec t remove_instructions
0000000000315c10 000000000000022c t _mesa_remove_dead_code_global
0000000000315e40 0000000000000198 t _mesa_simplify_cmp
0000000000315fe0 0000000000000180 t _mesa_find_temp_intervals
0000000000316160 000000000000039c t _mesa_reallocate_registers
0000000000316500 0000000000000790 t _mesa_optimize_program
0000000000316c90 000000000000000c t _mesa_new_parameter_list
0000000000316ca0 00000000000000d8 t _mesa_new_parameter_list_sized
0000000000316d80 0000000000000068 t _mesa_free_parameter_list
0000000000316df0 00000000000000c4 t _mesa_reserve_parameter_storage
0000000000316ec0 0000000000000274 t _mesa_add_parameter
0000000000317140 00000000000002b8 t _mesa_add_typed_unnamed_constant
0000000000317400 00000000000000f4 t _mesa_add_sized_state_reference
0000000000317500 000000000000000c t _mesa_add_state_reference
0000000000317510 000000000000007c t binary
0000000000317590 0000000000000188 t _mesa_register_file_name
0000000000317720 0000000000000214 t reg_string
0000000000317940 00000000000000e0 t _mesa_fprint_parameter_list.part.0
0000000000317a20 0000000000000268 t _mesa_swizzle_string
0000000000317c90 0000000000000068 t fprint_src_reg
0000000000317d00 0000000000000084 t _mesa_writemask_string
0000000000317d90 0000000000000170 t _mesa_fprint_alu_instruction
0000000000317f00 0000000000000684 t _mesa_fprint_instruction_opt
0000000000318590 0000000000000154 t _mesa_fprint_program_opt
00000000003186f0 0000000000000030 t _mesa_print_program
0000000000318720 00000000000001b8 t _mesa_print_program_parameters
00000000003188e0 0000000000000038 t _mesa_print_parameter_list
0000000000318920 0000000000000190 t _mesa_write_shader_to_file
0000000000318ab0 0000000000000048 t _mesa_set_program_error
0000000000318b00 00000000000000c8 t _mesa_init_gl_program
0000000000318bd0 0000000000000070 t _mesa_delete_program
0000000000318c40 0000000000000018 t _mesa_lookup_program
0000000000318c60 0000000000000094 t _mesa_reference_program_
0000000000318d00 00000000000000e4 t _mesa_init_program
0000000000318df0 00000000000000a0 t _mesa_free_program_data
0000000000318e90 00000000000000a0 t _mesa_update_default_objects_program
0000000000318f30 00000000000000f8 t _mesa_insert_instructions
0000000000319030 00000000000000e0 t _mesa_delete_instructions
0000000000319110 00000000000000f0 t _mesa_find_used_registers
0000000000319200 0000000000000038 t _mesa_find_free_register
0000000000319240 00000000000000a0 t _mesa_get_min_invocations_per_fragment
00000000003192e0 0000000000000360 t _mesa_insert_mvp_code
0000000000319640 00000000000003fc t _mesa_append_fog_code
0000000000319a40 0000000000000250 t _mesa_remove_output_reads
0000000000319c90 00000000000000d4 t _mesa_program_fragment_position_to_sysval
0000000000319d70 0000000000000ee8 t append_token
000000000031ac60 0000000000000104 t _mesa_program_state_flags
000000000031ad70 0000000000000778 t _mesa_program_state_string
000000000031b4f0 0000000000001314 t _mesa_load_state_parameters
000000000031c810 0000000000000098 t _mesa_symbol_table_pop_scope
000000000031c8b0 0000000000000058 t _mesa_symbol_table_push_scope
000000000031c910 000000000000004c t _mesa_symbol_table_symbol_scope
000000000031c960 0000000000000028 t _mesa_symbol_table_find_symbol
000000000031c990 00000000000000e4 t _mesa_symbol_table_add_symbol
000000000031ca80 0000000000000048 t _mesa_symbol_table_replace_symbol
000000000031cad0 0000000000000088 t _mesa_symbol_table_ctor
000000000031cb60 0000000000000044 t _mesa_symbol_table_dtor
000000000031cbb0 00000000000001cc t accum_scale_or_bias
000000000031cd80 000000000000030c t accum_or_load
000000000031d090 0000000000000124 t _mesa_ClearAccum
000000000031d1c0 00000000000001e8 t _mesa_clear_accum_buffer
000000000031d3b0 0000000000000010 t _mesa_init_accum
000000000031d3c0 0000000000000764 T _mesa_Accum
000000000031db30 000000000000006c t VertexAttrib1NbvNV
000000000031dba0 000000000000004c t VertexAttrib1bvNV
000000000031dbf0 000000000000007c t VertexAttrib2NbvNV
000000000031dc70 0000000000000054 t VertexAttrib2bvNV
000000000031dcd0 0000000000000094 t VertexAttrib3NbvNV
000000000031dd70 000000000000005c t VertexAttrib3bvNV
000000000031ddd0 00000000000000a8 t VertexAttrib4NbvNV
000000000031de80 0000000000000064 t VertexAttrib4bvNV
000000000031def0 0000000000000058 t VertexAttrib1NubvNV
000000000031df50 000000000000004c t VertexAttrib1ubvNV
000000000031dfa0 0000000000000060 t VertexAttrib2NubvNV
000000000031e000 0000000000000054 t VertexAttrib2ubvNV
000000000031e060 0000000000000068 t VertexAttrib3NubvNV
000000000031e0d0 000000000000005c t VertexAttrib3ubvNV
000000000031e130 0000000000000070 t VertexAttrib4NubvNV
000000000031e1a0 0000000000000064 t VertexAttrib4ubvNV
000000000031e210 000000000000006c t VertexAttrib1NsvNV
000000000031e280 000000000000004c t VertexAttrib1svNV
000000000031e2d0 000000000000007c t VertexAttrib2NsvNV
000000000031e350 0000000000000054 t VertexAttrib2svNV
000000000031e3b0 0000000000000094 t VertexAttrib3NsvNV
000000000031e450 000000000000005c t VertexAttrib3svNV
000000000031e4b0 00000000000000a8 t VertexAttrib4NsvNV
000000000031e560 0000000000000064 t VertexAttrib4svNV
000000000031e5d0 0000000000000060 t VertexAttrib1NusvNV
000000000031e630 000000000000004c t VertexAttrib1usvNV
000000000031e680 000000000000006c t VertexAttrib2NusvNV
000000000031e6f0 0000000000000054 t VertexAttrib2usvNV
000000000031e750 0000000000000078 t VertexAttrib3NusvNV
000000000031e7d0 000000000000005c t VertexAttrib3usvNV
000000000031e830 0000000000000084 t VertexAttrib4NusvNV
000000000031e8c0 0000000000000064 t VertexAttrib4usvNV
000000000031e930 0000000000000074 t VertexAttrib1NivNV
000000000031e9b0 000000000000004c t VertexAttrib1ivNV
000000000031ea00 000000000000008c t VertexAttrib2NivNV
000000000031ea90 0000000000000050 t VertexAttrib2ivNV
000000000031eae0 00000000000000a8 t VertexAttrib3NivNV
000000000031eb90 0000000000000058 t VertexAttrib3ivNV
000000000031ebf0 00000000000000c0 t VertexAttrib4NivNV
000000000031ecb0 000000000000005c t VertexAttrib4ivNV
000000000031ed10 0000000000000064 t VertexAttrib1NuivNV
000000000031ed80 000000000000004c t VertexAttrib1uivNV
000000000031edd0 0000000000000070 t VertexAttrib2NuivNV
000000000031ee40 0000000000000050 t VertexAttrib2uivNV
000000000031ee90 0000000000000080 t VertexAttrib3NuivNV
000000000031ef10 0000000000000058 t VertexAttrib3uivNV
000000000031ef70 000000000000008c t VertexAttrib4NuivNV
000000000031f000 000000000000005c t VertexAttrib4uivNV
000000000031f060 0000000000000044 t VertexAttrib1fvNV
000000000031f0b0 0000000000000044 t VertexAttrib2fvNV
000000000031f100 0000000000000044 t VertexAttrib3fvNV
000000000031f150 0000000000000044 t VertexAttrib4fvNV
000000000031f1a0 0000000000000044 t VertexAttrib1dvNV
000000000031f1f0 0000000000000044 t VertexAttrib2dvNV
000000000031f240 0000000000000044 t VertexAttrib3dvNV
000000000031f290 0000000000000044 t VertexAttrib4dvNV
000000000031f2e0 000000000000006c t VertexAttrib1NbvARB
000000000031f350 000000000000004c t VertexAttrib1bvARB
000000000031f3a0 000000000000007c t VertexAttrib2NbvARB
000000000031f420 0000000000000054 t VertexAttrib2bvARB
000000000031f480 0000000000000094 t VertexAttrib3NbvARB
000000000031f520 000000000000005c t VertexAttrib3bvARB
000000000031f580 00000000000000a8 t VertexAttrib4NbvARB
000000000031f630 0000000000000064 t VertexAttrib4bvARB
000000000031f6a0 0000000000000058 t VertexAttrib1NubvARB
000000000031f700 000000000000004c t VertexAttrib1ubvARB
000000000031f750 0000000000000060 t VertexAttrib2NubvARB
000000000031f7b0 0000000000000054 t VertexAttrib2ubvARB
000000000031f810 0000000000000068 t VertexAttrib3NubvARB
000000000031f880 000000000000005c t VertexAttrib3ubvARB
000000000031f8e0 0000000000000070 t VertexAttrib4NubvARB
000000000031f950 0000000000000064 t VertexAttrib4ubvARB
000000000031f9c0 000000000000006c t VertexAttrib1NsvARB
000000000031fa30 000000000000004c t VertexAttrib1svARB
000000000031fa80 000000000000007c t VertexAttrib2NsvARB
000000000031fb00 0000000000000054 t VertexAttrib2svARB
000000000031fb60 0000000000000094 t VertexAttrib3NsvARB
000000000031fc00 000000000000005c t VertexAttrib3svARB
000000000031fc60 00000000000000a8 t VertexAttrib4NsvARB
000000000031fd10 0000000000000064 t VertexAttrib4svARB
000000000031fd80 0000000000000060 t VertexAttrib1NusvARB
000000000031fde0 000000000000004c t VertexAttrib1usvARB
000000000031fe30 000000000000006c t VertexAttrib2NusvARB
000000000031fea0 0000000000000054 t VertexAttrib2usvARB
000000000031ff00 0000000000000078 t VertexAttrib3NusvARB
000000000031ff80 000000000000005c t VertexAttrib3usvARB
000000000031ffe0 0000000000000084 t VertexAttrib4NusvARB
0000000000320070 0000000000000064 t VertexAttrib4usvARB
00000000003200e0 0000000000000074 t VertexAttrib1NivARB
0000000000320160 000000000000004c t VertexAttrib1ivARB
00000000003201b0 000000000000008c t VertexAttrib2NivARB
0000000000320240 0000000000000050 t VertexAttrib2ivARB
0000000000320290 00000000000000a8 t VertexAttrib3NivARB
0000000000320340 0000000000000058 t VertexAttrib3ivARB
00000000003203a0 00000000000000c0 t VertexAttrib4NivARB
0000000000320460 000000000000005c t VertexAttrib4ivARB
00000000003204c0 0000000000000064 t VertexAttrib1NuivARB
0000000000320530 000000000000004c t VertexAttrib1uivARB
0000000000320580 0000000000000070 t VertexAttrib2NuivARB
00000000003205f0 0000000000000050 t VertexAttrib2uivARB
0000000000320640 0000000000000080 t VertexAttrib3NuivARB
00000000003206c0 0000000000000058 t VertexAttrib3uivARB
0000000000320720 000000000000008c t VertexAttrib4NuivARB
00000000003207b0 000000000000005c t VertexAttrib4uivARB
0000000000320810 0000000000000044 t VertexAttrib1fvARB
0000000000320860 0000000000000044 t VertexAttrib2fvARB
00000000003208b0 0000000000000044 t VertexAttrib3fvARB
0000000000320900 0000000000000044 t VertexAttrib4fvARB
0000000000320950 0000000000000044 t VertexAttrib1dvARB
00000000003209a0 0000000000000044 t VertexAttrib2dvARB
00000000003209f0 0000000000000044 t VertexAttrib3dvARB
0000000000320a40 0000000000000044 t VertexAttrib4dvARB
0000000000320a90 0000000000000048 t VertexAttribI1bv
0000000000320ae0 000000000000004c t VertexAttribI2bv
0000000000320b30 0000000000000050 t VertexAttribI3bv
0000000000320b80 0000000000000044 t VertexAttribI4bv
0000000000320bd0 0000000000000048 t VertexAttribI1ubv
0000000000320c20 000000000000004c t VertexAttribI2ubv
0000000000320c70 0000000000000050 t VertexAttribI3ubv
0000000000320cc0 0000000000000044 t VertexAttribI4ubv
0000000000320d10 0000000000000048 t VertexAttribI1sv
0000000000320d60 000000000000004c t VertexAttribI2sv
0000000000320db0 0000000000000050 t VertexAttribI3sv
0000000000320e00 0000000000000044 t VertexAttribI4sv
0000000000320e50 0000000000000048 t VertexAttribI1usv
0000000000320ea0 000000000000004c t VertexAttribI2usv
0000000000320ef0 0000000000000050 t VertexAttribI3usv
0000000000320f40 0000000000000044 t VertexAttribI4usv
0000000000320f90 0000000000000048 t VertexAttribI1iv
0000000000320fe0 0000000000000050 t VertexAttribI2iv
0000000000321030 0000000000000050 t VertexAttribI3iv
0000000000321080 0000000000000044 t VertexAttribI4iv
00000000003210d0 0000000000000048 t VertexAttribI1uiv
0000000000321120 0000000000000050 t VertexAttribI2uiv
0000000000321170 0000000000000050 t VertexAttribI3uiv
00000000003211c0 0000000000000044 t VertexAttribI4uiv
0000000000321210 0000000000000044 t VertexAttribL1dv
0000000000321260 0000000000000044 t VertexAttribL2dv
00000000003212b0 0000000000000044 t VertexAttribL3dv
0000000000321300 0000000000000044 t VertexAttribL4dv
0000000000321350 0000000000000374 t _mesa_array_element
00000000003216d0 00000000000000b8 T _ae_ArrayElement
0000000000321790 000000000000000c t _mesa_install_arrayelt_vtxfmt
00000000003217a0 0000000000000074 T _mesa_Color3b
0000000000321820 0000000000000038 T _mesa_Color3d
0000000000321860 0000000000000080 T _mesa_Color3i
00000000003218e0 0000000000000074 T _mesa_Color3s
0000000000321960 0000000000000060 T _mesa_Color3ui
00000000003219c0 000000000000005c T _mesa_Color3us
0000000000321a20 000000000000004c T _mesa_Color3ub
0000000000321a70 0000000000000078 T _mesa_Color3bv
0000000000321af0 0000000000000044 T _mesa_Color3dv
0000000000321b40 000000000000008c T _mesa_Color3iv
0000000000321bd0 0000000000000078 T _mesa_Color3sv
0000000000321c50 0000000000000068 T _mesa_Color3uiv
0000000000321cc0 0000000000000060 T _mesa_Color3usv
0000000000321d20 0000000000000050 T _mesa_Color3ubv
0000000000321d70 0000000000000088 T _mesa_Color4b
0000000000321e00 0000000000000038 T _mesa_Color4d
0000000000321e40 0000000000000098 T _mesa_Color4i
0000000000321ee0 0000000000000088 T _mesa_Color4s
0000000000321f70 0000000000000068 T _mesa_Color4ui
0000000000321fe0 0000000000000064 T _mesa_Color4us
0000000000322050 0000000000000050 T _mesa_Color4ub
00000000003220a0 00000000000000a4 T _mesa_Color4iv
0000000000322150 000000000000008c T _mesa_Color4bv
00000000003221e0 0000000000000044 T _mesa_Color4dv
0000000000322230 000000000000008c T _mesa_Color4sv
00000000003222c0 0000000000000070 T _mesa_Color4uiv
0000000000322330 0000000000000068 T _mesa_Color4usv
00000000003223a0 0000000000000054 T _mesa_Color4ubv
0000000000322400 0000000000000040 T _mesa_FogCoordd
0000000000322440 0000000000000048 T _mesa_FogCoorddv
0000000000322490 000000000000002c T _mesa_Indexd
00000000003224c0 0000000000000030 T _mesa_Indexi
00000000003224f0 0000000000000030 T _mesa_Indexs
0000000000322520 0000000000000030 T _mesa_Indexub
0000000000322550 0000000000000034 T _mesa_Indexdv
0000000000322590 0000000000000034 T _mesa_Indexiv
00000000003225d0 0000000000000034 T _mesa_Indexsv
0000000000322610 0000000000000034 T _mesa_Indexubv
0000000000322650 0000000000000034 T _mesa_EdgeFlagv
0000000000322690 0000000000000074 T _mesa_Normal3b
0000000000322710 0000000000000034 T _mesa_Normal3d
0000000000322750 0000000000000080 T _mesa_Normal3i
00000000003227d0 0000000000000074 T _mesa_Normal3s
0000000000322850 0000000000000078 T _mesa_Normal3bv
00000000003228d0 0000000000000040 T _mesa_Normal3dv
0000000000322910 000000000000008c T _mesa_Normal3iv
00000000003229a0 0000000000000078 T _mesa_Normal3sv
0000000000322a20 000000000000002c T _mesa_TexCoord1d
0000000000322a50 0000000000000030 T _mesa_TexCoord1i
0000000000322a80 0000000000000030 T _mesa_TexCoord1s
0000000000322ab0 0000000000000030 T _mesa_TexCoord2d
0000000000322ae0 0000000000000038 T _mesa_TexCoord2s
0000000000322b20 0000000000000034 T _mesa_TexCoord2i
0000000000322b60 0000000000000034 T _mesa_TexCoord3d
0000000000322ba0 0000000000000038 T _mesa_TexCoord3i
0000000000322be0 0000000000000040 T _mesa_TexCoord3s
0000000000322c20 0000000000000038 T _mesa_TexCoord4d
0000000000322c60 000000000000003c T _mesa_TexCoord4i
0000000000322ca0 0000000000000048 T _mesa_TexCoord4s
0000000000322cf0 0000000000000034 T _mesa_TexCoord1dv
0000000000322d30 0000000000000034 T _mesa_TexCoord1iv
0000000000322d70 0000000000000034 T _mesa_TexCoord1sv
0000000000322db0 0000000000000038 T _mesa_TexCoord2dv
0000000000322df0 0000000000000038 T _mesa_TexCoord2iv
0000000000322e30 000000000000003c T _mesa_TexCoord2sv
0000000000322e70 0000000000000040 T _mesa_TexCoord3dv
0000000000322eb0 0000000000000040 T _mesa_TexCoord3iv
0000000000322ef0 0000000000000044 T _mesa_TexCoord3sv
0000000000322f40 0000000000000044 T _mesa_TexCoord4dv
0000000000322f90 0000000000000044 T _mesa_TexCoord4iv
0000000000322fe0 000000000000004c T _mesa_TexCoord4sv
0000000000323030 0000000000000030 T _mesa_Vertex2d
0000000000323060 0000000000000034 T _mesa_Vertex2i
00000000003230a0 0000000000000038 T _mesa_Vertex2s
00000000003230e0 0000000000000034 T _mesa_Vertex3d
0000000000323120 0000000000000038 T _mesa_Vertex3i
0000000000323160 0000000000000040 T _mesa_Vertex3s
00000000003231a0 0000000000000038 T _mesa_Vertex4d
00000000003231e0 000000000000003c T _mesa_Vertex4i
0000000000323220 0000000000000048 T _mesa_Vertex4s
0000000000323270 0000000000000038 T _mesa_Vertex2dv
00000000003232b0 0000000000000038 T _mesa_Vertex2iv
00000000003232f0 000000000000003c T _mesa_Vertex2sv
0000000000323330 0000000000000040 T _mesa_Vertex3dv
0000000000323370 0000000000000040 T _mesa_Vertex3iv
00000000003233b0 0000000000000044 T _mesa_Vertex3sv
0000000000323400 0000000000000044 T _mesa_Vertex4dv
0000000000323450 0000000000000044 T _mesa_Vertex4iv
00000000003234a0 000000000000004c T _mesa_Vertex4sv
00000000003234f0 0000000000000038 T _mesa_MultiTexCoord1d
0000000000323530 000000000000003c T _mesa_MultiTexCoord1dv
0000000000323570 0000000000000038 T _mesa_MultiTexCoord1i
00000000003235b0 000000000000003c T _mesa_MultiTexCoord1iv
00000000003235f0 000000000000003c T _mesa_MultiTexCoord1s
0000000000323630 000000000000003c T _mesa_MultiTexCoord1sv
0000000000323670 000000000000003c T _mesa_MultiTexCoord2d
00000000003236b0 0000000000000040 T _mesa_MultiTexCoord2dv
00000000003236f0 000000000000003c T _mesa_MultiTexCoord2i
0000000000323730 0000000000000040 T _mesa_MultiTexCoord2iv
0000000000323770 0000000000000044 T _mesa_MultiTexCoord2s
00000000003237c0 0000000000000044 T _mesa_MultiTexCoord2sv
0000000000323810 0000000000000040 T _mesa_MultiTexCoord3d
0000000000323850 0000000000000048 T _mesa_MultiTexCoord3dv
00000000003238a0 0000000000000040 T _mesa_MultiTexCoord3i
00000000003238e0 0000000000000048 T _mesa_MultiTexCoord3iv
0000000000323930 000000000000004c T _mesa_MultiTexCoord3s
0000000000323980 000000000000004c T _mesa_MultiTexCoord3sv
00000000003239d0 0000000000000040 T _mesa_MultiTexCoord4d
0000000000323a10 000000000000004c T _mesa_MultiTexCoord4dv
0000000000323a60 0000000000000044 T _mesa_MultiTexCoord4i
0000000000323ab0 000000000000004c T _mesa_MultiTexCoord4iv
0000000000323b00 0000000000000054 T _mesa_MultiTexCoord4s
0000000000323b60 0000000000000054 T _mesa_MultiTexCoord4sv
0000000000323bc0 0000000000000038 T _mesa_EvalCoord2dv
0000000000323c00 0000000000000030 T _mesa_EvalCoord2d
0000000000323c30 0000000000000034 T _mesa_EvalCoord1dv
0000000000323c70 000000000000002c T _mesa_EvalCoord1d
0000000000323ca0 000000000000003c T _mesa_Materialf
0000000000323ce0 0000000000000044 T _mesa_Materiali
0000000000323d30 0000000000000138 T _mesa_Materialiv
0000000000323e70 0000000000000038 T _mesa_Rectd
0000000000323eb0 0000000000000044 T _mesa_Rectdv
0000000000323f00 0000000000000034 T _mesa_Rectfv
0000000000323f40 000000000000003c T _mesa_Recti
0000000000323f80 0000000000000044 T _mesa_Rectiv
0000000000323fd0 0000000000000048 T _mesa_Rects
0000000000324020 000000000000004c T _mesa_Rectsv
0000000000324070 0000000000000088 T _mesa_SecondaryColor3b
0000000000324100 0000000000000048 T _mesa_SecondaryColor3d
0000000000324150 00000000000000a4 T _mesa_SecondaryColor3i
0000000000324200 0000000000000088 T _mesa_SecondaryColor3s
0000000000324290 0000000000000074 T _mesa_SecondaryColor3ui
0000000000324310 000000000000006c T _mesa_SecondaryColor3us
0000000000324380 000000000000005c T _mesa_SecondaryColor3ub
00000000003243e0 000000000000008c T _mesa_SecondaryColor3bv
0000000000324470 0000000000000054 T _mesa_SecondaryColor3dv
00000000003244d0 00000000000000a0 T _mesa_SecondaryColor3iv
0000000000324570 000000000000008c T _mesa_SecondaryColor3sv
0000000000324600 0000000000000078 T _mesa_SecondaryColor3uiv
0000000000324680 0000000000000070 T _mesa_SecondaryColor3usv
00000000003246f0 0000000000000060 T _mesa_SecondaryColor3ubv
0000000000324750 000000000000004c T _mesa_VertexAttrib1sNV
00000000003247a0 0000000000000048 T _mesa_VertexAttrib1dNV
00000000003247f0 0000000000000054 T _mesa_VertexAttrib2sNV
0000000000324850 000000000000004c T _mesa_VertexAttrib2dNV
00000000003248a0 000000000000005c T _mesa_VertexAttrib3sNV
0000000000324900 0000000000000054 T _mesa_VertexAttrib3dNV
0000000000324960 0000000000000064 T _mesa_VertexAttrib4sNV
00000000003249d0 0000000000000054 T _mesa_VertexAttrib4dNV
0000000000324a30 0000000000000070 T _mesa_VertexAttrib4ubNV
0000000000324aa0 000000000000004c T _mesa_VertexAttrib1svNV
0000000000324af0 000000000000004c T _mesa_VertexAttrib1dvNV
0000000000324b40 0000000000000054 T _mesa_VertexAttrib2svNV
0000000000324ba0 0000000000000050 T _mesa_VertexAttrib2dvNV
0000000000324bf0 000000000000005c t _mesa_VertexAttrib3svNV
0000000000324c50 0000000000000058 T _mesa_VertexAttrib3dvNV
0000000000324cb0 0000000000000064 t _mesa_VertexAttrib4svNV
0000000000324d20 000000000000005c T _mesa_VertexAttrib4dvNV
0000000000324d80 0000000000000070 t _mesa_VertexAttrib4ubvNV
0000000000324df0 0000000000000080 T _mesa_VertexAttribs1fvNV
0000000000324e70 000000000000008c T _mesa_VertexAttribs2fvNV
0000000000324f00 000000000000005c T _mesa_VertexAttribs3svNV
0000000000324f60 000000000000008c T _mesa_VertexAttribs3fvNV
0000000000324ff0 000000000000005c T _mesa_VertexAttribs4svNV
0000000000325050 0000000000000090 T _mesa_VertexAttribs4fvNV
00000000003250e0 000000000000005c T _mesa_VertexAttribs4ubvNV
0000000000325140 000000000000004c T _mesa_VertexAttrib1s
0000000000325190 0000000000000048 T _mesa_VertexAttrib1d
00000000003251e0 0000000000000054 T _mesa_VertexAttrib2s
0000000000325240 000000000000004c T _mesa_VertexAttrib2d
0000000000325290 000000000000005c T _mesa_VertexAttrib3s
00000000003252f0 0000000000000054 T _mesa_VertexAttrib3d
0000000000325350 0000000000000064 T _mesa_VertexAttrib4s
00000000003253c0 0000000000000054 T _mesa_VertexAttrib4d
0000000000325420 000000000000004c T _mesa_VertexAttrib1sv
0000000000325470 000000000000004c T _mesa_VertexAttrib1dv
00000000003254c0 0000000000000054 T _mesa_VertexAttrib2sv
0000000000325520 0000000000000050 T _mesa_VertexAttrib2dv
0000000000325570 000000000000005c T _mesa_VertexAttrib3sv
00000000003255d0 0000000000000058 T _mesa_VertexAttrib3dv
0000000000325630 0000000000000064 T _mesa_VertexAttrib4sv
00000000003256a0 000000000000005c T _mesa_VertexAttrib4dv
0000000000325700 0000000000000064 T _mesa_VertexAttrib4bv
0000000000325770 000000000000005c T _mesa_VertexAttrib4iv
00000000003257d0 0000000000000064 T _mesa_VertexAttrib4ubv
0000000000325840 0000000000000064 T _mesa_VertexAttrib4usv
00000000003258b0 000000000000005c T _mesa_VertexAttrib4uiv
0000000000325910 00000000000000a8 T _mesa_VertexAttrib4Nbv
00000000003259c0 00000000000000a8 T _mesa_VertexAttrib4Nsv
0000000000325a70 00000000000000c0 T _mesa_VertexAttrib4Niv
0000000000325b30 0000000000000070 T _mesa_VertexAttrib4Nub
0000000000325ba0 0000000000000070 T _mesa_VertexAttrib4Nubv
0000000000325c10 0000000000000084 T _mesa_VertexAttrib4Nusv
0000000000325ca0 000000000000008c T _mesa_VertexAttrib4Nuiv
0000000000325d30 0000000000000048 T _mesa_VertexAttribI1iv
0000000000325d80 0000000000000048 T _mesa_VertexAttribI1uiv
0000000000325dd0 0000000000000054 T _mesa_VertexAttribI4bv
0000000000325e30 0000000000000054 T _mesa_VertexAttribI4sv
0000000000325e90 0000000000000054 T _mesa_VertexAttribI4ubv
0000000000325ef0 0000000000000054 T _mesa_VertexAttribI4usv
0000000000325f50 0000000000000084 T _mesa_VertexAttribs1dvNV
0000000000325fe0 0000000000000084 T _mesa_VertexAttribs1svNV
0000000000326070 0000000000000098 T _mesa_VertexAttribs2dvNV
0000000000326110 0000000000000098 T _mesa_VertexAttribs3dvNV
00000000003261b0 000000000000009c T _mesa_VertexAttribs2svNV
0000000000326250 00000000000000ac T _mesa_VertexAttribs4dvNV
0000000000326300 00000000000010cc t _mesa_loopback_init_api_table
00000000003273d0 00000000000001c4 t lookup_or_create_program
00000000003275a0 000000000000032c t set_program_string
00000000003278d0 00000000000000b4 t get_local_param_pointer
0000000000327990 00000000000003ec t get_program_iv
0000000000327d80 0000000000000194 t program_local_parameters4fv
0000000000327f20 00000000000001fc t _mesa_BindProgramARB
0000000000328120 00000000000001bc T _mesa_DeleteProgramsARB
00000000003282e0 0000000000000114 T _mesa_GenProgramsARB
0000000000328400 0000000000000084 T _mesa_IsProgramARB
0000000000328490 00000000000000a0 T _mesa_ProgramStringARB
0000000000328530 0000000000000060 T _mesa_NamedProgramStringEXT
0000000000328590 00000000000001d0 T _mesa_ProgramEnvParameter4dARB
0000000000328760 00000000000001c8 T _mesa_ProgramEnvParameter4dvARB
0000000000328930 00000000000001c0 T _mesa_ProgramEnvParameter4fARB
0000000000328af0 00000000000001d8 T _mesa_ProgramEnvParameter4fvARB
0000000000328cd0 00000000000001a0 T _mesa_ProgramEnvParameters4fvEXT
0000000000328e70 00000000000000f0 T _mesa_GetProgramEnvParameterdvARB
0000000000328f60 00000000000000f0 T _mesa_GetProgramEnvParameterfvARB
0000000000329050 0000000000000178 t _mesa_ProgramLocalParameter4fARB
00000000003291d0 0000000000000164 t _mesa_NamedProgramLocalParameter4fEXT
0000000000329340 000000000000000c T _mesa_ProgramLocalParameter4fvARB
0000000000329350 000000000000000c T _mesa_NamedProgramLocalParameter4fvEXT
0000000000329360 0000000000000098 T _mesa_ProgramLocalParameters4fvEXT
0000000000329400 0000000000000060 T _mesa_NamedProgramLocalParameters4fvEXT
0000000000329460 0000000000000188 T _mesa_ProgramLocalParameter4dARB
00000000003295f0 0000000000000174 T _mesa_NamedProgramLocalParameter4dEXT
0000000000329770 000000000000001c T _mesa_ProgramLocalParameter4dvARB
0000000000329790 000000000000001c T _mesa_NamedProgramLocalParameter4dvEXT
00000000003297b0 0000000000000134 T _mesa_GetProgramLocalParameterfvARB
00000000003298f0 00000000000000fc T _mesa_GetNamedProgramLocalParameterfvEXT
00000000003299f0 0000000000000138 T _mesa_GetProgramLocalParameterdvARB
0000000000329b30 0000000000000100 T _mesa_GetNamedProgramLocalParameterdvEXT
0000000000329c30 000000000000009c T _mesa_GetProgramivARB
0000000000329cd0 00000000000000fc T _mesa_GetNamedProgramivEXT
0000000000329dd0 00000000000000cc T _mesa_GetProgramStringARB
0000000000329ea0 00000000000000b0 T _mesa_GetNamedProgramStringEXT
0000000000329f50 00000000000000e8 t gen_vertex_arrays.part.0
000000000032a040 0000000000000050 t _mesa_new_vao
000000000032a090 0000000000000078 t _mesa_delete_vao
000000000032a110 00000000000000a0 t _mesa_reference_vao_
000000000032a1b0 00000000000000a8 t _mesa_lookup_vao
000000000032a260 0000000000000140 t _mesa_lookup_vao_err
000000000032a3a0 0000000000000038 t _mesa_initialize_vao
000000000032a3e0 00000000000004e0 t _mesa_update_vao_derived_arrays
000000000032a8c0 0000000000000028 t _mesa_set_vao_immutable
000000000032a8f0 0000000000000054 t _mesa_all_varyings_in_vbos
000000000032a950 0000000000000060 t _mesa_all_buffers_are_unmapped
000000000032a9b0 00000000000000a8 t _mesa_vao_map_arrays
000000000032aa60 000000000000007c t _mesa_vao_map
000000000032aae0 0000000000000084 t _mesa_vao_unmap_arrays
000000000032ab70 0000000000000048 t _mesa_vao_unmap
000000000032abc0 00000000000000a4 t _mesa_BindVertexArray_no_error
000000000032ac70 0000000000000158 t delete_vertex_arrays
000000000032add0 00000000000000c8 t _mesa_BindVertexArray
000000000032aea0 000000000000002c T _mesa_DeleteVertexArrays_no_error
000000000032aed0 0000000000000044 T _mesa_DeleteVertexArrays
000000000032af20 000000000000003c T _mesa_GenVertexArrays_no_error
000000000032af60 0000000000000064 T _mesa_GenVertexArrays
000000000032afd0 000000000000003c T _mesa_CreateVertexArrays_no_error
000000000032b010 0000000000000064 T _mesa_CreateVertexArrays
000000000032b080 0000000000000070 t _mesa_IsVertexArray
000000000032b0f0 000000000000011c T _mesa_VertexArrayElementBuffer_no_error
000000000032b210 00000000000000e4 T _mesa_VertexArrayElementBuffer
000000000032b300 00000000000000c4 T _mesa_GetVertexArrayiv
000000000032b3d0 00000000000000e8 t check_arith_arg
000000000032b4c0 000000000000005c t _mesa_delete_ati_fragment_shader.part.0
000000000032b520 00000000000005f8 t _mesa_FragmentOpXATI
000000000032bb20 0000000000000034 t _mesa_new_ati_fragment_shader
000000000032bb60 0000000000000018 t _mesa_delete_ati_fragment_shader
000000000032bb80 0000000000000118 T _mesa_GenFragmentShadersATI
000000000032bca0 0000000000000174 t _mesa_BindFragmentShaderATI
000000000032be20 0000000000000168 T _mesa_DeleteFragmentShaderATI
000000000032bf90 0000000000000140 T _mesa_BeginFragmentShaderATI
000000000032c0d0 0000000000000180 T _mesa_EndFragmentShaderATI
000000000032c250 0000000000000208 T _mesa_PassTexCoordATI
000000000032c460 0000000000000208 T _mesa_SampleMapATI
000000000032c670 0000000000000060 T _mesa_ColorFragmentOp1ATI
000000000032c6d0 0000000000000068 T _mesa_ColorFragmentOp2ATI
000000000032c740 0000000000000074 T _mesa_ColorFragmentOp3ATI
000000000032c7c0 000000000000005c T _mesa_AlphaFragmentOp1ATI
000000000032c820 000000000000005c T _mesa_AlphaFragmentOp2ATI
000000000032c880 0000000000000070 T _mesa_AlphaFragmentOp3ATI
000000000032c8f0 0000000000000128 T _mesa_SetFragmentShaderConstantATI
000000000032ca20 0000000000000138 t copy_array_attrib
000000000032cb60 00000000000000b4 t push_attrib
000000000032cc20 00000000000009b8 T _mesa_PushAttrib
000000000032d5e0 0000000000001ebc T _mesa_PopAttrib
000000000032f4a0 00000000000003e4 t _mesa_PushClientAttrib
000000000032f890 0000000000000380 T _mesa_PopClientAttrib
000000000032fc10 0000000000000324 t _mesa_ClientAttribDefaultEXT
000000000032ff40 0000000000000024 T _mesa_PushClientAttribDefaultEXT
000000000032ff70 0000000000000128 t _mesa_free_attrib_data
00000000003300a0 0000000000000014 t _mesa_init_attrib
00000000003300c0 000000000000004c T _mesa_TextureBarrierNV
0000000000330110 000000000000003c T _mesa_MemoryBarrier
0000000000330150 0000000000000054 T _mesa_MemoryBarrierByRegion_no_error
00000000003301b0 0000000000000084 T _mesa_MemoryBarrierByRegion
0000000000330240 000000000000004c T _mesa_BlendBarrier
0000000000330290 000000000000004c T _mesa_FramebufferFetchBarrierEXT
00000000003302e0 0000000000000044 T _mesa_PrimitiveBoundingBox
0000000000330330 000000000000002c t _mesa_init_bbox
0000000000330360 00000000000000e0 t legal_dst_factor
0000000000330440 00000000000000b0 t update_uses_dual_src
00000000003304f0 0000000000000188 t blend_func_separate
0000000000330680 0000000000000090 t legal_src_factor
0000000000330710 0000000000000154 t validate_blend_factors
0000000000330870 00000000000000bc t skip_blend_state_update
0000000000330930 0000000000000268 t blend_equation_separate
0000000000330ba0 00000000000000a4 T _mesa_BlendFunc
0000000000330c50 0000000000000054 T _mesa_BlendFunc_no_error
0000000000330cb0 00000000000000b8 t _mesa_BlendFuncSeparate
0000000000330d70 0000000000000058 T _mesa_BlendFuncSeparate_no_error
0000000000330dd0 0000000000000118 t _mesa_BlendFuncSeparateiARB_no_error
0000000000330ef0 000000000000000c T _mesa_BlendFunciARB_no_error
0000000000330f00 00000000000001a4 t _mesa_BlendFuncSeparateiARB
00000000003310b0 000000000000000c T _mesa_BlendFunciARB
00000000003310c0 00000000000002b8 t _mesa_BlendEquation
0000000000331380 00000000000001fc T _mesa_BlendEquationiARB_no_error
0000000000331580 00000000000002a8 T _mesa_BlendEquationiARB
0000000000331830 0000000000000030 T _mesa_BlendEquationSeparate_no_error
0000000000331860 0000000000000030 t _mesa_BlendEquationSeparate
0000000000331890 00000000000000f8 T _mesa_BlendEquationSeparateiARB_no_error
0000000000331990 000000000000020c t _mesa_BlendEquationSeparateiARB
0000000000331ba0 00000000000001b4 t _mesa_BlendColor
0000000000331d60 0000000000000128 t _mesa_AlphaFunc
0000000000331e90 00000000000000fc t _mesa_LogicOp
0000000000331f90 00000000000000cc T _mesa_LogicOp_no_error
0000000000332060 0000000000000088 t _mesa_IndexMask
00000000003320f0 0000000000000138 t _mesa_ColorMask
0000000000332230 0000000000000128 t _mesa_ColorMaski
0000000000332360 00000000000001f8 t _mesa_ClampColor
0000000000332560 000000000000002c t _mesa_get_clamp_fragment_color
0000000000332590 000000000000002c t _mesa_get_clamp_read_color
00000000003325c0 0000000000000054 t _mesa_update_clamp_fragment_color
0000000000332620 0000000000000044 t _mesa_update_clamp_vertex_color
0000000000332670 00000000000000fc t _mesa_init_color
0000000000332770 0000000000000124 t validate_depth_buffer.isra.0
00000000003328a0 0000000000000148 t validate_stencil_buffer.isra.0
00000000003329f0 00000000000001f8 t validate_color_buffer
0000000000332bf0 0000000000000074 t _mesa_regions_overlap
0000000000332c70 0000000000000194 T _mesa_BlitFramebuffer_no_error
0000000000332e10 0000000000000458 T _mesa_BlitFramebuffer
0000000000333270 00000000000001e4 T _mesa_BlitNamedFramebuffer_no_error
0000000000333460 00000000000004c0 T _mesa_BlitNamedFramebuffer
0000000000333920 00000000000003c8 t get_buffer_target
0000000000333cf0 0000000000000048 t _mesa_delete_buffer_object
0000000000333d40 0000000000000128 t validate_buffer_storage
0000000000333e70 0000000000000110 t buffer_object_subdata_range_good
0000000000333f80 0000000000000130 t copy_buffer_sub_data
00000000003340b0 00000000000000d0 t map_buffer_range
0000000000334180 00000000000000bc t buffer_page_commitment
0000000000334240 00000000000000e4 t _mesa_ClearBufferSubData_sw
0000000000334330 00000000000001e4 t get_buffer_parameter
0000000000334520 0000000000000080 t buffer_usage_warning
00000000003345a0 00000000000000e0 t convert_clear_buffer_data
0000000000334680 0000000000000254 t clear_buffer_sub_data_error
00000000003348e0 0000000000000084 t validate_and_unmap_buffer
0000000000334970 00000000000000d4 t flush_mapped_buffer_range
0000000000334a50 0000000000000124 t create_buffers.part.0
0000000000334b80 00000000000000dc t validate_buffer_sub_data
0000000000334c60 00000000000002f0 t validate_map_buffer_range.part.0
0000000000334f50 0000000000000068 t validate_map_buffer_range
0000000000334fc0 0000000000000130 t clear_buffer_sub_data_no_error.constprop.0
00000000003350f0 000000000000010c t buffer_data_no_error
0000000000335200 000000000000016c t buffer_storage
0000000000335370 000000000000020c t buffer_data_error
0000000000335580 0000000000000064 t _mesa_reference_buffer_object_
00000000003355f0 0000000000000114 t bind_buffer
0000000000335710 00000000000000cc t bind_buffer_base_uniform_buffer
00000000003357e0 00000000000000d0 t bind_buffer_base_shader_storage_buffer
00000000003358b0 00000000000000cc t bind_buffer_base_atomic_buffer
0000000000335980 00000000000000a8 t _mesa_initialize_buffer_object
0000000000335a30 0000000000000158 t _mesa_init_buffer_objects
0000000000335b90 0000000000000314 t _mesa_free_buffer_objects
0000000000335eb0 00000000000000e4 t _mesa_handle_bind_buffer_gen
0000000000335fa0 00000000000000f4 t bind_buffer_object
00000000003360a0 000000000000057c t delete_buffers
0000000000336620 0000000000000068 t _mesa_update_default_objects_buffer_objects
0000000000336690 0000000000000018 t _mesa_lookup_bufferobj
00000000003366b0 0000000000000080 t _mesa_lookup_bufferobj_err
0000000000336730 00000000000000bc t _mesa_multi_bind_lookup_bufferobj
00000000003367f0 000000000000036c t bind_xfb_buffers
0000000000336b60 0000000000000100 t set_buffer_multi_binding
0000000000336c60 00000000000002e0 t bind_uniform_buffers
0000000000336f40 00000000000002e4 t bind_shader_storage_buffers
0000000000337230 00000000000002c4 t bind_atomic_buffers
0000000000337500 0000000000000060 t _mesa_buffer_unmap_all_mappings
0000000000337560 00000000000003e8 T _mesa_BindBuffer_no_error
0000000000337950 0000000000000074 t _mesa_BindBuffer
00000000003379d0 000000000000002c T _mesa_DeleteBuffers_no_error
0000000000337a00 0000000000000044 T _mesa_DeleteBuffers
0000000000337a50 0000000000000034 T _mesa_GenBuffers_no_error
0000000000337a90 000000000000005c T _mesa_GenBuffers
0000000000337af0 0000000000000034 T _mesa_CreateBuffers_no_error
0000000000337b30 000000000000005c T _mesa_CreateBuffers
0000000000337b90 000000000000007c t _mesa_IsBuffer
0000000000337c10 0000000000000070 T _mesa_BufferStorage_no_error
0000000000337c80 0000000000000110 T _mesa_BufferStorage
0000000000337d90 000000000000019c T _mesa_NamedBufferStorageEXT
0000000000337f30 00000000000001dc T _mesa_BufferStorageMemEXT
0000000000338110 000000000000009c T _mesa_BufferStorageMemEXT_no_error
00000000003381b0 0000000000000090 T _mesa_NamedBufferStorage_no_error
0000000000338240 0000000000000100 T _mesa_NamedBufferStorage
0000000000338340 00000000000001b0 T _mesa_NamedBufferStorageMemEXT
00000000003384f0 00000000000000b8 T _mesa_NamedBufferStorageMemEXT_no_error
00000000003385b0 000000000000005c T _mesa_BufferData_no_error
0000000000338610 00000000000000a4 T _mesa_BufferData
00000000003386c0 0000000000000078 T _mesa_NamedBufferData_no_error
0000000000338740 00000000000000c0 T _mesa_NamedBufferData
0000000000338800 00000000000000d4 T _mesa_NamedBufferDataEXT
00000000003388e0 0000000000000080 T _mesa_BufferSubData_no_error
0000000000338960 0000000000000128 T _mesa_BufferSubData
0000000000338a90 00000000000000a4 T _mesa_NamedBufferSubData_no_error
0000000000338b40 0000000000000124 T _mesa_NamedBufferSubData
0000000000338c70 0000000000000120 T _mesa_NamedBufferSubDataEXT
0000000000338d90 0000000000000104 T _mesa_GetBufferSubData
0000000000338ea0 0000000000000100 T _mesa_GetNamedBufferSubData
0000000000338fa0 0000000000000100 T _mesa_GetNamedBufferSubDataEXT
00000000003390a0 0000000000000070 T _mesa_ClearBufferData_no_error
0000000000339110 00000000000000c4 T _mesa_ClearBufferData
00000000003391e0 00000000000000a4 T _mesa_ClearNamedBufferData_no_error
0000000000339290 00000000000000e4 T _mesa_ClearNamedBufferData
0000000000339380 000000000000014c T _mesa_ClearNamedBufferDataEXT
00000000003394d0 0000000000000078 T _mesa_ClearBufferSubData_no_error
0000000000339550 00000000000000d4 T _mesa_ClearBufferSubData
0000000000339630 00000000000000ac T _mesa_ClearNamedBufferSubData_no_error
00000000003396e0 00000000000000fc T _mesa_ClearNamedBufferSubData
00000000003397e0 0000000000000164 T _mesa_ClearNamedBufferSubDataEXT
0000000000339950 0000000000000054 T _mesa_UnmapBuffer_no_error
00000000003399b0 0000000000000090 T _mesa_UnmapBuffer
0000000000339a40 0000000000000080 T _mesa_UnmapNamedBufferEXT_no_error
0000000000339ac0 00000000000000b8 T _mesa_UnmapNamedBufferEXT
0000000000339b80 00000000000000bc T _mesa_GetBufferParameteriv
0000000000339c40 00000000000000bc T _mesa_GetBufferParameteri64v
0000000000339d00 00000000000000bc T _mesa_GetNamedBufferParameteriv
0000000000339dc0 00000000000000dc T _mesa_GetNamedBufferParameterivEXT
0000000000339ea0 00000000000000bc T _mesa_GetNamedBufferParameteri64v
0000000000339f60 00000000000000ac T _mesa_GetBufferPointerv
000000000033a010 00000000000000c0 T _mesa_GetNamedBufferPointerv
000000000033a0d0 00000000000000cc T _mesa_GetNamedBufferPointervEXT
000000000033a1a0 0000000000000080 T _mesa_CopyBufferSubData_no_error
000000000033a220 00000000000000c0 T _mesa_CopyBufferSubData
000000000033a2e0 00000000000000f4 T _mesa_NamedCopyBufferSubDataEXT
000000000033a3e0 00000000000000b4 T _mesa_CopyNamedBufferSubData_no_error
000000000033a4a0 0000000000000128 T _mesa_CopyNamedBufferSubData
000000000033a5d0 0000000000000058 T _mesa_MapBufferRange_no_error
000000000033a630 000000000000013c T _mesa_MapBufferRange
000000000033a770 00000000000000fc T _mesa_MapNamedBufferRange_no_error
000000000033a870 0000000000000130 T _mesa_MapNamedBufferRangeEXT
000000000033a9a0 0000000000000138 T _mesa_MapNamedBufferRange
000000000033aae0 000000000000007c T _mesa_MapBuffer_no_error
000000000033ab60 00000000000001a4 T _mesa_MapBuffer
000000000033ad10 0000000000000098 T _mesa_MapNamedBuffer_no_error
000000000033adb0 00000000000001ac T _mesa_MapNamedBuffer
000000000033af60 00000000000001b8 T _mesa_MapNamedBufferEXT
000000000033b120 0000000000000064 T _mesa_FlushMappedBufferRange_no_error
000000000033b190 0000000000000098 T _mesa_FlushMappedBufferRange
000000000033b230 0000000000000088 T _mesa_FlushMappedNamedBufferRange_no_error
000000000033b2c0 00000000000000a8 T _mesa_FlushMappedNamedBufferRange
000000000033b370 00000000000000c8 T _mesa_FlushMappedNamedBufferRangeEXT
000000000033b440 00000000000002f0 T _mesa_BindBufferRange_no_error
000000000033b730 00000000000003e8 T _mesa_BindBufferRange
000000000033bb20 0000000000000178 T _mesa_BindBufferBase
000000000033bca0 0000000000000100 T _mesa_BindBuffersRange
000000000033bda0 000000000000010c T _mesa_BindBuffersBase
000000000033beb0 0000000000000084 T _mesa_InvalidateBufferSubData_no_error
000000000033bf40 0000000000000134 T _mesa_InvalidateBufferSubData
000000000033c080 0000000000000074 T _mesa_InvalidateBufferData_no_error
000000000033c100 00000000000000cc T _mesa_InvalidateBufferData
000000000033c1d0 00000000000000a4 T _mesa_BufferPageCommitmentARB
000000000033c280 00000000000000b4 T _mesa_NamedBufferPageCommitmentARB
000000000033c340 00000000000000d0 T _mesa_NamedBufferPageCommitmentEXT
000000000033c410 0000000000000194 t draw_buffer_enum_to_bitmask
000000000033c5b0 0000000000000078 t supported_buffer_bitmask
000000000033c630 0000000000000178 t read_buffer_enum_to_index
000000000033c7b0 0000000000000198 t read_buffer_err
000000000033c950 000000000000003c t _mesa_back_to_front_if_single_buffered
000000000033c990 0000000000000404 t _mesa_drawbuffers
000000000033cda0 000000000000013c t draw_buffer_error
000000000033cee0 0000000000000034 t _mesa_DrawBuffer
000000000033cf20 0000000000000080 T _mesa_FramebufferDrawBufferEXT
000000000033cfa0 0000000000000080 T _mesa_NamedFramebufferDrawBuffer
000000000033d020 00000000000003c8 t draw_buffers_error
000000000033d3f0 0000000000000038 t _mesa_DrawBuffers
000000000033d430 0000000000000088 T _mesa_FramebufferDrawBuffersEXT
000000000033d4c0 0000000000000088 T _mesa_NamedFramebufferDrawBuffers
000000000033d550 0000000000000134 t draw_buffers_no_error.constprop.0
000000000033d690 0000000000000080 T _mesa_NamedFramebufferDrawBuffers_no_error
000000000033d710 0000000000000030 T _mesa_DrawBuffers_no_error
000000000033d740 00000000000000d0 t draw_buffer_no_error.constprop.0
000000000033d810 0000000000000068 T _mesa_NamedFramebufferDrawBuffer_no_error
000000000033d880 000000000000002c T _mesa_DrawBuffer_no_error
000000000033d8b0 000000000000001c t _mesa_update_draw_buffers
000000000033d8d0 000000000000005c t _mesa_readbuffer
000000000033d930 00000000000000f8 T _mesa_ReadBuffer_no_error
000000000033da30 0000000000000034 t _mesa_ReadBuffer
000000000033da70 00000000000000f8 T _mesa_NamedFramebufferReadBuffer_no_error
000000000033db70 0000000000000080 T _mesa_FramebufferReadBufferEXT
000000000033dbf0 0000000000000080 T _mesa_NamedFramebufferReadBuffer
000000000033dc70 000000000000018c t make_color_buffer_mask
000000000033de00 000000000000007c t color_buffer_writes_enabled
000000000033de80 000000000000002c t _mesa_ClearIndex
000000000033deb0 0000000000000034 t _mesa_ClearColor
000000000033def0 0000000000000038 T _mesa_ClearColorIiEXT
000000000033df30 0000000000000038 T _mesa_ClearColorIuiEXT
000000000033df70 000000000000019c T _mesa_Clear_no_error
000000000033e110 0000000000000258 T _mesa_Clear
000000000033e370 0000000000000130 T _mesa_ClearBufferiv_no_error
000000000033e4a0 00000000000001c8 t _mesa_ClearBufferiv
000000000033e670 0000000000000064 T _mesa_ClearNamedFramebufferiv
000000000033e6e0 00000000000000ec T _mesa_ClearBufferuiv_no_error
000000000033e7d0 0000000000000148 t _mesa_ClearBufferuiv
000000000033e920 0000000000000064 T _mesa_ClearNamedFramebufferuiv
000000000033e990 000000000000013c T _mesa_ClearBufferfv_no_error
000000000033ead0 00000000000001a0 t _mesa_ClearBufferfv
000000000033ec70 0000000000000064 T _mesa_ClearNamedFramebufferfv
000000000033ece0 00000000000000e4 T _mesa_ClearBufferfi_no_error
000000000033edd0 000000000000018c t _mesa_ClearBufferfi
000000000033ef60 0000000000000074 T _mesa_ClearNamedFramebufferfi
000000000033efe0 000000000000006c t _mesa_update_clip_plane
000000000033f050 00000000000001fc t _mesa_ClipPlane
000000000033f250 0000000000000090 t _mesa_GetClipPlane
000000000033f2e0 000000000000002c T _mesa_ColorTable
000000000033f310 000000000000002c T _mesa_ColorSubTable
000000000033f340 000000000000002c T _mesa_CopyColorTable
000000000033f370 000000000000002c T _mesa_CopyColorSubTable
000000000033f3a0 000000000000002c T _mesa_GetnColorTableARB
000000000033f3d0 000000000000002c T _mesa_GetColorTable
000000000033f400 000000000000002c T _mesa_ColorTableParameterfv
000000000033f430 000000000000002c T _mesa_ColorTableParameteriv
000000000033f460 000000000000002c T _mesa_GetColorTableParameterfv
000000000033f490 000000000000002c T _mesa_GetColorTableParameteriv
000000000033f4c0 00000000000000a8 t check_valid_to_compute
000000000033f570 0000000000000088 T _mesa_DispatchCompute_no_error
000000000033f600 000000000000014c T _mesa_DispatchCompute
000000000033f750 000000000000007c T _mesa_DispatchComputeIndirect_no_error
000000000033f7d0 000000000000019c T _mesa_DispatchComputeIndirect
000000000033f970 0000000000000094 T _mesa_DispatchComputeGroupSizeARB_no_error
000000000033fa10 0000000000000204 T _mesa_DispatchComputeGroupSizeARB
000000000033fc20 00000000000000a0 T _mesa_BeginConditionalRender_no_error
000000000033fcc0 00000000000001a4 T _mesa_BeginConditionalRender
000000000033fe70 0000000000000068 T _mesa_EndConditionalRender_no_error
000000000033fee0 00000000000000a8 T _mesa_EndConditionalRender
000000000033ff90 0000000000000174 t _mesa_check_conditional_render
0000000000340110 0000000000000124 T _mesa_ConservativeRasterParameteriNV_no_error
0000000000340240 00000000000001ec T _mesa_ConservativeRasterParameteriNV
0000000000340430 0000000000000120 T _mesa_ConservativeRasterParameterfNV_no_error
0000000000340550 00000000000001e0 T _mesa_ConservativeRasterParameterfNV
0000000000340730 0000000000000018 t _mesa_init_conservative_raster
0000000000340750 000000000000002c T _mesa_ConvolutionFilter1D
0000000000340780 000000000000002c T _mesa_ConvolutionFilter2D
00000000003407b0 000000000000002c T _mesa_ConvolutionParameterf
00000000003407e0 000000000000002c T _mesa_ConvolutionParameterfv
0000000000340810 000000000000002c T _mesa_ConvolutionParameteri
0000000000340840 000000000000002c T _mesa_ConvolutionParameteriv
0000000000340870 000000000000002c T _mesa_CopyConvolutionFilter1D
00000000003408a0 000000000000002c T _mesa_CopyConvolutionFilter2D
00000000003408d0 000000000000002c T _mesa_GetnConvolutionFilterARB
0000000000340900 000000000000002c T _mesa_GetConvolutionFilter
0000000000340930 000000000000002c T _mesa_GetConvolutionParameterfv
0000000000340960 000000000000002c T _mesa_GetConvolutionParameteriv
0000000000340990 000000000000002c T _mesa_GetnSeparableFilterARB
00000000003409c0 000000000000002c T _mesa_GetSeparableFilter
00000000003409f0 000000000000002c T _mesa_SeparableFilter2D
0000000000340a20 0000000000000160 t copy_image_subdata
0000000000340b80 00000000000001bc t check_region_bounds
0000000000340d40 0000000000000398 t prepare_target_err
00000000003410e0 00000000000000a4 t prepare_target
0000000000341190 0000000000000224 t compressed_format_compatible.part.0
00000000003413c0 0000000000000110 T _mesa_CopyImageSubData_no_error
00000000003414d0 0000000000000490 T _mesa_CopyImageSubData
0000000000341960 00000000000003a0 T _mesa_CopyImageSubDataNV
0000000000341d00 0000000000000378 t _mesa_validated_multidrawelements
0000000000342080 00000000000000e8 t _mesa_exec_Rectf
0000000000342170 0000000000000060 t skip_validated_draw
00000000003421d0 0000000000000124 T _mesa_MultiDrawElements
0000000000342300 0000000000000178 T _mesa_MultiDrawElementsBaseVertex
0000000000342480 0000000000000298 t _mesa_exec_MultiDrawArrays
0000000000342720 00000000000000c0 t _mesa_validated_drawrangeelements
00000000003427e0 0000000000000284 t _mesa_DrawRangeElementsBaseVertex
0000000000342a70 0000000000000008 T _mesa_DrawRangeElements
0000000000342a80 0000000000000150 T _mesa_DrawElements
0000000000342bd0 0000000000000160 T _mesa_DrawElementsBaseVertex
0000000000342d30 00000000000000c8 t _mesa_draw_arrays.constprop.0
0000000000342e00 00000000000001dc t _mesa_draw_transform_feedback
0000000000342fe0 000000000000011c T _mesa_DrawArrays
0000000000343100 0000000000000114 T _mesa_EvalMesh1
0000000000343220 0000000000000330 T _mesa_EvalMesh2
0000000000343550 0000000000000128 T _mesa_DrawArraysInstancedARB
0000000000343680 0000000000000138 t _mesa_DrawArraysInstancedBaseInstance
00000000003437c0 0000000000000160 T _mesa_DrawElementsInstancedARB
0000000000343920 0000000000000164 T _mesa_DrawElementsInstancedBaseVertex
0000000000343a90 0000000000000164 T _mesa_DrawElementsInstancedBaseInstance
0000000000343c00 0000000000000174 t _mesa_DrawElementsInstancedBaseVertexBaseInstance
0000000000343d80 0000000000000048 T _mesa_DrawTransformFeedback
0000000000343dd0 0000000000000054 T _mesa_DrawTransformFeedbackStream
0000000000343e30 0000000000000054 T _mesa_DrawTransformFeedbackInstanced
0000000000343e90 0000000000000058 T _mesa_DrawTransformFeedbackStreamInstanced
0000000000343ef0 00000000000001ac T _mesa_DrawArraysIndirect
00000000003440a0 0000000000000224 t _mesa_DrawElementsIndirect
00000000003442d0 00000000000001e0 T _mesa_MultiDrawArraysIndirect
00000000003444b0 000000000000024c T _mesa_MultiDrawElementsIndirect
0000000000344700 0000000000000178 T _mesa_MultiDrawArraysIndirectCountARB
0000000000344880 00000000000001b0 T _mesa_MultiDrawElementsIndirectCountARB
0000000000344a30 0000000000000124 t _mesa_initialize_exec_dispatch
0000000000344b60 00000000000000b8 T _mesa_MultiModeDrawArraysIBM
0000000000344c20 00000000000000c0 T _mesa_MultiModeDrawElementsIBM
0000000000344ce0 0000000000000360 T _mesa_DrawPixels
0000000000345040 00000000000002c4 T _mesa_CopyPixels
0000000000345310 00000000000002f4 T _mesa_Bitmap
0000000000345610 00000000000000e0 t draw_texture
00000000003456f0 0000000000000104 t _mesa_DrawTexfOES
0000000000345800 0000000000000030 t _mesa_DrawTexfvOES
0000000000345830 0000000000000038 T _mesa_DrawTexiOES
0000000000345870 0000000000000044 T _mesa_DrawTexivOES
00000000003458c0 0000000000000048 T _mesa_DrawTexsOES
0000000000345910 000000000000004c T _mesa_DrawTexsvOES
0000000000345960 00000000000000b0 t enable_texture
0000000000345a10 00000000000002dc t client_state
0000000000345cf0 00000000000000a4 t client_state_i.part.0
0000000000345da0 0000000000000060 t _mesa_update_derived_primitive_restart_state
0000000000345e00 0000000000000030 t _mesa_EnableClientState
0000000000345e30 00000000000000d0 T _mesa_EnableVertexArrayEXT
0000000000345f00 000000000000007c T _mesa_EnableClientStateiEXT
0000000000345f80 0000000000000030 t _mesa_DisableClientState
0000000000345fb0 00000000000000d0 T _mesa_DisableVertexArrayEXT
0000000000346080 000000000000007c T _mesa_DisableClientStateiEXT
0000000000346100 00000000000000d8 t _mesa_set_multisample
00000000003461e0 00000000000000a4 t _mesa_set_framebuffer_srgb
0000000000346290 00000000000026e8 t _mesa_set_enable
0000000000348980 0000000000000028 T _mesa_Enable
00000000003489b0 0000000000000028 t _mesa_Disable
00000000003489e0 00000000000003a8 t _mesa_set_enablei
0000000000348d90 0000000000000030 T _mesa_Disablei
0000000000348dc0 0000000000000030 T _mesa_Enablei
0000000000348df0 0000000000001340 t _mesa_IsEnabled
000000000034a130 00000000000001ec T _mesa_IsEnabledi
000000000034a320 0000000000000008 t _mesa_delete_memory_object
000000000034a330 0000000000000080 t lookup_memory_object_err
000000000034a3b0 0000000000000008 t _mesa_initialize_memory_object
000000000034a3c0 0000000000000134 T _mesa_DeleteMemoryObjectsEXT
000000000034a500 0000000000000078 T _mesa_IsMemoryObjectEXT
000000000034a580 0000000000000164 T _mesa_CreateMemoryObjectsEXT
000000000034a6f0 00000000000000fc T _mesa_MemoryObjectParameterivEXT
000000000034a7f0 00000000000000cc T _mesa_GetMemoryObjectParameterivEXT
000000000034a8c0 0000000000000104 T _mesa_TexStorageMem2DEXT
000000000034a9d0 0000000000000114 T _mesa_TexStorageMem2DMultisampleEXT
000000000034aaf0 0000000000000104 T _mesa_TexStorageMem3DEXT
000000000034ac00 0000000000000118 T _mesa_TexStorageMem3DMultisampleEXT
000000000034ad20 0000000000000100 T _mesa_TextureStorageMem2DEXT
000000000034ae20 000000000000010c T _mesa_TextureStorageMem2DMultisampleEXT
000000000034af30 0000000000000108 T _mesa_TextureStorageMem3DEXT
000000000034b040 0000000000000118 T _mesa_TextureStorageMem3DMultisampleEXT
000000000034b160 00000000000000fc T _mesa_TexStorageMem1DEXT
000000000034b260 00000000000000f8 T _mesa_TextureStorageMem1DEXT
000000000034b360 000000000000001c t _mesa_delete_semaphore_object
000000000034b380 0000000000000008 t _mesa_initialize_semaphore_object
000000000034b390 0000000000000114 T _mesa_GenSemaphoresEXT
000000000034b4b0 0000000000000144 T _mesa_DeleteSemaphoresEXT
000000000034b600 0000000000000078 T _mesa_IsSemaphoreEXT
000000000034b680 000000000000005c T _mesa_SemaphoreParameterui64vEXT
000000000034b6e0 000000000000005c T _mesa_GetSemaphoreParameterui64vEXT
000000000034b740 00000000000001fc T _mesa_WaitSemaphoreEXT
000000000034b940 00000000000001fc T _mesa_SignalSemaphoreEXT
000000000034bb40 00000000000000e8 T _mesa_ImportMemoryFdEXT
000000000034bc30 0000000000000158 T _mesa_ImportSemaphoreFdEXT
000000000034bd90 00000000000000a4 t get_current_attrib(texenv_fragment_program*, unsigned int)
000000000034be40 0000000000000068 t get_gl_Color(texenv_fragment_program*)
000000000034beb0 0000000000000524 t load_texture(texenv_fragment_program*, unsigned int) [clone .part.0]
000000000034c3e0 0000000000000040 t load_texenv_source(texenv_fragment_program*, unsigned int, unsigned int)
000000000034c420 0000000000000654 t emit_combine(texenv_fragment_program*, unsigned int, unsigned int, unsigned int, gl_tex_env_argument const*)
000000000034ca80 0000000000001270 t _mesa_get_fixed_func_fragment_program
000000000034dcf0 0000000000000084 t get_temp
000000000034dd80 0000000000000210 t emit_op3fn.constprop.0
000000000034df90 0000000000000090 t make_temp
000000000034e020 00000000000000b8 t emit_matrix_transform_vec4
000000000034e0e0 0000000000000074 t get_identity_param
000000000034e160 000000000000007c t register_input
000000000034e1e0 0000000000000080 t get_material
000000000034e260 0000000000000064 t emit_passthrough
000000000034e2d0 0000000000000128 t get_lightprod
000000000034e400 0000000000000150 t get_scenecolor
000000000034e550 00000000000000a8 t emit_degenerate_lit
000000000034e600 00000000000000ec t emit_normalize_vec3
000000000034e6f0 0000000000000264 t get_transformed_normal
000000000034e960 0000000000000194 t emit_transpose_matrix_transform_vec4
000000000034eb00 0000000000000194 t get_eye_position
000000000034eca0 0000000000000078 t get_eye_position_normalized
000000000034ed20 0000000000000148 t get_eye_position_z
000000000034ee70 00000000000003ec t calculate_light_attenuation
000000000034f260 0000000000002c1c t _mesa_get_fixed_func_vertex_program
0000000000351e80 0000000000000068 t _set_default_response
0000000000351ef0 000000000000024c t _mesa_query_internal_format_default
0000000000352140 0000000000001870 t _mesa_GetInternalformativ
00000000003539b0 0000000000000190 T _mesa_GetInternalformati64v
0000000000353b40 0000000000000100 t convert_ubyte_rgba_to_bgra
0000000000353c40 0000000000006194 t convert_float
0000000000359de0 0000000000007698 t convert_half_float
0000000000361480 0000000000007d64 t convert_int
00000000003691f0 0000000000008ac8 t convert_byte
0000000000371cc0 0000000000008928 t convert_ushort
000000000037a5f0 0000000000008a2c t convert_ubyte
0000000000383020 0000000000007590 t convert_uint
000000000038a5b0 0000000000000090 t _mesa_compute_rgba2base2rgba_component_mapping
000000000038a640 0000000000008c84 t _mesa_swizzle_and_convert
00000000003932d0 0000000000000e98 t _mesa_format_convert
0000000000394170 000000000000007c t get_value_size
00000000003941f0 0000000000001330 t find_value_indexed
0000000000395520 0000000000001f44 t find_value
0000000000397470 00000000000002f4 T _mesa_GetBooleanv
0000000000397770 00000000000002dc t _mesa_GetFloatv
0000000000397a50 0000000000000344 t _mesa_GetIntegerv
0000000000397da0 0000000000000368 T _mesa_GetInteger64v
0000000000398110 00000000000002c8 T _mesa_GetDoublev
00000000003983e0 0000000000000198 T _mesa_GetUnsignedBytevEXT
0000000000398580 00000000000000e4 T _mesa_GetBooleani_v
0000000000398670 0000000000000188 T _mesa_GetIntegeri_v
0000000000398800 00000000000000dc T _mesa_GetInteger64i_v
00000000003988e0 00000000000001f0 T _mesa_GetFloati_v
0000000000398ad0 0000000000000200 T _mesa_GetDoublei_v
0000000000398cd0 0000000000000148 T _mesa_GetUnsignedBytei_vEXT
0000000000398e20 00000000000004c0 T _mesa_GetFixedv
00000000003992e0 0000000000000148 t _mesa_is_valid_generate_texture_mipmap_target
0000000000399430 00000000000000f0 t _mesa_is_valid_generate_texture_mipmap_internalformat
0000000000399520 0000000000000220 t validate_params_and_generate_mipmap
0000000000399740 000000000000012c T _mesa_GenerateMipmap_no_error
0000000000399870 0000000000000234 T _mesa_GenerateMipmap
0000000000399ab0 000000000000012c T _mesa_GenerateTextureMipmap_no_error
0000000000399be0 0000000000000040 T _mesa_GenerateTextureMipmap
0000000000399c20 0000000000000048 T _mesa_GenerateTextureMipmapEXT
0000000000399c70 000000000000004c T _mesa_GenerateMultiTexMipmapEXT
0000000000399cc0 000000000000005c t _mesa_spirv_module_reference
0000000000399d20 0000000000000094 t _mesa_shader_spirv_data_reference
0000000000399dc0 0000000000000100 t _mesa_spirv_shader_binary
0000000000399ec0 000000000000022c t _mesa_spirv_link_shaders
000000000039a0f0 0000000000000040 T _mesa_SpecializeShaderARB
000000000039a130 000000000000002c T _mesa_GetnMinmaxARB
000000000039a160 000000000000002c T _mesa_GetMinmax
000000000039a190 000000000000002c T _mesa_GetnHistogramARB
000000000039a1c0 000000000000002c T _mesa_GetHistogram
000000000039a1f0 000000000000002c T _mesa_GetHistogramParameterfv
000000000039a220 000000000000002c T _mesa_GetHistogramParameteriv
000000000039a250 000000000000002c T _mesa_GetMinmaxParameterfv
000000000039a280 000000000000002c T _mesa_GetMinmaxParameteriv
000000000039a2b0 000000000000002c T _mesa_Histogram
000000000039a2e0 000000000000002c T _mesa_Minmax
000000000039a310 000000000000002c T _mesa_ResetHistogram
000000000039a340 000000000000002c T _mesa_ResetMinmax
000000000039a370 00000000000001e8 t float3_to_rgb9e5
000000000039a560 0000000000000040 t rgb9e5_to_float3
000000000039a5a0 0000000000000184 t float3_to_r11g11b10f
000000000039a730 000000000000017c t r11g11b10f_to_float3
000000000039a8b0 0000000000001978 t do_row
000000000039c230 00000000000000f4 t make_1d_mipmap
000000000039c330 0000000000000450 t make_2d_mipmap
000000000039c780 0000000000000050 t _mesa_compute_num_levels
000000000039c7d0 0000000000003424 t _mesa_generate_mipmap_level
000000000039fc00 00000000000000a0 t _mesa_next_mipmap_level_size
000000000039fca0 0000000000000208 t _mesa_prepare_mipmap_levels
000000000039feb0 0000000000000924 t _mesa_generate_mipmap
00000000003a07e0 0000000000000254 t get_label_pointer
00000000003a0a40 000000000000008c t copy_label
00000000003a0ad0 00000000000000f8 t set_label
00000000003a0bd0 000000000000009c T _mesa_ObjectLabel
00000000003a0c70 00000000000000b4 T _mesa_GetObjectLabel
00000000003a0d30 00000000000000b8 T _mesa_ObjectPtrLabel
00000000003a0df0 00000000000000f4 T _mesa_GetObjectPtrLabel
00000000003a0ef0 0000000000000228 T _mesa_ObjectPurgeableAPPLE
00000000003a1120 0000000000000210 T _mesa_ObjectUnpurgeableAPPLE
00000000003a1330 0000000000000178 T _mesa_GetObjectParameterivAPPLE
00000000003a14b0 00000000000000bc t write_program_payload
00000000003a1570 000000000000007c t _mesa_get_program_binary_length
00000000003a15f0 0000000000000148 t _mesa_get_program_binary
00000000003a1740 00000000000001f8 t _mesa_program_binary
00000000003a1940 000000000000025c t supported_interface_enum
00000000003a1ba0 00000000000004c8 T _mesa_GetProgramInterfaceiv
00000000003a2070 000000000000015c T _mesa_GetProgramResourceIndex
00000000003a21d0 0000000000000110 T _mesa_GetProgramResourceName
00000000003a22e0 00000000000000e4 T _mesa_GetProgramResourceiv
00000000003a23d0 00000000000002a4 T _mesa_GetProgramResourceLocation
00000000003a2680 00000000000000cc T _mesa_GetProgramResourceLocationIndex
00000000003a2750 0000000000000174 T _mesa_QueryMatrixxOES
00000000003a28d0 0000000000000058 t _context_lost_GetQueryObjectuiv
00000000003a2930 0000000000000068 t _context_lost_GetSynciv
00000000003a29a0 0000000000000038 t context_lost_nop_handler
00000000003a29e0 00000000000000fc t _mesa_set_context_lost_dispatch
00000000003a2ae0 00000000000000dc T _mesa_GetGraphicsResetStatusARB
00000000003a2bc0 0000000000000088 T _mesa_new_sampler_object
00000000003a2c50 00000000000000e4 t create_samplers.part.0
00000000003a2d40 000000000000009c t sampler_parameter_error_check
00000000003a2de0 00000000000000b4 t set_sampler_cube_map_seamless
00000000003a2ea0 000000000000016c t set_sampler_wrap_r
00000000003a3010 000000000000016c t set_sampler_wrap_t
00000000003a3180 000000000000016c t set_sampler_wrap_s
00000000003a32f0 0000000000000018 t _mesa_lookup_samplerobj
00000000003a3310 00000000000000c0 t _mesa_reference_sampler_object_
00000000003a33d0 0000000000000190 t delete_samplers
00000000003a3560 0000000000000038 T _mesa_GenSamplers_no_error
00000000003a35a0 0000000000000060 T _mesa_GenSamplers
00000000003a3600 0000000000000038 T _mesa_CreateSamplers_no_error
00000000003a3640 0000000000000060 T _mesa_CreateSamplers
00000000003a36a0 000000000000002c T _mesa_DeleteSamplers_no_error
00000000003a36d0 0000000000000044 T _mesa_DeleteSamplers
00000000003a3720 0000000000000070 T _mesa_IsSampler
00000000003a3790 00000000000000b0 t _mesa_bind_sampler
00000000003a3840 00000000000000d4 T _mesa_BindSampler_no_error
00000000003a3920 00000000000000b0 T _mesa_BindSampler
00000000003a39d0 00000000000001c0 T _mesa_BindSamplers_no_error
00000000003a3b90 000000000000024c T _mesa_BindSamplers
00000000003a3de0 0000000000000520 T _mesa_SamplerParameteri
00000000003a4300 00000000000004fc T _mesa_SamplerParameterf
00000000003a4800 000000000000062c T _mesa_SamplerParameteriv
00000000003a4e30 00000000000005b0 T _mesa_SamplerParameterfv
00000000003a53e0 00000000000005bc T _mesa_SamplerParameterIiv
00000000003a59a0 00000000000005bc T _mesa_SamplerParameterIuiv
00000000003a5f60 000000000000027c T _mesa_GetSamplerParameteriv
00000000003a61e0 0000000000000254 T _mesa_GetSamplerParameterfv
00000000003a6440 0000000000000240 T _mesa_GetSamplerParameterIiv
00000000003a6680 0000000000000240 T _mesa_GetSamplerParameterIuiv
00000000003a68c0 0000000000000010 t _mesa_init_sampler_object_functions
00000000003a68d0 0000000000000150 t unpack_quint_block(int, unsigned int, unsigned char*)
00000000003a6a20 0000000000000074 t Block::decode_void_extent(InputBitVector)
00000000003a6aa0 0000000000000178 t Block::decode_block_mode(InputBitVector)
00000000003a6c20 0000000000000798 t Block::decode_cem(InputBitVector)
00000000003a73c0 00000000000005a4 t Block::unpack_colour_endpoints(InputBitVector)
00000000003a7970 000000000000059c t Block::decode_colour_endpoints()
00000000003a7f10 0000000000000690 t Block::unpack_weights(InputBitVector)
00000000003a85a0 00000000000001f0 t Block::unquantise_weights()
00000000003a8790 0000000000000294 t Block::compute_infill_weights(int, int, int)
00000000003a8a30 00000000000002c8 t Block::unquantise_colour_endpoints()
00000000003a8d00 00000000000006c0 t Block::write_decoded(Decoder const&, unsigned short*)
00000000003a93c0 0000000000000270 t Block::calculate_from_weights()
00000000003a9630 0000000000000104 t Block::calculate_colour_endpoints_size()
00000000003a9740 00000000000002c0 t Block::decode(Decoder const&, InputBitVector)
00000000003a9a00 00000000000000d4 t Decoder::decode(unsigned char const*, unsigned short*) const
00000000003a9ae0 00000000000001d0 t _mesa_unpack_astc_2d_ldr
00000000003a9cb0 0000000000000088 t _mesa_cpal_compressed_size
00000000003a9d40 0000000000000390 t _mesa_cpal_compressed_teximage2d
00000000003aa0d0 00000000000001c8 t get_texenvi
00000000003aa2a0 00000000000001cc t _mesa_gettexenviv_indexed
00000000003aa470 0000000000000c1c t _mesa_texenvfv_indexed
00000000003ab090 0000000000000230 t _mesa_gettexenvfv_indexed
00000000003ab2c0 0000000000000038 t _mesa_TexEnvfv
00000000003ab300 0000000000000044 t _mesa_TexEnvf
00000000003ab350 000000000000004c t _mesa_TexEnvi
00000000003ab3a0 00000000000000dc T _mesa_TexEnviv
00000000003ab480 000000000000004c T _mesa_MultiTexEnvfEXT
00000000003ab4d0 0000000000000040 T _mesa_MultiTexEnvfvEXT
00000000003ab510 0000000000000050 T _mesa_MultiTexEnviEXT
00000000003ab560 00000000000000f4 T _mesa_MultiTexEnvivEXT
00000000003ab660 000000000000003c t _mesa_GetTexEnvfv
00000000003ab6a0 000000000000000c T _mesa_GetMultiTexEnvfvEXT
00000000003ab6b0 000000000000003c T _mesa_GetTexEnviv
00000000003ab6f0 000000000000000c T _mesa_GetMultiTexEnvivEXT
00000000003ab700 0000000000000418 t texgenfv
00000000003abb20 0000000000000198 t gettexgendv
00000000003abcc0 00000000000001bc t gettexgenfv
00000000003abe80 000000000000019c t gettexgeniv
00000000003ac020 0000000000000044 t _mesa_TexGenfv
00000000003ac070 0000000000000014 T _mesa_MultiTexGenfvEXT
00000000003ac090 00000000000000a4 T _mesa_TexGeniv
00000000003ac140 0000000000000084 T _mesa_MultiTexGenivEXT
00000000003ac1d0 0000000000000054 T _mesa_TexGend
00000000003ac230 0000000000000038 T _mesa_MultiTexGendEXT
00000000003ac270 0000000000000104 t _es_TexGenf
00000000003ac380 00000000000000a4 T _mesa_TexGendv
00000000003ac430 0000000000000084 T _mesa_MultiTexGendvEXT
00000000003ac4c0 0000000000000050 T _mesa_TexGenf
00000000003ac510 0000000000000034 T _mesa_MultiTexGenfEXT
00000000003ac550 0000000000000058 t _mesa_TexGeni
00000000003ac5b0 0000000000000038 T _mesa_MultiTexGeniEXT
00000000003ac5f0 0000000000000044 T _mesa_GetTexGendv
00000000003ac640 0000000000000014 T _mesa_GetMultiTexGendvEXT
00000000003ac660 0000000000000044 T _mesa_GetTexGenfv
00000000003ac6b0 0000000000000014 T _mesa_GetMultiTexGenfvEXT
00000000003ac6d0 0000000000000044 t _mesa_GetTexGeniv
00000000003ac720 0000000000000014 T _mesa_GetMultiTexGenivEXT
00000000003ac740 00000000000000c8 t legal_getteximage_target
00000000003ac810 0000000000000120 t pbo_error_check
00000000003ac930 00000000000001b8 t teximage_error_check
00000000003acaf0 0000000000000478 t dimensions_error_check
00000000003acf70 0000000000000128 t common_error_check.part.0
00000000003ad0a0 000000000000025c t getcompressedteximage_error_check.part.0
00000000003ad300 00000000000003e0 t get_compressed_texture_image.constprop.0
00000000003ad6e0 0000000000000258 t get_texture_image.constprop.0
00000000003ad940 0000000000000154 t getteximage_error_check
00000000003adaa0 000000000000013c t _get_texture_image
00000000003adbe0 0000000000000104 t _mesa_base_pack_format
00000000003adcf0 00000000000010b8 t _mesa_GetTexSubImage_sw
00000000003aedb0 0000000000000110 T _mesa_GetnTexImageARB
00000000003aeec0 000000000000010c T _mesa_GetTexImage
00000000003aefd0 00000000000000f0 T _mesa_GetTextureImage
00000000003af0c0 00000000000000f8 T _mesa_GetTextureImageEXT
00000000003af1c0 00000000000001d4 T _mesa_GetMultiTexImageEXT
00000000003af3a0 0000000000000238 T _mesa_GetTextureSubImage
00000000003af5e0 000000000000019c T _mesa_GetnCompressedTexImageARB
00000000003af780 000000000000019c T _mesa_GetCompressedTexImage
00000000003af920 0000000000000178 T _mesa_GetCompressedTextureImageEXT
00000000003afaa0 0000000000000178 T _mesa_GetCompressedMultiTexImageEXT
00000000003afc20 000000000000018c T _mesa_GetCompressedTextureImage
00000000003afdb0 0000000000000144 T _mesa_GetCompressedTextureSubImage
00000000003aff00 00000000000000a0 t is_texparameteri_target_valid
00000000003affa0 0000000000000198 t validate_texture_wrap_mode
00000000003b0140 0000000000000834 t get_tex_level_parameteriv
00000000003b0980 0000000000000858 t get_tex_parameteriv
00000000003b11e0 00000000000009e8 t get_tex_parameterfv
00000000003b1bd0 000000000000053c t set_tex_parameterf
00000000003b2110 0000000000000d4c t set_tex_parameteri
00000000003b2e60 0000000000000014 t _mesa_target_allows_setting_sampler_parameters
00000000003b2e80 0000000000000228 t _mesa_texture_parameterf
00000000003b30b0 00000000000001f8 t _mesa_texture_parameterfv
00000000003b32b0 0000000000000154 t _mesa_texture_parameteri
00000000003b3410 0000000000000198 t _mesa_texture_parameteriv
00000000003b35b0 00000000000000d8 t _mesa_texture_parameterIiv
00000000003b3690 00000000000000d8 t _mesa_texture_parameterIuiv
00000000003b3770 0000000000000084 t _mesa_TexParameterf
00000000003b3800 0000000000000084 t _mesa_TexParameterfv
00000000003b3890 0000000000000084 t _mesa_TexParameteri
00000000003b3920 0000000000000084 T _mesa_TexParameteriv
00000000003b39b0 0000000000000084 T _mesa_TexParameterIiv
00000000003b3a40 0000000000000084 T _mesa_TexParameterIuiv
00000000003b3ad0 00000000000000b4 T _mesa_TextureParameterfvEXT
00000000003b3b90 00000000000000b4 T _mesa_TextureParameterfv
00000000003b3c50 00000000000000b4 T _mesa_MultiTexParameterfvEXT
00000000003b3d10 00000000000000c4 T _mesa_TextureParameterfEXT
00000000003b3de0 00000000000000c4 T _mesa_MultiTexParameterfEXT
00000000003b3eb0 00000000000000c4 T _mesa_TextureParameterf
00000000003b3f80 00000000000000b4 T _mesa_TextureParameteriEXT
00000000003b4040 00000000000000b4 T _mesa_MultiTexParameteriEXT
00000000003b4100 00000000000000b4 T _mesa_TextureParameteri
00000000003b41c0 00000000000000b4 T _mesa_TextureParameterivEXT
00000000003b4280 00000000000000b4 T _mesa_MultiTexParameterivEXT
00000000003b4340 00000000000000b4 T _mesa_TextureParameteriv
00000000003b4400 00000000000000b4 T _mesa_TextureParameterIiv
00000000003b44c0 0000000000000080 T _mesa_TextureParameterIivEXT
00000000003b4540 0000000000000080 T _mesa_MultiTexParameterIivEXT
00000000003b45c0 00000000000000b4 T _mesa_TextureParameterIuiv
00000000003b4680 0000000000000080 T _mesa_TextureParameterIuivEXT
00000000003b4700 0000000000000080 T _mesa_MultiTexParameterIuivEXT
00000000003b4780 000000000000025c t _mesa_legal_get_tex_level_parameter_target
00000000003b49e0 00000000000000d4 T _mesa_GetTexLevelParameterfv
00000000003b4ac0 00000000000000d8 T _mesa_GetTexLevelParameteriv
00000000003b4ba0 00000000000000d8 T _mesa_GetTextureLevelParameterfv
00000000003b4c80 00000000000000e0 T _mesa_GetTextureLevelParameterfvEXT
00000000003b4d60 00000000000000e0 T _mesa_GetMultiTexLevelParameterfvEXT
00000000003b4e40 00000000000000d8 T _mesa_GetTextureLevelParameteriv
00000000003b4f20 00000000000000e0 T _mesa_GetTextureLevelParameterivEXT
00000000003b5000 00000000000000e0 T _mesa_GetMultiTexLevelParameterivEXT
00000000003b50e0 0000000000000084 t _mesa_GetTexParameterfv
00000000003b5170 0000000000000084 T _mesa_GetTexParameteriv
00000000003b5200 00000000000000b0 T _mesa_GetTexParameterIiv
00000000003b52b0 00000000000000b0 T _mesa_GetTexParameterIuiv
00000000003b5360 00000000000000b4 T _mesa_GetTextureParameterfvEXT
00000000003b5420 00000000000000b4 T _mesa_GetMultiTexParameterfvEXT
00000000003b54e0 00000000000000b4 T _mesa_GetTextureParameterfv
00000000003b55a0 00000000000000b4 T _mesa_GetTextureParameterivEXT
00000000003b5660 00000000000000b4 T _mesa_GetMultiTexParameterivEXT
00000000003b5720 00000000000000b4 T _mesa_GetTextureParameteriv
00000000003b57e0 00000000000000e0 T _mesa_GetTextureParameterIiv
00000000003b58c0 00000000000000ac T _mesa_GetTextureParameterIivEXT
00000000003b5970 00000000000000ac T _mesa_GetMultiTexParameterIivEXT
00000000003b5a20 00000000000000e0 T _mesa_GetTextureParameterIuiv
00000000003b5b00 00000000000000ac T _mesa_GetTextureParameterIuivEXT
00000000003b5bb0 00000000000000ac T _mesa_GetMultiTexParameterIuivEXT
00000000003b5c60 0000000000000228 t register_surface.part.0
00000000003b5e90 00000000000000b4 T _mesa_VDPAUInitNV
00000000003b5f50 0000000000000078 T _mesa_VDPAUFiniNV
00000000003b5fd0 0000000000000094 T _mesa_VDPAURegisterVideoSurfaceNV
00000000003b6070 0000000000000094 T _mesa_VDPAURegisterOutputSurfaceNV
00000000003b6110 000000000000006c T _mesa_VDPAUIsSurfaceNV
00000000003b6180 00000000000000fc T _mesa_VDPAUUnregisterSurfaceNV
00000000003b6280 0000000000000104 T _mesa_VDPAUGetSurfaceivNV
00000000003b6390 00000000000000c4 T _mesa_VDPAUSurfaceAccessNV
00000000003b6460 000000000000022c T _mesa_VDPAUMapSurfacesNV
00000000003b6690 00000000000001e8 t _mesa_VDPAUUnmapSurfacesNV
00000000003b6880 0000000000000070 t unregister_surface
00000000003b68f0 000000000000087c t install_vtxfmt
00000000003b7170 0000000000000048 t _mesa_install_exec_vtxfmt
00000000003b71c0 0000000000000020 t _mesa_install_save_vtxfmt
00000000003b71e0 0000000000000044 t _mesa_initialize_vbo_vtxfmt
00000000003b7230 0000000000000008 T _mesa_AlphaFuncx
00000000003b7240 000000000000002c T _mesa_ClearColorx
00000000003b7270 0000000000000008 T _mesa_ClearDepthx
00000000003b7280 0000000000000040 T _mesa_ClipPlanef
00000000003b72c0 0000000000000048 T _mesa_ClipPlanex
00000000003b7310 000000000000002c T _mesa_Color4x
00000000003b7340 000000000000001c T _mesa_DepthRangex
00000000003b7360 0000000000000034 T _mesa_DrawTexxOES
00000000003b73a0 0000000000000048 T _mesa_DrawTexxvOES
00000000003b73f0 0000000000000020 T _mesa_Fogx
00000000003b7410 00000000000000c4 T _mesa_Fogxv
00000000003b74e0 000000000000001c T _mesa_Frustumf
00000000003b7500 000000000000003c T _mesa_Frustumx
00000000003b7540 0000000000000048 T _mesa_GetClipPlanef
00000000003b7590 000000000000004c T _mesa_GetClipPlanex
00000000003b75e0 00000000000000d4 T _mesa_GetLightxv
00000000003b76c0 00000000000000fc T _mesa_GetMaterialxv
00000000003b77c0 0000000000000220 T _mesa_GetTexEnvxv
00000000003b79e0 0000000000000004 T _mesa_GetTexGenxvOES
00000000003b79f0 0000000000000114 T _mesa_GetTexParameterxv
00000000003b7b10 0000000000000008 T _mesa_LightModelx
00000000003b7b20 00000000000000ac T _mesa_LightModelxv
00000000003b7bd0 0000000000000008 T _mesa_Lightx
00000000003b7be0 00000000000000e8 T _mesa_Lightxv
00000000003b7cd0 0000000000000008 T _mesa_LineWidthx
00000000003b7ce0 000000000000004c T _mesa_LoadMatrixx
00000000003b7d30 000000000000007c T _mesa_Materialx
00000000003b7db0 0000000000000110 T _mesa_Materialxv
00000000003b7ec0 000000000000004c T _mesa_MultMatrixx
00000000003b7f10 000000000000002c T _mesa_MultiTexCoord4x
00000000003b7f40 0000000000000024 T _mesa_Normal3x
00000000003b7f70 000000000000001c T _mesa_Orthof
00000000003b7f90 000000000000003c T _mesa_Orthox
00000000003b7fd0 0000000000000008 T _mesa_PointParameterx
00000000003b7fe0 00000000000000a8 T _mesa_PointParameterxv
00000000003b8090 0000000000000008 T _mesa_PointSizex
00000000003b80a0 000000000000001c T _mesa_PolygonOffsetx
00000000003b80c0 000000000000002c T _mesa_Rotatex
00000000003b80f0 0000000000000010 T _mesa_SampleCoveragex
00000000003b8100 0000000000000024 T _mesa_Scalex
00000000003b8130 0000000000000140 T _mesa_TexEnvx
00000000003b8270 00000000000001a0 T _mesa_TexEnvxv
00000000003b8410 0000000000000008 T _mesa_TexGenxOES
00000000003b8420 000000000000000c T _mesa_TexGenxvOES
00000000003b8430 0000000000000024 T _mesa_TexParameterx
00000000003b8460 0000000000000130 T _mesa_TexParameterxv
00000000003b8590 0000000000000024 T _mesa_Translatex
00000000003b85c0 00000000000000f8 t _math_horner_bezier_curve
00000000003b86c0 00000000000001cc t _math_horner_bezier_surf
00000000003b8890 0000000000000d44 t _math_de_casteljau_surf
00000000003b95e0 000000000000002c t _math_init_eval
00000000003b9610 000000000000002c t vbo_minmax_cache_key_equal
00000000003b9640 0000000000000008 t vbo_minmax_cache_delete_entry
00000000003b9650 0000000000000008 t vbo_minmax_cache_hash
00000000003b9660 0000000000000030 t vbo_delete_minmax_cache
00000000003b9690 00000000000001c0 t vbo_get_minmax_index_mapped
00000000003b9850 00000000000004b0 t vbo_get_minmax_indices
00000000003b9d00 000000000000006c t util_format_linear_float_to_srgb_8unorm
00000000003b9d70 0000000000000080 t pack_ubyte_rgb_float16
00000000003b9df0 000000000000003c t _mesa_float_to_unorm
00000000003b9e30 0000000000000044 t _mesa_float_to_snorm
00000000003b9e80 0000000000000070 t _mesa_unorm_to_unorm.constprop.0
00000000003b9ef0 0000000000000184 t float3_to_r11g11b10f
00000000003ba080 00000000000000d0 t pack_float_rgb_snorm16
00000000003ba150 0000000000000034 t pack_ubyte_rgb_snorm16
00000000003ba190 00000000000000e0 t pack_float_a1r5g5b5_unorm
00000000003ba270 00000000000000e8 t pack_float_r4g4b4a4_unorm
00000000003ba360 00000000000000e8 t pack_float_a4b4g4r4_unorm
00000000003ba450 00000000000000e8 t pack_float_b4g4r4a4_unorm
00000000003ba540 00000000000000f4 t pack_float_r8g8b8a8_unorm
00000000003ba640 00000000000000f4 t pack_float_a8r8g8b8_unorm
00000000003ba740 00000000000000f4 t pack_float_b8g8r8a8_unorm
00000000003ba840 00000000000000f4 t pack_float_a8b8g8r8_unorm
00000000003ba940 0000000000000060 t pack_ubyte_b2g3r3_unorm
00000000003ba9a0 0000000000000064 t pack_ubyte_r8g8b8x8_snorm
00000000003baa10 0000000000000064 t pack_ubyte_x8b8g8r8_snorm
00000000003baa80 0000000000000064 t pack_ubyte_b5g5r5x1_unorm
00000000003baaf0 0000000000000068 t pack_ubyte_x1b5g5r5_unorm
00000000003bab60 0000000000000020 t pack_ubyte_r8g8b8x8_unorm
00000000003bab80 0000000000000020 t pack_ubyte_b8g8r8x8_unorm
00000000003baba0 0000000000000064 t pack_ubyte_b4g4r4x4_unorm
00000000003bac10 0000000000000020 t pack_ubyte_x8b8g8r8_unorm
00000000003bac30 0000000000000020 t pack_ubyte_x8r8g8b8_unorm
00000000003bac50 0000000000000038 t pack_ubyte_b10g10r10x2_unorm
00000000003bac90 0000000000000038 t pack_ubyte_r10g10b10x2_unorm
00000000003bacd0 0000000000000034 t pack_ubyte_rgba_unorm16
00000000003bad10 0000000000000044 t pack_ubyte_rgba_snorm16
00000000003bad60 0000000000000080 t pack_ubyte_r4g4b4a4_unorm
00000000003bade0 0000000000000080 t pack_ubyte_a4b4g4r4_unorm
00000000003bae60 0000000000000078 t pack_ubyte_b5g5r5a1_unorm
00000000003baee0 0000000000000078 t pack_ubyte_a1b5g5r5_unorm
00000000003baf60 0000000000000078 t pack_ubyte_a1r5g5b5_unorm
00000000003bafe0 0000000000000080 t pack_ubyte_b4g4r4a4_unorm
00000000003bb060 0000000000000080 t pack_ubyte_a4r4g4b4_unorm
00000000003bb0e0 0000000000000080 t pack_ubyte_a8b8g8r8_snorm
00000000003bb160 0000000000000078 t pack_ubyte_r5g5b5a1_unorm
00000000003bb1e0 0000000000000080 t pack_ubyte_r8g8b8a8_snorm
00000000003bb260 000000000000000c t pack_ubyte_r8g8b8a8_unorm
00000000003bb270 0000000000000028 t pack_ubyte_a8r8g8b8_unorm
00000000003bb2a0 0000000000000010 t pack_ubyte_a8b8g8r8_unorm
00000000003bb2b0 0000000000000028 t pack_ubyte_b8g8r8a8_unorm
00000000003bb2e0 0000000000000058 t pack_ubyte_a2r10g10b10_unorm
00000000003bb340 0000000000000058 t pack_ubyte_b10g10r10a2_unorm
00000000003bb3a0 0000000000000058 t pack_ubyte_a2b10g10r10_unorm
00000000003bb400 0000000000000058 t pack_ubyte_r10g10b10a2_unorm
00000000003bb460 00000000000000fc t pack_float_a2b10g10r10_unorm
00000000003bb560 00000000000000fc t pack_float_a2r10g10b10_unorm
00000000003bb660 00000000000000fc t pack_float_r10g10b10a2_unorm
00000000003bb760 00000000000000fc t pack_float_b10g10r10a2_unorm
00000000003bb860 0000000000002b8c t _mesa_pack_ubyte_rgba_row
00000000003be3f0 00000000000014cc t _mesa_pack_uint_rgba_row
00000000003bf8c0 0000000000003048 t _mesa_pack_float_rgba_row
00000000003c2910 000000000000009c t _mesa_pack_ubyte_stencil_row
00000000003c29b0 0000000000000040 t transform_decl
00000000003c29f0 00000000000007dc t transform_instr
00000000003c31d0 0000000000001994 t st_translate_atifs_program
00000000003c4b70 0000000000000210 t st_init_atifs_prog
00000000003c4d80 00000000000000a0 t st_fixup_atifs
00000000003c4e20 0000000000000200 t check_program_state
00000000003c5020 0000000000000004 t st_init_atoms
00000000003c5030 0000000000000004 t st_destroy_atoms
00000000003c5040 0000000000000278 t st_validate_state
00000000003c52c0 00000000000000cc T st_update_clip
00000000003c5390 00000000000000e4 t st_bind_ubos
00000000003c5480 0000000000000214 t st_upload_constants
00000000003c56a0 0000000000000008 T st_update_vs_constants
00000000003c56b0 0000000000000008 T st_update_fs_constants
00000000003c56c0 0000000000000010 T st_update_gs_constants
00000000003c56d0 0000000000000010 T st_update_tcs_constants
00000000003c56e0 0000000000000010 T st_update_tes_constants
00000000003c56f0 0000000000000010 T st_update_cs_constants
00000000003c5700 0000000000000018 T st_bind_vs_ubos
00000000003c5720 0000000000000018 T st_bind_fs_ubos
00000000003c5740 0000000000000018 T st_bind_gs_ubos
00000000003c5760 0000000000000018 T st_bind_tcs_ubos
00000000003c5780 0000000000000018 T st_bind_tes_ubos
00000000003c57a0 0000000000000018 T st_bind_cs_ubos
00000000003c57c0 0000000000000008 t st_compare_func_to_pipe
00000000003c57d0 0000000000000578 T st_update_depth_stencil_alpha
00000000003c5d50 0000000000000410 T st_update_framebuffer_state
00000000003c6160 00000000000001bc t st_convert_image
00000000003c6320 0000000000000164 t st_bind_images.part.0
00000000003c6490 0000000000000078 t st_convert_image_from_unit
00000000003c6510 000000000000002c T st_bind_vs_images
00000000003c6540 000000000000002c T st_bind_fs_images
00000000003c6570 000000000000002c T st_bind_gs_images
00000000003c65a0 000000000000002c T st_bind_tcs_images
00000000003c65d0 000000000000002c T st_bind_tes_images
00000000003c6600 000000000000002c T st_bind_cs_images
00000000003c6630 000000000000023c t update_sample_locations
00000000003c6870 00000000000000ac T st_update_sample_state
00000000003c6920 0000000000000048 T st_update_sample_shading
00000000003c6970 00000000000005e8 T st_update_pixel_transfer
00000000003c6f60 0000000000000778 T st_update_rasterizer
00000000003c76e0 000000000000031c t st_convert_sampler
00000000003c7a00 0000000000000084 t st_convert_sampler_from_unit
00000000003c7a90 0000000000000288 t update_shader_samplers
00000000003c7d20 000000000000001c T st_update_vertex_samplers
00000000003c7d40 0000000000000024 T st_update_tessctrl_samplers
00000000003c7d70 0000000000000024 T st_update_tesseval_samplers
00000000003c7da0 0000000000000024 T st_update_geometry_samplers
00000000003c7dd0 000000000000001c T st_update_fragment_samplers
00000000003c7df0 0000000000000024 T st_update_compute_samplers
00000000003c7e20 00000000000001b4 T st_update_scissor
00000000003c7fe0 00000000000001a8 T st_update_window_rectangles
00000000003c8190 0000000000000134 t st_update_common_program
00000000003c82d0 0000000000000470 T st_update_fp
00000000003c8740 00000000000001e0 T st_update_vp
00000000003c8920 0000000000000040 T st_update_gp
00000000003c8960 0000000000000040 T st_update_tcp
00000000003c89a0 0000000000000040 T st_update_tep
00000000003c89e0 0000000000000040 T st_update_cp
00000000003c8a20 00000000000000f8 T st_update_polygon_stipple
00000000003c8b20 0000000000000160 t st_bind_ssbos
00000000003c8c80 0000000000000018 T st_bind_vs_ssbos
00000000003c8ca0 0000000000000018 T st_bind_fs_ssbos
00000000003c8cc0 0000000000000018 T st_bind_gs_ssbos
00000000003c8ce0 0000000000000018 T st_bind_tcs_ssbos
00000000003c8d00 0000000000000018 T st_bind_tes_ssbos
00000000003c8d20 0000000000000018 T st_bind_cs_ssbos
00000000003c8d40 0000000000000030 T st_update_tess
00000000003c8d70 0000000000000100 t st_update_single_texture
00000000003c8e70 000000000000047c t update_textures
00000000003c92f0 00000000000000a4 t update_textures_local
00000000003c93a0 0000000000000028 T st_update_vertex_textures
00000000003c93d0 0000000000000018 T st_update_fragment_textures
00000000003c93f0 000000000000001c T st_update_geometry_textures
00000000003c9410 000000000000001c T st_update_tessctrl_textures
00000000003c9430 000000000000001c T st_update_tesseval_textures
00000000003c9450 000000000000001c T st_update_compute_textures
00000000003c9470 0000000000000130 T st_update_viewport
00000000003c95a0 00000000000003ac t transform_instr
00000000003c9950 00000000000000b8 t st_get_bitmap_shader
00000000003c9a10 00000000000008a8 t st_BlitFramebuffer
00000000003ca2c0 0000000000000010 t st_init_blit_functions
00000000003ca2d0 00000000000000ec t buffer_target_to_bind_flags
00000000003ca3c0 0000000000000088 t buffer_usage
00000000003ca450 0000000000000040 t st_bufferobj_invalidate
00000000003ca490 0000000000000064 t st_bufferobj_flush_mapped_range
00000000003ca500 000000000000006c t st_bufferobj_unmap
00000000003ca570 000000000000006c t st_copy_buffer_subdata
00000000003ca5e0 000000000000007c t st_bufferobj_page_commitment
00000000003ca660 000000000000004c t st_clear_buffer_subdata
00000000003ca6b0 0000000000000050 t st_bufferobj_alloc
00000000003ca700 000000000000004c t st_bufferobj_subdata
00000000003ca750 000000000000009c t st_bufferobj_get_subdata
00000000003ca7f0 0000000000000080 t st_bufferobj_free
00000000003ca870 0000000000000370 t st_bufferobj_data
00000000003cabe0 0000000000000354 t st_bufferobj_data_mem
00000000003caf40 0000000000000074 t st_access_flags_to_transfer_flags
00000000003cafc0 00000000000000cc t st_bufferobj_map_range
00000000003cb090 00000000000000c8 t st_init_bufferobject_functions
00000000003cb160 000000000000097c t st_Clear
00000000003cbae0 0000000000000030 t st_init_clear
00000000003cbb10 000000000000007c t st_destroy_clear
00000000003cbb90 0000000000000010 t st_init_clear_functions
00000000003cbba0 00000000000001d0 t st_dispatch_compute_common
00000000003cbd70 000000000000000c t st_dispatch_compute_group_size
00000000003cbd80 000000000000001c t st_dispatch_compute_indirect
00000000003cbda0 0000000000000010 t st_dispatch_compute
00000000003cbdb0 0000000000000028 t st_init_compute_functions
00000000003cbde0 0000000000000038 t st_EndConditionalRender
00000000003cbe20 0000000000000088 t st_BeginConditionalRender
00000000003cbeb0 000000000000001c t st_init_cond_render_functions
00000000003cbed0 0000000000000304 t get_canonical_format
00000000003cc1e0 00000000000000c4 t canonical_format_from_bits
00000000003cc2b0 00000000000000a0 t same_size_and_swizzle
00000000003cc350 000000000000018c t swizzled_copy
00000000003cc4e0 00000000000004c8 t handle_complex_copy
00000000003cc9b0 0000000000000750 t st_CopyImageSubData
00000000003cd100 0000000000000010 t st_init_copy_image_functions
00000000003cd110 00000000000007f4 t transform_instr
00000000003cd910 00000000000000ec t st_get_drawpix_shader
00000000003cda00 0000000000000858 t st_DrawTex
00000000003ce260 0000000000000010 t st_init_drawtex_functions
00000000003ce270 0000000000000074 t st_destroy_drawtex
00000000003ce2f0 00000000000003a0 t st_get_egl_image
00000000003ce690 0000000000000368 t st_bind_egl_image
00000000003cea00 00000000000000d4 t st_egl_image_target_tex_storage
00000000003ceae0 00000000000000d4 t st_egl_image_target_texture_2d
00000000003cebc0 00000000000001d0 t st_egl_image_target_renderbuffer_storage
00000000003ced90 0000000000000028 t st_init_eglimage_functions
00000000003cedc0 0000000000000060 t st_import_memoryobj_fd
00000000003cee20 0000000000000004 t st_memoryobj_free
00000000003cee30 0000000000000050 t st_memoryobj_alloc
00000000003cee80 0000000000000028 t st_init_memoryobject_functions
00000000003ceeb0 00000000000000b4 t st_GetProgrammableSampleCaps
00000000003cef70 000000000000009c t st_GetSamplePosition
00000000003cf010 000000000000001c t st_init_msaa_functions
00000000003cf030 0000000000000090 t st_EndPerfMonitor
00000000003cf0c0 00000000000000dc t st_IsPerfMonitorResultAvailable
00000000003cf1a0 00000000000001dc t st_GetPerfMonitorResult
00000000003cf380 00000000000000a0 t reset_perf_monitor
00000000003cf420 0000000000000034 t st_DeletePerfMonitor
00000000003cf460 000000000000000c t st_NewPerfMonitor
00000000003cf470 000000000000033c t st_BeginPerfMonitor
00000000003cf7b0 0000000000000080 t st_ResetPerfMonitor
00000000003cf830 0000000000000324 t st_InitPerfMonitorGroups
00000000003cfb60 0000000000000044 t st_have_perfmon
00000000003cfbb0 000000000000007c t st_destroy_perfmon
00000000003cfc30 0000000000000064 t st_init_perfmon_functions
00000000003cfca0 0000000000000018 t st_InitPerfQueryInfo
00000000003cfcc0 0000000000000018 t st_GetPerfQueryInfo
00000000003cfce0 0000000000000018 t st_DeletePerfQuery
00000000003cfd00 0000000000000028 t st_BeginPerfQuery
00000000003cfd30 0000000000000018 t st_EndPerfQuery
00000000003cfd50 0000000000000018 t st_WaitPerfQuery
00000000003cfd70 0000000000000028 t st_IsPerfQueryReady
00000000003cfda0 000000000000001c t st_GetPerfQueryData
00000000003cfdc0 0000000000000018 t st_NewPerfQueryObject
00000000003cfde0 000000000000006c t st_GetPerfCounterInfo
00000000003cfe50 0000000000000068 t st_have_perfquery
00000000003cfec0 000000000000007c t st_init_perfquery_functions
00000000003cff40 0000000000000038 t st_new_ati_fs
00000000003cff80 0000000000000024 t st_max_shader_compiler_threads
00000000003cffb0 00000000000000a0 t st_get_shader_program_completion_status
00000000003d0050 00000000000000d8 t st_program_string_notify
00000000003d0130 0000000000000048 t st_delete_program
00000000003d0180 0000000000000070 t st_new_program
00000000003d01f0 0000000000000050 t st_init_program_functions
00000000003d0240 0000000000000030 t st_GetTimestamp
00000000003d0270 00000000000001c0 t st_StoreQueryResult
00000000003d0430 00000000000001d8 t get_query_result
00000000003d0610 0000000000000034 t st_CheckQuery
00000000003d0650 0000000000000054 t st_WaitQuery
00000000003d06b0 00000000000000d0 t st_EndQuery
00000000003d0780 0000000000000044 t st_NewQueryObject
00000000003d07d0 000000000000006c t st_DeleteQuery
00000000003d0840 00000000000003b8 t st_BeginQuery
00000000003d0c00 0000000000000064 t st_init_query_functions
00000000003d0c70 0000000000000214 t blit_to_staging
00000000003d0e90 0000000000000ef0 t st_ReadPixels
00000000003d1d80 0000000000000010 t st_init_readpixels_functions
00000000003d1d90 0000000000000048 t st_get_string
00000000003d1de0 0000000000000010 t st_init_string_functions
00000000003d1df0 0000000000000020 t st_import_semaphoreobj_fd
00000000003d1e10 00000000000000d0 t st_server_signal_semaphore
00000000003d1ee0 00000000000000c8 t st_server_wait_semaphore
00000000003d1fb0 0000000000000004 t st_semaphoreobj_free
00000000003d1fc0 0000000000000050 t st_semaphoreobj_alloc
00000000003d2010 0000000000000040 t st_init_semaphoreobject_functions
00000000003d2050 0000000000000030 t st_fence_sync
00000000003d2080 00000000000000ac t st_server_wait_sync
00000000003d2130 00000000000000f4 t st_client_wait_sync
00000000003d2230 000000000000000c t st_check_sync
00000000003d2240 0000000000000050 t st_delete_sync_object
00000000003d2290 0000000000000038 t st_new_sync_object
00000000003d22d0 000000000000004c t st_init_syncobj_functions
00000000003d2320 000000000000001c t st_TextureBarrier
00000000003d2340 000000000000001c t st_FramebufferFetchBarrier
00000000003d2360 00000000000000b4 t st_MemoryBarrier
00000000003d2420 0000000000000028 t st_init_texture_barrier_functions
00000000003d2450 00000000000000e0 t st_viewport
00000000003d2530 0000000000000010 t st_init_viewport_functions
00000000003d2540 0000000000000034 t st_resume_transform_feedback
00000000003d2580 000000000000001c t st_pause_transform_feedback
00000000003d25a0 000000000000003c t st_new_transform_feedback
00000000003d25e0 00000000000000d0 t st_end_transform_feedback
00000000003d26b0 00000000000000c0 t st_delete_transform_feedback
00000000003d2770 0000000000000158 t st_begin_transform_feedback
00000000003d28d0 0000000000000018 t st_transform_feedback_draw_init
00000000003d28f0 000000000000004c t st_init_xformfb_functions
00000000003d2940 000000000000032c T st_link_shader
00000000003d2c70 0000000000000004 T glsl_to_tgsi_visitor::visit(ir_function_signature*)
00000000003d2c80 0000000000000158 t shrink_array_declarations(inout_decl*, unsigned int, unsigned long*, unsigned long, unsigned int*)
00000000003d2de0 0000000000000028 W ir_control_flow_info_visitor::visit_enter(ir_call*)
00000000003d2e10 0000000000000028 W ir_control_flow_info_visitor::visit_enter(ir_return*)
00000000003d2e40 00000000000000c0 t add_buffer_to_load_and_stores(glsl_to_tgsi_instruction*, st_src_reg*, exec_list*, ir_constant*)
00000000003d2f00 0000000000000164 T glsl_to_tgsi_visitor::visit(ir_swizzle*)
00000000003d3070 000000000000002c W ir_control_flow_info_visitor::visit_enter(ir_function*)
00000000003d30a0 0000000000000044 T glsl_to_tgsi_visitor::~glsl_to_tgsi_visitor()
00000000003d30a0 0000000000000044 T glsl_to_tgsi_visitor::~glsl_to_tgsi_visitor()
00000000003d30f0 0000000000000010 t var_destroy(hash_entry*)
00000000003d3100 0000000000000098 T glsl_to_tgsi_visitor::visit(ir_function*)
00000000003d31a0 000000000000008c t mark_array_io(inout_decl*, unsigned int, unsigned long*, unsigned long, unsigned int*) [clone .constprop.0]
00000000003d3230 000000000000009c t fail_link(gl_shader_program*, char const*, ...) [clone .constprop.0]
00000000003d32d0 0000000000000050 T glsl_to_tgsi_visitor::~glsl_to_tgsi_visitor()
00000000003d3320 0000000000000098 t type_has_array_or_matrix(glsl_type const*)
00000000003d33c0 00000000000000dc t is_inout_array(unsigned int, ir_variable*, bool*)
00000000003d34a0 0000000000000094 t emit_immediate(st_translate*, gl_constant_value*, unsigned int, int) [clone .isra.0]
00000000003d3540 0000000000000240 t dst_register(st_translate*, gl_register_file, unsigned int, unsigned int)
00000000003d3780 0000000000000c4c t emit_wpos(st_context*, st_translate*, gl_program const*, ureg_program*, int)
00000000003d43d0 0000000000000c2c t translate_src(st_translate*, st_src_reg const*)
00000000003d5000 00000000000000c0 t translate_addr(st_translate*, st_src_reg const*, unsigned int)
00000000003d50c0 0000000000000014 t swizzle_for_size(int)
00000000003d50e0 0000000000000928 t glsl_to_tgsi_visitor::get_opcode(tgsi_opcode, st_dst_reg, st_src_reg, st_src_reg)
00000000003d5a10 0000000000000218 t glsl_to_tgsi_visitor::add_constant(gl_register_file, gl_constant_value*, int, unsigned int, unsigned short*)
00000000003d5c30 0000000000000070 t glsl_to_tgsi_visitor::st_src_reg_for_float(float)
00000000003d5ca0 00000000000000e4 t glsl_to_tgsi_visitor::st_src_reg_for_type(glsl_base_type, int)
00000000003d5d90 0000000000000164 t glsl_to_tgsi_visitor::get_temp(glsl_type const*)
00000000003d5f00 00000000000001c0 t glsl_to_tgsi_visitor::reladdr_to_temp(ir_instruction*, st_src_reg*, int*)
00000000003d60c0 0000000000000a84 t glsl_to_tgsi_visitor::emit_asm(ir_instruction*, tgsi_opcode, st_dst_reg, st_dst_reg, st_src_reg, st_src_reg, st_src_reg, st_src_reg)
00000000003d6b50 00000000000000ec t glsl_to_tgsi_visitor::emit_asm(ir_instruction*, tgsi_opcode, st_dst_reg, st_src_reg, st_src_reg, st_src_reg, st_src_reg)
00000000003d6c40 00000000000000d4 t glsl_to_tgsi_visitor::emit_dp(ir_instruction*, st_dst_reg, st_src_reg, st_src_reg, unsigned int)
00000000003d6d20 00000000000001cc t glsl_to_tgsi_visitor::emit_scalar(ir_instruction*, tgsi_opcode, st_dst_reg, st_src_reg, st_src_reg)
00000000003d6ef0 0000000000000128 t glsl_to_tgsi_visitor::emit_arl(ir_instruction*, st_dst_reg, st_src_reg)
00000000003d7020 00000000000002f8 t glsl_to_tgsi_visitor::visit(ir_variable*) [clone .part.0]
00000000003d7320 0000000000000040 T glsl_to_tgsi_visitor::visit(ir_variable*)
00000000003d7360 0000000000000130 T glsl_to_tgsi_visitor::visit(ir_loop*)
00000000003d7490 000000000000014c T glsl_to_tgsi_visitor::visit(ir_loop_jump*)
00000000003d75e0 0000000000000234 t glsl_to_tgsi_visitor::try_emit_mad(ir_expression*, int)
00000000003d7820 00000000000001e0 t glsl_to_tgsi_visitor::try_emit_mad_for_and_not(ir_expression*, int)
00000000003d7a00 0000000000000b1c T glsl_to_tgsi_visitor::visit(ir_constant*)
00000000003d8520 00000000000000b8 T glsl_to_tgsi_visitor::visit(ir_return*)
00000000003d85e0 00000000000002b0 T glsl_to_tgsi_visitor::visit(ir_discard*)
00000000003d8890 00000000000000b8 T glsl_to_tgsi_visitor::visit(ir_demote*)
00000000003d8950 0000000000000214 T glsl_to_tgsi_visitor::visit(ir_if*)
00000000003d8b70 00000000000000d0 T glsl_to_tgsi_visitor::visit(ir_emit_vertex*)
00000000003d8c40 00000000000000d0 T glsl_to_tgsi_visitor::visit(ir_end_primitive*)
00000000003d8d10 00000000000000b8 T glsl_to_tgsi_visitor::visit(ir_barrier*)
00000000003d8dd0 00000000000058cc t glsl_to_tgsi_visitor::visit_expression(ir_expression*, st_src_reg*)
00000000003de6a0 00000000000001a4 T glsl_to_tgsi_visitor::visit(ir_expression*)
00000000003de850 00000000000001d8 t glsl_to_tgsi_visitor::process_move_condition(ir_rvalue*)
00000000003dea30 000000000000040c t glsl_to_tgsi_visitor::emit_block_mov(ir_assignment*, glsl_type const*, st_dst_reg*, st_src_reg*, st_src_reg*, bool)
00000000003dee40 0000000000000430 T glsl_to_tgsi_visitor::visit(ir_assignment*)
00000000003df270 0000000000000640 t glsl_to_tgsi_visitor::visit_ssbo_intrinsic(ir_call*)
00000000003df8b0 00000000000002a8 t glsl_to_tgsi_visitor::visit_membar_intrinsic(ir_call*)
00000000003dfb60 0000000000000504 t glsl_to_tgsi_visitor::visit_shared_intrinsic(ir_call*)
00000000003e0070 0000000000000200 t glsl_to_tgsi_visitor::visit_generic_intrinsic(ir_call*, tgsi_opcode)
00000000003e0270 00000000000003fc t glsl_to_tgsi_visitor::calc_deref_offsets(ir_dereference*, unsigned int*, unsigned short*, st_src_reg*, unsigned int*)
00000000003e0670 0000000000000180 t glsl_to_tgsi_visitor::get_deref_offsets(ir_dereference*, unsigned int*, unsigned int*, unsigned short*, st_src_reg*, bool)
00000000003e07f0 0000000000000a6c t glsl_to_tgsi_visitor::visit_atomic_counter_intrinsic(ir_call*)
00000000003e1260 0000000000000c98 t glsl_to_tgsi_visitor::visit_image_intrinsic(ir_call*)
00000000003e1f00 00000000000000fc T glsl_to_tgsi_visitor::visit(ir_call*)
00000000003e2000 0000000000000154 t glsl_to_tgsi_visitor::canonicalize_gather_offset(st_src_reg)
00000000003e2160 0000000000001784 T glsl_to_tgsi_visitor::visit(ir_texture*)
00000000003e38f0 00000000000002a4 t glsl_to_tgsi_visitor::handle_bound_deref(ir_dereference*)
00000000003e3ba0 000000000000070c T glsl_to_tgsi_visitor::visit(ir_dereference_variable*)
00000000003e42b0 0000000000000508 T glsl_to_tgsi_visitor::visit(ir_dereference_array*)
00000000003e47c0 0000000000000154 T glsl_to_tgsi_visitor::visit(ir_dereference_record*)
00000000003e4920 00000000000000e8 t glsl_to_tgsi_visitor::glsl_to_tgsi_visitor()
00000000003e4920 00000000000000e8 T glsl_to_tgsi_visitor::glsl_to_tgsi_visitor()
00000000003e4a10 0000000000000080 t free_glsl_to_tgsi_visitor
00000000003e4a90 000000000000024c t glsl_to_tgsi_visitor::simplify_cmp()
00000000003e4ce0 0000000000000354 t glsl_to_tgsi_visitor::rename_temp_registers(rename_reg_pair*)
00000000003e5040 00000000000000d8 t glsl_to_tgsi_visitor::get_first_temp_write(int*)
00000000003e5120 000000000000052c t glsl_to_tgsi_visitor::copy_propagate()
00000000003e5650 0000000000000690 t glsl_to_tgsi_visitor::eliminate_dead_code()
00000000003e5ce0 00000000000001b8 t glsl_to_tgsi_visitor::merge_two_dsts()
00000000003e5ea0 000000000000016c t glsl_to_tgsi_visitor::merge_registers()
00000000003e6010 00000000000000e0 t glsl_to_tgsi_visitor::renumber_registers()
00000000003e60f0 0000000000000084 t void test_indirect_access<st_src_reg>(st_src_reg const&, bool*)
00000000003e6180 00000000000000a0 t void remap_array<st_src_reg>(st_src_reg&, int const*, bool const*)
00000000003e6220 00000000000004e8 t glsl_to_tgsi_visitor::split_arrays()
00000000003e6710 000000000000095c t st_link_tgsi
00000000003e7070 000000000000006c t void std::__unguarded_linear_insert<inout_decl*, __gnu_cxx::__ops::_Val_comp_iter<sort_inout_decls> >(inout_decl*, __gnu_cxx::__ops::_Val_comp_iter<sort_inout_decls>)
00000000003e70e0 00000000000000bc t void std::__insertion_sort<inout_decl*, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls> >(inout_decl*, inout_decl*, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls>)
00000000003e71a0 0000000000000158 t void std::__adjust_heap<inout_decl*, long, inout_decl, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls> >(inout_decl*, long, long, inout_decl, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls>)
00000000003e7300 0000000000000114 t void std::__heap_select<inout_decl*, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls> >(inout_decl*, inout_decl*, inout_decl*, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls>)
00000000003e7420 00000000000001e8 t void std::__introsort_loop<inout_decl*, long, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls> >(inout_decl*, inout_decl*, long, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls>)
00000000003e7610 00000000000023fc t st_translate_program
00000000003e9a10 0000000000000014 t tgsi_array_merge::sort_by_begin(array_live_range const&, array_live_range const&)
00000000003e9a30 000000000000001c t array_live_range::array_live_range()
00000000003e9a30 000000000000001c T array_live_range::array_live_range()
00000000003e9a50 0000000000000020 t array_live_range::array_live_range(unsigned int, unsigned int)
00000000003e9a50 0000000000000020 T array_live_range::array_live_range(unsigned int, unsigned int)
00000000003e9a70 0000000000000008 t array_live_range::set_live_range(int, int)
00000000003e9a80 0000000000000018 t array_live_range::set_access_mask(int)
00000000003e9aa0 0000000000000060 t array_live_range::merge(array_live_range*, array_live_range*)
00000000003e9b00 00000000000000b8 t array_live_range::interleave_into(array_live_range*)
00000000003e9bc0 0000000000000064 t tgsi_array_merge::array_remapping::init_from(array_live_range const&)
00000000003e9c30 0000000000000570 t tgsi_array_merge::remap_arrays(int, unsigned int*, exec_list*, tgsi_array_merge::array_remapping*)
00000000003ea1a0 000000000000013c t void std::__move_median_to_first<array_live_range*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)> >(array_live_range*, array_live_range*, array_live_range*, array_live_range*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)>)
00000000003ea2e0 0000000000000080 t void std::__unguarded_linear_insert<array_live_range*, __gnu_cxx::__ops::_Val_comp_iter<bool (*)(array_live_range const&, array_live_range const&)> >(array_live_range*, __gnu_cxx::__ops::_Val_comp_iter<bool (*)(array_live_range const&, array_live_range const&)>)
00000000003ea360 00000000000000cc t void std::__insertion_sort<array_live_range*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)> >(array_live_range*, array_live_range*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)>)
00000000003ea430 00000000000001cc t void std::__adjust_heap<array_live_range*, long, array_live_range, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)> >(array_live_range*, long, long, array_live_range, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)>)
00000000003ea600 0000000000000150 t void std::__heap_select<array_live_range*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)> >(array_live_range*, array_live_range*, array_live_range*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)>)
00000000003ea750 00000000000001d0 t void std::__introsort_loop<array_live_range*, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)> >(array_live_range*, array_live_range*, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)>)
00000000003ea920 0000000000000398 t tgsi_array_merge::get_array_remapping(int, array_live_range*, tgsi_array_merge::array_remapping*)
00000000003eacc0 00000000000000f4 t merge_arrays(int, unsigned int*, exec_list*, array_live_range*)
00000000003eadc0 00000000000000b0 t dup_reladdr(st_src_reg const*)
00000000003eae70 0000000000000128 t st_src_reg::st_src_reg(gl_register_file, int, glsl_type const*, int, unsigned int)
00000000003eae70 0000000000000128 T st_src_reg::st_src_reg(gl_register_file, int, glsl_type const*, int, unsigned int)
00000000003eafa0 0000000000000030 t st_src_reg::st_src_reg(gl_register_file, int, glsl_base_type)
00000000003eafa0 0000000000000030 T st_src_reg::st_src_reg(gl_register_file, int, glsl_base_type)
00000000003eafd0 0000000000000034 t st_src_reg::st_src_reg(gl_register_file, int, glsl_base_type, int)
00000000003eafd0 0000000000000034 T st_src_reg::st_src_reg(gl_register_file, int, glsl_base_type, int)
00000000003eb010 0000000000000020 t st_src_reg::reset()
00000000003eb030 0000000000000020 t st_src_reg::st_src_reg()
00000000003eb030 0000000000000020 T st_src_reg::st_src_reg()
00000000003eb050 00000000000000f8 t st_src_reg::operator=(st_src_reg const&)
00000000003eb150 00000000000000e0 t st_src_reg::st_src_reg(st_src_reg const&)
00000000003eb150 00000000000000e0 T st_src_reg::st_src_reg(st_src_reg const&)
00000000003eb230 0000000000000100 t st_src_reg::st_src_reg(st_dst_reg)
00000000003eb230 0000000000000100 T st_src_reg::st_src_reg(st_dst_reg)
00000000003eb330 0000000000000128 t st_src_reg::get_abs()
00000000003eb460 00000000000000f8 t st_dst_reg::st_dst_reg(st_src_reg)
00000000003eb460 00000000000000f8 T st_dst_reg::st_dst_reg(st_src_reg)
00000000003eb560 000000000000002c t st_dst_reg::st_dst_reg(gl_register_file, int, glsl_base_type, int)
00000000003eb560 000000000000002c T st_dst_reg::st_dst_reg(gl_register_file, int, glsl_base_type, int)
00000000003eb590 000000000000002c t st_dst_reg::st_dst_reg(gl_register_file, int, glsl_base_type)
00000000003eb590 000000000000002c T st_dst_reg::st_dst_reg(gl_register_file, int, glsl_base_type)
00000000003eb5c0 000000000000001c t st_dst_reg::st_dst_reg()
00000000003eb5c0 000000000000001c T st_dst_reg::st_dst_reg()
00000000003eb5e0 00000000000000e0 t st_dst_reg::st_dst_reg(st_dst_reg const&)
00000000003eb5e0 00000000000000e0 T st_dst_reg::st_dst_reg(st_dst_reg const&)
00000000003eb6c0 0000000000000108 t st_dst_reg::operator=(st_dst_reg const&)
00000000003eb7d0 00000000000000d0 t (anonymous namespace)::temp_comp_access::record_read(int, (anonymous namespace)::prog_scope*)
00000000003eb8a0 000000000000007c t (anonymous namespace)::array_access::record_access(int, (anonymous namespace)::prog_scope*, int)
00000000003eb920 0000000000000170 t (anonymous namespace)::access_recorder::record_read(st_src_reg const&, int, (anonymous namespace)::prog_scope*)
00000000003eba90 0000000000000124 t void std::__adjust_heap<(anonymous namespace)::register_merge_record*, long, (anonymous namespace)::register_merge_record, __gnu_cxx::__ops::_Iter_less_iter>((anonymous namespace)::register_merge_record*, long, long, (anonymous namespace)::register_merge_record, __gnu_cxx::__ops::_Iter_less_iter) [clone .constprop.0]
00000000003ebbc0 00000000000000e4 t void std::__insertion_sort<(anonymous namespace)::register_merge_record*, __gnu_cxx::__ops::_Iter_less_iter>((anonymous namespace)::register_merge_record*, (anonymous namespace)::register_merge_record*, __gnu_cxx::__ops::_Iter_less_iter) [clone .constprop.0]
00000000003ebcb0 0000000000000218 t void std::__introsort_loop<(anonymous namespace)::register_merge_record*, long, __gnu_cxx::__ops::_Iter_less_iter>((anonymous namespace)::register_merge_record*, (anonymous namespace)::register_merge_record*, long, __gnu_cxx::__ops::_Iter_less_iter) [clone .constprop.0]
00000000003ebed0 00000000000001e0 t (anonymous namespace)::temp_comp_access::record_ifelse_write((anonymous namespace)::prog_scope const&)
00000000003ec0b0 00000000000000f0 t (anonymous namespace)::temp_comp_access::record_write(int, (anonymous namespace)::prog_scope*)
00000000003ec1a0 0000000000000d40 t get_temp_registers_required_live_ranges(void*, exec_list*, int, register_live_range*, int, array_live_range*)
00000000003ecee0 0000000000000254 t get_temp_registers_remapping(void*, int, register_live_range const*, rename_reg_pair*)
00000000003ed140 000000000000007c t swizzle_4v
00000000003ed1c0 00000000000002cc t src_register
00000000003ed490 00000000000001bc t translate_src
00000000003ed650 0000000000000bf0 t emit_wpos
00000000003ee240 000000000000008c t st_translate_texture_target
00000000003ee2d0 0000000000000020 t st_translate_texture_type
00000000003ee2f0 000000000000191c t st_translate_mesa_program
00000000003efc10 0000000000000088 T ast_array_specifier::print() const
00000000003efca0 00000000000008a8 t _mesa_ast_array_index_to_hir(void*, _mesa_glsl_parse_state*, ir_rvalue*, ir_rvalue*, YYLTYPE&, YYLTYPE&)
00000000003f0550 0000000000000058 T ast_expression_bin::print() const
00000000003f05b0 0000000000000010 t ast_expression::operator_string(ast_operators)
00000000003f05c0 0000000000000030 t ast_expression_bin::ast_expression_bin(int, ast_expression*, ast_expression*)
00000000003f05c0 0000000000000030 T ast_expression_bin::ast_expression_bin(int, ast_expression*, ast_expression*)
00000000003f05f0 000000000000005c T ast_function_expression::has_sequence_subexpression() const
00000000003f0650 0000000000000894 t convert_component(ir_rvalue*, glsl_type const*)
00000000003f0ef0 00000000000000d8 t implicitly_convert_component(ir_rvalue*&, glsl_base_type, _mesa_glsl_parse_state*)
00000000003f0fd0 0000000000000190 t match_subroutine_by_name(char const*, exec_list*, _mesa_glsl_parse_state*, ir_variable**)
00000000003f1160 000000000000015c t generate_array_index(void*, exec_list*, _mesa_glsl_parse_state*, YYLTYPE, ast_expression const*, ast_expression*, char const**, exec_list*)
00000000003f12c0 000000000000008c t function_exists(_mesa_glsl_parse_state*, glsl_symbol_table*, char const*)
00000000003f1350 000000000000015c t copy_index_derefs_to_temps(ir_instruction*, void*)
00000000003f14b0 00000000000000fc t process_parameters(exec_list*, exec_list*, exec_list*, _mesa_glsl_parse_state*) [clone .constprop.0]
00000000003f15b0 00000000000002d0 t process_record_constructor(exec_list*, glsl_type const*, YYLTYPE*, exec_list*, _mesa_glsl_parse_state*)
00000000003f1880 00000000000003c8 t process_array_constructor(exec_list*, glsl_type const*, YYLTYPE*, exec_list*, _mesa_glsl_parse_state*)
00000000003f1c50 0000000000000580 T ast_aggregate_initializer::hir(exec_list*, _mesa_glsl_parse_state*)
00000000003f21d0 00000000000000cc t prototype_string(glsl_type const*, char const*, exec_list*)
00000000003f22a0 00000000000000c0 t print_function_prototypes(_mesa_glsl_parse_state*, YYLTYPE*, ir_function*)
00000000003f2360 00000000000002e0 t ast_function_expression::handle_method(exec_list*, _mesa_glsl_parse_state*)
00000000003f2640 00000000000029bc T ast_function_expression::hir(exec_list*, _mesa_glsl_parse_state*)
00000000003f5000 0000000000000010 W read_from_write_only_variable_visitor::visit_enter(ir_expression*)
00000000003f5010 0000000000000008 T ast_node::has_sequence_subexpression() const
00000000003f5020 0000000000000004 T ast_node::set_is_lhs(bool)
00000000003f5030 0000000000000100 T ast_expression::has_sequence_subexpression() const
00000000003f5130 0000000000000014 t compare_case_value(void const*, void const*)
00000000003f5150 0000000000000008 t key_contents(void const*)
00000000003f5160 0000000000000048 W interface_block_usage_visitor::visit(ir_dereference_variable*)
00000000003f51b0 0000000000000010 T ast_warnings_toggle::hir(exec_list*, _mesa_glsl_parse_state*)
00000000003f51c0 0000000000000128 t remove_per_vertex_blocks(exec_list*, _mesa_glsl_parse_state*, ir_variable_mode)
00000000003f52f0 00000000000000b8 t validate_layout_qualifier_vertex_count(_mesa_glsl_parse_state*, YYLTYPE, ir_variable*, unsigned int, unsigned int*, char const*)
00000000003f53b0 00000000000000ac t handle_tess_shader_input_decl(_mesa_glsl_parse_state*, YYLTYPE, ir_variable*)
00000000003f5460 00000000000000f8 t get_scalar_boolean_operand(exec_list*, _mesa_glsl_parse_state*, ast_expression*, int, char const*, bool*)
00000000003f5560 00000000000001a4 t validate_xfb_offset_qualifier(YYLTYPE*, _mesa_glsl_parse_state*, int, glsl_type const*, unsigned int)
00000000003f5710 0000000000000154 T ast_gs_input_layout::hir(exec_list*, _mesa_glsl_parse_state*)
00000000003f5870 0000000000000104 t handle_tess_ctrl_shader_output_decl(_mesa_glsl_parse_state*, YYLTYPE, ir_variable*)
00000000003f5980 0000000000000160 T ast_tcs_output_layout::hir(exec_list*, _mesa_glsl_parse_state*)
00000000003f5ae0 00000000000002e8 T ast_cs_input_layout::hir(exec_list*, _mesa_glsl_parse_state*)
00000000003f5dd0 000000000000005c t is_varying_var(ir_variable*, gl_shader_stage)
00000000003f5e30 00000000000000a8 t validate_storage_for_sampler_image_types(ir_variable*, _mesa_glsl_parse_state*, YYLTYPE*)
00000000003f5ee0 0000000000000288 t process_array_type(YYLTYPE*, glsl_type const*, ast_array_specifier*, _mesa_glsl_parse_state*)
00000000003f6170 0000000000000100 t constant_one_for_inc_dec(void*, glsl_type const*) [clone .isra.0]
00000000003f6270 000000000000007c W read_from_write_only_variable_visitor::visit(ir_dereference_variable*)
00000000003f62f0 00000000000001c8 t shift_result_type(glsl_type const*, glsl_type const*, ast_operators, _mesa_glsl_parse_state*, YYLTYPE*)
00000000003f64c0 00000000000000a8 t validate_identifier(char const*, YYLTYPE, _mesa_glsl_parse_state*)
00000000003f6570 00000000000002a8 t validate_interpolation_qualifier(_mesa_glsl_parse_state*, YYLTYPE*, glsl_interp_mode, ast_type_qualifier const*, glsl_type const*, ir_variable_mode)
00000000003f6820 00000000000003c8 t select_gles_precision(unsigned int, glsl_type const*, _mesa_glsl_parse_state*, YYLTYPE*)
00000000003f6bf0 000000000000090c t apply_type_qualifier_to_variable(ast_type_qualifier const*, ir_variable*, _mesa_glsl_parse_state*, YYLTYPE*, bool)
00000000003f7500 00000000000000e0 t is_allowed_invariant(ir_variable*, _mesa_glsl_parse_state*)
00000000003f75e0 000000000000023c t apply_implicit_conversion(glsl_type const*, ir_rvalue*&, _mesa_glsl_parse_state*)
00000000003f7820 00000000000001e0 t modulus_result_type(ir_rvalue*&, ir_rvalue*&, _mesa_glsl_parse_state*, YYLTYPE*)
00000000003f7a00 00000000000002ac t bit_logic_result_type(ir_rvalue*&, ir_rvalue*&, ast_operators, _mesa_glsl_parse_state*, YYLTYPE*)
00000000003f7cb0 0000000000000234 t arithmetic_result_type(ir_rvalue*&, ir_rvalue*&, bool, _mesa_glsl_parse_state*, YYLTYPE*)
00000000003f7ef0 00000000000002b4 t validate_assignment(_mesa_glsl_parse_state*, YYLTYPE, ir_rvalue*, ir_rvalue*, bool)
00000000003f81b0 0000000000000230 t apply_explicit_binding(_mesa_glsl_parse_state*, YYLTYPE*, ir_variable*, glsl_type const*, ast_type_qualifier const*) [clone .part.0]
00000000003f83e0 0000000000000404 t do_comparison(void*, int, ir_rvalue*, ir_rvalue*)
00000000003f87f0 0000000000000478 t do_assignment(exec_list*, _mesa_glsl_parse_state*, char const*, ir_rvalue*, ir_rvalue*, ir_rvalue**, bool, bool, YYLTYPE)
00000000003f8c70 000000000000008c T ast_expression::set_is_lhs(bool)
00000000003f8d00 0000000000000514 t _mesa_ast_to_hir(exec_list*, _mesa_glsl_parse_state*)
00000000003f9220 0000000000000008 T ast_node::hir(exec_list*, _mesa_glsl_parse_state*)
00000000003f9230 0000000000000010 T ast_function_expression::hir_no_rvalue(exec_list*, _mesa_glsl_parse_state*)
00000000003f9240 0000000000000010 T ast_aggregate_initializer::hir_no_rvalue(exec_list*, _mesa_glsl_parse_state*)
00000000003f9250 0000000000000108 t check_builtin_array_max_size(char const*, unsigned int, YYLTYPE, _mesa_glsl_parse_state*)
00000000003f9360 0000000000000464 t get_variable_being_redeclared(ir_variable**, YYLTYPE, _mesa_glsl_parse_state*, bool, bool*)
00000000003f97d0 000000000000214c t ast_expression::do_hir(exec_list*, _mesa_glsl_parse_state*, bool)
00000000003fb920 0000000000000008 T ast_expression::hir(exec_list*, _mesa_glsl_parse_state*)
00000000003fb930 0000000000000008 T ast_expression::hir_no_rvalue(exec_list*, _mesa_glsl_parse_state*)
00000000003fb940 0000000000000030 T ast_expression_statement::hir(exec_list*, _mesa_glsl_parse_state*)
00000000003fb970 00000000000000a8 T ast_compound_statement::hir(exec_list*, _mesa_glsl_parse_state*)
00000000003fba20 000000000000008c t ast_type_specifier::glsl_type(char const**, _mesa_glsl_parse_state*) const
00000000003fbab0 000000000000105c t ast_process_struct_or_iface_block_members(exec_list*, _mesa_glsl_parse_state*, exec_list*, glsl_struct_field**, bool, glsl_matrix_layout, bool, ir_variable_mode, ast_type_qualifier*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
00000000003fcb10 00000000000013fc T ast_interface_block::hir(exec_list*, _mesa_glsl_parse_state*)
00000000003fdf10 0000000000002b4c T ast_declarator_list::hir(exec_list*, _mesa_glsl_parse_state*)
0000000000400a60 00000000000002cc T ast_parameter_declarator::hir(exec_list*, _mesa_glsl_parse_state*)
0000000000400d30 00000000000000e8 t ast_parameter_declarator::parameters_to_hir(exec_list*, bool, exec_list*, _mesa_glsl_parse_state*)
0000000000400e20 0000000000000b4c T ast_function::hir(exec_list*, _mesa_glsl_parse_state*)
0000000000401970 0000000000000198 T ast_function_definition::hir(exec_list*, _mesa_glsl_parse_state*)
0000000000401b10 00000000000000a4 T ast_demote_statement::hir(exec_list*, _mesa_glsl_parse_state*)
0000000000401bc0 0000000000000170 T ast_selection_statement::hir(exec_list*, _mesa_glsl_parse_state*)
0000000000401d30 00000000000001c4 t ast_switch_statement::test_to_hir(exec_list*, _mesa_glsl_parse_state*)
0000000000401f00 0000000000000030 T ast_switch_body::hir(exec_list*, _mesa_glsl_parse_state*)
0000000000401f30 0000000000000344 T ast_case_statement_list::hir(exec_list*, _mesa_glsl_parse_state*)
0000000000402280 000000000000010c T ast_case_statement::hir(exec_list*, _mesa_glsl_parse_state*)
0000000000402390 0000000000000068 T ast_case_label_list::hir(exec_list*, _mesa_glsl_parse_state*)
0000000000402400 0000000000000444 T ast_case_label::hir(exec_list*, _mesa_glsl_parse_state*)
0000000000402850 000000000000016c t ast_iteration_statement::condition_to_hir(exec_list*, _mesa_glsl_parse_state*)
00000000004029c0 0000000000000538 T ast_jump_statement::hir(exec_list*, _mesa_glsl_parse_state*)
0000000000402f00 0000000000000460 T ast_switch_statement::hir(exec_list*, _mesa_glsl_parse_state*)
0000000000403360 000000000000015c T ast_iteration_statement::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004034c0 0000000000000188 T ast_type_specifier::hir(exec_list*, _mesa_glsl_parse_state*)
0000000000403650 0000000000000234 T ast_struct_specifier::hir(exec_list*, _mesa_glsl_parse_state*)
0000000000403890 0000000000000064 T ast_type_specifier::print() const
0000000000403900 000000000000009c t ast_fully_specified_type::has_qualifiers(_mesa_glsl_parse_state*) const
00000000004039a0 0000000000000010 t ast_type_qualifier::has_interpolation() const
00000000004039b0 0000000000000040 t ast_type_qualifier::has_layout() const
00000000004039f0 0000000000000014 t ast_type_qualifier::has_storage() const
0000000000403a10 0000000000000010 t ast_type_qualifier::has_auxiliary_storage() const
0000000000403a20 0000000000000010 t ast_type_qualifier::has_memory() const
0000000000403a30 0000000000000020 t ast_type_qualifier::is_subroutine_decl() const
0000000000403a50 000000000000099c t ast_type_qualifier::merge_qualifier(YYLTYPE*, _mesa_glsl_parse_state*, ast_type_qualifier const&, bool, bool)
00000000004043f0 0000000000000160 t ast_type_qualifier::validate_out_qualifier(YYLTYPE*, _mesa_glsl_parse_state*)
0000000000404550 00000000000000d0 t ast_type_qualifier::merge_into_out_qualifier(YYLTYPE*, _mesa_glsl_parse_state*, ast_node*&)
0000000000404620 000000000000028c t ast_type_qualifier::validate_in_qualifier(YYLTYPE*, _mesa_glsl_parse_state*)
00000000004048b0 0000000000000358 t ast_type_qualifier::merge_into_in_qualifier(YYLTYPE*, _mesa_glsl_parse_state*, ast_node*&)
0000000000404c10 0000000000000668 t ast_type_qualifier::validate_flags(YYLTYPE*, _mesa_glsl_parse_state*, ast_type_qualifier const&, char const*, char const*)
0000000000405280 00000000000001b4 t ast_layout_expression::process_qualifier_constant(_mesa_glsl_parse_state*, char const*, unsigned int*, bool)
0000000000405440 0000000000000114 t process_qualifier_constant(_mesa_glsl_parse_state*, YYLTYPE*, char const*, ast_expression*, unsigned int*)
0000000000405560 0000000000000194 t ast_type_qualifier::push_to_global(YYLTYPE*, _mesa_glsl_parse_state*)
0000000000405700 0000000000000c44 t _mesa_glsl_initialize_types
0000000000406350 0000000000000100 t (anonymous namespace)::builtin_variable_generator::add_variable(char const*, glsl_type const*, int, ir_variable_mode, int)
0000000000406450 00000000000000e0 t (anonymous namespace)::builtin_variable_generator::add_index_variable(char const*, glsl_type const*, int, ir_variable_mode, int, int) [clone .constprop.0] [clone .isra.0]
0000000000406530 00000000000000c8 t (anonymous namespace)::builtin_variable_generator::add_const_ivec3(char const*, int, int, int) [clone .isra.0]
0000000000406600 000000000000008c t (anonymous namespace)::builtin_variable_generator::add_const(char const*, int, int) [clone .isra.0]
0000000000406690 0000000000000204 t (anonymous namespace)::builtin_variable_generator::add_uniform(glsl_type const*, int, char const*) [clone .isra.0]
00000000004068a0 0000000000000114 t (anonymous namespace)::builtin_variable_generator::add_varying(int, glsl_type const*, int, char const*)
00000000004069c0 0000000000000e60 t (anonymous namespace)::builtin_variable_generator::generate_constants()
0000000000407820 00000000000020c0 t _mesa_glsl_initialize_variables(exec_list*, _mesa_glsl_parse_state*)
00000000004098e0 0000000000000170 t _mesa_ast_field_selection_to_hir(ast_expression const*, exec_list*, _mesa_glsl_parse_state*)
0000000000409a50 0000000000000040 t free_entry(hash_entry*)
0000000000409a90 0000000000000020 T ir_array_refcount_visitor::visit_enter(ir_function_signature*)
0000000000409ab0 0000000000000050 t ir_array_refcount_visitor::ir_array_refcount_visitor()
0000000000409ab0 0000000000000050 T ir_array_refcount_visitor::ir_array_refcount_visitor()
0000000000409b00 000000000000003c t ir_array_refcount_visitor::~ir_array_refcount_visitor()
0000000000409b00 000000000000003c T ir_array_refcount_visitor::~ir_array_refcount_visitor()
0000000000409b40 00000000000000d8 t ir_array_refcount_entry::ir_array_refcount_entry(ir_variable*)
0000000000409b40 00000000000000d8 T ir_array_refcount_entry::ir_array_refcount_entry(ir_variable*)
0000000000409c20 00000000000000b0 T ir_array_refcount_visitor::visit(ir_dereference_variable*)
0000000000409cd0 00000000000001b8 T ir_array_refcount_visitor::visit_enter(ir_dereference_array*)
0000000000409e90 0000000000000074 t ir_array_refcount_visitor::get_variable_entry(ir_variable*)
0000000000409f10 000000000000017c t call_for_basic_blocks(exec_list*, void (*)(ir_instruction*, ir_instruction*, void*), void*)
000000000040a090 0000000000000018 T ir_function_can_inline_visitor::visit_enter(ir_return*)
000000000040a0b0 00000000000000a8 t can_inline(ir_call*)
000000000040a160 0000000000000010 t (anonymous namespace)::has_recursion_visitor::visit_leave(ir_function_signature*)
000000000040a170 0000000000000100 t (anonymous namespace)::has_recursion_visitor::visit_enter(ir_call*)
000000000040a270 000000000000005c t destroy_links(exec_list*, (anonymous namespace)::function*) [clone .isra.0]
000000000040a2d0 00000000000000dc t remove_unlinked_functions(void const*, void*, void*)
000000000040a3b0 00000000000000a4 t (anonymous namespace)::has_recursion_visitor::visit_enter(ir_function_signature*)
000000000040a460 0000000000000170 t detect_recursion_unlinked(_mesa_glsl_parse_state*, exec_list*)
000000000040a5d0 0000000000000158 t detect_recursion_linked(gl_shader_program*, exec_list*)
000000000040a730 0000000000000064 t ir_rvalue_visitor::visit_leave(ir_expression*)
000000000040a7a0 0000000000000024 T ir_rvalue_visitor::visit_leave(ir_swizzle*)
000000000040a7a0 0000000000000024 T ir_rvalue_visitor::visit_leave(ir_dereference_record*)
000000000040a7d0 0000000000000024 T ir_rvalue_visitor::visit_leave(ir_discard*)
000000000040a7d0 0000000000000024 T ir_rvalue_visitor::visit_leave(ir_emit_vertex*)
000000000040a7d0 0000000000000024 T ir_rvalue_visitor::visit_leave(ir_end_primitive*)
000000000040a7d0 0000000000000024 T ir_rvalue_visitor::visit_leave(ir_if*)
000000000040a7d0 0000000000000024 T ir_rvalue_visitor::visit_leave(ir_return*)
000000000040a800 0000000000000064 T ir_rvalue_enter_visitor::visit_enter(ir_expression*)
000000000040a870 0000000000000024 T ir_rvalue_enter_visitor::visit_enter(ir_swizzle*)
000000000040a870 0000000000000024 T ir_rvalue_enter_visitor::visit_enter(ir_dereference_record*)
000000000040a8a0 0000000000000024 T ir_rvalue_enter_visitor::visit_enter(ir_discard*)
000000000040a8a0 0000000000000024 T ir_rvalue_enter_visitor::visit_enter(ir_emit_vertex*)
000000000040a8a0 0000000000000024 T ir_rvalue_enter_visitor::visit_enter(ir_end_primitive*)
000000000040a8a0 0000000000000024 T ir_rvalue_enter_visitor::visit_enter(ir_if*)
000000000040a8a0 0000000000000024 T ir_rvalue_enter_visitor::visit_enter(ir_return*)
000000000040a8d0 0000000000000048 t ir_rvalue_visitor::visit_leave(ir_assignment*)
000000000040a920 0000000000000048 t ir_rvalue_enter_visitor::visit_enter(ir_assignment*)
000000000040a970 000000000000005c T ir_rvalue_visitor::visit_leave(ir_dereference_array*)
000000000040a9d0 000000000000005c T ir_rvalue_enter_visitor::visit_enter(ir_dereference_array*)
000000000040aa30 0000000000000064 t ir_rvalue_base_visitor::rvalue_visit(ir_expression*)
000000000040aaa0 000000000000010c t ir_rvalue_base_visitor::rvalue_visit(ir_texture*)
000000000040abb0 0000000000000004 T ir_rvalue_visitor::visit_leave(ir_texture*)
000000000040abc0 0000000000000004 T ir_rvalue_enter_visitor::visit_enter(ir_texture*)
000000000040abd0 0000000000000048 t ir_rvalue_base_visitor::rvalue_visit(ir_assignment*)
000000000040ac20 00000000000000b4 t ir_rvalue_base_visitor::rvalue_visit(ir_call*)
000000000040ace0 0000000000000004 T ir_rvalue_visitor::visit_leave(ir_call*)
000000000040acf0 0000000000000004 t ir_rvalue_enter_visitor::visit_enter(ir_call*)
000000000040ad00 0000000000000180 t mark(gl_program*, ir_variable*, int, int, gl_shader_stage)
000000000040ae80 000000000000001c t (anonymous namespace)::ir_set_program_inouts_visitor::visit_enter(ir_discard*)
000000000040aea0 0000000000000024 t (anonymous namespace)::ir_set_program_inouts_visitor::visit_enter(ir_texture*)
000000000040aed0 0000000000000020 t (anonymous namespace)::ir_set_program_inouts_visitor::visit_enter(ir_function_signature*)
000000000040aef0 00000000000000f4 t (anonymous namespace)::ir_set_program_inouts_visitor::mark_whole_variable(ir_variable*)
000000000040aff0 0000000000000040 t (anonymous namespace)::ir_set_program_inouts_visitor::visit(ir_dereference_variable*)
000000000040b030 0000000000000058 t is_multiple_vertices(gl_shader_stage, ir_variable*)
000000000040b090 00000000000001b0 t (anonymous namespace)::ir_set_program_inouts_visitor::try_mark_partial_variable(ir_variable*, ir_rvalue*)
000000000040b240 00000000000000f4 t (anonymous namespace)::ir_set_program_inouts_visitor::visit_enter(ir_dereference_array*)
000000000040b340 0000000000000088 t do_set_program_inouts(exec_list*, gl_program*, gl_shader_stage)
000000000040b3d0 0000000000000068 t free_entry(hash_entry*)
000000000040b440 0000000000000020 T ir_variable_refcount_visitor::visit_enter(ir_function_signature*)
000000000040b460 0000000000000088 T ir_variable_refcount_visitor::visit(ir_variable*)
000000000040b4f0 0000000000000048 t ir_variable_refcount_visitor::ir_variable_refcount_visitor()
000000000040b4f0 0000000000000048 T ir_variable_refcount_visitor::ir_variable_refcount_visitor()
000000000040b540 000000000000003c t ir_variable_refcount_visitor::~ir_variable_refcount_visitor()
000000000040b540 000000000000003c T ir_variable_refcount_visitor::~ir_variable_refcount_visitor()
000000000040b580 000000000000008c t ir_variable_refcount_visitor::get_variable_entry(ir_variable*)
000000000040b610 0000000000000064 T ir_variable_refcount_visitor::visit(ir_dereference_variable*)
000000000040b680 0000000000000090 T ir_variable_refcount_visitor::visit_leave(ir_assignment*)
000000000040b710 0000000000000158 t process_block(void*, hash_table*, ir_variable*)
000000000040b870 0000000000000074 T link_uniform_block_active_visitor::visit(ir_dereference_variable*)
000000000040b8f0 00000000000001ac t process_arrays(void*, ir_dereference_array*, link_uniform_block_active*)
000000000040baa0 0000000000000120 T link_uniform_block_active_visitor::visit_enter(ir_dereference_array*)
000000000040bbc0 0000000000000180 T link_uniform_block_active_visitor::visit(ir_variable*)
000000000040bd40 00000000000000a0 t deref_output(ir_variable*)
000000000040bde0 0000000000000068 t is_mode(ir_variable*, gl_advanced_blend_mode)
000000000040be50 0000000000000090 t lumv3(ir_variable*)
000000000040bee0 00000000000000a8 t maxv3(ir_variable*)
000000000040bf90 00000000000000a8 t minv3(ir_variable*)
000000000040c040 00000000000004f0 t set_lum(ir_builder::ir_factory*, ir_variable*, ir_variable*, ir_variable*)
000000000040c530 0000000000000234 t set_lum_sat(ir_builder::ir_factory*, ir_variable*, ir_variable*, ir_variable*, ir_variable*)
000000000040c770 0000000000001a38 t calc_blend_result(ir_builder::ir_factory, ir_variable*, ir_variable*, ir_rvalue*, unsigned int)
000000000040e1b0 000000000000048c t lower_blend_equation_advanced(gl_linked_shader*, bool)
000000000040e640 0000000000000594 t lower_buffer_access::lower_buffer_access::emit_access(void*, bool, ir_dereference*, ir_variable*, unsigned int, bool, glsl_type const*, glsl_interface_packing, unsigned int)
000000000040ebe0 0000000000000154 t lower_buffer_access::lower_buffer_access::is_dereferenced_thing_row_major(ir_rvalue const*)
000000000040ed40 0000000000000438 t lower_buffer_access::lower_buffer_access::setup_buffer_access(void*, ir_rvalue*, ir_rvalue**, unsigned int*, bool*, glsl_type const**, glsl_struct_field const**, glsl_interface_packing)
000000000040f180 00000000000000b0 t replace_discard(void*, ir_variable*, ir_discard*)
000000000040f230 0000000000000208 t (anonymous namespace)::lower_discard_visitor::visit_leave(ir_if*)
000000000040f440 0000000000000050 t lower_discard(exec_list*)
000000000040f490 0000000000000018 t (anonymous namespace)::ir_if_to_cond_assign_visitor::visit_enter(ir_if*)
000000000040f4b0 00000000000001c0 t move_block_to_cond_assign(void*, ir_if*, ir_rvalue*, exec_list*, set*)
000000000040f670 000000000000031c t (anonymous namespace)::ir_if_to_cond_assign_visitor::visit_leave(ir_if*)
000000000040f990 0000000000000134 t check_ir_node(ir_instruction*, void*)
000000000040fad0 00000000000000a8 t lower_if_to_cond_assign(gl_shader_stage, exec_list*, unsigned int, unsigned int)
000000000040fb80 000000000000017c t lower_64bit_integer_instructions(exec_list*, unsigned int)
000000000040fd00 0000000000000190 t lower_64bit::expand_source(ir_builder::ir_factory&, ir_rvalue*, ir_variable**)
000000000040fe90 0000000000000108 t lower_64bit::compact_destination(ir_builder::ir_factory&, glsl_type const*, ir_variable**)
000000000040ffa0 00000000000002d8 t lower_64bit::lower_op_to_function_call(ir_instruction*, ir_expression*, ir_function_signature*)
0000000000410280 0000000000000120 t (anonymous namespace)::lower_64bit_visitor::handle_op(ir_expression*, char const*, ir_function_signature* (*)(void*, bool (*)(_mesa_glsl_parse_state const*)))
00000000004103a0 0000000000000140 t (anonymous namespace)::lower_64bit_visitor::handle_rvalue(ir_rvalue**)
00000000004104e0 0000000000000064 t mat_op_to_vec_predicate(ir_instruction*)
0000000000410550 00000000000000a4 t (anonymous namespace)::ir_mat_op_to_vec_visitor::get_column(ir_dereference*, int)
0000000000410600 0000000000000114 t (anonymous namespace)::ir_mat_op_to_vec_visitor::do_mul_mat_scalar(ir_dereference*, ir_dereference*, ir_dereference*)
0000000000410720 0000000000000b38 t (anonymous namespace)::ir_mat_op_to_vec_visitor::visit_leave(ir_assignment*)
0000000000411260 0000000000000064 t do_mat_op_to_vec(exec_list*)
00000000004112d0 00000000000001c8 T lower_offset_array_visitor::handle_rvalue(ir_rvalue**)
00000000004114a0 000000000000004c t lower_offset_arrays(exec_list*)
00000000004114f0 0000000000000004 t (anonymous namespace)::lower_packing_builtins_visitor::~lower_packing_builtins_visitor()
00000000004114f0 0000000000000004 t (anonymous namespace)::lower_packing_builtins_visitor::~lower_packing_builtins_visitor()
0000000000411500 0000000000000008 t (anonymous namespace)::lower_packing_builtins_visitor::~lower_packing_builtins_visitor()
0000000000411510 00000000000001c0 t (anonymous namespace)::lower_packing_builtins_visitor::unpack_uint_to_uvec2(ir_rvalue*)
00000000004116d0 0000000000000210 t (anonymous namespace)::lower_packing_builtins_visitor::pack_uvec2_to_uint(ir_rvalue*)
00000000004118e0 0000000000000410 t (anonymous namespace)::lower_packing_builtins_visitor::unpack_half_1x16_nosign(ir_rvalue*, ir_rvalue*)
0000000000411cf0 0000000000000510 t (anonymous namespace)::lower_packing_builtins_visitor::pack_half_1x16_nosign(ir_rvalue*, ir_rvalue*, ir_rvalue*)
0000000000412200 00000000000003f0 t (anonymous namespace)::lower_packing_builtins_visitor::pack_uvec4_to_uint(ir_rvalue*)
00000000004125f0 0000000000000438 t (anonymous namespace)::lower_packing_builtins_visitor::unpack_uint_to_uvec4(ir_rvalue*)
0000000000412a30 000000000000143c t (anonymous namespace)::lower_packing_builtins_visitor::handle_rvalue(ir_rvalue**)
0000000000413e70 0000000000000078 t lower_packing_builtins(exec_list*, int)
0000000000413ef0 0000000000000078 t (anonymous namespace)::deref_replacer::handle_rvalue(ir_rvalue**)
0000000000413f70 000000000000005c t (anonymous namespace)::find_variable_index::visit_enter(ir_dereference_array*)
0000000000413fd0 0000000000000150 t (anonymous namespace)::assignment_generator::generate(unsigned int, ir_rvalue*, ir_builder::ir_factory&) const
0000000000414120 0000000000000130 t compare_index_block(ir_builder::ir_factory&, ir_variable*, unsigned int, unsigned int)
0000000000414250 0000000000000284 t (anonymous namespace)::switch_generator::generate(unsigned int, unsigned int, ir_builder::ir_factory&)
00000000004144e0 00000000000002ac t (anonymous namespace)::variable_index_to_cond_assign_visitor::convert_dereference_array(ir_dereference_array*, ir_assignment*, ir_dereference*)
0000000000414790 00000000000001a8 t (anonymous namespace)::variable_index_to_cond_assign_visitor::handle_rvalue(ir_rvalue**)
0000000000414940 00000000000001a0 t (anonymous namespace)::variable_index_to_cond_assign_visitor::visit_leave(ir_assignment*)
0000000000414ae0 00000000000000a0 t lower_variable_index_to_cond_assign(gl_shader_stage, exec_list*, bool, bool, bool, bool)
0000000000414b80 0000000000000254 t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::convert_vec_index_to_cond_assign(void*, ir_rvalue*, ir_rvalue*, glsl_type const*) [clone .constprop.0]
0000000000414de0 00000000000000e8 t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::convert_vector_extract_to_cond_assign(ir_rvalue*)
0000000000414ed0 0000000000000030 t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::visit_enter(ir_if*)
0000000000414f00 0000000000000030 t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::visit_enter(ir_return*)
0000000000414f30 000000000000009c t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::visit_enter(ir_call*)
0000000000414fd0 0000000000000044 t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::visit_leave(ir_assignment*)
0000000000415020 0000000000000030 t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::visit_enter(ir_swizzle*)
0000000000415050 000000000000005c t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::visit_enter(ir_expression*)
00000000004150b0 0000000000000050 t do_vec_index_to_cond_assign(exec_list*)
0000000000415100 00000000000003bc t (anonymous namespace)::lower_vector_visitor::handle_rvalue(ir_rvalue**)
00000000004154c0 0000000000000060 t lower_quadop_vector(exec_list*, bool)
0000000000415520 0000000000000008 t hash_table_var_hash(void const*)
0000000000415530 000000000000007c t copy(void*, ir_variable*, ir_variable*)
00000000004155b0 0000000000000104 t (anonymous namespace)::output_read_remover::visit(ir_dereference_variable*)
00000000004156c0 000000000000008c t (anonymous namespace)::output_read_remover::visit_leave(ir_emit_vertex*)
00000000004156c0 000000000000008c t (anonymous namespace)::output_read_remover::visit_leave(ir_return*)
0000000000415750 00000000000000b8 t (anonymous namespace)::output_read_remover::visit_leave(ir_function_signature*)
0000000000415810 0000000000000094 t lower_output_reads(unsigned int, exec_list*)
00000000004158b0 0000000000000170 t write_uniform_remap_table(blob*, unsigned int, gl_uniform_storage*, gl_uniform_storage**)
0000000000415a20 0000000000000044 t write_hash_table_entry(char const*, unsigned int, void*)
0000000000415a70 00000000000000d0 t write_buffer_block(blob*, gl_uniform_block*)
0000000000415b40 0000000000000104 t read_uniform_remap_table(blob_reader*, gl_shader_program*, unsigned int*, gl_uniform_storage*)
0000000000415c50 000000000000015c t read_buffer_block(blob_reader*, gl_uniform_block*, gl_shader_program*)
0000000000415db0 00000000000000c8 t write_hash_table(blob*, string_to_uint_map*)
0000000000415e80 00000000000000b4 t read_hash_table(blob_reader*, string_to_uint_map*)
0000000000415f40 0000000000000f40 t serialize_glsl_program
0000000000416e80 0000000000001218 t deserialize_glsl_program
00000000004180a0 0000000000000100 t sanitize_cb
00000000004181a0 0000000000000038 t cso_construct_key
00000000004181e0 0000000000000060 t cso_insert_state
0000000000418240 00000000000000cc t cso_hash_find_data_from_template
0000000000418310 0000000000000100 t cso_find_state_template
0000000000418410 0000000000000064 t cso_cache_create
0000000000418480 00000000000001f4 t cso_cache_delete
0000000000418680 0000000000000008 t cso_cache_set_sanitize_callback
0000000000418690 0000000000000040 t eat_opt_white
00000000004186d0 0000000000000088 t str_match_nocase_whole
0000000000418760 00000000000000b4 t parse_int
0000000000418820 00000000000000cc t parse_register_file_bracket
00000000004188f0 000000000000012c t parse_optional_swizzle
0000000000418a20 0000000000000170 t parse_opt_writemask
0000000000418b90 00000000000004a8 t parse_register_bracket
0000000000419040 0000000000000214 t parse_register_dcl_bracket
0000000000419260 0000000000000f28 t parse_instruction
000000000041a190 0000000000001c48 t tgsi_text_translate
000000000041bde0 0000000000000004 t translate_create
000000000041bdf0 0000000000000030 t translate_cache_create
000000000041be20 0000000000000074 t translate_cache_destroy
000000000041bea0 0000000000000094 t translate_cache_find
000000000041bf40 0000000000000024 t emit_R64G64B64A64_FLOAT
000000000041bf70 0000000000000020 t emit_R64G64B64_FLOAT
000000000041bf90 0000000000000014 t emit_R64G64_FLOAT
000000000041bfb0 0000000000000010 t emit_R64_FLOAT
000000000041bfc0 000000000000001c t emit_R32G32B32A32_FLOAT
000000000041bfe0 000000000000001c t emit_R32G32B32_FLOAT
000000000041c000 0000000000000014 t emit_R32G32_FLOAT
000000000041c020 000000000000000c t emit_R32_FLOAT
000000000041c030 0000000000000020 t emit_R32G32B32A32_USCALED
000000000041c050 0000000000000020 t emit_R32G32B32_USCALED
000000000041c070 0000000000000014 t emit_R32G32_USCALED
000000000041c090 0000000000000010 t emit_R32_USCALED
000000000041c0a0 0000000000000020 t emit_R32G32B32A32_SSCALED
000000000041c0c0 0000000000000020 t emit_R32G32B32_SSCALED
000000000041c0e0 0000000000000014 t emit_R32G32_SSCALED
000000000041c100 0000000000000010 t emit_R32_SSCALED
000000000041c110 0000000000000020 t emit_R32G32B32A32_UNORM
000000000041c130 0000000000000020 t emit_R32G32B32_UNORM
000000000041c150 0000000000000014 t emit_R32G32_UNORM
000000000041c170 0000000000000010 t emit_R32_UNORM
000000000041c180 0000000000000020 t emit_R32G32B32A32_SNORM
000000000041c1a0 0000000000000020 t emit_R32G32B32_SNORM
000000000041c1c0 0000000000000014 t emit_R32G32_SNORM
000000000041c1e0 0000000000000010 t emit_R32_SNORM
000000000041c1f0 0000000000000020 t emit_R16G16B16A16_USCALED
000000000041c210 0000000000000024 t emit_R16G16B16_USCALED
000000000041c240 0000000000000018 t emit_R16G16_USCALED
000000000041c260 0000000000000010 t emit_R16_USCALED
000000000041c270 0000000000000020 t emit_R16G16B16A16_SSCALED
000000000041c290 0000000000000024 t emit_R16G16B16_SSCALED
000000000041c2c0 0000000000000018 t emit_R16G16_SSCALED
000000000041c2e0 0000000000000010 t emit_R16_SSCALED
000000000041c2f0 0000000000000030 t emit_R16G16B16A16_UNORM
000000000041c320 000000000000003c t emit_R16G16B16_UNORM
000000000041c360 000000000000002c t emit_R16G16_UNORM
000000000041c390 0000000000000020 t emit_R16_UNORM
000000000041c3b0 0000000000000030 t emit_R16G16B16A16_SNORM
000000000041c3e0 000000000000003c t emit_R16G16B16_SNORM
000000000041c420 000000000000002c t emit_R16G16_SNORM
000000000041c450 0000000000000020 t emit_R16_SNORM
000000000041c470 0000000000000020 t emit_R8G8B8A8_USCALED
000000000041c490 0000000000000028 t emit_R8G8B8_USCALED
000000000041c4c0 000000000000001c t emit_R8G8_USCALED
000000000041c4e0 0000000000000010 t emit_R8_USCALED
000000000041c4f0 000000000000002c t emit_R8G8B8A8_UNORM
000000000041c520 000000000000002c t emit_R8G8B8_UNORM
000000000041c550 000000000000002c t emit_R8G8_UNORM
000000000041c580 000000000000001c t emit_R8_UNORM
000000000041c5a0 000000000000002c t emit_R8G8B8A8_SNORM
000000000041c5d0 000000000000002c t emit_R8G8B8_SNORM
000000000041c600 000000000000002c t emit_R8G8_SNORM
000000000041c630 000000000000001c t emit_R8_SNORM
000000000041c650 000000000000001c t emit_R32G32B32A32_UINT
000000000041c670 000000000000001c t emit_R32G32B32_UINT
000000000041c690 0000000000000014 t emit_R32G32_UINT
000000000041c6b0 000000000000000c t emit_R32_UINT
000000000041c6c0 000000000000001c t emit_R16G16B16A16_UINT
000000000041c6e0 0000000000000018 t emit_R16G16B16_UINT
000000000041c700 0000000000000010 t emit_R16G16_UINT
000000000041c710 000000000000000c t emit_R16_UINT
000000000041c720 000000000000001c t emit_R8G8B8A8_UINT
000000000041c740 000000000000001c t emit_R8G8B8_UINT
000000000041c760 0000000000000014 t emit_R8G8_UINT
000000000041c780 000000000000000c t emit_R8_UINT
000000000041c790 000000000000001c t emit_R32G32B32A32_SINT
000000000041c7b0 000000000000001c t emit_R32G32B32_SINT
000000000041c7d0 0000000000000014 t emit_R32G32_SINT
000000000041c7f0 000000000000000c t emit_R32_SINT
000000000041c800 000000000000001c t emit_R16G16B16A16_SINT
000000000041c820 0000000000000018 t emit_R16G16B16_SINT
000000000041c840 0000000000000010 t emit_R16G16_SINT
000000000041c850 000000000000000c t emit_R16_SINT
000000000041c860 000000000000001c t emit_R8G8B8A8_SINT
000000000041c880 000000000000001c t emit_R8G8B8_SINT
000000000041c8a0 0000000000000014 t emit_R8G8_SINT
000000000041c8c0 000000000000000c t emit_R8_SINT
000000000041c8d0 000000000000004c t emit_A8R8G8B8_UNORM
000000000041c920 000000000000004c t emit_B8G8R8A8_UNORM
000000000041c970 0000000000000104 t emit_B10G10R10A2_UNORM
000000000041ca80 00000000000000d0 t emit_B10G10R10A2_USCALED
000000000041cb50 0000000000000104 t emit_B10G10R10A2_SNORM
000000000041cc60 00000000000000e0 t emit_B10G10R10A2_SSCALED
000000000041cd40 0000000000000104 t emit_R10G10B10A2_UNORM
000000000041ce50 00000000000000d0 t emit_R10G10B10A2_USCALED
000000000041cf20 0000000000000104 t emit_R10G10B10A2_SNORM
000000000041d030 00000000000000e0 t emit_R10G10B10A2_SSCALED
000000000041d110 0000000000000004 t emit_NULL
000000000041d120 000000000000004c t generic_set_buffer
000000000041d170 0000000000000004 t generic_release
000000000041d180 0000000000000168 t generic_run_elts
000000000041d2f0 0000000000000168 t generic_run_elts16
000000000041d460 0000000000000168 t generic_run_elts8
000000000041d5d0 0000000000000160 t generic_run
000000000041d730 0000000000000044 t emit_R16G16B16A16_FLOAT
000000000041d780 0000000000000044 t emit_R16G16B16_FLOAT
000000000041d7d0 0000000000000038 t emit_R16G16_FLOAT
000000000041d810 0000000000000028 t emit_R16_FLOAT
000000000041d840 0000000000000010 t emit_R8_SSCALED
000000000041d850 0000000000000020 t emit_R8G8B8A8_SSCALED
000000000041d870 0000000000000028 t emit_R8G8B8_SSCALED
000000000041d8a0 000000000000001c t emit_R8G8_SSCALED
000000000041d8c0 0000000000000700 t translate_generic_create
000000000041dfc0 00000000000000c0 t util_draw_vertex_buffer
000000000041e080 00000000000000a4 T u_default_buffer_subdata
000000000041e130 00000000000000bc T u_default_texture_subdata
000000000041e1f0 0000000000000008 T u_default_resource_get_handle
000000000041e200 0000000000000004 T u_default_transfer_flush_region
000000000041e210 0000000000000018 T u_resource_get_handle_vtbl
000000000041e230 0000000000000010 T u_resource_destroy_vtbl
000000000041e240 0000000000000010 T u_transfer_map_vtbl
000000000041e250 0000000000000014 T u_transfer_flush_region_vtbl
000000000041e270 0000000000000014 T u_transfer_unmap_vtbl
000000000041e290 0000000000000008 t vl_create_decoder
000000000041e2a0 0000000000000008 t vl_video_buffer_is_format_supported
000000000041e2b0 0000000000000008 t vl_video_buffer_create
000000000041e2c0 0000000000000024 t nv50_miptree_get_handle
000000000041e2f0 00000000000000a4 T nv50_miptree_destroy
000000000041e3a0 00000000000000a0 t nv50_tex_choose_tile_dims_helper
000000000041e440 0000000000000100 t nv50_miptree_init_layout_linear
000000000041e540 000000000000010c t nv50_miptree_from_handle
000000000041e650 000000000000014c t nv50_surface_from_miptree
000000000041e7a0 0000000000000010 T nv50_invalidate_resource
000000000041e7b0 0000000000000068 T nv50_surface_destroy
000000000041e820 0000000000000158 t nv50_surface_from_buffer
000000000041e980 0000000000000384 T nv50_sampler_state_create
000000000041ed10 0000000000000004 W nv50_ir::Iterator::reset()
000000000041ed20 0000000000000008 W nv50_ir::Value::isUniform() const
000000000041ed30 0000000000000050 W nv50_ir::Target::parseDriverInfo(nv50_ir_prog_info const*)
000000000041ed80 0000000000000018 T nv50_ir::Symbol::isUniform() const
000000000041eda0 0000000000000028 T nv50_ir::ImmediateValue::equals(nv50_ir::Value const*, bool) const
000000000041edd0 0000000000000070 t _debug_printf
000000000041ee40 0000000000000058 T nv50_ir::Value::equals(nv50_ir::Value const*, bool) const
000000000041eea0 0000000000000080 T nv50_ir::Symbol::equals(nv50_ir::Value const*, bool) const
000000000041ef20 0000000000000094 t nv50_ir::Value::interfers(nv50_ir::Value const*) const [clone .part.0]
000000000041efc0 00000000000000a8 T nv50_ir::Value::interfers(nv50_ir::Value const*) const
000000000041f070 00000000000000c4 W nv50_ir::LValue::~LValue()
000000000041f070 00000000000000c4 W nv50_ir::LValue::~LValue()
000000000041f140 00000000000000c4 W nv50_ir::Symbol::~Symbol()
000000000041f140 00000000000000c4 W nv50_ir::Symbol::~Symbol()
000000000041f210 00000000000000c4 W nv50_ir::ImmediateValue::~ImmediateValue()
000000000041f210 00000000000000c4 W nv50_ir::ImmediateValue::~ImmediateValue()
000000000041f2e0 00000000000000c0 W nv50_ir::LValue::~LValue()
000000000041f3a0 00000000000000c0 W nv50_ir::ImmediateValue::~ImmediateValue()
000000000041f460 00000000000000c0 W nv50_ir::Symbol::~Symbol()
000000000041f520 0000000000000198 T nv50_ir::LValue::isUniform() const
000000000041f6c0 0000000000000048 t nv50_ir::Modifier::Modifier(nv50_ir::operation)
000000000041f6c0 0000000000000048 T nv50_ir::Modifier::Modifier(nv50_ir::operation)
000000000041f710 0000000000000034 t nv50_ir::Modifier::operator*(nv50_ir::Modifier) const
000000000041f750 00000000000001e8 t nv50_ir::ValueRef::getImmediate(nv50_ir::ImmediateValue&) const
000000000041f940 0000000000000060 t nv50_ir::ValueDef::ValueDef(nv50_ir::Value*)
000000000041f940 0000000000000060 T nv50_ir::ValueDef::ValueDef(nv50_ir::Value*)
000000000041f9a0 000000000000005c t nv50_ir::ValueDef::ValueDef(nv50_ir::ValueDef const&)
000000000041f9a0 000000000000005c T nv50_ir::ValueDef::ValueDef(nv50_ir::ValueDef const&)
000000000041fa00 00000000000000fc t nv50_ir::ValueDef::set(nv50_ir::Value*)
000000000041fb00 0000000000000008 t nv50_ir::ValueDef::~ValueDef()
000000000041fb00 0000000000000008 T nv50_ir::ValueDef::~ValueDef()
000000000041fb10 000000000000010c t std::deque<nv50_ir::ValueDef, std::allocator<nv50_ir::ValueDef> >::_M_destroy_data_aux(std::_Deque_iterator<nv50_ir::ValueDef, nv50_ir::ValueDef&, nv50_ir::ValueDef*>, std::_Deque_iterator<nv50_ir::ValueDef, nv50_ir::ValueDef&, nv50_ir::ValueDef*>) [clone .isra.0]
000000000041fc20 0000000000000214 t nv50_ir::ValueDef::mayReplace(nv50_ir::ValueRef const&)
000000000041fe40 000000000000005c T nv50_ir::Value::Value()
000000000041fe40 000000000000005c t nv50_ir::Value::Value()
000000000041fea0 0000000000000144 t nv50_ir::LValue::LValue(nv50_ir::Function*, nv50_ir::DataFile)
000000000041fea0 0000000000000144 T nv50_ir::LValue::LValue(nv50_ir::Function*, nv50_ir::DataFile)
000000000041fff0 000000000000014c t nv50_ir::LValue::LValue(nv50_ir::Function*, nv50_ir::LValue*)
000000000041fff0 000000000000014c T nv50_ir::LValue::LValue(nv50_ir::Function*, nv50_ir::LValue*)
0000000000420140 000000000000012c t nv50_ir::Symbol::Symbol(nv50_ir::Program*, nv50_ir::DataFile, unsigned char)
0000000000420140 000000000000012c T nv50_ir::Symbol::Symbol(nv50_ir::Program*, nv50_ir::DataFile, unsigned char)
0000000000420270 000000000000013c t nv50_ir::ImmediateValue::ImmediateValue(nv50_ir::Program*, unsigned int)
0000000000420270 000000000000013c T nv50_ir::ImmediateValue::ImmediateValue(nv50_ir::Program*, unsigned int)
00000000004203b0 000000000000013c t nv50_ir::ImmediateValue::ImmediateValue(nv50_ir::Program*, float)
00000000004203b0 000000000000013c T nv50_ir::ImmediateValue::ImmediateValue(nv50_ir::Program*, float)
00000000004204f0 0000000000000134 t nv50_ir::ImmediateValue::ImmediateValue(nv50_ir::Program*, double)
00000000004204f0 0000000000000134 T nv50_ir::ImmediateValue::ImmediateValue(nv50_ir::Program*, double)
0000000000420630 00000000000000e4 t nv50_ir::ImmediateValue::isInteger(int) const
0000000000420720 0000000000000070 t nv50_ir::ImmediateValue::isNegative() const
0000000000420790 0000000000000038 t nv50_ir::ImmediateValue::isPow2() const
00000000004207d0 00000000000000b4 t nv50_ir::ImmediateValue::applyLog2()
0000000000420890 0000000000000134 t nv50_ir::ImmediateValue::compare(nv50_ir::CondCode, float) const
00000000004209d0 0000000000000340 t nv50_ir::Instruction::defCount(unsigned int, bool) const
0000000000420d10 0000000000000340 t nv50_ir::Instruction::srcCount(unsigned int, bool) const
0000000000421050 0000000000000408 t nv50_ir::Instruction::canCommuteDefSrc(nv50_ir::Instruction const*) const
0000000000421460 0000000000000408 t nv50_ir::Instruction::canCommuteDefDef(nv50_ir::Instruction const*) const
0000000000421870 0000000000000058 t nv50_ir::Instruction::isCommutationLegal(nv50_ir::Instruction const*) const
00000000004218d0 00000000000002b0 t nv50_ir::TexInstruction::translateImgFormat(pipe_format)
0000000000421b80 0000000000000134 t nv50_ir::Program::Program(nv50_ir::Program::Type, nv50_ir::Target*)
0000000000421b80 0000000000000134 T nv50_ir::Program::Program(nv50_ir::Program::Type, nv50_ir::Target*)
0000000000421cc0 00000000000000ac t nv50_ir::Program::releaseInstruction(nv50_ir::Instruction*)
0000000000421d70 0000000000000088 t nv50_ir::Program::releaseValue(nv50_ir::Value*)
0000000000421e00 0000000000000114 t std::_Deque_base<nv50_ir::ValueDef, std::allocator<nv50_ir::ValueDef> >::_M_initialize_map(unsigned long)
0000000000421f20 0000000000000114 t std::_Deque_base<nv50_ir::ValueRef, std::allocator<nv50_ir::ValueRef> >::_M_initialize_map(unsigned long)
0000000000422040 0000000000000164 t nv50_ir::Instruction::Instruction(nv50_ir::Function*, nv50_ir::operation, nv50_ir::DataType)
0000000000422040 0000000000000164 t nv50_ir::Instruction::Instruction(nv50_ir::Function*, nv50_ir::operation, nv50_ir::DataType)
00000000004221b0 0000000000000038 t nv50_ir::CmpInstruction::CmpInstruction(nv50_ir::Function*, nv50_ir::operation)
00000000004221b0 0000000000000038 T nv50_ir::CmpInstruction::CmpInstruction(nv50_ir::Function*, nv50_ir::operation)
00000000004221f0 00000000000000c8 t nv50_ir::FlowInstruction::FlowInstruction(nv50_ir::Function*, nv50_ir::operation, void*)
00000000004221f0 00000000000000c8 T nv50_ir::FlowInstruction::FlowInstruction(nv50_ir::Function*, nv50_ir::operation, void*)
00000000004222c0 00000000000000ec t nv50_ir::TexInstruction::TexInstruction(nv50_ir::Function*, nv50_ir::operation)
00000000004222c0 00000000000000ec T nv50_ir::TexInstruction::TexInstruction(nv50_ir::Function*, nv50_ir::operation)
00000000004223b0 0000000000000340 t std::deque<nv50_ir::ValueDef, std::allocator<nv50_ir::ValueDef> >::_M_default_append(unsigned long)
00000000004226f0 0000000000000350 t nv50_ir::Instruction::setDef(int, nv50_ir::Value*)
0000000000422a40 0000000000000348 t std::deque<nv50_ir::ValueRef, std::allocator<nv50_ir::ValueRef> >::_M_default_append(unsigned long)
0000000000422d90 00000000000001b0 t std::_Hashtable<nv50_ir::ValueRef*, nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*>, std::__detail::_Identity, std::equal_to<nv50_ir::ValueRef*>, std::hash<nv50_ir::ValueRef*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<nv50_ir::ValueRef*, false>*, unsigned long)
0000000000422f40 00000000000001c8 t nv50_ir::ValueRef::set(nv50_ir::Value*)
0000000000423110 0000000000000010 t nv50_ir::ValueRef::ValueRef(nv50_ir::Value*)
0000000000423110 0000000000000010 T nv50_ir::ValueRef::ValueRef(nv50_ir::Value*)
0000000000423120 0000000000000008 t nv50_ir::ValueRef::~ValueRef()
0000000000423120 0000000000000008 T nv50_ir::ValueRef::~ValueRef()
0000000000423130 0000000000000040 t nv50_ir::ValueRef::set(nv50_ir::ValueRef const&)
0000000000423170 00000000000000cc t nv50_ir::ValueDef::replace(nv50_ir::ValueRef const&, bool)
0000000000423240 000000000000010c t std::deque<nv50_ir::ValueRef, std::allocator<nv50_ir::ValueRef> >::_M_destroy_data_aux(std::_Deque_iterator<nv50_ir::ValueRef, nv50_ir::ValueRef&, nv50_ir::ValueRef*>, std::_Deque_iterator<nv50_ir::ValueRef, nv50_ir::ValueRef&, nv50_ir::ValueRef*>) [clone .isra.0]
0000000000423350 0000000000000350 t nv50_ir::Instruction::setSrc(int, nv50_ir::Value*)
00000000004236a0 00000000000000e8 t nv50_ir::Instruction::setSrc(int, nv50_ir::ValueRef const&)
0000000000423790 0000000000000370 t nv50_ir::Instruction::setIndirect(int, int, nv50_ir::Value*)
0000000000423b00 000000000000020c t nv50_ir::Instruction::setPredicate(nv50_ir::CondCode, nv50_ir::Value*)
0000000000423d10 0000000000000074 t nv50_ir::Instruction::putExtraSources(int, nv50_ir::Value**)
0000000000423d90 0000000000000154 t nv50_ir::TexInstruction::setIndirectR(nv50_ir::Value*)
0000000000423ef0 0000000000000154 t nv50_ir::TexInstruction::setIndirectS(nv50_ir::Value*)
0000000000424050 000000000000037c t nv50_ir::Instruction::swapSources(int, int)
00000000004243d0 0000000000000714 t nv50_ir::Instruction::moveSources(int, int)
0000000000424af0 000000000000052c t nv50_ir::Instruction::~Instruction()
0000000000424af0 000000000000052c t nv50_ir::Instruction::~Instruction()
0000000000425020 0000000000000028 T nv50_ir::Instruction::~Instruction()
0000000000425050 00000000000000fc t nv50_ir::TexInstruction::~TexInstruction()
0000000000425050 00000000000000fc T nv50_ir::TexInstruction::~TexInstruction()
0000000000425150 0000000000000028 T nv50_ir::TexInstruction::~TexInstruction()
0000000000425180 0000000000000010 W nv50_ir::FlowInstruction::~FlowInstruction()
0000000000425180 0000000000000010 W nv50_ir::FlowInstruction::~FlowInstruction()
0000000000425190 0000000000000034 W nv50_ir::FlowInstruction::~FlowInstruction()
00000000004251d0 0000000000000010 W nv50_ir::CmpInstruction::~CmpInstruction()
00000000004251d0 0000000000000010 W nv50_ir::CmpInstruction::~CmpInstruction()
00000000004251e0 0000000000000034 W nv50_ir::CmpInstruction::~CmpInstruction()
0000000000425220 0000000000000048 t nv50_ir::ValueRef::ValueRef(nv50_ir::ValueRef const&)
0000000000425220 0000000000000048 T nv50_ir::ValueRef::ValueRef(nv50_ir::ValueRef const&)
0000000000425270 00000000000003f0 t nv50_ir::Instruction::takeExtraSources(int, nv50_ir::Value**)
0000000000425660 00000000000000a8 W std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_get_insert_unique_pos(void const* const&)
0000000000425710 0000000000000114 W std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, void const* const&)
0000000000425830 00000000000000c0 t std::_Rb_tree_iterator<std::pair<void const* const, void*> > std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void const* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, std::piecewise_construct_t const&, std::tuple<void const* const&>&&, std::tuple<>&&) [clone .isra.0]
00000000004258f0 00000000000000ac W nv50_ir::DeepClonePolicy<nv50_ir::Function>::insert(void const*, void*)
00000000004259a0 00000000000000a0 W nv50_ir::DeepClonePolicy<nv50_ir::Function>::lookup(void*)
0000000000425a40 00000000000002d8 T nv50_ir::ImmediateValue::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&) const
0000000000425d20 00000000000002e0 T nv50_ir::Symbol::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&) const
0000000000426000 00000000000002f8 T nv50_ir::LValue::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&) const
0000000000426300 0000000000000848 t nv50_ir::Instruction::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&, nv50_ir::Instruction*) const
0000000000426b50 0000000000000274 T nv50_ir::TexInstruction::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&, nv50_ir::Instruction*) const
0000000000426dd0 000000000000017c T nv50_ir::CmpInstruction::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&, nv50_ir::Instruction*) const
0000000000426f50 00000000000002a8 T nv50_ir::FlowInstruction::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&, nv50_ir::Instruction*) const
0000000000427200 0000000000000440 t nv50_ir::Program::~Program()
0000000000427200 0000000000000440 T nv50_ir::Program::~Program()
0000000000427640 00000000000002a4 t nv50_ir_generate_code
00000000004278f0 0000000000000008 W nv50_ir::Pass::visit(nv50_ir::Function*)
0000000000427900 0000000000000008 W nv50_ir::Pass::visit(nv50_ir::BasicBlock*)
0000000000427910 0000000000000008 W nv50_ir::Pass::visit(nv50_ir::Instruction*)
0000000000427920 00000000000000f8 t std::deque<nv50_ir::ValueRef, std::allocator<nv50_ir::ValueRef> >::_M_destroy_data_aux(std::_Deque_iterator<nv50_ir::ValueRef, nv50_ir::ValueRef&, nv50_ir::ValueRef*>, std::_Deque_iterator<nv50_ir::ValueRef, nv50_ir::ValueRef&, nv50_ir::ValueRef*>) [clone .isra.0]
0000000000427a20 00000000000000f8 t std::deque<nv50_ir::ValueDef, std::allocator<nv50_ir::ValueDef> >::_M_destroy_data_aux(std::_Deque_iterator<nv50_ir::ValueDef, nv50_ir::ValueDef&, nv50_ir::ValueDef*>, std::_Deque_iterator<nv50_ir::ValueDef, nv50_ir::ValueDef&, nv50_ir::ValueDef*>) [clone .isra.0]
0000000000427b20 000000000000027c t nv50_ir::Function::Function(nv50_ir::Program*, char const*, unsigned int)
0000000000427b20 000000000000027c T nv50_ir::Function::Function(nv50_ir::Program*, char const*, unsigned int)
0000000000427da0 000000000000012c t nv50_ir::BasicBlock::BasicBlock(nv50_ir::Function*)
0000000000427da0 000000000000012c T nv50_ir::BasicBlock::BasicBlock(nv50_ir::Function*)
0000000000427ed0 000000000000002c t nv50_ir::BasicBlock::idom() const
0000000000427f00 0000000000000068 t nv50_ir::BasicBlock::insertBefore(nv50_ir::Instruction*, nv50_ir::Instruction*)
0000000000427f70 00000000000000a8 t nv50_ir::BasicBlock::insertHead(nv50_ir::Instruction*)
0000000000428020 00000000000000c0 t nv50_ir::BasicBlock::insertTail(nv50_ir::Instruction*)
00000000004280e0 000000000000005c t nv50_ir::BasicBlock::insertAfter(nv50_ir::Instruction*, nv50_ir::Instruction*)
0000000000428140 00000000000000c8 t nv50_ir::BasicBlock::remove(nv50_ir::Instruction*)
0000000000428210 0000000000000088 t nv50_ir::BasicBlock::permuteAdjacent(nv50_ir::Instruction*, nv50_ir::Instruction*)
00000000004282a0 00000000000000e8 t nv50_ir::BasicBlock::splitCommon(nv50_ir::Instruction*, nv50_ir::BasicBlock*, bool)
0000000000428390 0000000000000064 t nv50_ir::BasicBlock::splitBefore(nv50_ir::Instruction*, bool)
0000000000428400 000000000000006c t nv50_ir::BasicBlock::splitAfter(nv50_ir::Instruction*, bool)
0000000000428470 0000000000000050 t nv50_ir::BasicBlock::dominatedBy(nv50_ir::BasicBlock*)
00000000004284c0 0000000000000090 t nv50_ir::BasicBlock::initiatesSimpleConditional() const
0000000000428550 000000000000002c t nv50_ir::Function::setEntry(nv50_ir::BasicBlock*)
0000000000428580 0000000000000020 t nv50_ir::Function::setExit(nv50_ir::BasicBlock*)
00000000004285a0 0000000000000198 t nv50_ir::Function::orderInstructions(nv50_ir::ArrayList&)
0000000000428740 00000000000000d0 t nv50_ir::Function::buildLiveSets()
0000000000428810 00000000000000d0 t nv50_ir::Function::buildDefSets()
00000000004288e0 0000000000000198 t nv50_ir::Pass::doRun(nv50_ir::Function*, bool, bool)
0000000000428a80 0000000000000010 t nv50_ir::Pass::run(nv50_ir::Function*, bool, bool)
0000000000428a90 00000000000000d8 t nv50_ir::Pass::doRun(nv50_ir::Program*, bool, bool)
0000000000428b70 000000000000000c t nv50_ir::Pass::run(nv50_ir::Program*, bool, bool)
0000000000428b80 00000000000000c0 t std::_Rb_tree_iterator<std::pair<void const* const, void*> > std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void const* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, std::piecewise_construct_t const&, std::tuple<void const* const&>&&, std::tuple<>&&) [clone .isra.0]
0000000000428c40 0000000000000230 t nv50_ir::BasicBlock::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&) const
0000000000428e70 0000000000000584 t nv50_ir::Function::~Function()
0000000000428e70 0000000000000584 T nv50_ir::Function::~Function()
0000000000429400 0000000000000008 t (anonymous namespace)::Converter::BindArgumentsPass::visit(nv50_ir::BasicBlock*)
0000000000429410 0000000000000070 t _debug_printf
0000000000429480 000000000000006c t (anonymous namespace)::Converter::adjustTempIndex(int, int&, int&) const [clone .isra.0]
00000000004294f0 0000000000000140 t std::_Rb_tree<int, std::pair<int const, std::pair<int, int> >, std::_Select1st<std::pair<int const, std::pair<int, int> > >, std::less<int>, std::allocator<std::pair<int const, std::pair<int, int> > > >::_M_erase(std::_Rb_tree_node<std::pair<int const, std::pair<int, int> > >*) [clone .isra.0]
0000000000429630 0000000000000140 t std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_erase(std::_Rb_tree_node<std::pair<void const* const, void*> >*) [clone .isra.0]
0000000000429770 0000000000000140 t std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase(std::_Rb_tree_node<int>*) [clone .isra.0]
00000000004298b0 0000000000000140 t std::_Rb_tree<nv50_ir::BuildUtil::Location, nv50_ir::BuildUtil::Location, std::_Identity<nv50_ir::BuildUtil::Location>, std::less<nv50_ir::BuildUtil::Location>, std::allocator<nv50_ir::BuildUtil::Location> >::_M_erase(std::_Rb_tree_node<nv50_ir::BuildUtil::Location>*) [clone .isra.0]
00000000004299f0 0000000000000140 t std::_Rb_tree<nv50_ir::Value*, std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location>, std::_Select1st<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >, std::less<nv50_ir::Value*>, std::allocator<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> > >::_M_erase(std::_Rb_tree_node<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >*) [clone .isra.0]
0000000000429b30 0000000000000140 t std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::_M_erase(std::_Rb_tree_node<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >*) [clone .isra.0]
0000000000429c70 0000000000000094 t std::_Rb_tree<unsigned int, std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine>, std::_Select1st<std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine> >, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine> >*) [clone .isra.0]
0000000000429d10 0000000000000140 t std::_Rb_tree<int, std::pair<int const, int>, std::_Select1st<std::pair<int const, int> >, std::less<int>, std::allocator<std::pair<int const, int> > >::_M_erase(std::_Rb_tree_node<std::pair<int const, int> >*) [clone .isra.0]
0000000000429e50 0000000000000188 t (anonymous namespace)::Converter::shiftAddress(nv50_ir::Value*)
0000000000429fe0 00000000000002d4 t (anonymous namespace)::Converter::makeSym(unsigned int, int, int, int, unsigned int)
000000000042a2c0 000000000000008c t (anonymous namespace)::Converter::srcToSym(tgsi::Instruction::SrcRegister, int)
000000000042a350 0000000000000258 t (anonymous namespace)::Converter::storeDst(tgsi::Instruction::DstRegister, int, nv50_ir::Value*, nv50_ir::Value*)
000000000042a5b0 00000000000006a4 t (anonymous namespace)::Converter::handleFBFETCH(nv50_ir::Value**)
000000000042ac60 0000000000000114 t nv50_ir::MemoryPool::allocate()
000000000042ad80 0000000000000140 t nv50_ir::BuildUtil::getScratch(int, nv50_ir::DataFile)
000000000042aec0 0000000000000154 t nv50_ir::BuildUtil::getSSA(int, nv50_ir::DataFile)
000000000042b020 0000000000000d60 t (anonymous namespace)::Converter::fetchSrc(tgsi::Instruction::SrcRegister, int, nv50_ir::Value*)
000000000042bd80 00000000000009a8 t (anonymous namespace)::Converter::fetchSrc(int, int)
000000000042c730 0000000000000204 t (anonymous namespace)::Converter::buildDot(int)
000000000042c940 00000000000001dc t nv50_ir::BuildUtil::mkOp(nv50_ir::operation, nv50_ir::DataType, nv50_ir::Value*)
000000000042cb20 0000000000000058 t tgsi::Instruction::texOffsetMask() const
000000000042cb80 00000000000001e0 t tgsi::Instruction::srcMask(unsigned int) const
000000000042cd60 0000000000000198 t tgsi::Instruction::inferDstType() const
000000000042cf00 0000000000000098 t tgsi::Instruction::getSetCond() const
000000000042cfa0 000000000000005c t tgsi::Instruction::checkDstSrcAliasing() const
000000000042d000 00000000000000a0 t tgsi::Source::Source(nv50_ir_prog_info*)
000000000042d000 00000000000000a0 T tgsi::Source::Source(nv50_ir_prog_info*)
000000000042d0a0 0000000000000148 t tgsi::Source::~Source()
000000000042d0a0 0000000000000148 T tgsi::Source::~Source()
000000000042d1f0 0000000000000184 t tgsi::Source::scanProperty(tgsi_full_property const*)
000000000042d380 0000000000000050 t tgsi::Source::scanImmediate(tgsi_full_immediate const*)
000000000042d3d0 0000000000000084 t tgsi::Instruction::getTexture(tgsi::Source const*, int) const
000000000042d460 0000000000000204 t (anonymous namespace)::Converter::setTexRS(nv50_ir::TexInstruction*, unsigned int&, int, int)
000000000042d670 00000000000001f8 t (anonymous namespace)::Converter::handleTXQ(nv50_ir::Value**, nv50_ir::TexQuery, int)
000000000042d870 00000000000003f4 t (anonymous namespace)::Converter::handleTXF(nv50_ir::Value**, int, int) [clone .constprop.0]
000000000042dc70 00000000000000e4 t std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::find(nv50_ir::BuildUtil::Location const&) const
000000000042dd60 0000000000000190 t std::vector<tgsi::Source::TextureView, std::allocator<tgsi::Source::TextureView> >::_M_default_append(unsigned long)
000000000042def0 0000000000000188 W std::vector<int, std::allocator<int> >::_M_default_append(unsigned long)
000000000042e080 0000000000000190 t std::vector<tgsi::Source::MemoryFile, std::allocator<tgsi::Source::MemoryFile> >::_M_default_append(unsigned long)
000000000042e210 0000000000000134 W std::pair<std::_Rb_tree_iterator<std::pair<int const, int> >, bool> std::_Rb_tree<int, std::pair<int const, int>, std::_Select1st<std::pair<int const, int> >, std::less<int>, std::allocator<std::pair<int const, int> > >::_M_emplace_unique<std::pair<int, int> >(std::pair<int, int>&&)
000000000042e350 0000000000000188 t std::vector<nv50_ir::Value*, std::allocator<nv50_ir::Value*> >::_M_default_append(unsigned long)
000000000042e4e0 00000000000005f0 W std::vector<bool, std::allocator<bool> >::_M_fill_insert(std::_Bit_iterator, unsigned long, bool)
000000000042ead0 00000000000000a8 W std::_Rb_tree<int, std::pair<int const, std::pair<int, int> >, std::_Select1st<std::pair<int const, std::pair<int, int> > >, std::less<int>, std::allocator<std::pair<int const, std::pair<int, int> > > >::_M_get_insert_unique_pos(int const&)
000000000042eb80 0000000000000114 W std::_Rb_tree<int, std::pair<int const, std::pair<int, int> >, std::_Select1st<std::pair<int const, std::pair<int, int> > >, std::less<int>, std::allocator<std::pair<int const, std::pair<int, int> > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<int const, std::pair<int, int> > >, int const&)
000000000042eca0 00000000000000cc W std::pair<std::_Rb_tree_iterator<std::pair<int const, std::pair<int, int> > >, bool> std::_Rb_tree<int, std::pair<int const, std::pair<int, int> >, std::_Select1st<std::pair<int const, std::pair<int, int> > >, std::less<int>, std::allocator<std::pair<int const, std::pair<int, int> > > >::_M_emplace_unique<std::pair<int, std::pair<unsigned int, unsigned int> > >(std::pair<int, std::pair<unsigned int, unsigned int> >&&)
000000000042ed70 0000000000000aa4 t tgsi::Source::scanDeclaration(tgsi_full_declaration const*)
000000000042f820 00000000000000a8 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_get_insert_unique_pos(int const&)
000000000042f8d0 00000000000000bc W std::pair<std::_Rb_tree_iterator<int>, bool> std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_insert_unique<int>(int&&)
000000000042f990 0000000000000278 t tgsi::Source::scanInstructionSrc(tgsi::Instruction const&, tgsi::Instruction::SrcRegister const&, unsigned int)
000000000042fc10 00000000000004b4 t tgsi::Source::scanInstruction(tgsi_full_instruction const*)
00000000004300d0 00000000000005a8 t tgsi::Source::scanSource()
0000000000430680 0000000000000128 t void std::vector<nv50_ir::Value*, std::allocator<nv50_ir::Value*> >::_M_realloc_insert<nv50_ir::Value*>(__gnu_cxx::__normal_iterator<nv50_ir::Value**, std::vector<nv50_ir::Value*, std::allocator<nv50_ir::Value*> > >, nv50_ir::Value*&&)
00000000004307b0 000000000000015c t (anonymous namespace)::Converter::getImageCoords(std::vector<nv50_ir::Value*, std::allocator<nv50_ir::Value*> >&, int)
0000000000430910 0000000000000680 t (anonymous namespace)::Converter::handleLOAD(nv50_ir::Value**)
0000000000430f90 0000000000000654 t (anonymous namespace)::Converter::handleSTORE()
00000000004315f0 00000000000000e4 t std::_Rb_tree<nv50_ir::BuildUtil::Location, nv50_ir::BuildUtil::Location, std::_Identity<nv50_ir::BuildUtil::Location>, std::less<nv50_ir::BuildUtil::Location>, std::allocator<nv50_ir::BuildUtil::Location> >::find(nv50_ir::BuildUtil::Location const&) const
00000000004316e0 0000000000000c04 t (anonymous namespace)::Converter::BindArgumentsPass::visit(nv50_ir::Function*)
00000000004322f0 00000000000000c0 t std::_Rb_tree_iterator<std::pair<void const* const, void*> > std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void const* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, std::piecewise_construct_t const&, std::tuple<void const* const&>&&, std::tuple<>&&) [clone .isra.0]
00000000004323b0 00000000000002a8 t nv50_ir::cloneForward(nv50_ir::Function*, nv50_ir::Instruction*)
0000000000432660 0000000000000e44 t (anonymous namespace)::Converter::handleTEX(nv50_ir::Value**, int, int, int, int, int, int)
00000000004334b0 0000000000008704 t nv50_ir::Program::makeFromTGSI(nv50_ir_prog_info*)
000000000043bbc0 0000000000000010 W nv50_ir::DFSIterator::end() const
000000000043bbd0 0000000000000018 W nv50_ir::DFSIterator::next()
000000000043bbf0 0000000000000010 W nv50_ir::DFSIterator::get() const
000000000043bc00 0000000000000008 W nv50_ir::DFSIterator::reset()
000000000043bc10 0000000000000010 W nv50_ir::CFGIterator::get() const
000000000043bc20 0000000000000010 W nv50_ir::CFGIterator::end() const
000000000043bc30 0000000000000018 W nv50_ir::CFGIterator::next()
000000000043bc50 0000000000000008 W nv50_ir::CFGIterator::reset()
000000000043bc60 0000000000000010 W nv50_ir::CFGIterator::~CFGIterator()
000000000043bc60 0000000000000010 W nv50_ir::CFGIterator::~CFGIterator()
000000000043bc70 0000000000000030 W nv50_ir::CFGIterator::~CFGIterator()
000000000043bca0 0000000000000010 W nv50_ir::DFSIterator::~DFSIterator()
000000000043bca0 0000000000000010 W nv50_ir::DFSIterator::~DFSIterator()
000000000043bcb0 0000000000000030 W nv50_ir::DFSIterator::~DFSIterator()
000000000043bce0 0000000000000078 t _debug_printf.constprop.0
000000000043bd60 0000000000000014 t nv50_ir::Graph::Graph()
000000000043bd60 0000000000000014 t nv50_ir::Graph::Graph()
000000000043bd80 0000000000000034 t nv50_ir::Graph::insert(nv50_ir::Graph::Node*)
000000000043bdc0 0000000000000094 t nv50_ir::Graph::Edge::unlink()
000000000043be60 0000000000000010 t nv50_ir::Graph::Node::Node(void*)
000000000043be60 0000000000000010 t nv50_ir::Graph::Node::Node(void*)
000000000043be70 000000000000006c t nv50_ir::Graph::Node::detach(nv50_ir::Graph::Node*)
000000000043bee0 0000000000000088 t nv50_ir::Graph::Node::cut()
000000000043bf70 00000000000004b8 t nv50_ir::DFSIterator::search(nv50_ir::Graph::Node*, bool, int)
000000000043c430 0000000000000114 t nv50_ir::Graph::iteratorDFS(bool)
000000000043c550 0000000000000078 t nv50_ir::Graph::~Graph()
000000000043c550 0000000000000078 t nv50_ir::Graph::~Graph()
000000000043c5d0 0000000000000028 T nv50_ir::Graph::~Graph()
000000000043c600 000000000000024c t nv50_ir::CFGIterator::search(nv50_ir::Graph::Node*, int)
000000000043c850 00000000000000e4 t nv50_ir::Graph::iteratorCFG()
000000000043c940 0000000000000118 t nv50_ir::Graph::classifyDFS(nv50_ir::Graph::Node*, int&)
000000000043ca60 00000000000000a8 t nv50_ir::Graph::classifyEdges()
000000000043cb10 0000000000000114 t nv50_ir::Graph::Node::attach(nv50_ir::Graph::Node*, nv50_ir::Graph::Edge::Type)
000000000043cc30 00000000000002b0 t nv50_ir::Graph::findLightestPathWeight(nv50_ir::Graph::Node*, nv50_ir::Graph::Node*, std::vector<int, std::allocator<int> > const&)
000000000043cee0 0000000000000008 W nv50_ir::Target::isPostMultiplySupported(nv50_ir::operation, float, int&) const
000000000043cef0 0000000000000040 T nv50_ir::FlatteningPass::visit(nv50_ir::Function*)
000000000043cf30 0000000000000008 W nv50_ir::ShallowClonePolicy<nv50_ir::Function>::lookup(void*)
000000000043cf40 0000000000000004 W nv50_ir::ShallowClonePolicy<nv50_ir::Function>::insert(void const*, void*)
000000000043cf50 00000000000001b8 t nv50_ir::Instruction::isActionEqual(nv50_ir::Instruction const*) const [clone .part.0]
000000000043d110 0000000000000078 t _debug_printf.constprop.0
000000000043d190 0000000000000140 t std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_erase(std::_Rb_tree_node<std::pair<void const* const, void*> >*) [clone .isra.0]
000000000043d2d0 000000000000012c t nv50_ir::post_ra_dead(nv50_ir::Instruction*)
000000000043d400 00000000000000c4 W nv50_ir::Value::~Value()
000000000043d400 00000000000000c4 t nv50_ir::Value::~Value()
000000000043d4d0 00000000000000c0 W nv50_ir::Value::~Value()
000000000043d590 0000000000000058 t nv50_ir::Value::getUniqueInsn() const
000000000043d5f0 00000000000000b8 t nv50_ir::Instruction::getPredicate() const
000000000043d6b0 0000000000000190 t nv50_ir::Instruction::isDead() const
000000000043d840 000000000000010c t nv50_ir::Modifier::applyTo(nv50_ir::ImmediateValue&) const
000000000043d950 00000000000001b4 W nv50_ir::Value::Value(nv50_ir::Value const&)
000000000043d950 00000000000001b4 t nv50_ir::Value::Value(nv50_ir::Value const&)
000000000043db10 0000000000000098 t nv50_ir::ConstantFolding::opnd3(nv50_ir::Instruction*, nv50_ir::ImmediateValue&)
000000000043dbb0 0000000000000078 t nv50_ir::MemoryOpt::reset()
000000000043dc30 000000000000014c t nv50_ir::MemoryOpt::getList(nv50_ir::Instruction const*)
000000000043dd80 0000000000000148 t nv50_ir::FlatteningPass::tryPropagateBranch(nv50_ir::BasicBlock*)
000000000043ded0 00000000000005c0 t nv50_ir::Program::optimizeSSA(int)
000000000043e490 000000000000007c t nv50_ir::Program::optimizePostRA(int)
000000000043e510 0000000000000098 t std::_Deque_iterator<nv50_ir::ValueRef, nv50_ir::ValueRef&, nv50_ir::ValueRef*>::operator[](long) const
000000000043e5b0 00000000000001a8 t nv50_ir::AlgebraicOpt::handleSLCT(nv50_ir::Instruction*)
000000000043e760 0000000000000150 t nv50_ir::updateLdStOffset(nv50_ir::Instruction*, int, nv50_ir::Function*)
000000000043e8b0 0000000000000088 t nv50_ir::Instruction::srcExists(unsigned int) const
000000000043e940 0000000000000068 t nv50_ir::LoadPropagation::isAttribOrSharedLoad(nv50_ir::Instruction*)
000000000043e9b0 0000000000000294 t nv50_ir::ConstantFolding::expr(nv50_ir::Instruction*, nv50_ir::ImmediateValue&, nv50_ir::ImmediateValue&, nv50_ir::ImmediateValue&)
000000000043ec50 00000000000001a0 t nv50_ir::ConstantFolding::unary(nv50_ir::Instruction*, nv50_ir::ImmediateValue const&)
000000000043edf0 0000000000000398 t nv50_ir::ConstantFolding::createMul(nv50_ir::DataType, nv50_ir::Value*, nv50_ir::Value*, long, nv50_ir::Value*)
000000000043f190 000000000000029c t nv50_ir::AlgebraicOpt::handleABS(nv50_ir::Instruction*)
000000000043f430 000000000000020c t nv50_ir::AlgebraicOpt::handleRCP(nv50_ir::Instruction*)
000000000043f640 00000000000001c4 t nv50_ir::AlgebraicOpt::handleCVT_CVT(nv50_ir::Instruction*)
000000000043f810 00000000000000e0 t nv50_ir::LoadPropagation::isImmdLoad(nv50_ir::Instruction*)
000000000043f8f0 000000000000083c T nv50_ir::IndirectPropagation::visit(nv50_ir::BasicBlock*)
0000000000440130 00000000000001d0 t nv50_ir::ConstantFolding::findOriginForTestWithZero(nv50_ir::Value*)
0000000000440300 00000000000004f8 t nv50_ir::AlgebraicOpt::tryADDToMADOrSAD(nv50_ir::Instruction*, nv50_ir::operation)
0000000000440800 00000000000001d8 t nv50_ir::AlgebraicOpt::handleADD(nv50_ir::Instruction*)
00000000004409e0 000000000000044c t nv50_ir::AlgebraicOpt::handleCVT_EXTBF(nv50_ir::Instruction*)
0000000000440e30 0000000000000304 t nv50_ir::AlgebraicOpt::handleSUCLAMP(nv50_ir::Instruction*)
0000000000441140 00000000000002d0 t nv50_ir::LateAlgebraicOpt::tryADDToSHLADD(nv50_ir::Instruction*)
0000000000441410 0000000000000188 t nv50_ir::LateAlgebraicOpt::handleADD(nv50_ir::Instruction*)
00000000004415a0 00000000000001cc t nv50_ir::MemoryOpt::addRecord(nv50_ir::Instruction*)
0000000000441770 0000000000000258 t nv50_ir::MemoryOpt::Record::overlaps(nv50_ir::Instruction const*) const
00000000004419d0 0000000000000104 t nv50_ir::MemoryOpt::lockStores(nv50_ir::Instruction*)
0000000000441ae0 0000000000000178 t nv50_ir::MemoryOpt::purgeRecords(nv50_ir::Instruction*, nv50_ir::DataFile)
0000000000441c60 00000000000004cc t nv50_ir::MemoryOpt::combineSt(nv50_ir::MemoryOpt::Record*, nv50_ir::Instruction*)
0000000000442130 00000000000002cc t nv50_ir::MemoryOpt::findRecord(nv50_ir::Instruction const*, bool, bool&) const
0000000000442400 0000000000000134 t nv50_ir::FlatteningPass::removeFlow(nv50_ir::Instruction*)
0000000000442540 0000000000000714 t nv50_ir::MemoryOpt::replaceStFromSt(nv50_ir::Instruction*, nv50_ir::MemoryOpt::Record*)
0000000000442c60 0000000000000348 t nv50_ir::LoadPropagation::checkSwapSrc01(nv50_ir::Instruction*)
0000000000442fb0 00000000000004e0 T nv50_ir::LoadPropagation::visit(nv50_ir::BasicBlock*)
0000000000443490 0000000000000260 t nv50_ir::LateAlgebraicOpt::handleMULMAD(nv50_ir::Instruction*) [clone .part.0]
00000000004436f0 000000000000008c T nv50_ir::LateAlgebraicOpt::visit(nv50_ir::Instruction*)
0000000000443780 0000000000000248 t nv50_ir::FlatteningPass::isConstantCondition(nv50_ir::Value*)
00000000004439d0 0000000000000098 t std::_Deque_iterator<nv50_ir::ValueDef, nv50_ir::ValueDef&, nv50_ir::ValueDef*>::operator[](long) const
0000000000443a70 0000000000000088 t nv50_ir::Instruction::defExists(unsigned int) const
0000000000443b00 0000000000000444 T nv50_ir::ModifierFolding::visit(nv50_ir::BasicBlock*)
0000000000443f50 00000000000002a4 t nv50_ir::AlgebraicOpt::handleCVT_NEG(nv50_ir::Instruction*)
0000000000444200 0000000000000398 t nv50_ir::Split64BitOpPreRA::split64MulMad(nv50_ir::Function*, nv50_ir::Instruction*, nv50_ir::DataType)
00000000004445a0 0000000000000078 T nv50_ir::Split64BitOpPreRA::visit(nv50_ir::BasicBlock*)
0000000000444620 0000000000000520 t nv50_ir::MemoryOpt::combineLd(nv50_ir::MemoryOpt::Record*, nv50_ir::Instruction*)
0000000000444b40 00000000000001b4 t nv50_ir::Instruction::isNop() const
0000000000444d00 0000000000000184 t nv50_ir::FlatteningPass::predicateInstructions(nv50_ir::BasicBlock*, nv50_ir::Value*, nv50_ir::CondCode)
0000000000444e90 00000000000001ec T nv50_ir::CopyPropagation::visit(nv50_ir::BasicBlock*)
0000000000445080 00000000000001d4 T nv50_ir::MergeSplits::visit(nv50_ir::BasicBlock*)
0000000000445260 000000000000023c t nv50_ir::AlgebraicOpt::handleMINMAX(nv50_ir::Instruction*)
00000000004454a0 00000000000003f8 t nv50_ir::ConstantFolding::tryCollapseChainedMULs(nv50_ir::Instruction*, int, nv50_ir::ImmediateValue&)
00000000004458a0 00000000000028b8 t nv50_ir::ConstantFolding::opnd(nv50_ir::Instruction*, nv50_ir::ImmediateValue&, int)
0000000000448160 00000000000002e0 t nv50_ir::AlgebraicOpt::handleNEG(nv50_ir::Instruction*)
0000000000448440 0000000000000278 t nv50_ir::AlgebraicOpt::handleEXTBF_RDSV(nv50_ir::Instruction*)
00000000004486c0 0000000000000328 t nv50_ir::PostRaLoadPropagation::handleMADforNV50(nv50_ir::Instruction*)
00000000004489f0 0000000000000294 t nv50_ir::PostRaLoadPropagation::handleMADforNVC0(nv50_ir::Instruction*)
0000000000448c90 0000000000000054 T nv50_ir::PostRaLoadPropagation::visit(nv50_ir::Instruction*)
0000000000448cf0 0000000000000930 t nv50_ir::ConstantFolding::expr(nv50_ir::Instruction*, nv50_ir::ImmediateValue&, nv50_ir::ImmediateValue&)
0000000000449620 00000000000005e8 T nv50_ir::ConstantFolding::visit(nv50_ir::BasicBlock*)
0000000000449c10 0000000000000578 t nv50_ir::MemoryOpt::replaceLdFromSt(nv50_ir::Instruction*, nv50_ir::MemoryOpt::Record*)
000000000044a190 00000000000005a0 t nv50_ir::MemoryOpt::replaceLdFromLd(nv50_ir::Instruction*, nv50_ir::MemoryOpt::Record*)
000000000044a730 000000000000044c t nv50_ir::MemoryOpt::runOpt(nv50_ir::BasicBlock*)
000000000044ab80 0000000000000044 T nv50_ir::MemoryOpt::visit(nv50_ir::BasicBlock*)
000000000044abd0 000000000000060c t nv50_ir::FlatteningPass::tryPredicateConditional(nv50_ir::BasicBlock*)
000000000044b1e0 000000000000015c T nv50_ir::FlatteningPass::visit(nv50_ir::BasicBlock*)
000000000044b340 0000000000000910 t nv50_ir::DeadCodeElim::checkSplitLoad(nv50_ir::Instruction*)
000000000044bc50 00000000000002bc T nv50_ir::DeadCodeElim::visit(nv50_ir::BasicBlock*)
000000000044bf10 0000000000000654 t nv50_ir::Instruction::isResultEqual(nv50_ir::Instruction const*) const
000000000044c570 000000000000040c T nv50_ir::GlobalCSE::visit(nv50_ir::BasicBlock*)
000000000044c980 00000000000008f8 T nv50_ir::LocalCSE::visit(nv50_ir::BasicBlock*)
000000000044d280 00000000000000c0 t std::_Rb_tree_iterator<std::pair<void const* const, void*> > std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void const* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, std::piecewise_construct_t const&, std::tuple<void const* const&>&&, std::tuple<>&&) [clone .isra.0]
000000000044d340 000000000000049c t nv50_ir::AlgebraicOpt::handleLOGOP(nv50_ir::Instruction*)
000000000044d7e0 00000000000001b0 T nv50_ir::AlgebraicOpt::visit(nv50_ir::BasicBlock*)
000000000044d990 0000000000000070 t _debug_printf
000000000044da00 0000000000000174 t nv50_ir::Modifier::print(char*, unsigned long) const
000000000044db80 00000000000001e4 T nv50_ir::LValue::print(char*, unsigned long, nv50_ir::DataType) const
000000000044dd70 0000000000000230 T nv50_ir::ImmediateValue::print(char*, unsigned long, nv50_ir::DataType) const
000000000044dfa0 0000000000000270 t nv50_ir::Symbol::print(char*, unsigned long, nv50_ir::Value*, nv50_ir::Value*, nv50_ir::DataType) const
000000000044e210 0000000000000010 T nv50_ir::Symbol::print(char*, unsigned long, nv50_ir::DataType) const
000000000044e220 0000000000001420 t nv50_ir::Instruction::print() const
000000000044f640 0000000000000040 t nv50_ir::value_cmp(nv50_ir::ValueRef*, nv50_ir::ValueRef*)
000000000044f680 0000000000000070 t _debug_printf
000000000044f6f0 0000000000000168 t nv50_ir::RegAlloc::InsertConstraintsPass::isScalarTexGM107(nv50_ir::TexInstruction*) [clone .part.0]
000000000044f860 00000000000001d8 t nv50_ir::GCRA::checkInterference(nv50_ir::GCRA::RIG_Node const*, nv50_ir::Graph::EdgeIterator&) [clone .isra.0]
000000000044fa40 0000000000000134 t nv50_ir::isShortRegOp(nv50_ir::Instruction*) [clone .part.0]
000000000044fb80 00000000000000a0 t nv50_ir::RegisterSet::init(nv50_ir::Target const*)
000000000044fc20 0000000000000068 t nv50_ir::RegisterSet::RegisterSet(nv50_ir::Target const*)
000000000044fc20 0000000000000068 T nv50_ir::RegisterSet::RegisterSet(nv50_ir::Target const*)
000000000044fc90 0000000000000074 t nv50_ir::RegisterSet::testOccupy(nv50_ir::DataFile, int, unsigned int)
000000000044fd10 0000000000001304 T nv50_ir::RegAlloc::ArgumentMovesPass::visit(nv50_ir::BasicBlock*)
0000000000451020 00000000000000a0 t nv50_ir::RegAlloc::BuildIntervalsPass::addLiveRange(nv50_ir::Value*, nv50_ir::BasicBlock const*, int)
00000000004510c0 00000000000005c4 t nv50_ir::RegAlloc::buildLiveSets(nv50_ir::BasicBlock*)
0000000000451690 00000000000000d4 t nv50_ir::RegAlloc::BuildIntervalsPass::collectLiveValues(nv50_ir::BasicBlock*)
0000000000451770 000000000000097c T nv50_ir::RegAlloc::BuildIntervalsPass::visit(nv50_ir::BasicBlock*)
00000000004520f0 0000000000000310 t nv50_ir::GCRA::RIG_Node::init(nv50_ir::RegisterSet const&, nv50_ir::LValue*)
0000000000452400 000000000000034c t nv50_ir::GCRA::coalesceValues(nv50_ir::Value*, nv50_ir::Value*, bool)
0000000000452750 0000000000000428 t nv50_ir::GCRA::makeCompound(nv50_ir::Instruction*, bool)
0000000000452b80 0000000000000178 t nv50_ir::GCRA::GCRA(nv50_ir::Function*, nv50_ir::SpillCodeInserter&)
0000000000452b80 0000000000000178 T nv50_ir::GCRA::GCRA(nv50_ir::Function*, nv50_ir::SpillCodeInserter&)
0000000000452d00 0000000000000570 t nv50_ir::GCRA::buildRIG(nv50_ir::ArrayList&)
0000000000453270 000000000000018c t nv50_ir::GCRA::calculateSpillWeights()
0000000000453400 0000000000000098 t nv50_ir::GCRA::simplifyEdge(nv50_ir::GCRA::RIG_Node*, nv50_ir::GCRA::RIG_Node*)
00000000004534a0 0000000000000270 t nv50_ir::GCRA::simplifyNode(nv50_ir::GCRA::RIG_Node*)
0000000000453710 0000000000000144 t nv50_ir::GCRA::simplify()
0000000000453860 0000000000000370 t nv50_ir::SpillCodeInserter::assignSlot(nv50_ir::Interval const&, unsigned int)
0000000000453bd0 0000000000000348 t nv50_ir::GCRA::selectRegisters()
0000000000453f20 0000000000000080 t nv50_ir::SpillCodeInserter::offsetSlot(nv50_ir::Value*, nv50_ir::LValue const*)
0000000000453fa0 0000000000000770 t nv50_ir::SpillCodeInserter::spill(nv50_ir::Instruction*, nv50_ir::Value*, nv50_ir::LValue*)
0000000000454710 000000000000075c t nv50_ir::SpillCodeInserter::unspill(nv50_ir::Instruction*, nv50_ir::LValue*, nv50_ir::Value*)
0000000000454e70 000000000000056c t nv50_ir::GCRA::resolveSplitsAndMerges()
00000000004553e0 0000000000000328 t nv50_ir::GCRA::cleanup(bool)
0000000000455710 00000000000001a0 t nv50_ir::RegAlloc::InsertConstraintsPass::textureMask(nv50_ir::TexInstruction*)
00000000004558b0 0000000000000154 t nv50_ir::RegAlloc::InsertConstraintsPass::addHazard(nv50_ir::Instruction*, nv50_ir::ValueRef const*)
0000000000455a10 00000000000007dc t nv50_ir::RegAlloc::InsertConstraintsPass::condenseDefs(nv50_ir::Instruction*, int, int)
00000000004561f0 0000000000000138 t nv50_ir::RegAlloc::InsertConstraintsPass::condenseDefs(nv50_ir::Instruction*)
0000000000456330 0000000000000584 t nv50_ir::RegAlloc::InsertConstraintsPass::condenseSrcs(nv50_ir::Instruction*, int, int)
00000000004568c0 0000000000000114 t nv50_ir::RegAlloc::InsertConstraintsPass::handleScalarTexGM107(nv50_ir::TexInstruction*)
00000000004569e0 00000000000004e8 t nv50_ir::RegAlloc::InsertConstraintsPass::texConstraintGM107(nv50_ir::TexInstruction*)
0000000000456ed0 0000000000000398 t nv50_ir::RegAlloc::InsertConstraintsPass::texConstraintNVE0(nv50_ir::TexInstruction*)
0000000000457270 00000000000001c0 t nv50_ir::RegAlloc::InsertConstraintsPass::texConstraintNVC0(nv50_ir::TexInstruction*)
0000000000457430 0000000000000d04 t nv50_ir::GCRA::doCoalesce(nv50_ir::ArrayList&, unsigned int)
0000000000458140 0000000000000110 t nv50_ir::GCRA::coalesce(nv50_ir::ArrayList&)
0000000000458250 0000000000000c04 t nv50_ir::RegAlloc::InsertConstraintsPass::insertConstraintMove(nv50_ir::Instruction*, int)
0000000000458e60 00000000000004cc t nv50_ir::RegAlloc::InsertConstraintsPass::insertConstraintMoves()
0000000000459330 0000000000000090 t nv50_ir::RegAlloc::InsertConstraintsPass::exec(nv50_ir::Function*)
00000000004593c0 00000000000008dc t nv50_ir::RegAlloc::InsertConstraintsPass::texConstraintNV50(nv50_ir::TexInstruction*)
0000000000459ca0 0000000000000450 T nv50_ir::RegAlloc::InsertConstraintsPass::visit(nv50_ir::BasicBlock*)
000000000045a0f0 000000000000006c W std::_Deque_base<nv50_ir::BasicBlock*, std::allocator<nv50_ir::BasicBlock*> >::~_Deque_base()
000000000045a0f0 000000000000006c t std::_Deque_base<nv50_ir::BasicBlock*, std::allocator<nv50_ir::BasicBlock*> >::~_Deque_base()
000000000045a160 000000000000007c t std::_Hashtable<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*>, std::pair<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> const, nv50_ir::Value*>, std::allocator<std::pair<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> const, nv50_ir::Value*> >, std::__detail::_Select1st, std::equal_to<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> >, nv50_ir::PhiMapHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> const&, unsigned long) const
000000000045a1e0 0000000000000244 t std::pair<std::__detail::_Node_iterator<std::pair<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> const, nv50_ir::Value*>, false, true>, bool> std::_Hashtable<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*>, std::pair<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> const, nv50_ir::Value*>, std::allocator<std::pair<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> const, nv50_ir::Value*> >, std::__detail::_Select1st, std::equal_to<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> >, nv50_ir::PhiMapHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_emplace<std::pair<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*>, nv50_ir::Value*> >(std::integral_constant<bool, true>, std::pair<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*>, nv50_ir::Value*>&&) [clone .isra.0]
000000000045a430 0000000000000710 t nv50_ir::RegAlloc::PhiMovesPass::splitEdges(nv50_ir::BasicBlock*)
000000000045ab40 000000000000065c T nv50_ir::RegAlloc::PhiMovesPass::visit(nv50_ir::BasicBlock*)
000000000045b1a0 00000000000000d0 t void std::__insertion_sort<__gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(nv50_ir::ValueRef*, nv50_ir::ValueRef*)> >(__gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, __gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(nv50_ir::ValueRef*, nv50_ir::ValueRef*)>)
000000000045b270 0000000000000180 t void std::__adjust_heap<__gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, long, nv50_ir::ValueRef*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(nv50_ir::ValueRef*, nv50_ir::ValueRef*)> >(__gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, long, long, nv50_ir::ValueRef*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(nv50_ir::ValueRef*, nv50_ir::ValueRef*)>)
000000000045b3f0 0000000000000208 t void std::__introsort_loop<__gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(nv50_ir::ValueRef*, nv50_ir::ValueRef*)> >(__gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, __gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(nv50_ir::ValueRef*, nv50_ir::ValueRef*)>)
000000000045b600 00000000000006f4 t nv50_ir::SpillCodeInserter::run(std::__cxx11::list<std::pair<nv50_ir::Value*, nv50_ir::Value*>, std::allocator<std::pair<nv50_ir::Value*, nv50_ir::Value*> > > const&)
000000000045bd00 00000000000004e4 t nv50_ir::GCRA::allocateRegisters(nv50_ir::ArrayList&)
000000000045c1f0 0000000000000230 t nv50_ir::GCRA::~GCRA()
000000000045c1f0 0000000000000230 T nv50_ir::GCRA::~GCRA()
000000000045c420 00000000000003d4 t nv50_ir::RegAlloc::execFunc()
000000000045c800 00000000000000d4 t nv50_ir::RegAlloc::exec()
000000000045c8e0 000000000000005c t nv50_ir::Program::registerAllocation()
000000000045c940 0000000000000010 W nv50_ir::DominatorTree::~DominatorTree()
000000000045c940 0000000000000010 W nv50_ir::DominatorTree::~DominatorTree()
000000000045c950 0000000000000034 W nv50_ir::DominatorTree::~DominatorTree()
000000000045c990 0000000000000090 t nv50_ir::DominatorTree::buildDFS(nv50_ir::Graph::Node*)
000000000045ca20 00000000000000ac t nv50_ir::DominatorTree::squash(int)
000000000045cad0 000000000000036c t nv50_ir::DominatorTree::build()
000000000045ce40 0000000000000154 t nv50_ir::DominatorTree::DominatorTree(nv50_ir::Graph*)
000000000045ce40 0000000000000154 T nv50_ir::DominatorTree::DominatorTree(nv50_ir::Graph*)
000000000045cfa0 000000000000017c t nv50_ir::DominatorTree::findDominanceFrontiers()
000000000045d120 00000000000004e8 t nv50_ir::Function::buildLiveSetsPreSSA(nv50_ir::BasicBlock*, int)
000000000045d610 00000000000001e0 t nv50_ir::Function::buildDefSetsPreSSA(nv50_ir::BasicBlock*, int)
000000000045d7f0 0000000000000078 t nv50_ir::RenamePass::RenamePass(nv50_ir::Function*)
000000000045d7f0 0000000000000078 T nv50_ir::RenamePass::RenamePass(nv50_ir::Function*)
000000000045d870 0000000000000074 t nv50_ir::RenamePass::~RenamePass()
000000000045d870 0000000000000074 T nv50_ir::RenamePass::~RenamePass()
000000000045d8f0 00000000000002f8 t nv50_ir::RenamePass::mkUndefined(nv50_ir::Value*)
000000000045dbf0 0000000000000dac t nv50_ir::RenamePass::search(nv50_ir::BasicBlock*)
000000000045e9a0 0000000000000544 t nv50_ir::Function::convertToSSA()
000000000045eef0 00000000000000a4 t nv50_ir::Program::convertToSSA()
000000000045efa0 0000000000000070 t _debug_printf
000000000045f010 00000000000000c0 t nv50_ir::CodeEmitter::prepareEmission(nv50_ir::Function*)
000000000045f0d0 0000000000000390 T nv50_ir::CodeEmitter::prepareEmission(nv50_ir::BasicBlock*)
000000000045f460 0000000000000164 T nv50_ir::CodeEmitter::prepareEmission(nv50_ir::Program*)
000000000045f5d0 0000000000000048 t nv50_ir::Target::create(unsigned int)
000000000045f620 0000000000000018 t nv50_ir::Target::destroy(nv50_ir::Target*)
000000000045f640 0000000000000014 T nv50_ir::CodeEmitter::CodeEmitter(nv50_ir::Target const*)
000000000045f640 0000000000000014 t nv50_ir::CodeEmitter::CodeEmitter(nv50_ir::Target const*)
000000000045f660 00000000000000ec t nv50_ir::Program::emitSymbolTable(nv50_ir_prog_info*)
000000000045f750 000000000000023c t nv50_ir::Program::emitBinary(nv50_ir_prog_info*)
000000000045f990 00000000000000fc t nv50_ir::CodeEmitter::addReloc(nv50_ir::RelocEntry::Type, int, unsigned int, unsigned int, int)
000000000045fa90 00000000000000ec t nv50_ir::CodeEmitter::addInterp(int, int, void (*)(nv50_ir::FixupEntry const*, unsigned int*, nv50_ir::FixupData const&))
000000000045fb80 00000000000000c0 t nv50_ir_relocate_code
000000000045fc40 0000000000000084 t nv50_ir_apply_fixups
000000000045fcd0 000000000000008c t nv50_ir_get_target_library
000000000045fd60 000000000000000c W nv50_ir::DLList::Iterator::get() const
000000000045fd70 0000000000000010 W nv50_ir::DLList::Iterator::end() const
000000000045fd80 0000000000000004 W nv50_ir::DLList::Iterator::~Iterator()
000000000045fd80 0000000000000004 W nv50_ir::DLList::Iterator::~Iterator()
000000000045fd90 0000000000000030 t nv50_ir::DLList::Iterator::erase()
000000000045fdc0 0000000000000008 W nv50_ir::DLList::Iterator::~Iterator()
000000000045fdd0 0000000000000068 t nv50_ir::DLList::Iterator::insert(void*)
000000000045fe40 0000000000000070 t _debug_printf
000000000045feb0 000000000000007c W nv50_ir::DLList::Iterator::next()
000000000045ff30 0000000000000048 t nv50_ir::DLList::clear()
000000000045ff80 0000000000000090 t nv50_ir::Stack::moveTo(nv50_ir::Stack&)
0000000000460010 0000000000000038 t nv50_ir::Interval::~Interval()
0000000000460010 0000000000000038 T nv50_ir::Interval::~Interval()
0000000000460050 000000000000003c t nv50_ir::Interval::clear()
0000000000460090 0000000000000184 t nv50_ir::Interval::extend(int, int)
0000000000460220 0000000000000040 t nv50_ir::Interval::Interval(nv50_ir::Interval const&)
0000000000460220 0000000000000040 T nv50_ir::Interval::Interval(nv50_ir::Interval const&)
0000000000460260 0000000000000090 t nv50_ir::Interval::overlaps(nv50_ir::Interval const&) const
00000000004602f0 0000000000000038 t nv50_ir::Interval::insert(nv50_ir::Interval const&)
0000000000460330 0000000000000058 t nv50_ir::Interval::unify(nv50_ir::Interval&)
0000000000460390 000000000000006c t nv50_ir::Interval::print() const
0000000000460400 0000000000000048 t nv50_ir::BitSet::andNot(nv50_ir::BitSet const&)
0000000000460450 0000000000000048 t nv50_ir::BitSet::operator|=(nv50_ir::BitSet const&)
00000000004604a0 00000000000000c8 t nv50_ir::BitSet::allocate(unsigned int, bool)
0000000000460570 0000000000000058 t nv50_ir::BitSet::popCount() const
00000000004605d0 0000000000000050 t nv50_ir::BitSet::fill(unsigned int)
0000000000460620 0000000000000068 t nv50_ir::BitSet::setOr(nv50_ir::BitSet*, nv50_ir::BitSet*)
0000000000460690 0000000000000210 t nv50_ir::BitSet::findFreeRange(unsigned int, unsigned int) const
00000000004608a0 0000000000000018 T nv50_ir::TargetGM107::getBuiltinCode(unsigned int const**, unsigned int*) const
00000000004608c0 0000000000000010 T nv50_ir::TargetGM107::getBuiltinOffset(int) const
00000000004608d0 000000000000006c T nv50_ir::TargetGM107::isOpSupported(nv50_ir::operation, nv50_ir::DataType) const
0000000000460940 0000000000000058 T nv50_ir::TargetGM107::isReuseSupported(nv50_ir::Instruction const*) const
00000000004609a0 0000000000000008 T nv50_ir::TargetGM107::canDualIssue(nv50_ir::Instruction const*, nv50_ir::Instruction const*) const
00000000004609b0 000000000000000c T nv50_ir::TargetGM107::isCS2RSV(nv50_ir::SVSemantic) const
00000000004609c0 0000000000000004 W nv50_ir::TargetGM107::~TargetGM107()
00000000004609c0 0000000000000004 W nv50_ir::TargetGM107::~TargetGM107()
00000000004609d0 0000000000000004 T nv50_ir::TargetGM107::getCodeEmitter(nv50_ir::Program::Type)
00000000004609e0 0000000000000008 W nv50_ir::TargetGM107::~TargetGM107()
00000000004609f0 0000000000000118 T nv50_ir::TargetGM107::runLegalizePass(nv50_ir::Program*, nv50_ir::CGStage) const
0000000000460b10 00000000000002a4 T nv50_ir::TargetGM107::getReadLatency(nv50_ir::Instruction const*) const
0000000000460dc0 0000000000000330 T nv50_ir::TargetGM107::isBarrierRequired(nv50_ir::Instruction const*) const
00000000004610f0 0000000000000338 T nv50_ir::TargetGM107::getLatency(nv50_ir::Instruction const*) const
0000000000461430 0000000000000040 t nv50_ir::getTargetGM107(unsigned int)
0000000000461470 000000000000006c T nv50_ir::TargetNVC0::getBuiltinCode(unsigned int const**, unsigned int*) const
00000000004614e0 0000000000000054 T nv50_ir::TargetNVC0::getBuiltinOffset(int) const
0000000000461540 0000000000000150 t nv50_ir::TargetNVC0::initProps(nv50_ir::opProperties const*, int)
0000000000461690 00000000000002f4 t nv50_ir::TargetNVC0::initOpInfo()
0000000000461990 0000000000000034 T nv50_ir::TargetNVC0::TargetNVC0(unsigned int)
0000000000461990 0000000000000034 t nv50_ir::TargetNVC0::TargetNVC0(unsigned int)
00000000004619d0 00000000000000c8 T nv50_ir::TargetNVC0::getFileSize(nv50_ir::DataFile) const
0000000000461aa0 0000000000000018 T nv50_ir::TargetNVC0::getFileUnit(nv50_ir::DataFile) const
0000000000461ac0 00000000000000f0 T nv50_ir::TargetNVC0::getSVAddress(nv50_ir::DataFile, nv50_ir::Symbol const*) const
0000000000461bb0 00000000000007bc T nv50_ir::TargetNVC0::insnCanLoad(nv50_ir::Instruction const*, int, nv50_ir::Instruction const*) const
0000000000462370 00000000000000ec T nv50_ir::TargetNVC0::insnCanLoadOffset(nv50_ir::Instruction const*, int, int) const
0000000000462460 0000000000000084 T nv50_ir::TargetNVC0::isAccessSupported(nv50_ir::DataFile, nv50_ir::DataType) const
00000000004624f0 0000000000000034 T nv50_ir::TargetNVC0::isOpSupported(nv50_ir::operation, nv50_ir::DataType) const
0000000000462530 0000000000000324 T nv50_ir::TargetNVC0::isModSupported(nv50_ir::Instruction const*, int, nv50_ir::Modifier) const
0000000000462860 00000000000000c8 T nv50_ir::TargetNVC0::mayPredicate(nv50_ir::Instruction const*, nv50_ir::Value const*) const
0000000000462930 0000000000000134 T nv50_ir::TargetNVC0::isSatSupported(nv50_ir::Instruction const*) const
0000000000462a70 0000000000000078 T nv50_ir::TargetNVC0::isPostMultiplySupported(nv50_ir::operation, float, int&) const
0000000000462af0 0000000000000170 T nv50_ir::TargetNVC0::getLatency(nv50_ir::Instruction const*) const
0000000000462c60 0000000000000090 T nv50_ir::TargetNVC0::getThroughput(nv50_ir::Instruction const*) const
0000000000462cf0 00000000000002ec T nv50_ir::TargetNVC0::canDualIssue(nv50_ir::Instruction const*, nv50_ir::Instruction const*) const
0000000000462fe0 000000000000005c t nvc0_decoder_bsp_begin
0000000000463040 00000000000001d8 t nvc0_decoder_bsp_next
0000000000463220 00000000000003a0 t nvc0_decoder_bsp_end
00000000004635c0 0000000000000040 t util_hash_crc32
0000000000463600 00000000000001ec t _mesa_parse_arb_fragment_program
00000000004637f0 0000000000000140 t _mesa_parse_arb_vertex_program
0000000000463930 00000000000000d0 t clear_cache
0000000000463a00 0000000000000094 t rehash
0000000000463aa0 000000000000005c t _mesa_new_program_cache
0000000000463b00 0000000000000030 t _mesa_delete_program_cache
0000000000463b30 0000000000000030 t _mesa_delete_shader_cache
0000000000463b60 00000000000000f0 t _mesa_search_program_cache
0000000000463c50 0000000000000120 t _mesa_program_cache_insert
0000000000463d70 0000000000000120 t _mesa_shader_cache_insert
0000000000463e90 00000000000000c0 t _mesa_init_instructions
0000000000463f50 000000000000002c t _mesa_copy_instructions
0000000000463f80 000000000000001c t _mesa_num_inst_src_regs
0000000000463fa0 000000000000001c t _mesa_num_inst_dst_regs
0000000000463fc0 0000000000000060 t _mesa_opcode_string
0000000000464020 0000000000000080 t get_value.isra.0
00000000004640a0 0000000000000708 t _mesa_constant_fold
00000000004647b0 00000000000000c0 t yytnamerr
0000000000464870 0000000000000280 t yysyntax_error
0000000000464af0 00000000000000a0 t asm_instruction_set_operands
0000000000464b90 0000000000000084 t add_state_reference
0000000000464c20 0000000000000108 t initialize_symbol_from_state
0000000000464d30 0000000000000100 t initialize_symbol_from_param
0000000000464e30 00000000000000ec t make_error_string
0000000000464f20 00000000000000a4 t yyerror
0000000000464fd0 0000000000000088 t validate_inputs
0000000000465060 0000000000000150 t declare_variable
00000000004651b0 00000000000000ac t asm_instruction_ctor.constprop.0
0000000000465260 0000000000003184 t yyparse.isra.0
00000000004683f0 0000000000000340 t _mesa_parse_arb_program
0000000000468730 00000000000000a4 t init_velement_64bit
00000000004687e0 00000000000004e4 T st_update_array
0000000000468cd0 0000000000000140 t st_bind_atomics
0000000000468e10 00000000000000c8 t st_bind_hw_atomic_buffers.part.0
0000000000468ee0 0000000000000018 T st_bind_vs_atomics
0000000000468f00 0000000000000018 T st_bind_fs_atomics
0000000000468f20 0000000000000018 T st_bind_gs_atomics
0000000000468f40 0000000000000018 T st_bind_tcs_atomics
0000000000468f60 0000000000000018 T st_bind_tes_atomics
0000000000468f80 0000000000000024 T st_bind_cs_atomics
0000000000468fb0 0000000000000010 T st_bind_hw_atomic_buffers
0000000000468fc0 0000000000000198 t translate_blend
0000000000469160 00000000000004c8 T st_update_blend
0000000000469630 0000000000000034 T st_update_blend_color
0000000000469670 0000000000000004 W ir_expression_flattening_visitor::~ir_expression_flattening_visitor()
0000000000469670 0000000000000004 W ir_expression_flattening_visitor::~ir_expression_flattening_visitor()
0000000000469680 0000000000000008 W ir_expression_flattening_visitor::~ir_expression_flattening_visitor()
0000000000469690 0000000000000134 T ir_expression_flattening_visitor::handle_rvalue(ir_rvalue**)
00000000004697d0 000000000000007c t do_expression_flattening(exec_list*, bool (*)(ir_instruction*))
0000000000469850 0000000000000024 t prolog
0000000000469880 000000000000008c t report_error
0000000000469910 00000000000000b4 t iter_immediate
00000000004699d0 0000000000000070 t regs_hash_destroy
0000000000469a40 0000000000000074 t iter_property
0000000000469ac0 0000000000000090 t report_warning.constprop.0
0000000000469b50 00000000000001ec t check_register_usage.isra.0
0000000000469d40 00000000000002e8 t iter_instruction
000000000046a030 000000000000010c t epilog
000000000046a140 00000000000000a0 t check_and_declare
000000000046a1e0 00000000000001c8 t iter_declaration
000000000046a3b0 000000000000010c t tgsi_sanity_check
000000000046a4c0 0000000000000070 t nouveau_vp3_bsp_begin
000000000046a530 0000000000000090 t nouveau_vp3_bsp_next
000000000046a5c0 000000000000034c t nouveau_vp3_bsp_end
000000000046a910 00000000000000fc t nouveau_vp3_handle_references
000000000046aa10 00000000000001a4 t nouveau_vp3_fill_picparm_mpeg4_vp
000000000046abc0 0000000000000478 t nouveau_vp3_fill_picparm_h264_vp
000000000046b040 00000000000005fc t nouveau_vp3_vp_caps
000000000046b640 0000000000000140 t std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_erase(std::_Rb_tree_node<std::pair<void const* const, void*> >*) [clone .isra.0]
000000000046b780 0000000000000038 t nv50_ir::BuildUtil::BuildUtil()
000000000046b780 0000000000000038 T nv50_ir::BuildUtil::BuildUtil()
000000000046b7c0 000000000000003c T nv50_ir::BuildUtil::BuildUtil(nv50_ir::Program*)
000000000046b7c0 000000000000003c t nv50_ir::BuildUtil::BuildUtil(nv50_ir::Program*)
000000000046b800 0000000000000228 t nv50_ir::BuildUtil::mkOp1(nv50_ir::operation, nv50_ir::DataType, nv50_ir::Value*, nv50_ir::Value*)
000000000046ba30 0000000000000240 t nv50_ir::BuildUtil::mkOp2(nv50_ir::operation, nv50_ir::DataType, nv50_ir::Value*, nv50_ir::Value*, nv50_ir::Value*)
000000000046bc70 0000000000000284 t nv50_ir::BuildUtil::mkOp3(nv50_ir::operation, nv50_ir::DataType, nv50_ir::Value*, nv50_ir::Value*, nv50_ir::Value*, nv50_ir::Value*)
000000000046bf00 0000000000000230 t nv50_ir::BuildUtil::mkLoad(nv50_ir::DataType, nv50_ir::Value*, nv50_ir::Symbol*, nv50_ir::Value*)
000000000046c130 0000000000000238 t nv50_ir::BuildUtil::mkStore(nv50_ir::operation, nv50_ir::DataType, nv50_ir::Symbol*, nv50_ir::Value*, nv50_ir::Value*)
000000000046c370 00000000000001dc t nv50_ir::BuildUtil::mkFetch(nv50_ir::Value*, nv50_ir::DataType, nv50_ir::DataFile, int, nv50_ir::Value*, nv50_ir::Value*)
000000000046c550 00000000000001dc t nv50_ir::BuildUtil::mkInterp(unsigned int, nv50_ir::Value*, int, nv50_ir::Value*)
000000000046c730 0000000000000210 t nv50_ir::BuildUtil::mkMov(nv50_ir::Value*, nv50_ir::Value*, nv50_ir::DataType)
000000000046c940 0000000000000418 t nv50_ir::BuildUtil::mkMovToReg(int, nv50_ir::Value*)
000000000046cd60 0000000000000420 t nv50_ir::BuildUtil::mkMovFromReg(nv50_ir::Value*, int)
000000000046d180 0000000000000234 t nv50_ir::BuildUtil::mkCvt(nv50_ir::operation, nv50_ir::DataType, nv50_ir::Value*, nv50_ir::DataType, nv50_ir::Value*)
000000000046d3c0 0000000000000288 t nv50_ir::BuildUtil::mkCmp(nv50_ir::operation, nv50_ir::CondCode, nv50_ir::DataType, nv50_ir::Value*, nv50_ir::DataType, nv50_ir::Value*, nv50_ir::Value*, nv50_ir::Value*)
000000000046d650 00000000000002a0 t nv50_ir::BuildUtil::mkTex(nv50_ir::operation, nv50_ir::TexTarget, unsigned short, unsigned short, std::vector<nv50_ir::Value*, std::allocator<nv50_ir::Value*> > const&, std::vector<nv50_ir::Value*, std::allocator<nv50_ir::Value*> > const&)
000000000046d8f0 0000000000000044 t nv50_ir::BuildUtil::mkQuadop(unsigned char, nv50_ir::Value*, unsigned char, nv50_ir::Value*, nv50_ir::Value*)
000000000046d940 0000000000000568 t nv50_ir::BuildUtil::mkSplit(nv50_ir::Value**, unsigned char, nv50_ir::Value*)
000000000046deb0 0000000000000218 t nv50_ir::BuildUtil::mkFlow(nv50_ir::operation, void*, nv50_ir::CondCode, nv50_ir::Value*)
000000000046e0d0 00000000000004c4 t nv50_ir::BuildUtil::mkClobber(nv50_ir::DataFile, unsigned int, int)
000000000046e5a0 000000000000021c t nv50_ir::BuildUtil::mkImm(unsigned int)
000000000046e7c0 0000000000000008 t nv50_ir::BuildUtil::mkImm(float)
000000000046e7d0 000000000000015c t nv50_ir::BuildUtil::mkImm(double)
000000000046e930 0000000000000170 t nv50_ir::BuildUtil::loadImm(nv50_ir::Value*, float)
000000000046eaa0 0000000000000298 t nv50_ir::BuildUtil::loadImm(nv50_ir::Value*, double)
000000000046ed40 0000000000000170 t nv50_ir::BuildUtil::loadImm(nv50_ir::Value*, unsigned int)
000000000046eeb0 0000000000000180 t nv50_ir::BuildUtil::mkSymbol(nv50_ir::DataFile, signed char, nv50_ir::DataType, unsigned int)
000000000046f030 0000000000000198 t nv50_ir::BuildUtil::mkSysVal(nv50_ir::SVSemantic, unsigned int)
000000000046f1d0 000000000000019c t nv50_ir::BuildUtil::DataArray::setup(unsigned int, unsigned int, unsigned int, int, int, int, nv50_ir::DataFile, signed char)
000000000046f370 00000000000001a0 t nv50_ir::BuildUtil::DataArray::mkSymbol(int, int)
000000000046f510 0000000000000138 t std::pair<std::_Rb_tree_iterator<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >, bool> std::_Rb_tree<nv50_ir::Value*, std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location>, std::_Select1st<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >, std::less<nv50_ir::Value*>, std::allocator<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> > >::_M_emplace_unique<std::pair<nv50_ir::Value*, nv50_ir::BuildUtil::Location> >(std::pair<nv50_ir::Value*, nv50_ir::BuildUtil::Location>&&)
000000000046f650 0000000000000158 t std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::_M_get_insert_unique_pos(nv50_ir::BuildUtil::Location const&)
000000000046f7b0 000000000000011c t std::pair<std::_Rb_tree_iterator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, bool> std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::_M_emplace_unique<std::pair<nv50_ir::BuildUtil::Location, nv50_ir::Value*> >(std::pair<nv50_ir::BuildUtil::Location, nv50_ir::Value*>&&)
000000000046f8d0 0000000000000358 t nv50_ir::BuildUtil::DataArray::acquire(nv50_ir::bimap<nv50_ir::BuildUtil::Location, nv50_ir::Value*>&, int, int)
000000000046fc30 000000000000054c t nv50_ir::BuildUtil::DataArray::load(nv50_ir::bimap<nv50_ir::BuildUtil::Location, nv50_ir::Value*>&, int, int, nv50_ir::Value*)
0000000000470180 0000000000000328 t nv50_ir::BuildUtil::DataArray::store(nv50_ir::bimap<nv50_ir::BuildUtil::Location, nv50_ir::Value*>&, int, int, nv50_ir::Value*, nv50_ir::Value*)
00000000004704b0 00000000000000c0 t std::_Rb_tree_iterator<std::pair<void const* const, void*> > std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void const* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, std::piecewise_construct_t const&, std::tuple<void const* const&>&&, std::tuple<>&&) [clone .isra.0]
0000000000470570 0000000000000b2c t nv50_ir::BuildUtil::split64BitOpPostRA(nv50_ir::Function*, nv50_ir::Instruction*, nv50_ir::Value*, nv50_ir::Value*)
00000000004710a0 00000000000000c8 t std::_Rb_tree_node<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >* std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::_M_copy<false, std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >*, std::_Rb_tree_node_base*, std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::_Alloc_node&) [clone .isra.0]
0000000000471170 00000000000000c8 t std::_Rb_tree_node<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >* std::_Rb_tree<nv50_ir::Value*, std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location>, std::_Select1st<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >, std::less<nv50_ir::Value*>, std::allocator<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> > >::_M_copy<false, std::_Rb_tree<nv50_ir::Value*, std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location>, std::_Select1st<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >, std::less<nv50_ir::Value*>, std::allocator<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >*, std::_Rb_tree_node_base*, std::_Rb_tree<nv50_ir::Value*, std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location>, std::_Select1st<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >, std::less<nv50_ir::Value*>, std::allocator<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> > >::_Alloc_node&) [clone .isra.0]
0000000000471240 0000000000000140 t std::_Rb_tree<nv50_ir::Value*, std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location>, std::_Select1st<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >, std::less<nv50_ir::Value*>, std::allocator<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> > >::_M_erase(std::_Rb_tree_node<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >*) [clone .isra.0]
0000000000471380 0000000000000140 t std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::_M_erase(std::_Rb_tree_node<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >*) [clone .isra.0]
00000000004714c0 000000000000003c T nv50_ir::ConverterCommon::ConverterCommon(nv50_ir::Program*, nv50_ir_prog_info*)
00000000004714c0 000000000000003c t nv50_ir::ConverterCommon::ConverterCommon(nv50_ir::Program*, nv50_ir_prog_info*)
0000000000471500 0000000000000080 t nv50_ir::ConverterCommon::translateInterpMode(nv50_ir_varying const*, nv50_ir::operation&)
0000000000471580 0000000000000414 t nv50_ir::ConverterCommon::handleUserClipPlanes()
00000000004719a0 000000000000025c t std::pair<std::_Rb_tree_iterator<std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine> >, bool> std::_Rb_tree<unsigned int, std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine>, std::_Select1st<std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine> >, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine> > >::_M_emplace_unique<std::pair<unsigned int, nv50_ir::ConverterCommon::Subroutine> >(std::pair<unsigned int, nv50_ir::ConverterCommon::Subroutine>&&)
0000000000471c00 0000000000000160 t nv50_ir::ConverterCommon::getSubroutine(unsigned int)
0000000000471d60 0000000000000130 t nv50_ir::ConverterCommon::getSubroutine(nv50_ir::Function*)
0000000000471e90 000000000000002c t nv50_ir::selpFlip(nv50_ir::FixupEntry const*, unsigned int*, nv50_ir::FixupData const&)
0000000000471ec0 00000000000000a0 t nv50_ir::interpApply(nv50_ir::FixupEntry const*, unsigned int*, nv50_ir::FixupData const&)
0000000000471f60 0000000000000008 T nv50_ir::CodeEmitterGM107::getMinEncodingSize(nv50_ir::Instruction const*) const
0000000000471f70 0000000000000004 W nv50_ir::CodeEmitterGM107::~CodeEmitterGM107()
0000000000471f70 0000000000000004 W nv50_ir::CodeEmitterGM107::~CodeEmitterGM107()
0000000000471f80 0000000000000070 t _debug_printf
0000000000471ff0 0000000000000008 W nv50_ir::CodeEmitterGM107::~CodeEmitterGM107()
0000000000472000 0000000000000064 T nv50_ir::CodeEmitterGM107::prepareEmission(nv50_ir::Function*)
0000000000472070 0000000000000160 T nv50_ir::CodeEmitterGM107::prepareEmission(nv50_ir::Program*)
00000000004721d0 0000000000000048 t nv50_ir::CodeEmitterGM107::emitGPR(int, nv50_ir::ValueRef const&) [clone .isra.0]
0000000000472220 0000000000000048 t nv50_ir::CodeEmitterGM107::emitGPR(int, nv50_ir::ValueDef const&) [clone .isra.0]
0000000000472270 00000000000000b8 t nv50_ir::CodeEmitterGM107::emitIMMD(int, int, nv50_ir::ValueRef const&) [clone .isra.0]
0000000000472330 00000000000000ac t nv50_ir::CodeEmitterGM107::emitLDSTs(int, nv50_ir::DataType)
00000000004723e0 0000000000000078 t nv50_ir::CodeEmitterGM107::emitSUTarget()
0000000000472460 0000000000000074 t nv50_ir::SchedDataCalculatorGM107::recordWr(nv50_ir::Value const*, int, int)
00000000004724e0 00000000000000a4 t nv50_ir::SchedDataCalculatorGM107::checkRd(nv50_ir::Value const*, int, int&) const
0000000000472590 0000000000000150 t nv50_ir::SchedDataCalculatorGM107::commitInsn(nv50_ir::Instruction const*, int)
00000000004726e0 000000000000013c t nv50_ir::SchedDataCalculatorGM107::calcDelay(nv50_ir::Instruction const*, int) const
0000000000472820 0000000000000174 t nv50_ir::SchedDataCalculatorGM107::setDelay(nv50_ir::Instruction*, int, nv50_ir::Instruction const*)
00000000004729a0 0000000000000294 t nv50_ir::SchedDataCalculatorGM107::needWrDepBar(nv50_ir::Instruction const*) const
0000000000472c40 0000000000000064 t nv50_ir::TargetGM107::createCodeEmitterGM107(nv50_ir::Program::Type)
0000000000472cb0 0000000000000080 t nv50_ir::CodeEmitterGM107::emitPred()
0000000000472d30 0000000000000054 t nv50_ir::CodeEmitterGM107::emitDEPBAR()
0000000000472d90 000000000000015c t nv50_ir::CodeEmitterGM107::emitSUHandle(int)
0000000000472ef0 0000000000000128 t nv50_ir::CodeEmitterGM107::emitSUSTx()
0000000000473020 0000000000000128 t nv50_ir::CodeEmitterGM107::emitISBERD()
0000000000473150 00000000000000ec t nv50_ir::CodeEmitterGM107::emitCBUF(int, int, int, int, int, nv50_ir::ValueRef const&) [clone .constprop.0]
0000000000473240 00000000000000f4 t nv50_ir::CodeEmitterGM107::emitSTS()
0000000000473340 0000000000000104 t nv50_ir::CodeEmitterGM107::emitTEXs(int)
0000000000473450 0000000000000118 t nv50_ir::CodeEmitterGM107::emitSTL()
0000000000473570 0000000000000124 t nv50_ir::CodeEmitterGM107::emitPRET()
00000000004736a0 0000000000000124 t nv50_ir::CodeEmitterGM107::emitSSY()
00000000004737d0 0000000000000124 t nv50_ir::CodeEmitterGM107::emitPBK()
0000000000473900 0000000000000124 t nv50_ir::CodeEmitterGM107::emitPCNT()
0000000000473a30 000000000000016c t nv50_ir::CodeEmitterGM107::emitRED()
0000000000473ba0 0000000000000170 t nv50_ir::CodeEmitterGM107::emitST()
0000000000473d10 0000000000000180 t nv50_ir::CodeEmitterGM107::emitAST()
0000000000473e90 000000000000016c t nv50_ir::CodeEmitterGM107::emitCCTL()
0000000000474000 00000000000001b4 t nv50_ir::CodeEmitterGM107::emitCAL()
00000000004741c0 00000000000001e0 t nv50_ir::CodeEmitterGM107::emitBRA()
00000000004743a0 0000000000000200 t nv50_ir::CodeEmitterGM107::emitBAR()
00000000004745a0 000000000000007c t nv50_ir::CodeEmitterGM107::emitCONT()
0000000000474620 000000000000007c t nv50_ir::CodeEmitterGM107::emitEXIT()
00000000004746a0 000000000000007c t nv50_ir::CodeEmitterGM107::emitRET()
0000000000474720 000000000000007c t nv50_ir::CodeEmitterGM107::emitBRK()
00000000004747a0 000000000000007c t nv50_ir::CodeEmitterGM107::emitSYNC()
0000000000474820 000000000000007c t nv50_ir::CodeEmitterGM107::emitKIL()
00000000004748a0 0000000000000070 t nv50_ir::CodeEmitterGM107::emitMEMBAR()
0000000000474910 000000000000014c t nv50_ir::CodeEmitterGM107::emitPSETP()
0000000000474a60 0000000000000344 t nv50_ir::CodeEmitterGM107::emitMOV()
0000000000474db0 0000000000000178 t nv50_ir::CodeEmitterGM107::emitS2R()
0000000000474f30 0000000000000178 t nv50_ir::CodeEmitterGM107::emitCS2R()
00000000004750b0 00000000000002f8 t nv50_ir::CodeEmitterGM107::emitF2F()
00000000004753b0 00000000000002c0 t nv50_ir::CodeEmitterGM107::emitF2I()
0000000000475670 00000000000002a8 t nv50_ir::CodeEmitterGM107::emitI2F()
0000000000475920 00000000000002a4 t nv50_ir::CodeEmitterGM107::emitI2I()
0000000000475bd0 0000000000000218 t nv50_ir::CodeEmitterGM107::emitSEL()
0000000000475df0 000000000000024c t nv50_ir::CodeEmitterGM107::emitDADD()
0000000000476040 0000000000000214 t nv50_ir::CodeEmitterGM107::emitDMUL()
0000000000476260 00000000000002d4 t nv50_ir::CodeEmitterGM107::emitDFMA()
0000000000476540 0000000000000254 t nv50_ir::CodeEmitterGM107::emitDMNMX()
00000000004767a0 00000000000002bc t nv50_ir::CodeEmitterGM107::emitDSET()
0000000000476a60 000000000000031c t nv50_ir::CodeEmitterGM107::emitFADD()
0000000000476d80 00000000000002dc t nv50_ir::CodeEmitterGM107::emitFMUL()
0000000000477060 0000000000000440 t nv50_ir::CodeEmitterGM107::emitFFMA()
00000000004774a0 000000000000017c t nv50_ir::CodeEmitterGM107::emitMUFU()
0000000000477620 0000000000000234 t nv50_ir::CodeEmitterGM107::emitFMNMX()
0000000000477860 00000000000001bc t nv50_ir::CodeEmitterGM107::emitRRO()
0000000000477a20 00000000000002c8 t nv50_ir::CodeEmitterGM107::emitFCMP()
0000000000477cf0 00000000000002cc t nv50_ir::CodeEmitterGM107::emitFSET()
0000000000477fc0 000000000000016c t nv50_ir::CodeEmitterGM107::emitFSWZADD()
0000000000478130 00000000000002a0 t nv50_ir::CodeEmitterGM107::emitLOP()
00000000004783d0 00000000000001e0 t nv50_ir::CodeEmitterGM107::emitNOT()
00000000004785b0 00000000000002b8 t nv50_ir::CodeEmitterGM107::emitIADD()
0000000000478870 00000000000002cc t nv50_ir::CodeEmitterGM107::emitIMUL()
0000000000478b40 00000000000002ec t nv50_ir::CodeEmitterGM107::emitIMAD()
0000000000478e30 0000000000000220 t nv50_ir::CodeEmitterGM107::emitISCADD()
0000000000479050 0000000000000310 t nv50_ir::CodeEmitterGM107::emitXMAD()
0000000000479360 00000000000001e0 t nv50_ir::CodeEmitterGM107::emitIMNMX()
0000000000479540 00000000000002d8 t nv50_ir::CodeEmitterGM107::emitICMP()
0000000000479820 0000000000000298 t nv50_ir::CodeEmitterGM107::emitISET()
0000000000479ac0 00000000000001b8 t nv50_ir::CodeEmitterGM107::emitSHL()
0000000000479c80 00000000000001e0 t nv50_ir::CodeEmitterGM107::emitSHR()
0000000000479e60 00000000000001f8 t nv50_ir::CodeEmitterGM107::emitSHF()
000000000047a060 000000000000018c t nv50_ir::CodeEmitterGM107::emitPOPC()
000000000047a1f0 000000000000025c t nv50_ir::CodeEmitterGM107::emitBFI()
000000000047a450 00000000000001d0 t nv50_ir::CodeEmitterGM107::emitBFE()
000000000047a620 00000000000001b0 t nv50_ir::CodeEmitterGM107::emitFLO()
000000000047a7d0 0000000000000124 t nv50_ir::CodeEmitterGM107::emitLDC()
000000000047a900 0000000000000114 t nv50_ir::CodeEmitterGM107::emitLDL()
000000000047aa20 00000000000000f0 t nv50_ir::CodeEmitterGM107::emitLDS()
000000000047ab10 0000000000000170 t nv50_ir::CodeEmitterGM107::emitLD()
000000000047ac80 0000000000000288 t nv50_ir::CodeEmitterGM107::emitIPA()
000000000047af10 00000000000001e8 t nv50_ir::CodeEmitterGM107::emitATOM()
000000000047b100 0000000000000190 t nv50_ir::CodeEmitterGM107::emitATOMS()
000000000047b290 00000000000000c8 t nv50_ir::CodeEmitterGM107::emitPIXLD()
000000000047b360 00000000000001e4 t nv50_ir::CodeEmitterGM107::emitTEX()
000000000047b550 00000000000001a4 t nv50_ir::CodeEmitterGM107::emitTLD()
000000000047b700 00000000000001d4 t nv50_ir::CodeEmitterGM107::emitTLD4()
000000000047b8e0 0000000000000180 t nv50_ir::CodeEmitterGM107::emitTXD()
000000000047ba60 000000000000017c t nv50_ir::CodeEmitterGM107::emitTMML()
000000000047bbe0 0000000000000144 t nv50_ir::CodeEmitterGM107::emitTXQ()
000000000047bd30 00000000000001bc t nv50_ir::CodeEmitterGM107::emitOUT()
000000000047bef0 0000000000000148 t nv50_ir::CodeEmitterGM107::emitSULDx()
000000000047c040 00000000000001c4 t nv50_ir::CodeEmitterGM107::emitSUREDx()
000000000047c210 00000000000001a8 t nv50_ir::CodeEmitterGM107::emitALD()
000000000047c3c0 000000000000014c t nv50_ir::CodeEmitterGM107::emitAL2P()
000000000047c510 00000000000001c8 t nv50_ir::SchedDataCalculatorGM107::doesInsnWriteTo(nv50_ir::Instruction const*, nv50_ir::Value const*) const
000000000047c6e0 0000000000000190 t nv50_ir::SchedDataCalculatorGM107::findFirstDef(nv50_ir::Instruction const*) const
000000000047c870 0000000000000478 t nv50_ir::SchedDataCalculatorGM107::setReuseFlag(nv50_ir::Instruction*)
000000000047ccf0 00000000000003b4 t nv50_ir::CodeEmitterGM107::emitVOTE()
000000000047d0b0 00000000000003c8 t nv50_ir::SchedDataCalculatorGM107::needRdDepBar(nv50_ir::Instruction const*) const
000000000047d480 0000000000000330 t nv50_ir::SchedDataCalculatorGM107::findFirstUse(nv50_ir::Instruction const*) const
000000000047d7b0 000000000000047c t nv50_ir::SchedDataCalculatorGM107::insertBarriers(nv50_ir::BasicBlock*)
000000000047dc30 000000000000051c T nv50_ir::SchedDataCalculatorGM107::visit(nv50_ir::BasicBlock*)
000000000047e150 000000000000020c t nv50_ir::CodeEmitterGM107::emitSHFL()
000000000047e360 000000000000030c t nv50_ir::CodeEmitterGM107::emitISETP()
000000000047e670 00000000000003bc t nv50_ir::CodeEmitterGM107::emitTEXS()
000000000047ea30 000000000000033c t nv50_ir::CodeEmitterGM107::emitDSETP()
000000000047ed70 0000000000000350 t nv50_ir::CodeEmitterGM107::emitFSETP()
000000000047f0c0 0000000000000b08 T nv50_ir::CodeEmitterGM107::emitInstruction(nv50_ir::Instruction*)
000000000047fbd0 0000000000000250 t std::vector<nv50_ir::SchedDataCalculatorGM107::RegScores, std::allocator<nv50_ir::SchedDataCalculatorGM107::RegScores> >::_M_default_append(unsigned long)
000000000047fe20 0000000000000134 T nv50_ir::SchedDataCalculatorGM107::visit(nv50_ir::Function*)
000000000047ff60 0000000000000140 t std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_erase(std::_Rb_tree_node<std::pair<void const* const, void*> >*) [clone .isra.0]
00000000004800a0 0000000000000574 t nv50_ir::GM107LegalizeSSA::handlePFETCH(nv50_ir::Instruction*)
0000000000480620 000000000000014c t nv50_ir::GM107LegalizeSSA::handleLOAD(nv50_ir::Instruction*)
0000000000480770 000000000000003c T nv50_ir::GM107LegalizeSSA::visit(nv50_ir::Instruction*)
00000000004807b0 00000000000003a0 t nv50_ir::GM107LoweringPass::handleDFDX(nv50_ir::Instruction*)
0000000000480b50 00000000000005fc t nv50_ir::GM107LoweringPass::handlePFETCH(nv50_ir::Instruction*)
0000000000481150 0000000000000294 t nv50_ir::GM107LoweringPass::handlePOPCNT(nv50_ir::Instruction*)
00000000004813f0 00000000000005f8 t nv50_ir::GM107LoweringPass::handleSUQ(nv50_ir::TexInstruction*)
00000000004819f0 00000000000000c0 t std::_Rb_tree_iterator<std::pair<void const* const, void*> > std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void const* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, std::piecewise_construct_t const&, std::tuple<void const* const&>&&, std::tuple<>&&) [clone .isra.0]
0000000000481ab0 0000000000001c5c T nv50_ir::GM107LoweringPass::handleManualTXD(nv50_ir::TexInstruction*)
0000000000483710 00000000000000d4 T nv50_ir::GM107LoweringPass::visit(nv50_ir::Instruction*)
00000000004837f0 0000000000000014 T nv50_ir::NVC0LegalizeSSA::visit(nv50_ir::Function*)
0000000000483810 0000000000000008 T nv50_ir::NVC0LoweringPass::visit(nv50_ir::BasicBlock*)
0000000000483820 00000000000000c8 t nv50_ir::getSrcType(nv50_ir::TexInstruction::ImgFormatDesc const*, int)
00000000004838f0 0000000000000070 t _debug_printf
0000000000483960 00000000000000d8 T nv50_ir::NVC0LoweringPass::visit(nv50_ir::Function*)
0000000000483a40 000000000000011c T nv50_ir::TargetNVC0::runLegalizePass(nv50_ir::Program*, nv50_ir::CGStage) const
0000000000483b60 0000000000000140 t std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_erase(std::_Rb_tree_node<std::pair<void const* const, void*> >*) [clone .isra.0]
0000000000483ca0 0000000000000140 t nv50_ir::Instruction::getIndirect(int, int) const
0000000000483de0 00000000000000b8 t nv50_ir::TexInstruction::getIndirectR() const
0000000000483ea0 0000000000000220 t nv50_ir::NVC0LegalizeSSA::handleRCPRSQLib(nv50_ir::Instruction*, nv50_ir::Value**)
00000000004840c0 0000000000000270 t nv50_ir::NVC0LegalizeSSA::handleRCPRSQ(nv50_ir::Instruction*)
0000000000484330 0000000000000278 t nv50_ir::NVC0LegalizeSSA::handleTEXLOD(nv50_ir::TexInstruction*)
00000000004845b0 00000000000002a8 t nv50_ir::NVC0LegalizeSSA::handleSET(nv50_ir::CmpInstruction*)
0000000000484860 0000000000000030 t nv50_ir::NVC0LegalizePostRA::NVC0LegalizePostRA(nv50_ir::Program const*)
0000000000484860 0000000000000030 T nv50_ir::NVC0LegalizePostRA::NVC0LegalizePostRA(nv50_ir::Program const*)
0000000000484890 000000000000014c t nv50_ir::NVC0LegalizePostRA::addTexUse(std::__cxx11::list<nv50_ir::NVC0LegalizePostRA::TexUse, std::allocator<nv50_ir::NVC0LegalizePostRA::TexUse> >&, nv50_ir::Instruction*, nv50_ir::Instruction const*)
00000000004849e0 00000000000000f8 t nv50_ir::NVC0LegalizePostRA::propagateJoin(nv50_ir::BasicBlock*)
0000000000484ae0 000000000000003c T nv50_ir::NVC0LoweringPass::NVC0LoweringPass(nv50_ir::Program*)
0000000000484ae0 000000000000003c t nv50_ir::NVC0LoweringPass::NVC0LoweringPass(nv50_ir::Program*)
0000000000484b20 00000000000001fc t nv50_ir::NVC0LoweringPass::loadTexHandle(nv50_ir::Value*, unsigned int)
0000000000484d20 00000000000001ec t nv50_ir::NVC0LoweringPass::loadResInfo64(nv50_ir::Value*, unsigned int, unsigned short)
0000000000484f10 00000000000001f0 t nv50_ir::NVC0LoweringPass::loadResLength32(nv50_ir::Value*, unsigned int, unsigned short)
0000000000485100 00000000000002dc t nv50_ir::NVC0LoweringPass::loadSuInfo32(nv50_ir::Value*, int, unsigned int, bool)
00000000004853e0 00000000000002d0 t nv50_ir::NVC0LoweringPass::readTessCoord(nv50_ir::LValue*, int)
00000000004856b0 00000000000001fc t nv50_ir::NVC0LoweringPass::handleDIV(nv50_ir::Instruction*)
00000000004858b0 00000000000002cc t nv50_ir::NVC0LoweringPass::handleMOD(nv50_ir::Instruction*)
0000000000485b80 00000000000002e4 t nv50_ir::NVC0LoweringPass::handlePOW(nv50_ir::Instruction*)
0000000000485e70 0000000000000320 t nv50_ir::NVC0LoweringPass::calculateSampleOffset(nv50_ir::Value*)
0000000000486190 0000000000000168 t nv50_ir::NVC0LoweringPass::checkPredicate(nv50_ir::Instruction*)
0000000000486300 0000000000000250 t std::unordered_set<nv50_ir::BasicBlock const*, std::hash<nv50_ir::BasicBlock const*>, std::equal_to<nv50_ir::BasicBlock const*>, std::allocator<nv50_ir::BasicBlock const*> >::insert(nv50_ir::BasicBlock const* const&)
0000000000486550 000000000000017c t nv50_ir::NVC0LegalizePostRA::replaceCvt(nv50_ir::Instruction*)
00000000004866d0 00000000000000ec t nv50_ir::NVC0LegalizePostRA::tryReplaceContWithBra(nv50_ir::BasicBlock*)
00000000004867c0 0000000000000288 t nv50_ir::NVC0LegalizePostRA::replaceZero(nv50_ir::Instruction*)
0000000000486a50 0000000000000390 T nv50_ir::NVC0LegalizePostRA::visit(nv50_ir::BasicBlock*)
0000000000486de0 0000000000000234 t nv50_ir::NVC0LoweringPass::handleSQRT(nv50_ir::Instruction*) [clone .part.0]
0000000000487020 0000000000000148 t nv50_ir::NVC0LoweringPass::handlePIXLD(nv50_ir::Instruction*)
0000000000487170 00000000000002c0 t nv50_ir::NVC0LoweringPass::handleOUT(nv50_ir::Instruction*)
0000000000487430 0000000000000704 t nv50_ir::NVC0LoweringPass::insertOOBSurfaceOpResult(nv50_ir::TexInstruction*)
0000000000487b40 0000000000000320 t nv50_ir::NVC0LoweringPass::handleTXQ(nv50_ir::TexInstruction*)
0000000000487e60 00000000000002cc t nv50_ir::NVC0LoweringPass::handleCasExch(nv50_ir::Instruction*, bool)
0000000000488130 000000000000040c t nv50_ir::NVC0LegalizePostRA::findFirstUsesBB(int, int, nv50_ir::Instruction*, nv50_ir::Instruction const*, std::__cxx11::list<nv50_ir::NVC0LegalizePostRA::TexUse, std::allocator<nv50_ir::NVC0LegalizePostRA::TexUse> >&, std::unordered_set<nv50_ir::BasicBlock const*, std::hash<nv50_ir::BasicBlock const*>, std::equal_to<nv50_ir::BasicBlock const*>, std::allocator<nv50_ir::BasicBlock const*> >&)
0000000000488540 0000000000000138 t nv50_ir::NVC0LegalizePostRA::findFirstUses(nv50_ir::Instruction*, std::__cxx11::list<nv50_ir::NVC0LegalizePostRA::TexUse, std::allocator<nv50_ir::NVC0LegalizePostRA::TexUse> >&)
0000000000488680 0000000000000330 t nv50_ir::NVC0LoweringPass::handleBUFQ(nv50_ir::Instruction*)
00000000004889b0 00000000000002a4 t nv50_ir::NVC0LoweringPass::handleWRSV(nv50_ir::Instruction*)
0000000000488c60 0000000000000c7c t nv50_ir::NVC0LoweringPass::handleTEX(nv50_ir::TexInstruction*)
00000000004898e0 00000000000003a8 t nv50_ir::NVC0LoweringPass::handleTXD(nv50_ir::TexInstruction*)
0000000000489c90 000000000000040c t nv50_ir::NVC0LegalizeSSA::handleDIV(nv50_ir::Instruction*)
000000000048a0a0 000000000000052c t nv50_ir::NVC0LegalizeSSA::handleShift(nv50_ir::Instruction*)
000000000048a5d0 0000000000000170 T nv50_ir::NVC0LegalizeSSA::visit(nv50_ir::BasicBlock*)
000000000048a740 000000000000060c t nv50_ir::NVC0LoweringPass::handleSharedATOMNVE4(nv50_ir::Instruction*)
000000000048ad50 0000000000000504 t nv50_ir::NVC0LoweringPass::handleSharedATOM(nv50_ir::Instruction*)
000000000048b260 00000000000002d8 t nv50_ir::NVC0LoweringPass::loadMsAdjInfo32(nv50_ir::TexInstruction::Target, unsigned int, int, nv50_ir::Value*, bool)
000000000048b540 00000000000003a0 t nv50_ir::NVC0LoweringPass::adjustCoordinatesMS(nv50_ir::TexInstruction*)
000000000048b8e0 0000000000000360 t nv50_ir::NVC0LoweringPass::handleSUQ(nv50_ir::TexInstruction*)
000000000048bc40 0000000000000d90 t nv50_ir::NVC0LoweringPass::processSurfaceCoordsNVE4(nv50_ir::TexInstruction*)
000000000048c9d0 0000000000000730 t nv50_ir::NVC0LoweringPass::convertSurfaceFormat(nv50_ir::TexInstruction*, nv50_ir::Instruction**)
000000000048d100 0000000000000594 t nv50_ir::NVC0LoweringPass::processSurfaceCoordsNVC0(nv50_ir::TexInstruction*)
000000000048d6a0 00000000000009b4 t nv50_ir::NVC0LoweringPass::handleRDSV(nv50_ir::Instruction*)
000000000048e060 000000000000016c t nv50_ir::NVC0LoweringPass::handleEXPORT(nv50_ir::Instruction*)
000000000048e1d0 00000000000008bc t nv50_ir::NVC0LoweringPass::handleLDST(nv50_ir::Instruction*)
000000000048ea90 0000000000000328 t nv50_ir::NVC0LoweringPass::handleSurfaceOpNVE4(nv50_ir::TexInstruction*)
000000000048edc0 00000000000003a8 t nv50_ir::NVC0LoweringPass::handleSurfaceOpNVC0(nv50_ir::TexInstruction*)
000000000048f170 0000000000000344 t nv50_ir::NVC0LoweringPass::handleTXLQ(nv50_ir::TexInstruction*)
000000000048f4c0 0000000000000640 t nv50_ir::NVC0LoweringPass::handleATOM(nv50_ir::Instruction*)
000000000048fb00 0000000000000284 W std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)
000000000048fd90 0000000000000128 t void std::vector<nv50_ir::Instruction*, std::allocator<nv50_ir::Instruction*> >::_M_realloc_insert<nv50_ir::Instruction* const&>(__gnu_cxx::__normal_iterator<nv50_ir::Instruction**, std::vector<nv50_ir::Instruction*, std::allocator<nv50_ir::Instruction*> > >, nv50_ir::Instruction* const&)
000000000048fec0 00000000000001a4 t void std::vector<nv50_ir::NVC0LegalizePostRA::TexUse, std::allocator<nv50_ir::NVC0LegalizePostRA::TexUse> >::_M_realloc_insert<nv50_ir::NVC0LegalizePostRA::TexUse const&>(__gnu_cxx::__normal_iterator<nv50_ir::NVC0LegalizePostRA::TexUse*, std::vector<nv50_ir::NVC0LegalizePostRA::TexUse, std::allocator<nv50_ir::NVC0LegalizePostRA::TexUse> > >, nv50_ir::NVC0LegalizePostRA::TexUse const&)
0000000000490070 0000000000000284 t std::vector<nv50_ir::NVC0LegalizePostRA::Limits, std::allocator<nv50_ir::NVC0LegalizePostRA::Limits> >::_M_fill_insert(__gnu_cxx::__normal_iterator<nv50_ir::NVC0LegalizePostRA::Limits*, std::vector<nv50_ir::NVC0LegalizePostRA::Limits, std::allocator<nv50_ir::NVC0LegalizePostRA::Limits> > >, unsigned long, nv50_ir::NVC0LegalizePostRA::Limits const&)
0000000000490300 0000000000000118 t std::vector<nv50_ir::NVC0LegalizePostRA::Limits, std::allocator<nv50_ir::NVC0LegalizePostRA::Limits> >::_M_default_append(unsigned long)
0000000000490420 0000000000000e1c t nv50_ir::NVC0LegalizePostRA::insertTextureBarriers(nv50_ir::Function*)
0000000000491240 000000000000030c T nv50_ir::NVC0LegalizePostRA::visit(nv50_ir::Function*)
0000000000491550 00000000000000c0 t std::_Rb_tree_iterator<std::pair<void const* const, void*> > std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void const* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, std::piecewise_construct_t const&, std::tuple<void const* const&>&&, std::tuple<>&&) [clone .isra.0]
0000000000491610 00000000000002a8 t nv50_ir::cloneForward(nv50_ir::Function*, nv50_ir::Instruction*)
00000000004918c0 0000000000001258 T nv50_ir::NVC0LoweringPass::handleManualTXD(nv50_ir::TexInstruction*)
0000000000492b20 0000000000000f24 t nv50_ir::NVC0LoweringPass::processSurfaceCoordsGM107(nv50_ir::TexInstruction*, nv50_ir::Instruction**)
0000000000493a50 0000000000000094 t nv50_ir::NVC0LoweringPass::handleSurfaceOpGM107(nv50_ir::TexInstruction*)
0000000000493af0 0000000000000480 t nv50_ir::NVC0LoweringPass::visit(nv50_ir::Instruction*)
0000000000493f70 0000000000000044 t _mesa_combine_swizzles
0000000000493fc0 0000000000000470 t _mesa_layout_parameters
0000000000494430 0000000000000088 t _mesa_parse_instruction_suffix
00000000004944c0 0000000000000054 t _mesa_ARBvp_parse_option
0000000000494520 00000000000002d8 t _mesa_ARBfp_parse_option
0000000000494800 00000000000000e0 t yy_get_previous_state
00000000004948e0 0000000000000030 t yy_fatal_error.constprop.0
0000000000494910 00000000000000a0 t _mesa_program_lexer_ensure_buffer_stack
00000000004949b0 00000000000000b4 t _mesa_program_lexer__switch_to_buffer
0000000000494a70 000000000000006c t _mesa_program_lexer__delete_buffer
0000000000494ae0 000000000000006c t _mesa_program_lexer__flush_buffer
0000000000494b50 0000000000000098 t _mesa_program_lexer__init_buffer
0000000000494bf0 000000000000007c t _mesa_program_lexer__create_buffer
0000000000494c70 00000000000000bc t _mesa_program_lexer_restart
0000000000494d30 00000000000046e4 t _mesa_program_lexer_lex
0000000000499420 000000000000008c t _mesa_program_lexer_pop_buffer_state
00000000004994b0 00000000000000bc t _mesa_program_lexer__scan_buffer
0000000000499570 00000000000000a4 t _mesa_program_lexer__scan_bytes
0000000000499620 0000000000000098 t _mesa_program_lexer_lex_init_extra
00000000004996c0 000000000000007c t _mesa_program_lexer_lex_destroy
0000000000499740 0000000000000044 t _mesa_program_lexer_ctor
0000000000499790 0000000000000004 t _mesa_program_lexer_dtor
00000000004997a0 0000000000000004 T operator delete(void*, unsigned long)
00000000004997c0 0000000000000004 T operator delete[](void*)
00000000004997e0 0000000000000004 T operator delete[](void*, unsigned long)
0000000000499800 000000000000000c W __gnu_cxx::__concurrence_lock_error::what() const
0000000000499820 000000000000000c W __gnu_cxx::__concurrence_unlock_error::what() const
0000000000499840 000000000000000c W __gnu_cxx::__concurrence_broadcast_error::what() const
0000000000499860 000000000000000c W __gnu_cxx::__concurrence_wait_error::what() const
0000000000499880 000000000000001c t (anonymous namespace)::init()
00000000004998a0 000000000000001c t (anonymous namespace)::init_static_cond()
00000000004998c0 0000000000000014 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
00000000004998c0 0000000000000014 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
00000000004998e0 0000000000000038 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0000000000499920 0000000000000014 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
0000000000499920 0000000000000014 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
0000000000499940 0000000000000038 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
0000000000499980 0000000000000014 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0000000000499980 0000000000000014 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
00000000004999a0 0000000000000038 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
00000000004999e0 0000000000000014 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
00000000004999e0 0000000000000014 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
0000000000499a00 0000000000000038 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
0000000000499a40 000000000000014c T __cxa_guard_acquire
0000000000499ba0 0000000000000088 T __cxa_guard_release
0000000000499c40 0000000000000068 T operator new(unsigned long)
0000000000499cc0 0000000000000004 T operator new[](unsigned long)
0000000000499ce0 0000000000000014 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0000000000499ce0 0000000000000014 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0000000000499d00 0000000000000028 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0000000000499d40 000000000000015c T __cxxabiv1::__si_class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0000000000499ea0 000000000000008c T __cxxabiv1::__si_class_type_info::__do_find_public_src(long, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0000000000499f40 0000000000000064 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0000000000499fc0 0000000000000004 T std::type_info::~type_info()
0000000000499fc0 0000000000000004 T std::type_info::~type_info()
0000000000499fe0 0000000000000008 T std::type_info::__is_pointer_p() const
0000000000499fe0 0000000000000008 T std::type_info::__is_function_p() const
000000000049a000 0000000000000034 T std::__detail::_List_node_base::_M_transfer(std::__detail::_List_node_base*, std::__detail::_List_node_base*)
000000000049a040 0000000000000014 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
000000000049a060 0000000000000010 T std::__detail::_List_node_base::_M_unhook()
000000000049a080 0000000000000050 T std::_Rb_tree_increment(std::_Rb_tree_node_base*)
000000000049a0e0 0000000000000050 T std::_Rb_tree_increment(std::_Rb_tree_node_base const*)
000000000049a140 0000000000000064 T std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
000000000049a1c0 000000000000029c T std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
000000000049a460 00000000000000c0 T std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned long) const
000000000049a520 000000000000009c T std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned long, unsigned long, unsigned long) const
000000000049a5c0 000000000000000c T std::bad_alloc::what() const
000000000049a5e0 0000000000000014 T std::bad_alloc::~bad_alloc()
000000000049a5e0 0000000000000014 T std::bad_alloc::~bad_alloc()
000000000049a600 0000000000000028 T std::bad_alloc::~bad_alloc()
000000000049a640 000000000000000c T std::bad_array_new_length::what() const
000000000049a660 0000000000000014 T std::bad_array_new_length::~bad_array_new_length()
000000000049a660 0000000000000014 T std::bad_array_new_length::~bad_array_new_length()
000000000049a680 0000000000000028 T std::bad_array_new_length::~bad_array_new_length()
000000000049a6c0 0000000000000068 T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
000000000049a740 0000000000000010 T __cxxabiv1::__class_type_info::__do_find_public_src(long, void const*, __cxxabiv1::__class_type_info const*, void const*) const
000000000049a760 0000000000000014 T __cxxabiv1::__class_type_info::~__class_type_info()
000000000049a760 0000000000000014 T __cxxabiv1::__class_type_info::~__class_type_info()
000000000049a780 0000000000000028 T __cxxabiv1::__class_type_info::~__class_type_info()
000000000049a7c0 0000000000000078 T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
000000000049a840 00000000000000b8 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
000000000049a900 00000000000000ec T __cxxabiv1::__class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
000000000049aa00 0000000000000004 T operator delete(void*)
000000000049aa20 0000000000000110 t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
000000000049ab40 00000000000000cc t (anonymous namespace)::pool::allocate(unsigned long) [clone .constprop.0]
000000000049ac20 0000000000000058 T __cxa_allocate_exception
000000000049ac80 000000000000002c T __cxa_free_exception
000000000049acc0 0000000000000004 T std::exception::~exception()
000000000049acc0 0000000000000004 T std::exception::~exception()
000000000049ace0 000000000000007c t get_adjusted_ptr(std::type_info const*, std::type_info const*, void**)
000000000049ad60 0000000000000138 t read_encoded_value_with_base(unsigned char, unsigned long, unsigned char const*, unsigned long*)
000000000049aea0 000000000000005c t base_of_encoded_value(unsigned char, _Unwind_Context*)
000000000049af00 0000000000000110 t check_exception_spec(lsda_header_info*, std::type_info const*, void*, long)
000000000049b020 00000000000000e8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
000000000049b120 00000000000005f0 T __gxx_personality_v0
000000000049b720 0000000000000018 T __cxxabiv1::__terminate(void (*)())
000000000049b740 0000000000000010 T std::get_terminate()
000000000049b760 0000000000000010 T __cxxabiv1::__unexpected(void (*)())
000000000049b780 0000000000000010 T std::get_unexpected()
000000000049b7a0 0000000000000064 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Exception*)
000000000049b820 0000000000000058 T __cxa_init_primary_exception
000000000049b880 0000000000000060 T __cxa_throw
000000000049b8e0 0000000000000010 T std::get_new_handler()
000000000049b900 0000000000000008 T std::logic_error::what() const
000000000049b900 0000000000000008 T std::runtime_error::what() const
000000000049b920 0000000000000070 T std::logic_error::~logic_error()
000000000049b920 0000000000000070 T std::logic_error::~logic_error()
000000000049b9a0 0000000000000024 T std::logic_error::~logic_error()
000000000049b9e0 0000000000000014 T std::length_error::~length_error()
000000000049b9e0 0000000000000014 T std::length_error::~length_error()
000000000049ba00 0000000000000024 T std::length_error::~length_error()
000000000049ba40 0000000000000014 T std::out_of_range::~out_of_range()
000000000049ba40 0000000000000014 T std::out_of_range::~out_of_range()
000000000049ba60 0000000000000024 T std::out_of_range::~out_of_range()
000000000049baa0 00000000000000f0 T std::logic_error::logic_error(char const*)
000000000049baa0 00000000000000f0 T std::logic_error::logic_error(char const*)
000000000049bba0 0000000000000030 T std::length_error::length_error(char const*)
000000000049bba0 0000000000000030 T std::length_error::length_error(char const*)
000000000049bbe0 0000000000000030 T std::out_of_range::out_of_range(char const*)
000000000049bbe0 0000000000000030 T std::out_of_range::out_of_range(char const*)
000000000049bc20 0000000000000080 W std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&)
000000000049bca0 0000000000000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
000000000049bcc0 000000000000009c T __cxa_begin_catch
000000000049bd60 0000000000000044 t eh_globals_dtor(void*)
000000000049bdc0 0000000000000078 T __cxa_get_globals
000000000049be40 0000000000000004 T _glapi_check_multithread
000000000049be50 0000000000000004 T _glapi_set_context
000000000049be60 0000000000000004 T _glapi_set_dispatch
000000000049be70 0000000000000008 T _glapi_get_dispatch_table_size
000000000049be80 00000000000001a4 T _glapi_add_dispatch
000000000049c030 000000000000006c T _glapi_get_proc_address
000000000049c0a0 0000000000000014 t stub_compare
000000000049c0c0 0000000000000014 t stub_init_once
000000000049c0e0 000000000000001c t stub_find_public
000000000049c100 0000000000000100 t stub_find_dynamic
000000000049c200 0000000000000050 t stub_fix_dynamic
000000000049c250 0000000000000008 t stub_get_slot
000000000049c260 0000000000000018 t stub_get_addr
000000000049c280 00000000000000a8 t noop_generic
000000000049c330 0000000000000004 t u_current_init
000000000049c340 0000000000000024 t u_current_set_context
000000000049c370 0000000000000020 T _glapi_get_context
000000000049c390 0000000000000040 t u_current_set_table
000000000049c3d0 0000000000000034 T shared_dispatch_stub_0
000000000049c410 0000000000000028 T shared_dispatch_stub_1
000000000049c440 0000000000000034 T shared_dispatch_stub_2
000000000049c480 0000000000000034 T shared_dispatch_stub_3
000000000049c4c0 0000000000000034 T shared_dispatch_stub_4
000000000049c500 0000000000000034 T shared_dispatch_stub_5
000000000049c540 0000000000000034 T shared_dispatch_stub_6
000000000049c580 0000000000000034 T shared_dispatch_stub_7
000000000049c5c0 0000000000000034 T shared_dispatch_stub_8
000000000049c600 0000000000000034 T shared_dispatch_stub_9
000000000049c640 0000000000000034 T shared_dispatch_stub_10
000000000049c680 0000000000000028 T shared_dispatch_stub_11
000000000049c6b0 0000000000000034 T shared_dispatch_stub_12
000000000049c6f0 0000000000000028 T shared_dispatch_stub_13
000000000049c720 0000000000000034 T shared_dispatch_stub_14
000000000049c760 0000000000000034 T shared_dispatch_stub_15
000000000049c7a0 0000000000000034 T shared_dispatch_stub_16
000000000049c7e0 0000000000000034 T shared_dispatch_stub_17
000000000049c820 0000000000000034 T shared_dispatch_stub_18
000000000049c860 0000000000000034 T shared_dispatch_stub_19
000000000049c8a0 0000000000000034 T shared_dispatch_stub_20
000000000049c8e0 0000000000000034 T shared_dispatch_stub_21
000000000049c920 0000000000000034 T shared_dispatch_stub_22
000000000049c960 0000000000000034 T shared_dispatch_stub_23
000000000049c9a0 0000000000000034 T shared_dispatch_stub_24
000000000049c9e0 0000000000000034 T shared_dispatch_stub_25
000000000049ca20 0000000000000034 T shared_dispatch_stub_26
000000000049ca60 0000000000000028 T shared_dispatch_stub_27
000000000049ca90 0000000000000034 T shared_dispatch_stub_28
000000000049cad0 0000000000000028 T shared_dispatch_stub_29
000000000049cb00 0000000000000034 T shared_dispatch_stub_30
000000000049cb40 0000000000000034 T shared_dispatch_stub_31
000000000049cb80 0000000000000034 T shared_dispatch_stub_32
000000000049cbc0 0000000000000034 T shared_dispatch_stub_33
000000000049cc00 0000000000000034 T shared_dispatch_stub_34
000000000049cc40 0000000000000034 T shared_dispatch_stub_35
000000000049cc80 0000000000000034 T shared_dispatch_stub_36
000000000049ccc0 0000000000000034 T shared_dispatch_stub_37
000000000049cd00 0000000000000034 T shared_dispatch_stub_38
000000000049cd40 0000000000000034 T shared_dispatch_stub_39
000000000049cd80 0000000000000034 T shared_dispatch_stub_40
000000000049cdc0 0000000000000034 T shared_dispatch_stub_41
000000000049ce00 0000000000000034 T shared_dispatch_stub_42
000000000049ce40 0000000000000028 T shared_dispatch_stub_43
000000000049ce70 0000000000000028 T shared_dispatch_stub_44
000000000049cea0 0000000000000034 T shared_dispatch_stub_45
000000000049cee0 0000000000000028 T shared_dispatch_stub_46
000000000049cf10 0000000000000034 T shared_dispatch_stub_47
000000000049cf50 0000000000000034 T shared_dispatch_stub_48
000000000049cf90 0000000000000034 T shared_dispatch_stub_49
000000000049cfd0 0000000000000034 T shared_dispatch_stub_50
000000000049d010 0000000000000034 T shared_dispatch_stub_51
000000000049d050 0000000000000034 T shared_dispatch_stub_52
000000000049d090 0000000000000034 T shared_dispatch_stub_53
000000000049d0d0 0000000000000028 T shared_dispatch_stub_54
000000000049d100 0000000000000034 T shared_dispatch_stub_55
000000000049d140 0000000000000028 T shared_dispatch_stub_56
000000000049d170 0000000000000034 T shared_dispatch_stub_57
000000000049d1b0 0000000000000034 T shared_dispatch_stub_58
000000000049d1f0 0000000000000034 T shared_dispatch_stub_59
000000000049d230 0000000000000034 T shared_dispatch_stub_60
000000000049d270 0000000000000034 T shared_dispatch_stub_61
000000000049d2b0 0000000000000028 T shared_dispatch_stub_62
000000000049d2e0 0000000000000034 T shared_dispatch_stub_63
000000000049d320 0000000000000028 T shared_dispatch_stub_64
000000000049d350 0000000000000034 T shared_dispatch_stub_65
000000000049d390 0000000000000034 T shared_dispatch_stub_66
000000000049d3d0 0000000000000034 T shared_dispatch_stub_67
000000000049d410 0000000000000034 T shared_dispatch_stub_68
000000000049d450 0000000000000034 T shared_dispatch_stub_69
000000000049d490 0000000000000028 T shared_dispatch_stub_70
000000000049d4c0 0000000000000034 T shared_dispatch_stub_71
000000000049d500 0000000000000028 T shared_dispatch_stub_72
000000000049d530 0000000000000034 T shared_dispatch_stub_73
000000000049d570 0000000000000034 T shared_dispatch_stub_74
000000000049d5b0 0000000000000034 T shared_dispatch_stub_75
000000000049d5f0 0000000000000034 T shared_dispatch_stub_76
000000000049d630 0000000000000034 T shared_dispatch_stub_77
000000000049d670 0000000000000028 T shared_dispatch_stub_78
000000000049d6a0 0000000000000034 T shared_dispatch_stub_79
000000000049d6e0 0000000000000028 T shared_dispatch_stub_80
000000000049d710 0000000000000034 T shared_dispatch_stub_81
000000000049d750 0000000000000034 T shared_dispatch_stub_82
000000000049d790 0000000000000034 T shared_dispatch_stub_83
000000000049d7d0 0000000000000034 T shared_dispatch_stub_84
000000000049d810 0000000000000034 T shared_dispatch_stub_85
000000000049d850 0000000000000028 T shared_dispatch_stub_86
000000000049d880 0000000000000034 T shared_dispatch_stub_87
000000000049d8c0 0000000000000028 T shared_dispatch_stub_88
000000000049d8f0 0000000000000034 T shared_dispatch_stub_89
000000000049d930 0000000000000034 T shared_dispatch_stub_90
000000000049d970 0000000000000034 T shared_dispatch_stub_91
000000000049d9b0 0000000000000034 T shared_dispatch_stub_92
000000000049d9f0 0000000000000034 T shared_dispatch_stub_93
000000000049da30 0000000000000028 T shared_dispatch_stub_94
000000000049da60 0000000000000034 T shared_dispatch_stub_95
000000000049daa0 0000000000000028 T shared_dispatch_stub_96
000000000049dad0 0000000000000034 T shared_dispatch_stub_97
000000000049db10 0000000000000034 T shared_dispatch_stub_98
000000000049db50 0000000000000034 T shared_dispatch_stub_99
000000000049db90 0000000000000034 T shared_dispatch_stub_100
000000000049dbd0 0000000000000034 T shared_dispatch_stub_101
000000000049dc10 0000000000000028 T shared_dispatch_stub_102
000000000049dc40 0000000000000034 T shared_dispatch_stub_103
000000000049dc80 0000000000000028 T shared_dispatch_stub_104
000000000049dcb0 0000000000000034 T shared_dispatch_stub_105
000000000049dcf0 0000000000000034 T shared_dispatch_stub_106
000000000049dd30 0000000000000034 T shared_dispatch_stub_107
000000000049dd70 0000000000000034 T shared_dispatch_stub_108
000000000049ddb0 0000000000000034 T shared_dispatch_stub_109
000000000049ddf0 0000000000000028 T shared_dispatch_stub_110
000000000049de20 0000000000000034 T shared_dispatch_stub_111
000000000049de60 0000000000000028 T shared_dispatch_stub_112
000000000049de90 0000000000000034 T shared_dispatch_stub_113
000000000049ded0 0000000000000034 T shared_dispatch_stub_114
000000000049df10 0000000000000034 T shared_dispatch_stub_115
000000000049df50 0000000000000034 T shared_dispatch_stub_116
000000000049df90 0000000000000034 T shared_dispatch_stub_117
000000000049dfd0 0000000000000028 T shared_dispatch_stub_118
000000000049e000 0000000000000034 T shared_dispatch_stub_119
000000000049e040 0000000000000028 T shared_dispatch_stub_120
000000000049e070 0000000000000034 T shared_dispatch_stub_121
000000000049e0b0 0000000000000034 T shared_dispatch_stub_122
000000000049e0f0 0000000000000034 T shared_dispatch_stub_123
000000000049e130 0000000000000034 T shared_dispatch_stub_124
000000000049e170 0000000000000034 T shared_dispatch_stub_125
000000000049e1b0 0000000000000028 T shared_dispatch_stub_126
000000000049e1e0 0000000000000034 T shared_dispatch_stub_127
000000000049e220 0000000000000028 T shared_dispatch_stub_128
000000000049e250 0000000000000034 T shared_dispatch_stub_129
000000000049e290 0000000000000034 T shared_dispatch_stub_130
000000000049e2d0 0000000000000034 T shared_dispatch_stub_131
000000000049e310 0000000000000034 T shared_dispatch_stub_132
000000000049e350 0000000000000034 T shared_dispatch_stub_133
000000000049e390 0000000000000028 T shared_dispatch_stub_134
000000000049e3c0 0000000000000034 T shared_dispatch_stub_135
000000000049e400 0000000000000028 T shared_dispatch_stub_136
000000000049e430 0000000000000034 T shared_dispatch_stub_137
000000000049e470 0000000000000034 T shared_dispatch_stub_138
000000000049e4b0 0000000000000034 T shared_dispatch_stub_139
000000000049e4f0 0000000000000034 T shared_dispatch_stub_140
000000000049e530 0000000000000034 T shared_dispatch_stub_141
000000000049e570 0000000000000028 T shared_dispatch_stub_142
000000000049e5a0 0000000000000034 T shared_dispatch_stub_143
000000000049e5e0 0000000000000028 T shared_dispatch_stub_144
000000000049e610 0000000000000034 T shared_dispatch_stub_145
000000000049e650 0000000000000034 T shared_dispatch_stub_146
000000000049e690 0000000000000034 T shared_dispatch_stub_147
000000000049e6d0 0000000000000034 T shared_dispatch_stub_148
000000000049e710 0000000000000034 T shared_dispatch_stub_149
000000000049e750 0000000000000034 T shared_dispatch_stub_150
000000000049e790 0000000000000034 T shared_dispatch_stub_151
000000000049e7d0 0000000000000034 T shared_dispatch_stub_152
000000000049e810 0000000000000034 T shared_dispatch_stub_153
000000000049e850 0000000000000034 T shared_dispatch_stub_154
000000000049e890 0000000000000034 T shared_dispatch_stub_155
000000000049e8d0 0000000000000034 T shared_dispatch_stub_156
000000000049e910 0000000000000034 T shared_dispatch_stub_157
000000000049e950 0000000000000034 T shared_dispatch_stub_158
000000000049e990 0000000000000034 T shared_dispatch_stub_159
000000000049e9d0 0000000000000034 T shared_dispatch_stub_160
000000000049ea10 0000000000000034 T shared_dispatch_stub_161
000000000049ea50 0000000000000034 T shared_dispatch_stub_162
000000000049ea90 0000000000000034 T shared_dispatch_stub_163
000000000049ead0 0000000000000034 T shared_dispatch_stub_164
000000000049eb10 0000000000000034 T shared_dispatch_stub_165
000000000049eb50 0000000000000034 T shared_dispatch_stub_166
000000000049eb90 0000000000000034 T shared_dispatch_stub_167
000000000049ebd0 0000000000000028 T shared_dispatch_stub_168
000000000049ec00 0000000000000034 T shared_dispatch_stub_169
000000000049ec40 0000000000000034 T shared_dispatch_stub_170
000000000049ec80 0000000000000034 T shared_dispatch_stub_171
000000000049ecc0 0000000000000034 T shared_dispatch_stub_172
000000000049ed00 0000000000000028 T shared_dispatch_stub_173
000000000049ed30 0000000000000034 T shared_dispatch_stub_174
000000000049ed70 0000000000000034 T shared_dispatch_stub_175
000000000049edb0 0000000000000034 T shared_dispatch_stub_176
000000000049edf0 0000000000000034 T shared_dispatch_stub_177
000000000049ee30 0000000000000034 T shared_dispatch_stub_178
000000000049ee70 0000000000000034 T shared_dispatch_stub_179
000000000049eeb0 0000000000000034 T shared_dispatch_stub_180
000000000049eef0 0000000000000034 T shared_dispatch_stub_181
000000000049ef30 0000000000000034 T shared_dispatch_stub_182
000000000049ef70 0000000000000034 T shared_dispatch_stub_183
000000000049efb0 0000000000000034 T shared_dispatch_stub_184
000000000049eff0 0000000000000034 T shared_dispatch_stub_185
000000000049f030 0000000000000034 T shared_dispatch_stub_186
000000000049f070 0000000000000034 T shared_dispatch_stub_187
000000000049f0b0 0000000000000034 T shared_dispatch_stub_188
000000000049f0f0 0000000000000034 T shared_dispatch_stub_189
000000000049f130 0000000000000034 T shared_dispatch_stub_190
000000000049f170 0000000000000034 T shared_dispatch_stub_191
000000000049f1b0 0000000000000034 T shared_dispatch_stub_192
000000000049f1f0 0000000000000034 T shared_dispatch_stub_193
000000000049f230 0000000000000034 T shared_dispatch_stub_194
000000000049f270 0000000000000034 T shared_dispatch_stub_195
000000000049f2b0 0000000000000034 T shared_dispatch_stub_196
000000000049f2f0 0000000000000028 T shared_dispatch_stub_197
000000000049f320 0000000000000034 T shared_dispatch_stub_198
000000000049f360 0000000000000028 T shared_dispatch_stub_199
000000000049f390 0000000000000028 T shared_dispatch_stub_200
000000000049f3c0 0000000000000034 T shared_dispatch_stub_201
000000000049f400 0000000000000034 T shared_dispatch_stub_202
000000000049f440 0000000000000034 T shared_dispatch_stub_203
000000000049f480 0000000000000028 T shared_dispatch_stub_204
000000000049f4b0 0000000000000028 T shared_dispatch_stub_205
000000000049f4e0 0000000000000028 T shared_dispatch_stub_206
000000000049f510 0000000000000034 T shared_dispatch_stub_207
000000000049f550 0000000000000028 T shared_dispatch_stub_208
000000000049f580 0000000000000034 T shared_dispatch_stub_209
000000000049f5c0 0000000000000034 T shared_dispatch_stub_210
000000000049f600 0000000000000034 T shared_dispatch_stub_211
000000000049f640 0000000000000034 T shared_dispatch_stub_212
000000000049f680 0000000000000034 T shared_dispatch_stub_213
000000000049f6c0 0000000000000034 T shared_dispatch_stub_214
000000000049f700 0000000000000034 T shared_dispatch_stub_215
000000000049f740 0000000000000028 T shared_dispatch_stub_216
000000000049f770 0000000000000028 T shared_dispatch_stub_217
000000000049f7a0 0000000000000028 T shared_dispatch_stub_218
000000000049f7d0 0000000000000034 T shared_dispatch_stub_219
000000000049f810 0000000000000034 T shared_dispatch_stub_220
000000000049f850 0000000000000034 T shared_dispatch_stub_221
000000000049f890 0000000000000034 T shared_dispatch_stub_222
000000000049f8d0 0000000000000034 T shared_dispatch_stub_223
000000000049f910 0000000000000034 T shared_dispatch_stub_224
000000000049f950 0000000000000034 T shared_dispatch_stub_225
000000000049f990 0000000000000034 T shared_dispatch_stub_226
000000000049f9d0 0000000000000034 T shared_dispatch_stub_227
000000000049fa10 0000000000000028 T shared_dispatch_stub_228
000000000049fa40 0000000000000034 T shared_dispatch_stub_229
000000000049fa80 0000000000000028 T shared_dispatch_stub_230
000000000049fab0 0000000000000034 T shared_dispatch_stub_231
000000000049faf0 0000000000000028 T shared_dispatch_stub_232
000000000049fb20 0000000000000034 T shared_dispatch_stub_233
000000000049fb60 0000000000000028 T shared_dispatch_stub_234
000000000049fb90 0000000000000034 T shared_dispatch_stub_235
000000000049fbd0 0000000000000034 T shared_dispatch_stub_236
000000000049fc10 0000000000000034 T shared_dispatch_stub_237
000000000049fc50 0000000000000034 T shared_dispatch_stub_238
000000000049fc90 0000000000000034 T shared_dispatch_stub_239
000000000049fcd0 0000000000000034 T shared_dispatch_stub_240
000000000049fd10 0000000000000034 T shared_dispatch_stub_241
000000000049fd50 0000000000000034 T shared_dispatch_stub_242
000000000049fd90 0000000000000034 T shared_dispatch_stub_243
000000000049fdd0 0000000000000034 T shared_dispatch_stub_244
000000000049fe10 0000000000000034 T shared_dispatch_stub_245
000000000049fe50 0000000000000028 T shared_dispatch_stub_246
000000000049fe80 0000000000000034 T shared_dispatch_stub_247
000000000049fec0 0000000000000034 T shared_dispatch_stub_248
000000000049ff00 0000000000000034 T shared_dispatch_stub_249
000000000049ff40 0000000000000034 T shared_dispatch_stub_250
000000000049ff80 0000000000000034 T shared_dispatch_stub_251
000000000049ffc0 0000000000000034 T shared_dispatch_stub_252
00000000004a0000 0000000000000034 T shared_dispatch_stub_253
00000000004a0040 0000000000000034 T shared_dispatch_stub_254
00000000004a0080 0000000000000034 T shared_dispatch_stub_255
00000000004a00c0 0000000000000034 T shared_dispatch_stub_256
00000000004a0100 0000000000000034 T shared_dispatch_stub_257
00000000004a0140 0000000000000034 T shared_dispatch_stub_258
00000000004a0180 0000000000000034 T shared_dispatch_stub_259
00000000004a01c0 0000000000000034 T shared_dispatch_stub_260
00000000004a0200 0000000000000028 T shared_dispatch_stub_261
00000000004a0230 0000000000000034 T shared_dispatch_stub_262
00000000004a0270 0000000000000034 T shared_dispatch_stub_263
00000000004a02b0 0000000000000034 T shared_dispatch_stub_264
00000000004a02f0 0000000000000034 T shared_dispatch_stub_265
00000000004a0330 0000000000000034 T shared_dispatch_stub_266
00000000004a0370 0000000000000034 T shared_dispatch_stub_267
00000000004a03b0 0000000000000034 T shared_dispatch_stub_268
00000000004a03f0 0000000000000034 T shared_dispatch_stub_269
00000000004a0430 0000000000000034 T shared_dispatch_stub_270
00000000004a0470 0000000000000034 T shared_dispatch_stub_271
00000000004a04b0 0000000000000034 T shared_dispatch_stub_272
00000000004a04f0 0000000000000034 T shared_dispatch_stub_273
00000000004a0530 0000000000000034 T shared_dispatch_stub_274
00000000004a0570 0000000000000034 T shared_dispatch_stub_275
00000000004a05b0 0000000000000034 T shared_dispatch_stub_276
00000000004a05f0 0000000000000034 T shared_dispatch_stub_277
00000000004a0630 0000000000000034 T shared_dispatch_stub_278
00000000004a0670 0000000000000034 T shared_dispatch_stub_279
00000000004a06b0 0000000000000034 T shared_dispatch_stub_280
00000000004a06f0 0000000000000034 T shared_dispatch_stub_281
00000000004a0730 0000000000000034 T shared_dispatch_stub_282
00000000004a0770 0000000000000034 T shared_dispatch_stub_283
00000000004a07b0 0000000000000034 T shared_dispatch_stub_284
00000000004a07f0 0000000000000034 T shared_dispatch_stub_285
00000000004a0830 0000000000000034 T shared_dispatch_stub_286
00000000004a0870 0000000000000034 T shared_dispatch_stub_287
00000000004a08b0 0000000000000028 T shared_dispatch_stub_288
00000000004a08e0 0000000000000028 T shared_dispatch_stub_289
00000000004a0910 0000000000000028 T shared_dispatch_stub_290
00000000004a0940 0000000000000034 T shared_dispatch_stub_291
00000000004a0980 0000000000000034 T shared_dispatch_stub_292
00000000004a09c0 0000000000000034 T shared_dispatch_stub_293
00000000004a0a00 0000000000000034 T shared_dispatch_stub_294
00000000004a0a40 0000000000000034 T shared_dispatch_stub_295
00000000004a0a80 0000000000000028 T shared_dispatch_stub_296
00000000004a0ab0 0000000000000028 T shared_dispatch_stub_297
00000000004a0ae0 0000000000000028 T shared_dispatch_stub_298
00000000004a0b10 0000000000000028 T shared_dispatch_stub_299
00000000004a0b40 0000000000000028 T shared_dispatch_stub_300
00000000004a0b70 0000000000000028 T shared_dispatch_stub_301
00000000004a0ba0 0000000000000028 T shared_dispatch_stub_302
00000000004a0bd0 0000000000000028 T shared_dispatch_stub_303
00000000004a0c00 0000000000000028 T shared_dispatch_stub_304
00000000004a0c30 0000000000000034 T shared_dispatch_stub_305
00000000004a0c70 0000000000000034 T shared_dispatch_stub_306
00000000004a0cb0 0000000000000034 T shared_dispatch_stub_307
00000000004a0cf0 0000000000000034 T shared_dispatch_stub_308
00000000004a0d30 0000000000000034 T shared_dispatch_stub_309
00000000004a0d70 0000000000000034 T shared_dispatch_stub_310
00000000004a0db0 0000000000000034 T shared_dispatch_stub_311
00000000004a0df0 0000000000000034 T shared_dispatch_stub_312
00000000004a0e30 0000000000000034 T shared_dispatch_stub_313
00000000004a0e70 0000000000000034 T shared_dispatch_stub_314
00000000004a0eb0 0000000000000034 T shared_dispatch_stub_315
00000000004a0ef0 0000000000000034 T shared_dispatch_stub_316
00000000004a0f30 0000000000000034 T shared_dispatch_stub_317
00000000004a0f70 0000000000000034 T shared_dispatch_stub_318
00000000004a0fb0 0000000000000028 T shared_dispatch_stub_319
00000000004a0fe0 0000000000000034 T shared_dispatch_stub_320
00000000004a1020 0000000000000034 T shared_dispatch_stub_321
00000000004a1060 0000000000000034 T shared_dispatch_stub_322
00000000004a10a0 0000000000000034 T shared_dispatch_stub_323
00000000004a10e0 0000000000000034 T shared_dispatch_stub_324
00000000004a1120 0000000000000034 T shared_dispatch_stub_325
00000000004a1160 0000000000000034 T shared_dispatch_stub_326
00000000004a11a0 0000000000000034 T shared_dispatch_stub_327
00000000004a11e0 0000000000000034 T shared_dispatch_stub_328
00000000004a1220 0000000000000034 T shared_dispatch_stub_329
00000000004a1260 0000000000000034 T shared_dispatch_stub_330
00000000004a12a0 0000000000000034 T shared_dispatch_stub_331
00000000004a12e0 0000000000000034 T shared_dispatch_stub_332
00000000004a1320 0000000000000034 T shared_dispatch_stub_333
00000000004a1360 0000000000000028 T shared_dispatch_stub_334
00000000004a1390 0000000000000034 T shared_dispatch_stub_335
00000000004a13d0 0000000000000028 T shared_dispatch_stub_336
00000000004a1400 0000000000000034 T shared_dispatch_stub_337
00000000004a1440 0000000000000034 T shared_dispatch_stub_338
00000000004a1480 0000000000000034 T shared_dispatch_stub_339
00000000004a14c0 0000000000000034 T shared_dispatch_stub_340
00000000004a1500 0000000000000034 T shared_dispatch_stub_341
00000000004a1540 0000000000000034 T shared_dispatch_stub_342
00000000004a1580 0000000000000034 T shared_dispatch_stub_343
00000000004a15c0 0000000000000034 T shared_dispatch_stub_344
00000000004a1600 0000000000000034 T shared_dispatch_stub_345
00000000004a1640 0000000000000034 T shared_dispatch_stub_346
00000000004a1680 0000000000000034 T shared_dispatch_stub_347
00000000004a16c0 0000000000000034 T shared_dispatch_stub_348
00000000004a1700 0000000000000034 T shared_dispatch_stub_349
00000000004a1740 0000000000000034 T shared_dispatch_stub_350
00000000004a1780 0000000000000034 T shared_dispatch_stub_351
00000000004a17c0 0000000000000034 T shared_dispatch_stub_352
00000000004a1800 0000000000000034 T shared_dispatch_stub_353
00000000004a1840 0000000000000034 T shared_dispatch_stub_354
00000000004a1880 0000000000000034 T shared_dispatch_stub_355
00000000004a18c0 0000000000000034 T shared_dispatch_stub_356
00000000004a1900 0000000000000034 T shared_dispatch_stub_357
00000000004a1940 0000000000000034 T shared_dispatch_stub_358
00000000004a1980 0000000000000034 T shared_dispatch_stub_359
00000000004a19c0 0000000000000034 T shared_dispatch_stub_360
00000000004a1a00 0000000000000034 T shared_dispatch_stub_361
00000000004a1a40 0000000000000034 T shared_dispatch_stub_362
00000000004a1a80 0000000000000034 T shared_dispatch_stub_363
00000000004a1ac0 0000000000000034 T shared_dispatch_stub_364
00000000004a1b00 0000000000000034 T shared_dispatch_stub_365
00000000004a1b40 0000000000000034 T shared_dispatch_stub_366
00000000004a1b80 0000000000000034 T shared_dispatch_stub_367
00000000004a1bc0 0000000000000034 T shared_dispatch_stub_368
00000000004a1c00 0000000000000034 T shared_dispatch_stub_369
00000000004a1c40 0000000000000034 T shared_dispatch_stub_370
00000000004a1c80 0000000000000034 T shared_dispatch_stub_371
00000000004a1cc0 0000000000000034 T shared_dispatch_stub_372
00000000004a1d00 0000000000000034 T shared_dispatch_stub_373
00000000004a1d40 0000000000000034 T shared_dispatch_stub_374
00000000004a1d80 0000000000000034 T shared_dispatch_stub_375
00000000004a1dc0 0000000000000034 T shared_dispatch_stub_376
00000000004a1e00 0000000000000034 T shared_dispatch_stub_377
00000000004a1e40 0000000000000034 T shared_dispatch_stub_378
00000000004a1e80 0000000000000034 T shared_dispatch_stub_379
00000000004a1ec0 0000000000000034 T shared_dispatch_stub_380
00000000004a1f00 0000000000000034 T shared_dispatch_stub_381
00000000004a1f40 0000000000000034 T shared_dispatch_stub_382
00000000004a1f80 0000000000000034 T shared_dispatch_stub_383
00000000004a1fc0 0000000000000034 T shared_dispatch_stub_384
00000000004a2000 0000000000000034 T shared_dispatch_stub_385
00000000004a2040 0000000000000034 T shared_dispatch_stub_386
00000000004a2080 0000000000000034 T shared_dispatch_stub_387
00000000004a20c0 0000000000000034 T shared_dispatch_stub_388
00000000004a2100 0000000000000034 T shared_dispatch_stub_389
00000000004a2140 0000000000000034 T shared_dispatch_stub_390
00000000004a2180 0000000000000034 T shared_dispatch_stub_391
00000000004a21c0 0000000000000034 T shared_dispatch_stub_392
00000000004a2200 0000000000000034 T shared_dispatch_stub_393
00000000004a2240 0000000000000034 T shared_dispatch_stub_394
00000000004a2280 0000000000000034 T shared_dispatch_stub_395
00000000004a22c0 0000000000000034 T shared_dispatch_stub_396
00000000004a2300 0000000000000034 T shared_dispatch_stub_397
00000000004a2340 0000000000000034 T shared_dispatch_stub_398
00000000004a2380 0000000000000034 T shared_dispatch_stub_399
00000000004a23c0 0000000000000034 T shared_dispatch_stub_400
00000000004a2400 0000000000000034 T shared_dispatch_stub_401
00000000004a2440 0000000000000034 T shared_dispatch_stub_402
00000000004a2480 0000000000000034 T shared_dispatch_stub_403
00000000004a24c0 0000000000000034 T shared_dispatch_stub_404
00000000004a2500 0000000000000034 T shared_dispatch_stub_405
00000000004a2540 0000000000000034 T shared_dispatch_stub_406
00000000004a2580 0000000000000034 T shared_dispatch_stub_407
00000000004a25c0 0000000000000034 T shared_dispatch_stub_408
00000000004a2600 0000000000000034 T shared_dispatch_stub_409
00000000004a2640 0000000000000034 T shared_dispatch_stub_410
00000000004a2680 0000000000000034 T shared_dispatch_stub_411
00000000004a26c0 0000000000000034 T shared_dispatch_stub_412
00000000004a2700 0000000000000034 T shared_dispatch_stub_413
00000000004a2740 0000000000000034 T shared_dispatch_stub_414
00000000004a2780 0000000000000034 T shared_dispatch_stub_415
00000000004a27c0 0000000000000034 T shared_dispatch_stub_416
00000000004a2800 0000000000000034 T shared_dispatch_stub_417
00000000004a2840 0000000000000034 T shared_dispatch_stub_418
00000000004a2880 0000000000000034 T shared_dispatch_stub_419
00000000004a28c0 0000000000000034 T shared_dispatch_stub_420
00000000004a2900 0000000000000034 T shared_dispatch_stub_421
00000000004a2940 0000000000000028 T shared_dispatch_stub_422
00000000004a2970 0000000000000034 T shared_dispatch_stub_423
00000000004a29b0 0000000000000034 T shared_dispatch_stub_424
00000000004a29f0 0000000000000034 T shared_dispatch_stub_425
00000000004a2a30 0000000000000034 T shared_dispatch_stub_426
00000000004a2a70 0000000000000034 T shared_dispatch_stub_427
00000000004a2ab0 0000000000000034 T shared_dispatch_stub_428
00000000004a2af0 0000000000000034 T shared_dispatch_stub_429
00000000004a2b30 0000000000000034 T shared_dispatch_stub_430
00000000004a2b70 0000000000000028 T shared_dispatch_stub_431
00000000004a2ba0 0000000000000034 T shared_dispatch_stub_432
00000000004a2be0 0000000000000034 T shared_dispatch_stub_433
00000000004a2c20 0000000000000034 T shared_dispatch_stub_434
00000000004a2c60 0000000000000034 T shared_dispatch_stub_435
00000000004a2ca0 0000000000000034 T shared_dispatch_stub_436
00000000004a2ce0 0000000000000034 T shared_dispatch_stub_437
00000000004a2d20 0000000000000034 T shared_dispatch_stub_438
00000000004a2d60 0000000000000034 T shared_dispatch_stub_439
00000000004a2da0 0000000000000034 T shared_dispatch_stub_440
00000000004a2de0 0000000000000034 T shared_dispatch_stub_441
00000000004a2e20 0000000000000034 T shared_dispatch_stub_442
00000000004a2e60 0000000000000034 T shared_dispatch_stub_443
00000000004a2ea0 0000000000000028 T shared_dispatch_stub_444
00000000004a2ed0 0000000000000034 T shared_dispatch_stub_445
00000000004a2f10 0000000000000028 T shared_dispatch_stub_446
00000000004a2f40 0000000000000034 T shared_dispatch_stub_447
00000000004a2f80 0000000000000034 T shared_dispatch_stub_448
00000000004a2fc0 0000000000000034 T shared_dispatch_stub_449
00000000004a3000 0000000000000034 T shared_dispatch_stub_450
00000000004a3040 0000000000000034 T shared_dispatch_stub_451
00000000004a3080 0000000000000028 T shared_dispatch_stub_452
00000000004a30b0 0000000000000034 T shared_dispatch_stub_453
00000000004a30f0 0000000000000028 T shared_dispatch_stub_454
00000000004a3120 0000000000000034 T shared_dispatch_stub_455
00000000004a3160 0000000000000034 T shared_dispatch_stub_456
00000000004a31a0 0000000000000034 T shared_dispatch_stub_457
00000000004a31e0 0000000000000034 T shared_dispatch_stub_458
00000000004a3220 0000000000000034 T shared_dispatch_stub_459
00000000004a3260 0000000000000034 T shared_dispatch_stub_460
00000000004a32a0 0000000000000034 T shared_dispatch_stub_461
00000000004a32e0 0000000000000034 T shared_dispatch_stub_462
00000000004a3320 0000000000000034 T shared_dispatch_stub_463
00000000004a3360 0000000000000034 T shared_dispatch_stub_464
00000000004a33a0 0000000000000034 T shared_dispatch_stub_465
00000000004a33e0 0000000000000034 T shared_dispatch_stub_466
00000000004a3420 0000000000000034 T shared_dispatch_stub_467
00000000004a3460 0000000000000034 T shared_dispatch_stub_468
00000000004a34a0 0000000000000034 T shared_dispatch_stub_469
00000000004a34e0 0000000000000034 T shared_dispatch_stub_470
00000000004a3520 0000000000000034 T shared_dispatch_stub_471
00000000004a3560 0000000000000034 T shared_dispatch_stub_472
00000000004a35a0 0000000000000034 T shared_dispatch_stub_473
00000000004a35e0 0000000000000034 T shared_dispatch_stub_474
00000000004a3620 0000000000000034 T shared_dispatch_stub_475
00000000004a3660 0000000000000034 T shared_dispatch_stub_476
00000000004a36a0 0000000000000034 T shared_dispatch_stub_477
00000000004a36e0 0000000000000034 T shared_dispatch_stub_478
00000000004a3720 0000000000000034 T shared_dispatch_stub_479
00000000004a3760 0000000000000034 T shared_dispatch_stub_480
00000000004a37a0 0000000000000034 T shared_dispatch_stub_481
00000000004a37e0 0000000000000034 T shared_dispatch_stub_482
00000000004a3820 0000000000000028 T shared_dispatch_stub_483
00000000004a3850 0000000000000034 T shared_dispatch_stub_484
00000000004a3890 0000000000000034 T shared_dispatch_stub_485
00000000004a38d0 0000000000000034 T shared_dispatch_stub_486
00000000004a3910 0000000000000034 T shared_dispatch_stub_487
00000000004a3950 0000000000000034 T shared_dispatch_stub_488
00000000004a3990 0000000000000034 T shared_dispatch_stub_489
00000000004a39d0 0000000000000034 T shared_dispatch_stub_490
00000000004a3a10 0000000000000034 T shared_dispatch_stub_491
00000000004a3a50 0000000000000034 T shared_dispatch_stub_492
00000000004a3a90 0000000000000034 T shared_dispatch_stub_493
00000000004a3ad0 0000000000000034 T shared_dispatch_stub_494
00000000004a3b10 0000000000000034 T shared_dispatch_stub_495
00000000004a3b50 0000000000000034 T shared_dispatch_stub_496
00000000004a3b90 0000000000000034 T shared_dispatch_stub_497
00000000004a3bd0 0000000000000034 T shared_dispatch_stub_498
00000000004a3c10 0000000000000034 T shared_dispatch_stub_499
00000000004a3c50 0000000000000034 T shared_dispatch_stub_500
00000000004a3c90 0000000000000034 T shared_dispatch_stub_501
00000000004a3cd0 0000000000000034 T shared_dispatch_stub_502
00000000004a3d10 0000000000000034 T shared_dispatch_stub_503
00000000004a3d50 0000000000000034 T shared_dispatch_stub_504
00000000004a3d90 0000000000000034 T shared_dispatch_stub_505
00000000004a3dd0 0000000000000034 T shared_dispatch_stub_506
00000000004a3e10 0000000000000034 T shared_dispatch_stub_507
00000000004a3e50 0000000000000034 T shared_dispatch_stub_508
00000000004a3e90 0000000000000034 T shared_dispatch_stub_509
00000000004a3ed0 0000000000000034 T shared_dispatch_stub_510
00000000004a3f10 0000000000000034 T shared_dispatch_stub_511
00000000004a3f50 0000000000000034 T shared_dispatch_stub_512
00000000004a3f90 0000000000000034 T shared_dispatch_stub_513
00000000004a3fd0 0000000000000034 T shared_dispatch_stub_514
00000000004a4010 0000000000000034 T shared_dispatch_stub_515
00000000004a4050 0000000000000034 T shared_dispatch_stub_516
00000000004a4090 0000000000000034 T shared_dispatch_stub_517
00000000004a40d0 0000000000000034 T shared_dispatch_stub_518
00000000004a4110 0000000000000034 T shared_dispatch_stub_519
00000000004a4150 0000000000000034 T shared_dispatch_stub_520
00000000004a4190 0000000000000034 T shared_dispatch_stub_521
00000000004a41d0 0000000000000034 T shared_dispatch_stub_522
00000000004a4210 0000000000000034 T shared_dispatch_stub_523
00000000004a4250 0000000000000034 T shared_dispatch_stub_524
00000000004a4290 0000000000000034 T shared_dispatch_stub_525
00000000004a42d0 0000000000000034 T shared_dispatch_stub_526
00000000004a4310 0000000000000034 T shared_dispatch_stub_527
00000000004a4350 0000000000000034 T shared_dispatch_stub_528
00000000004a4390 0000000000000034 T shared_dispatch_stub_529
00000000004a43d0 0000000000000034 T shared_dispatch_stub_530
00000000004a4410 0000000000000034 T shared_dispatch_stub_531
00000000004a4450 0000000000000034 T shared_dispatch_stub_532
00000000004a4490 0000000000000034 T shared_dispatch_stub_533
00000000004a44d0 0000000000000034 T shared_dispatch_stub_534
00000000004a4510 0000000000000034 T shared_dispatch_stub_535
00000000004a4550 0000000000000034 T shared_dispatch_stub_536
00000000004a4590 0000000000000034 T shared_dispatch_stub_537
00000000004a45d0 0000000000000034 T shared_dispatch_stub_538
00000000004a4610 0000000000000034 T shared_dispatch_stub_539
00000000004a4650 0000000000000034 T shared_dispatch_stub_540
00000000004a4690 0000000000000034 T shared_dispatch_stub_541
00000000004a46d0 0000000000000034 T shared_dispatch_stub_542
00000000004a4710 0000000000000034 T shared_dispatch_stub_543
00000000004a4750 0000000000000034 T shared_dispatch_stub_544
00000000004a4790 0000000000000034 T shared_dispatch_stub_545
00000000004a47d0 0000000000000034 T shared_dispatch_stub_546
00000000004a4810 0000000000000034 T shared_dispatch_stub_547
00000000004a4850 0000000000000034 T shared_dispatch_stub_548
00000000004a4890 0000000000000034 T shared_dispatch_stub_549
00000000004a48d0 0000000000000034 T shared_dispatch_stub_550
00000000004a4910 0000000000000034 T shared_dispatch_stub_551
00000000004a4950 0000000000000034 T shared_dispatch_stub_552
00000000004a4990 0000000000000034 T shared_dispatch_stub_553
00000000004a49d0 0000000000000034 T shared_dispatch_stub_554
00000000004a4a10 0000000000000034 T shared_dispatch_stub_555
00000000004a4a50 0000000000000034 T shared_dispatch_stub_556
00000000004a4a90 0000000000000034 T shared_dispatch_stub_557
00000000004a4ad0 0000000000000034 T shared_dispatch_stub_558
00000000004a4b10 0000000000000034 T shared_dispatch_stub_559
00000000004a4b50 0000000000000034 T shared_dispatch_stub_560
00000000004a4b90 0000000000000034 T shared_dispatch_stub_561
00000000004a4bd0 0000000000000034 T shared_dispatch_stub_562
00000000004a4c10 0000000000000034 T shared_dispatch_stub_563
00000000004a4c50 0000000000000034 T shared_dispatch_stub_564
00000000004a4c90 0000000000000034 T shared_dispatch_stub_565
00000000004a4cd0 0000000000000034 T shared_dispatch_stub_566
00000000004a4d10 0000000000000034 T shared_dispatch_stub_567
00000000004a4d50 0000000000000034 T shared_dispatch_stub_568
00000000004a4d90 0000000000000034 T shared_dispatch_stub_569
00000000004a4dd0 0000000000000034 T shared_dispatch_stub_570
00000000004a4e10 0000000000000034 T shared_dispatch_stub_571
00000000004a4e50 0000000000000034 T shared_dispatch_stub_572
00000000004a4e90 0000000000000034 T shared_dispatch_stub_573
00000000004a4ed0 0000000000000034 T shared_dispatch_stub_574
00000000004a4f10 0000000000000034 T shared_dispatch_stub_575
00000000004a4f50 0000000000000034 T shared_dispatch_stub_576
00000000004a4f90 0000000000000034 T shared_dispatch_stub_577
00000000004a4fd0 0000000000000034 T shared_dispatch_stub_578
00000000004a5010 0000000000000034 T shared_dispatch_stub_579
00000000004a5050 0000000000000034 T shared_dispatch_stub_580
00000000004a5090 0000000000000034 T shared_dispatch_stub_581
00000000004a50d0 0000000000000034 T shared_dispatch_stub_582
00000000004a5110 0000000000000028 T shared_dispatch_stub_583
00000000004a5140 0000000000000028 T shared_dispatch_stub_584
00000000004a5170 0000000000000034 T shared_dispatch_stub_585
00000000004a51b0 0000000000000034 T shared_dispatch_stub_586
00000000004a51f0 0000000000000034 T shared_dispatch_stub_587
00000000004a5230 0000000000000034 T shared_dispatch_stub_588
00000000004a5270 0000000000000034 T shared_dispatch_stub_589
00000000004a52b0 0000000000000034 T shared_dispatch_stub_590
00000000004a52f0 0000000000000034 T shared_dispatch_stub_591
00000000004a5330 0000000000000034 T shared_dispatch_stub_592
00000000004a5370 0000000000000034 T shared_dispatch_stub_593
00000000004a53b0 0000000000000034 T shared_dispatch_stub_594
00000000004a53f0 0000000000000034 T shared_dispatch_stub_595
00000000004a5430 0000000000000034 T shared_dispatch_stub_596
00000000004a5470 0000000000000034 T shared_dispatch_stub_597
00000000004a54b0 0000000000000034 T shared_dispatch_stub_598
00000000004a54f0 0000000000000034 T shared_dispatch_stub_599
00000000004a5530 0000000000000034 T shared_dispatch_stub_600
00000000004a5570 0000000000000034 T shared_dispatch_stub_601
00000000004a55b0 0000000000000034 T shared_dispatch_stub_602
00000000004a55f0 0000000000000034 T shared_dispatch_stub_603
00000000004a5630 0000000000000034 T shared_dispatch_stub_604
00000000004a5670 0000000000000034 T shared_dispatch_stub_605
00000000004a56b0 0000000000000034 T shared_dispatch_stub_606
00000000004a56f0 0000000000000034 T shared_dispatch_stub_607
00000000004a5730 0000000000000034 T shared_dispatch_stub_608
00000000004a5770 0000000000000034 T shared_dispatch_stub_609
00000000004a57b0 0000000000000034 T shared_dispatch_stub_610
00000000004a57f0 0000000000000034 T shared_dispatch_stub_611
00000000004a5830 0000000000000034 T shared_dispatch_stub_612
00000000004a5870 0000000000000034 T shared_dispatch_stub_613
00000000004a58b0 0000000000000034 T shared_dispatch_stub_614
00000000004a58f0 0000000000000034 T shared_dispatch_stub_615
00000000004a5930 0000000000000034 T shared_dispatch_stub_616
00000000004a5970 0000000000000034 T shared_dispatch_stub_617
00000000004a59b0 0000000000000034 T shared_dispatch_stub_618
00000000004a59f0 0000000000000034 T shared_dispatch_stub_619
00000000004a5a30 0000000000000028 T shared_dispatch_stub_620
00000000004a5a60 0000000000000034 T shared_dispatch_stub_621
00000000004a5aa0 0000000000000034 T shared_dispatch_stub_622
00000000004a5ae0 0000000000000034 T shared_dispatch_stub_623
00000000004a5b20 0000000000000034 T shared_dispatch_stub_624
00000000004a5b60 0000000000000034 T shared_dispatch_stub_625
00000000004a5ba0 0000000000000034 T shared_dispatch_stub_626
00000000004a5be0 0000000000000034 T shared_dispatch_stub_627
00000000004a5c20 0000000000000034 T shared_dispatch_stub_628
00000000004a5c60 0000000000000034 T shared_dispatch_stub_629
00000000004a5ca0 0000000000000034 T shared_dispatch_stub_630
00000000004a5ce0 0000000000000034 T shared_dispatch_stub_631
00000000004a5d20 0000000000000034 T shared_dispatch_stub_632
00000000004a5d60 0000000000000034 T shared_dispatch_stub_633
00000000004a5da0 0000000000000034 T shared_dispatch_stub_634
00000000004a5de0 0000000000000034 T shared_dispatch_stub_635
00000000004a5e20 0000000000000034 T shared_dispatch_stub_636
00000000004a5e60 0000000000000034 T shared_dispatch_stub_637
00000000004a5ea0 0000000000000034 T shared_dispatch_stub_638
00000000004a5ee0 0000000000000034 T shared_dispatch_stub_639
00000000004a5f20 0000000000000034 T shared_dispatch_stub_640
00000000004a5f60 0000000000000034 T shared_dispatch_stub_641
00000000004a5fa0 0000000000000034 T shared_dispatch_stub_642
00000000004a5fe0 0000000000000034 T shared_dispatch_stub_643
00000000004a6020 0000000000000034 T shared_dispatch_stub_644
00000000004a6060 0000000000000034 T shared_dispatch_stub_645
00000000004a60a0 0000000000000034 T shared_dispatch_stub_646
00000000004a60e0 0000000000000034 T shared_dispatch_stub_647
00000000004a6120 0000000000000034 T shared_dispatch_stub_648
00000000004a6160 0000000000000034 T shared_dispatch_stub_649
00000000004a61a0 0000000000000028 T shared_dispatch_stub_650
00000000004a61d0 0000000000000034 T shared_dispatch_stub_651
00000000004a6210 0000000000000034 T shared_dispatch_stub_652
00000000004a6250 0000000000000034 T shared_dispatch_stub_653
00000000004a6290 0000000000000034 T shared_dispatch_stub_654
00000000004a62d0 0000000000000034 T shared_dispatch_stub_655
00000000004a6310 0000000000000034 T shared_dispatch_stub_656
00000000004a6350 0000000000000034 T shared_dispatch_stub_657
00000000004a6390 0000000000000034 T shared_dispatch_stub_658
00000000004a63d0 0000000000000034 T shared_dispatch_stub_659
00000000004a6410 0000000000000034 T shared_dispatch_stub_660
00000000004a6450 0000000000000034 T shared_dispatch_stub_661
00000000004a6490 0000000000000034 T shared_dispatch_stub_662
00000000004a64d0 0000000000000034 T shared_dispatch_stub_663
00000000004a6510 0000000000000034 T shared_dispatch_stub_664
00000000004a6550 0000000000000034 T shared_dispatch_stub_665
00000000004a6590 0000000000000034 T shared_dispatch_stub_666
00000000004a65d0 0000000000000034 T shared_dispatch_stub_667
00000000004a6610 0000000000000034 T shared_dispatch_stub_668
00000000004a6650 0000000000000034 T shared_dispatch_stub_669
00000000004a6690 0000000000000034 T shared_dispatch_stub_670
00000000004a66d0 0000000000000034 T shared_dispatch_stub_671
00000000004a6710 0000000000000034 T shared_dispatch_stub_672
00000000004a6750 0000000000000034 T shared_dispatch_stub_673
00000000004a6790 0000000000000034 T shared_dispatch_stub_674
00000000004a67d0 0000000000000034 T shared_dispatch_stub_675
00000000004a6810 0000000000000034 T shared_dispatch_stub_676
00000000004a6850 0000000000000034 T shared_dispatch_stub_677
00000000004a6890 0000000000000034 T shared_dispatch_stub_678
00000000004a68d0 0000000000000034 T shared_dispatch_stub_679
00000000004a6910 0000000000000034 T shared_dispatch_stub_680
00000000004a6950 0000000000000034 T shared_dispatch_stub_681
00000000004a6990 0000000000000034 T shared_dispatch_stub_682
00000000004a69d0 0000000000000034 T shared_dispatch_stub_683
00000000004a6a10 0000000000000034 T shared_dispatch_stub_684
00000000004a6a50 0000000000000034 T shared_dispatch_stub_685
00000000004a6a90 0000000000000034 T shared_dispatch_stub_686
00000000004a6ad0 0000000000000034 T shared_dispatch_stub_687
00000000004a6b10 0000000000000034 T shared_dispatch_stub_688
00000000004a6b50 0000000000000034 T shared_dispatch_stub_689
00000000004a6b90 0000000000000034 T shared_dispatch_stub_690
00000000004a6bd0 0000000000000034 T shared_dispatch_stub_691
00000000004a6c10 0000000000000034 T shared_dispatch_stub_692
00000000004a6c50 0000000000000034 T shared_dispatch_stub_693
00000000004a6c90 0000000000000034 T shared_dispatch_stub_694
00000000004a6cd0 0000000000000034 T shared_dispatch_stub_695
00000000004a6d10 0000000000000034 T shared_dispatch_stub_696
00000000004a6d50 0000000000000034 T shared_dispatch_stub_697
00000000004a6d90 0000000000000034 T shared_dispatch_stub_698
00000000004a6dd0 0000000000000034 T shared_dispatch_stub_699
00000000004a6e10 0000000000000034 T shared_dispatch_stub_700
00000000004a6e50 0000000000000034 T shared_dispatch_stub_701
00000000004a6e90 0000000000000034 T shared_dispatch_stub_702
00000000004a6ed0 0000000000000034 T shared_dispatch_stub_703
00000000004a6f10 0000000000000034 T shared_dispatch_stub_704
00000000004a6f50 0000000000000034 T shared_dispatch_stub_705
00000000004a6f90 0000000000000034 T shared_dispatch_stub_706
00000000004a6fd0 0000000000000034 T shared_dispatch_stub_707
00000000004a7010 0000000000000034 T shared_dispatch_stub_708
00000000004a7050 0000000000000034 T shared_dispatch_stub_709
00000000004a7090 0000000000000034 T shared_dispatch_stub_710
00000000004a70d0 0000000000000034 T shared_dispatch_stub_711
00000000004a7110 0000000000000034 T shared_dispatch_stub_712
00000000004a7150 0000000000000034 T shared_dispatch_stub_713
00000000004a7190 0000000000000034 T shared_dispatch_stub_714
00000000004a71d0 0000000000000034 T shared_dispatch_stub_715
00000000004a7210 0000000000000034 T shared_dispatch_stub_716
00000000004a7250 0000000000000034 T shared_dispatch_stub_717
00000000004a7290 0000000000000034 T shared_dispatch_stub_718
00000000004a72d0 0000000000000034 T shared_dispatch_stub_719
00000000004a7310 0000000000000034 T shared_dispatch_stub_720
00000000004a7350 0000000000000034 T shared_dispatch_stub_721
00000000004a7390 0000000000000034 T shared_dispatch_stub_722
00000000004a73d0 0000000000000034 T shared_dispatch_stub_723
00000000004a7410 0000000000000034 T shared_dispatch_stub_724
00000000004a7450 0000000000000034 T shared_dispatch_stub_725
00000000004a7490 0000000000000034 T shared_dispatch_stub_726
00000000004a74d0 0000000000000034 T shared_dispatch_stub_727
00000000004a7510 0000000000000034 T shared_dispatch_stub_728
00000000004a7550 0000000000000034 T shared_dispatch_stub_729
00000000004a7590 0000000000000034 T shared_dispatch_stub_730
00000000004a75d0 0000000000000034 T shared_dispatch_stub_731
00000000004a7610 0000000000000034 T shared_dispatch_stub_732
00000000004a7650 0000000000000034 T shared_dispatch_stub_733
00000000004a7690 0000000000000034 T shared_dispatch_stub_734
00000000004a76d0 0000000000000034 T shared_dispatch_stub_735
00000000004a7710 0000000000000034 T shared_dispatch_stub_736
00000000004a7750 0000000000000034 T shared_dispatch_stub_737
00000000004a7790 0000000000000034 T shared_dispatch_stub_738
00000000004a77d0 0000000000000034 T shared_dispatch_stub_739
00000000004a7810 0000000000000034 T shared_dispatch_stub_740
00000000004a7850 0000000000000034 T shared_dispatch_stub_741
00000000004a7890 0000000000000034 T shared_dispatch_stub_742
00000000004a78d0 0000000000000034 T shared_dispatch_stub_743
00000000004a7910 0000000000000034 T shared_dispatch_stub_744
00000000004a7950 0000000000000034 T shared_dispatch_stub_745
00000000004a7990 0000000000000034 T shared_dispatch_stub_746
00000000004a79d0 0000000000000034 T shared_dispatch_stub_747
00000000004a7a10 0000000000000034 T shared_dispatch_stub_748
00000000004a7a50 0000000000000034 T shared_dispatch_stub_749
00000000004a7a90 0000000000000034 T shared_dispatch_stub_750
00000000004a7ad0 0000000000000034 T shared_dispatch_stub_751
00000000004a7b10 0000000000000034 T shared_dispatch_stub_752
00000000004a7b50 0000000000000034 T shared_dispatch_stub_753
00000000004a7b90 0000000000000034 T shared_dispatch_stub_754
00000000004a7bd0 0000000000000034 T shared_dispatch_stub_755
00000000004a7c10 0000000000000034 T shared_dispatch_stub_756
00000000004a7c50 0000000000000034 T shared_dispatch_stub_757
00000000004a7c90 0000000000000034 T shared_dispatch_stub_758
00000000004a7cd0 0000000000000034 T shared_dispatch_stub_759
00000000004a7d10 0000000000000034 T shared_dispatch_stub_760
00000000004a7d50 0000000000000034 T shared_dispatch_stub_761
00000000004a7d90 0000000000000034 T shared_dispatch_stub_762
00000000004a7dd0 0000000000000034 T shared_dispatch_stub_763
00000000004a7e10 0000000000000034 T shared_dispatch_stub_764
00000000004a7e50 0000000000000034 T shared_dispatch_stub_765
00000000004a7e90 0000000000000034 T shared_dispatch_stub_766
00000000004a7ed0 0000000000000034 T shared_dispatch_stub_767
00000000004a7f10 0000000000000034 T shared_dispatch_stub_768
00000000004a7f50 0000000000000034 T shared_dispatch_stub_769
00000000004a7f90 0000000000000034 T shared_dispatch_stub_770
00000000004a7fd0 0000000000000034 T shared_dispatch_stub_771
00000000004a8010 0000000000000034 T shared_dispatch_stub_772
00000000004a8050 0000000000000034 T shared_dispatch_stub_773
00000000004a8090 0000000000000034 T shared_dispatch_stub_774
00000000004a80d0 0000000000000034 T shared_dispatch_stub_775
00000000004a8110 0000000000000034 T shared_dispatch_stub_776
00000000004a8150 0000000000000034 T shared_dispatch_stub_777
00000000004a8190 0000000000000034 T shared_dispatch_stub_778
00000000004a81d0 0000000000000034 T shared_dispatch_stub_779
00000000004a8210 0000000000000034 T shared_dispatch_stub_780
00000000004a8250 0000000000000034 T shared_dispatch_stub_781
00000000004a8290 0000000000000034 T shared_dispatch_stub_782
00000000004a82d0 0000000000000034 T shared_dispatch_stub_783
00000000004a8310 0000000000000034 T shared_dispatch_stub_784
00000000004a8350 0000000000000034 T shared_dispatch_stub_785
00000000004a8390 0000000000000034 T shared_dispatch_stub_786
00000000004a83d0 0000000000000034 T shared_dispatch_stub_787
00000000004a8410 0000000000000034 T shared_dispatch_stub_788
00000000004a8450 0000000000000034 T shared_dispatch_stub_789
00000000004a8490 0000000000000034 T shared_dispatch_stub_790
00000000004a84d0 0000000000000034 T shared_dispatch_stub_791
00000000004a8510 0000000000000034 T shared_dispatch_stub_792
00000000004a8550 0000000000000034 T shared_dispatch_stub_793
00000000004a8590 0000000000000034 T shared_dispatch_stub_794
00000000004a85d0 0000000000000034 T shared_dispatch_stub_795
00000000004a8610 0000000000000034 T shared_dispatch_stub_796
00000000004a8650 0000000000000034 T shared_dispatch_stub_797
00000000004a8690 0000000000000034 T shared_dispatch_stub_798
00000000004a86d0 0000000000000034 T shared_dispatch_stub_799
00000000004a8710 0000000000000034 T shared_dispatch_stub_800
00000000004a8750 0000000000000034 T shared_dispatch_stub_801
00000000004a8790 0000000000000034 T shared_dispatch_stub_802
00000000004a87d0 0000000000000034 T shared_dispatch_stub_803
00000000004a8810 0000000000000034 T shared_dispatch_stub_804
00000000004a8850 0000000000000034 T shared_dispatch_stub_805
00000000004a8890 0000000000000034 T shared_dispatch_stub_806
00000000004a88d0 0000000000000028 T shared_dispatch_stub_807
00000000004a8900 0000000000000028 T shared_dispatch_stub_808
00000000004a8930 0000000000000034 T shared_dispatch_stub_809
00000000004a8970 0000000000000034 T shared_dispatch_stub_810
00000000004a89b0 0000000000000034 T shared_dispatch_stub_811
00000000004a89f0 0000000000000034 T shared_dispatch_stub_812
00000000004a8a30 0000000000000028 T shared_dispatch_stub_813
00000000004a8a60 0000000000000028 T shared_dispatch_stub_814
00000000004a8a90 0000000000000034 T shared_dispatch_stub_815
00000000004a8ad0 0000000000000028 T shared_dispatch_stub_816
00000000004a8b00 0000000000000034 T shared_dispatch_stub_817
00000000004a8b40 0000000000000034 T shared_dispatch_stub_818
00000000004a8b80 0000000000000034 T shared_dispatch_stub_819
00000000004a8bc0 0000000000000034 T shared_dispatch_stub_820
00000000004a8c00 0000000000000034 T shared_dispatch_stub_821
00000000004a8c40 0000000000000034 T shared_dispatch_stub_822
00000000004a8c80 0000000000000034 T shared_dispatch_stub_823
00000000004a8cc0 0000000000000034 T shared_dispatch_stub_824
00000000004a8d00 0000000000000034 T shared_dispatch_stub_825
00000000004a8d40 0000000000000034 T shared_dispatch_stub_826
00000000004a8d80 0000000000000034 T shared_dispatch_stub_827
00000000004a8dc0 0000000000000034 T shared_dispatch_stub_828
00000000004a8e00 0000000000000034 T shared_dispatch_stub_829
00000000004a8e40 0000000000000034 T shared_dispatch_stub_830
00000000004a8e80 0000000000000034 T shared_dispatch_stub_831
00000000004a8ec0 0000000000000034 T shared_dispatch_stub_832
00000000004a8f00 0000000000000034 T shared_dispatch_stub_833
00000000004a8f40 0000000000000034 T shared_dispatch_stub_834
00000000004a8f80 0000000000000034 T shared_dispatch_stub_835
00000000004a8fc0 0000000000000034 T shared_dispatch_stub_836
00000000004a9000 0000000000000034 T shared_dispatch_stub_837
00000000004a9040 0000000000000034 T shared_dispatch_stub_838
00000000004a9080 0000000000000034 T shared_dispatch_stub_839
00000000004a90c0 0000000000000034 T shared_dispatch_stub_840
00000000004a9100 0000000000000028 T shared_dispatch_stub_841
00000000004a9130 0000000000000034 T shared_dispatch_stub_842
00000000004a9170 0000000000000034 T shared_dispatch_stub_843
00000000004a91b0 0000000000000034 T shared_dispatch_stub_844
00000000004a91f0 0000000000000034 T shared_dispatch_stub_845
00000000004a9230 0000000000000034 T shared_dispatch_stub_846
00000000004a9270 0000000000000034 T shared_dispatch_stub_847
00000000004a92b0 0000000000000034 T shared_dispatch_stub_848
00000000004a92f0 0000000000000034 T shared_dispatch_stub_849
00000000004a9330 0000000000000034 T shared_dispatch_stub_850
00000000004a9370 0000000000000034 T shared_dispatch_stub_851
00000000004a93b0 0000000000000034 T shared_dispatch_stub_852
00000000004a93f0 0000000000000034 T shared_dispatch_stub_853
00000000004a9430 0000000000000034 T shared_dispatch_stub_854
00000000004a9470 0000000000000034 T shared_dispatch_stub_855
00000000004a94b0 0000000000000034 T shared_dispatch_stub_856
00000000004a94f0 0000000000000034 T shared_dispatch_stub_857
00000000004a9530 0000000000000034 T shared_dispatch_stub_858
00000000004a9570 0000000000000034 T shared_dispatch_stub_859
00000000004a95b0 0000000000000034 T shared_dispatch_stub_860
00000000004a95f0 0000000000000034 T shared_dispatch_stub_861
00000000004a9630 0000000000000034 T shared_dispatch_stub_862
00000000004a9670 0000000000000034 T shared_dispatch_stub_863
00000000004a96b0 0000000000000034 T shared_dispatch_stub_864
00000000004a96f0 0000000000000034 T shared_dispatch_stub_865
00000000004a9730 0000000000000034 T shared_dispatch_stub_866
00000000004a9770 0000000000000034 T shared_dispatch_stub_867
00000000004a97b0 0000000000000034 T shared_dispatch_stub_868
00000000004a97f0 0000000000000034 T shared_dispatch_stub_869
00000000004a9830 0000000000000034 T shared_dispatch_stub_870
00000000004a9870 0000000000000034 T shared_dispatch_stub_871
00000000004a98b0 0000000000000034 T shared_dispatch_stub_872
00000000004a98f0 0000000000000034 T shared_dispatch_stub_873
00000000004a9930 0000000000000034 T shared_dispatch_stub_874
00000000004a9970 0000000000000034 T shared_dispatch_stub_875
00000000004a99b0 0000000000000034 T shared_dispatch_stub_876
00000000004a99f0 0000000000000034 T shared_dispatch_stub_877
00000000004a9a30 0000000000000034 T shared_dispatch_stub_878
00000000004a9a70 0000000000000034 T shared_dispatch_stub_879
00000000004a9ab0 0000000000000034 T shared_dispatch_stub_880
00000000004a9af0 0000000000000034 T shared_dispatch_stub_881
00000000004a9b30 0000000000000034 T shared_dispatch_stub_882
00000000004a9b70 0000000000000034 T shared_dispatch_stub_883
00000000004a9bb0 0000000000000034 T shared_dispatch_stub_884
00000000004a9bf0 0000000000000034 T shared_dispatch_stub_885
00000000004a9c30 0000000000000034 T shared_dispatch_stub_886
00000000004a9c70 0000000000000034 T shared_dispatch_stub_887
00000000004a9cb0 0000000000000034 T shared_dispatch_stub_888
00000000004a9cf0 0000000000000034 T shared_dispatch_stub_889
00000000004a9d30 0000000000000034 T shared_dispatch_stub_890
00000000004a9d70 0000000000000034 T shared_dispatch_stub_891
00000000004a9db0 0000000000000034 T shared_dispatch_stub_892
00000000004a9df0 0000000000000034 T shared_dispatch_stub_893
00000000004a9e30 0000000000000034 T shared_dispatch_stub_894
00000000004a9e70 0000000000000034 T shared_dispatch_stub_895
00000000004a9eb0 0000000000000034 T shared_dispatch_stub_896
00000000004a9ef0 0000000000000034 T shared_dispatch_stub_897
00000000004a9f30 0000000000000034 T shared_dispatch_stub_898
00000000004a9f70 0000000000000034 T shared_dispatch_stub_899
00000000004a9fb0 0000000000000034 T shared_dispatch_stub_900
00000000004a9ff0 0000000000000034 T shared_dispatch_stub_901
00000000004aa030 0000000000000034 T shared_dispatch_stub_902
00000000004aa070 0000000000000034 T shared_dispatch_stub_903
00000000004aa0b0 0000000000000034 T shared_dispatch_stub_904
00000000004aa0f0 0000000000000034 T shared_dispatch_stub_905
00000000004aa130 0000000000000034 T shared_dispatch_stub_906
00000000004aa170 0000000000000034 T shared_dispatch_stub_907
00000000004aa1b0 0000000000000034 T shared_dispatch_stub_908
00000000004aa1f0 0000000000000034 T shared_dispatch_stub_909
00000000004aa230 0000000000000034 T shared_dispatch_stub_910
00000000004aa270 0000000000000034 T shared_dispatch_stub_911
00000000004aa2b0 0000000000000034 T shared_dispatch_stub_912
00000000004aa2f0 0000000000000034 T shared_dispatch_stub_913
00000000004aa330 0000000000000034 T shared_dispatch_stub_914
00000000004aa370 0000000000000034 T shared_dispatch_stub_915
00000000004aa3b0 0000000000000034 T shared_dispatch_stub_916
00000000004aa3f0 0000000000000034 T shared_dispatch_stub_917
00000000004aa430 0000000000000034 T shared_dispatch_stub_918
00000000004aa470 0000000000000034 T shared_dispatch_stub_919
00000000004aa4b0 0000000000000034 T shared_dispatch_stub_920
00000000004aa4f0 0000000000000034 T shared_dispatch_stub_921
00000000004aa530 0000000000000034 T shared_dispatch_stub_922
00000000004aa570 0000000000000034 T shared_dispatch_stub_923
00000000004aa5b0 0000000000000034 T shared_dispatch_stub_924
00000000004aa5f0 0000000000000034 T shared_dispatch_stub_925
00000000004aa630 0000000000000034 T shared_dispatch_stub_926
00000000004aa670 0000000000000034 T shared_dispatch_stub_927
00000000004aa6b0 0000000000000034 T shared_dispatch_stub_928
00000000004aa6f0 0000000000000034 T shared_dispatch_stub_929
00000000004aa730 0000000000000034 T shared_dispatch_stub_930
00000000004aa770 0000000000000034 T shared_dispatch_stub_931
00000000004aa7b0 0000000000000034 T shared_dispatch_stub_932
00000000004aa7f0 0000000000000034 T shared_dispatch_stub_933
00000000004aa830 0000000000000034 T shared_dispatch_stub_934
00000000004aa870 0000000000000034 T shared_dispatch_stub_935
00000000004aa8b0 0000000000000034 T shared_dispatch_stub_936
00000000004aa8f0 0000000000000034 T shared_dispatch_stub_937
00000000004aa930 0000000000000034 T shared_dispatch_stub_938
00000000004aa970 0000000000000034 T shared_dispatch_stub_939
00000000004aa9b0 0000000000000034 T shared_dispatch_stub_940
00000000004aa9f0 0000000000000034 T shared_dispatch_stub_941
00000000004aaa30 0000000000000034 T shared_dispatch_stub_942
00000000004aaa70 0000000000000034 T shared_dispatch_stub_943
00000000004aaab0 0000000000000034 T shared_dispatch_stub_944
00000000004aaaf0 0000000000000034 T shared_dispatch_stub_945
00000000004aab30 0000000000000034 T shared_dispatch_stub_946
00000000004aab70 0000000000000034 T shared_dispatch_stub_947
00000000004aabb0 0000000000000034 T shared_dispatch_stub_948
00000000004aabf0 0000000000000034 T shared_dispatch_stub_949
00000000004aac30 0000000000000034 T shared_dispatch_stub_950
00000000004aac70 0000000000000034 T shared_dispatch_stub_951
00000000004aacb0 0000000000000034 T shared_dispatch_stub_952
00000000004aacf0 0000000000000034 T shared_dispatch_stub_953
00000000004aad30 0000000000000034 T shared_dispatch_stub_954
00000000004aad70 0000000000000034 T shared_dispatch_stub_955
00000000004aadb0 0000000000000034 T shared_dispatch_stub_956
00000000004aadf0 0000000000000034 T shared_dispatch_stub_957
00000000004aae30 0000000000000034 T shared_dispatch_stub_958
00000000004aae70 0000000000000034 T shared_dispatch_stub_959
00000000004aaeb0 0000000000000034 T shared_dispatch_stub_960
00000000004aaef0 0000000000000034 T shared_dispatch_stub_961
00000000004aaf30 0000000000000034 T shared_dispatch_stub_962
00000000004aaf70 0000000000000034 T shared_dispatch_stub_963
00000000004aafb0 0000000000000034 T shared_dispatch_stub_964
00000000004aaff0 0000000000000034 T shared_dispatch_stub_965
00000000004ab030 0000000000000034 T shared_dispatch_stub_966
00000000004ab070 0000000000000034 T shared_dispatch_stub_967
00000000004ab0b0 0000000000000034 T shared_dispatch_stub_968
00000000004ab0f0 0000000000000034 T shared_dispatch_stub_969
00000000004ab130 0000000000000034 T shared_dispatch_stub_970
00000000004ab170 0000000000000034 T shared_dispatch_stub_971
00000000004ab1b0 0000000000000034 T shared_dispatch_stub_972
00000000004ab1f0 0000000000000034 T shared_dispatch_stub_973
00000000004ab230 0000000000000034 T shared_dispatch_stub_974
00000000004ab270 0000000000000034 T shared_dispatch_stub_975
00000000004ab2b0 0000000000000034 T shared_dispatch_stub_976
00000000004ab2f0 0000000000000034 T shared_dispatch_stub_977
00000000004ab330 0000000000000034 T shared_dispatch_stub_978
00000000004ab370 0000000000000034 T shared_dispatch_stub_979
00000000004ab3b0 0000000000000034 T shared_dispatch_stub_980
00000000004ab3f0 0000000000000034 T shared_dispatch_stub_981
00000000004ab430 0000000000000034 T shared_dispatch_stub_982
00000000004ab470 0000000000000034 T shared_dispatch_stub_983
00000000004ab4b0 0000000000000034 T shared_dispatch_stub_984
00000000004ab4f0 0000000000000034 T shared_dispatch_stub_985
00000000004ab530 0000000000000034 T shared_dispatch_stub_986
00000000004ab570 0000000000000034 T shared_dispatch_stub_987
00000000004ab5b0 0000000000000034 T shared_dispatch_stub_988
00000000004ab5f0 0000000000000034 T shared_dispatch_stub_989
00000000004ab630 0000000000000034 T shared_dispatch_stub_990
00000000004ab670 0000000000000034 T shared_dispatch_stub_991
00000000004ab6b0 0000000000000034 T shared_dispatch_stub_992
00000000004ab6f0 0000000000000034 T shared_dispatch_stub_993
00000000004ab730 0000000000000034 T shared_dispatch_stub_994
00000000004ab770 0000000000000034 T shared_dispatch_stub_995
00000000004ab7b0 0000000000000034 T shared_dispatch_stub_996
00000000004ab7f0 0000000000000034 T shared_dispatch_stub_997
00000000004ab830 0000000000000034 T shared_dispatch_stub_998
00000000004ab870 0000000000000034 T shared_dispatch_stub_999
00000000004ab8b0 0000000000000034 T shared_dispatch_stub_1000
00000000004ab8f0 0000000000000034 T shared_dispatch_stub_1001
00000000004ab930 0000000000000034 T shared_dispatch_stub_1002
00000000004ab970 0000000000000034 T shared_dispatch_stub_1003
00000000004ab9b0 0000000000000034 T shared_dispatch_stub_1004
00000000004ab9f0 0000000000000034 T shared_dispatch_stub_1005
00000000004aba30 0000000000000034 T shared_dispatch_stub_1006
00000000004aba70 0000000000000034 T shared_dispatch_stub_1007
00000000004abab0 0000000000000034 T shared_dispatch_stub_1008
00000000004abaf0 0000000000000034 T shared_dispatch_stub_1009
00000000004abb30 0000000000000034 T shared_dispatch_stub_1010
00000000004abb70 0000000000000034 T shared_dispatch_stub_1011
00000000004abbb0 0000000000000034 T shared_dispatch_stub_1012
00000000004abbf0 0000000000000034 T shared_dispatch_stub_1013
00000000004abc30 0000000000000034 T shared_dispatch_stub_1014
00000000004abc70 0000000000000034 T shared_dispatch_stub_1015
00000000004abcb0 0000000000000034 T shared_dispatch_stub_1016
00000000004abcf0 0000000000000034 T shared_dispatch_stub_1017
00000000004abd30 0000000000000034 T shared_dispatch_stub_1018
00000000004abd70 0000000000000034 T shared_dispatch_stub_1019
00000000004abdb0 0000000000000034 T shared_dispatch_stub_1020
00000000004abdf0 0000000000000034 T shared_dispatch_stub_1021
00000000004abe30 0000000000000034 T shared_dispatch_stub_1022
00000000004abe70 0000000000000034 T shared_dispatch_stub_1023
00000000004abeb0 0000000000000034 T shared_dispatch_stub_1024
00000000004abef0 0000000000000034 T shared_dispatch_stub_1025
00000000004abf30 0000000000000034 T shared_dispatch_stub_1026
00000000004abf70 0000000000000034 T shared_dispatch_stub_1027
00000000004abfb0 0000000000000034 T shared_dispatch_stub_1028
00000000004abff0 0000000000000034 T shared_dispatch_stub_1029
00000000004ac030 0000000000000034 T shared_dispatch_stub_1030
00000000004ac070 0000000000000034 T shared_dispatch_stub_1031
00000000004ac0b0 0000000000000034 T shared_dispatch_stub_1032
00000000004ac0f0 0000000000000034 T shared_dispatch_stub_1033
00000000004ac130 0000000000000034 T shared_dispatch_stub_1034
00000000004ac170 0000000000000034 T shared_dispatch_stub_1035
00000000004ac1b0 0000000000000034 T shared_dispatch_stub_1036
00000000004ac1f0 0000000000000034 T shared_dispatch_stub_1037
00000000004ac230 0000000000000034 T shared_dispatch_stub_1038
00000000004ac270 0000000000000034 T shared_dispatch_stub_1039
00000000004ac2b0 0000000000000034 T shared_dispatch_stub_1040
00000000004ac2f0 0000000000000034 T shared_dispatch_stub_1041
00000000004ac330 0000000000000034 T shared_dispatch_stub_1042
00000000004ac370 0000000000000034 T shared_dispatch_stub_1043
00000000004ac3b0 0000000000000034 T shared_dispatch_stub_1044
00000000004ac3f0 0000000000000034 T shared_dispatch_stub_1045
00000000004ac430 0000000000000034 T shared_dispatch_stub_1046
00000000004ac470 0000000000000034 T shared_dispatch_stub_1047
00000000004ac4b0 0000000000000034 T shared_dispatch_stub_1048
00000000004ac4f0 0000000000000034 T shared_dispatch_stub_1049
00000000004ac530 0000000000000034 T shared_dispatch_stub_1050
00000000004ac570 0000000000000034 T shared_dispatch_stub_1051
00000000004ac5b0 0000000000000034 T shared_dispatch_stub_1052
00000000004ac5f0 0000000000000034 T shared_dispatch_stub_1053
00000000004ac630 0000000000000034 T shared_dispatch_stub_1054
00000000004ac670 0000000000000034 T shared_dispatch_stub_1055
00000000004ac6b0 0000000000000034 T shared_dispatch_stub_1056
00000000004ac6f0 0000000000000034 T shared_dispatch_stub_1057
00000000004ac730 0000000000000034 T shared_dispatch_stub_1058
00000000004ac770 0000000000000034 T shared_dispatch_stub_1059
00000000004ac7b0 0000000000000034 T shared_dispatch_stub_1060
00000000004ac7f0 0000000000000034 T shared_dispatch_stub_1061
00000000004ac830 0000000000000034 T shared_dispatch_stub_1062
00000000004ac870 0000000000000034 T shared_dispatch_stub_1063
00000000004ac8b0 0000000000000034 T shared_dispatch_stub_1064
00000000004ac8f0 0000000000000034 T shared_dispatch_stub_1065
00000000004ac930 0000000000000034 T shared_dispatch_stub_1066
00000000004ac970 0000000000000034 T shared_dispatch_stub_1067
00000000004ac9b0 0000000000000034 T shared_dispatch_stub_1068
00000000004ac9f0 0000000000000028 T shared_dispatch_stub_1069
00000000004aca20 0000000000000034 T shared_dispatch_stub_1070
00000000004aca60 0000000000000034 T shared_dispatch_stub_1071
00000000004acaa0 0000000000000034 T shared_dispatch_stub_1072
00000000004acae0 0000000000000034 T shared_dispatch_stub_1073
00000000004acb20 0000000000000034 T shared_dispatch_stub_1074
00000000004acb60 0000000000000034 T shared_dispatch_stub_1075
00000000004acba0 0000000000000034 T shared_dispatch_stub_1076
00000000004acbe0 0000000000000034 T shared_dispatch_stub_1077
00000000004acc20 0000000000000034 T shared_dispatch_stub_1078
00000000004acc60 0000000000000028 T shared_dispatch_stub_1079
00000000004acc90 0000000000000034 T shared_dispatch_stub_1080
00000000004accd0 0000000000000034 T shared_dispatch_stub_1081
00000000004acd10 0000000000000034 T shared_dispatch_stub_1082
00000000004acd50 0000000000000034 T shared_dispatch_stub_1083
00000000004acd90 0000000000000034 T shared_dispatch_stub_1084
00000000004acdd0 0000000000000034 T shared_dispatch_stub_1085
00000000004ace10 0000000000000034 T shared_dispatch_stub_1086
00000000004ace50 0000000000000034 T shared_dispatch_stub_1087
00000000004ace90 0000000000000034 T shared_dispatch_stub_1088
00000000004aced0 0000000000000034 T shared_dispatch_stub_1089
00000000004acf10 0000000000000034 T shared_dispatch_stub_1090
00000000004acf50 0000000000000034 T shared_dispatch_stub_1091
00000000004acf90 0000000000000034 T shared_dispatch_stub_1092
00000000004acfd0 0000000000000034 T shared_dispatch_stub_1093
00000000004ad010 0000000000000034 T shared_dispatch_stub_1094
00000000004ad050 0000000000000034 T shared_dispatch_stub_1095
00000000004ad090 0000000000000034 T shared_dispatch_stub_1096
00000000004ad0d0 0000000000000034 T shared_dispatch_stub_1097
00000000004ad110 0000000000000034 T shared_dispatch_stub_1098
00000000004ad150 0000000000000034 T shared_dispatch_stub_1099
00000000004ad190 0000000000000034 T shared_dispatch_stub_1100
00000000004ad1d0 0000000000000034 T shared_dispatch_stub_1101
00000000004ad210 0000000000000034 T shared_dispatch_stub_1102
00000000004ad250 0000000000000034 T shared_dispatch_stub_1103
00000000004ad290 0000000000000034 T shared_dispatch_stub_1104
00000000004ad2d0 0000000000000034 T shared_dispatch_stub_1105
00000000004ad310 0000000000000034 T shared_dispatch_stub_1106
00000000004ad350 0000000000000034 T shared_dispatch_stub_1107
00000000004ad390 0000000000000034 T shared_dispatch_stub_1108
00000000004ad3d0 0000000000000034 T shared_dispatch_stub_1109
00000000004ad410 0000000000000034 T shared_dispatch_stub_1110
00000000004ad450 0000000000000034 T shared_dispatch_stub_1111
00000000004ad490 0000000000000034 T shared_dispatch_stub_1112
00000000004ad4d0 0000000000000034 T shared_dispatch_stub_1113
00000000004ad510 0000000000000034 T shared_dispatch_stub_1114
00000000004ad550 0000000000000034 T shared_dispatch_stub_1115
00000000004ad590 0000000000000034 T shared_dispatch_stub_1116
00000000004ad5d0 0000000000000034 T shared_dispatch_stub_1117
00000000004ad610 0000000000000034 T shared_dispatch_stub_1118
00000000004ad650 0000000000000034 T shared_dispatch_stub_1119
00000000004ad690 0000000000000034 T shared_dispatch_stub_1120
00000000004ad6d0 0000000000000034 T shared_dispatch_stub_1121
00000000004ad710 0000000000000034 T shared_dispatch_stub_1122
00000000004ad750 0000000000000034 T shared_dispatch_stub_1123
00000000004ad790 0000000000000034 T shared_dispatch_stub_1124
00000000004ad7d0 0000000000000034 T shared_dispatch_stub_1125
00000000004ad810 0000000000000034 T shared_dispatch_stub_1126
00000000004ad850 0000000000000034 T shared_dispatch_stub_1127
00000000004ad890 0000000000000034 T shared_dispatch_stub_1128
00000000004ad8d0 0000000000000034 T shared_dispatch_stub_1129
00000000004ad910 0000000000000034 T shared_dispatch_stub_1130
00000000004ad950 0000000000000034 T shared_dispatch_stub_1131
00000000004ad990 0000000000000034 T shared_dispatch_stub_1132
00000000004ad9d0 0000000000000034 T shared_dispatch_stub_1133
00000000004ada10 0000000000000034 T shared_dispatch_stub_1134
00000000004ada50 0000000000000034 T shared_dispatch_stub_1135
00000000004ada90 0000000000000034 T shared_dispatch_stub_1136
00000000004adad0 0000000000000034 T shared_dispatch_stub_1137
00000000004adb10 0000000000000034 T shared_dispatch_stub_1138
00000000004adb50 0000000000000034 T shared_dispatch_stub_1139
00000000004adb90 0000000000000034 T shared_dispatch_stub_1140
00000000004adbd0 0000000000000034 T shared_dispatch_stub_1141
00000000004adc10 0000000000000034 T shared_dispatch_stub_1142
00000000004adc50 0000000000000034 T shared_dispatch_stub_1143
00000000004adc90 0000000000000034 T shared_dispatch_stub_1144
00000000004adcd0 0000000000000034 T shared_dispatch_stub_1145
00000000004add10 0000000000000034 T shared_dispatch_stub_1146
00000000004add50 0000000000000034 T shared_dispatch_stub_1147
00000000004add90 0000000000000034 T shared_dispatch_stub_1148
00000000004addd0 0000000000000034 T shared_dispatch_stub_1149
00000000004ade10 0000000000000034 T shared_dispatch_stub_1150
00000000004ade50 0000000000000034 T shared_dispatch_stub_1151
00000000004ade90 0000000000000034 T shared_dispatch_stub_1152
00000000004aded0 0000000000000034 T shared_dispatch_stub_1153
00000000004adf10 0000000000000034 T shared_dispatch_stub_1154
00000000004adf50 0000000000000034 T shared_dispatch_stub_1155
00000000004adf90 0000000000000034 T shared_dispatch_stub_1156
00000000004adfd0 0000000000000028 T shared_dispatch_stub_1157
00000000004ae000 0000000000000034 T shared_dispatch_stub_1158
00000000004ae040 0000000000000034 T shared_dispatch_stub_1159
00000000004ae080 0000000000000034 T shared_dispatch_stub_1160
00000000004ae0c0 0000000000000034 T shared_dispatch_stub_1161
00000000004ae100 0000000000000034 T shared_dispatch_stub_1162
00000000004ae140 0000000000000034 T shared_dispatch_stub_1163
00000000004ae180 0000000000000034 T shared_dispatch_stub_1164
00000000004ae1c0 0000000000000034 T shared_dispatch_stub_1165
00000000004ae200 0000000000000034 T shared_dispatch_stub_1166
00000000004ae240 0000000000000034 T shared_dispatch_stub_1167
00000000004ae280 0000000000000034 T shared_dispatch_stub_1168
00000000004ae2c0 0000000000000028 T shared_dispatch_stub_1169
00000000004ae2f0 0000000000000034 T shared_dispatch_stub_1170
00000000004ae330 0000000000000028 T shared_dispatch_stub_1171
00000000004ae360 0000000000000034 T shared_dispatch_stub_1172
00000000004ae3a0 0000000000000034 T shared_dispatch_stub_1173
00000000004ae3e0 0000000000000028 T shared_dispatch_stub_1174
00000000004ae410 0000000000000034 T shared_dispatch_stub_1175
00000000004ae450 0000000000000028 T shared_dispatch_stub_1176
00000000004ae480 0000000000000028 T shared_dispatch_stub_1177
00000000004ae4b0 0000000000000034 T shared_dispatch_stub_1178
00000000004ae4f0 0000000000000028 T shared_dispatch_stub_1179
00000000004ae520 0000000000000034 T shared_dispatch_stub_1180
00000000004ae560 0000000000000034 T shared_dispatch_stub_1181
00000000004ae5a0 0000000000000034 T shared_dispatch_stub_1182
00000000004ae5e0 0000000000000034 T shared_dispatch_stub_1183
00000000004ae620 0000000000000034 T shared_dispatch_stub_1184
00000000004ae660 0000000000000034 T shared_dispatch_stub_1185
00000000004ae6a0 0000000000000034 T shared_dispatch_stub_1186
00000000004ae6e0 0000000000000034 T shared_dispatch_stub_1187
00000000004ae720 0000000000000034 T shared_dispatch_stub_1188
00000000004ae760 0000000000000034 T shared_dispatch_stub_1189
00000000004ae7a0 0000000000000034 T shared_dispatch_stub_1190
00000000004ae7e0 0000000000000034 T shared_dispatch_stub_1191
00000000004ae820 0000000000000034 T shared_dispatch_stub_1192
00000000004ae860 0000000000000034 T shared_dispatch_stub_1193
00000000004ae8a0 0000000000000034 T shared_dispatch_stub_1194
00000000004ae8e0 0000000000000034 T shared_dispatch_stub_1195
00000000004ae920 0000000000000034 T shared_dispatch_stub_1196
00000000004ae960 0000000000000034 T shared_dispatch_stub_1197
00000000004ae9a0 0000000000000034 T shared_dispatch_stub_1198
00000000004ae9e0 0000000000000034 T shared_dispatch_stub_1199
00000000004aea20 0000000000000034 T shared_dispatch_stub_1200
00000000004aea60 0000000000000034 T shared_dispatch_stub_1201
00000000004aeaa0 0000000000000034 T shared_dispatch_stub_1202
00000000004aeae0 0000000000000034 T shared_dispatch_stub_1203
00000000004aeb20 0000000000000034 T shared_dispatch_stub_1204
00000000004aeb60 0000000000000034 T shared_dispatch_stub_1205
00000000004aeba0 0000000000000034 T shared_dispatch_stub_1206
00000000004aebe0 0000000000000034 T shared_dispatch_stub_1207
00000000004aec20 0000000000000034 T shared_dispatch_stub_1208
00000000004aec60 0000000000000034 T shared_dispatch_stub_1209
00000000004aeca0 0000000000000034 T shared_dispatch_stub_1210
00000000004aece0 0000000000000034 T shared_dispatch_stub_1211
00000000004aed20 0000000000000034 T shared_dispatch_stub_1212
00000000004aed60 0000000000000034 T shared_dispatch_stub_1213
00000000004aeda0 0000000000000034 T shared_dispatch_stub_1214
00000000004aede0 0000000000000034 T shared_dispatch_stub_1215
00000000004aee20 0000000000000034 T shared_dispatch_stub_1216
00000000004aee60 0000000000000034 T shared_dispatch_stub_1217
00000000004aeea0 0000000000000034 T shared_dispatch_stub_1218
00000000004aeee0 0000000000000034 T shared_dispatch_stub_1219
00000000004aef20 0000000000000034 T shared_dispatch_stub_1220
00000000004aef60 0000000000000034 T shared_dispatch_stub_1221
00000000004aefa0 0000000000000034 T shared_dispatch_stub_1222
00000000004aefe0 0000000000000034 T shared_dispatch_stub_1223
00000000004af020 0000000000000034 T shared_dispatch_stub_1224
00000000004af060 0000000000000034 T shared_dispatch_stub_1225
00000000004af0a0 0000000000000034 T shared_dispatch_stub_1226
00000000004af0e0 0000000000000034 T shared_dispatch_stub_1227
00000000004af120 0000000000000034 T shared_dispatch_stub_1228
00000000004af160 0000000000000034 T shared_dispatch_stub_1229
00000000004af1a0 0000000000000034 T shared_dispatch_stub_1230
00000000004af1e0 0000000000000034 T shared_dispatch_stub_1231
00000000004af220 0000000000000034 T shared_dispatch_stub_1232
00000000004af260 0000000000000034 T shared_dispatch_stub_1233
00000000004af2a0 0000000000000034 T shared_dispatch_stub_1234
00000000004af2e0 0000000000000034 T shared_dispatch_stub_1235
00000000004af320 0000000000000034 T shared_dispatch_stub_1236
00000000004af360 0000000000000034 T shared_dispatch_stub_1237
00000000004af3a0 0000000000000034 T shared_dispatch_stub_1238
00000000004af3e0 0000000000000034 T shared_dispatch_stub_1239
00000000004af420 0000000000000034 T shared_dispatch_stub_1240
00000000004af460 0000000000000034 T shared_dispatch_stub_1241
00000000004af4a0 0000000000000034 T shared_dispatch_stub_1242
00000000004af4e0 0000000000000034 T shared_dispatch_stub_1243
00000000004af520 0000000000000034 T shared_dispatch_stub_1244
00000000004af560 0000000000000034 T shared_dispatch_stub_1245
00000000004af5a0 0000000000000034 T shared_dispatch_stub_1246
00000000004af5e0 0000000000000034 T shared_dispatch_stub_1247
00000000004af620 0000000000000034 T shared_dispatch_stub_1248
00000000004af660 0000000000000028 T shared_dispatch_stub_1249
00000000004af690 0000000000000034 T shared_dispatch_stub_1250
00000000004af6d0 0000000000000034 T shared_dispatch_stub_1251
00000000004af710 0000000000000034 T shared_dispatch_stub_1252
00000000004af750 0000000000000034 T shared_dispatch_stub_1253
00000000004af790 0000000000000034 T shared_dispatch_stub_1254
00000000004af7d0 0000000000000028 T shared_dispatch_stub_1255
00000000004af800 0000000000000034 T shared_dispatch_stub_1256
00000000004af840 0000000000000034 T shared_dispatch_stub_1257
00000000004af880 0000000000000034 T shared_dispatch_stub_1258
00000000004af8c0 0000000000000034 T shared_dispatch_stub_1259
00000000004af900 0000000000000034 T shared_dispatch_stub_1260
00000000004af940 0000000000000034 T shared_dispatch_stub_1261
00000000004af980 0000000000000034 T shared_dispatch_stub_1262
00000000004af9c0 0000000000000034 T shared_dispatch_stub_1263
00000000004afa00 0000000000000034 T shared_dispatch_stub_1264
00000000004afa40 0000000000000034 T shared_dispatch_stub_1265
00000000004afa80 0000000000000034 T shared_dispatch_stub_1266
00000000004afac0 0000000000000034 T shared_dispatch_stub_1267
00000000004afb00 0000000000000034 T shared_dispatch_stub_1268
00000000004afb40 0000000000000028 T shared_dispatch_stub_1269
00000000004afb70 0000000000000034 T shared_dispatch_stub_1270
00000000004afbb0 0000000000000034 T shared_dispatch_stub_1271
00000000004afbf0 0000000000000034 T shared_dispatch_stub_1272
00000000004afc30 0000000000000028 T shared_dispatch_stub_1273
00000000004afc60 0000000000000034 T shared_dispatch_stub_1274
00000000004afca0 0000000000000034 T shared_dispatch_stub_1275
00000000004afce0 0000000000000034 T shared_dispatch_stub_1276
00000000004afd20 0000000000000034 T shared_dispatch_stub_1277
00000000004afd60 0000000000000034 T shared_dispatch_stub_1278
00000000004afda0 0000000000000034 T shared_dispatch_stub_1279
00000000004afde0 0000000000000034 T shared_dispatch_stub_1280
00000000004afe20 0000000000000034 T shared_dispatch_stub_1281
00000000004afe60 0000000000000034 T shared_dispatch_stub_1282
00000000004afea0 0000000000000034 T shared_dispatch_stub_1283
00000000004afee0 0000000000000034 T shared_dispatch_stub_1284
00000000004aff20 0000000000000034 T shared_dispatch_stub_1285
00000000004aff60 0000000000000034 T shared_dispatch_stub_1286
00000000004affa0 0000000000000034 T shared_dispatch_stub_1287
00000000004affe0 0000000000000034 T shared_dispatch_stub_1288
00000000004b0020 0000000000000034 T shared_dispatch_stub_1289
00000000004b0060 0000000000000034 T shared_dispatch_stub_1290
00000000004b00a0 0000000000000034 T shared_dispatch_stub_1291
00000000004b00e0 0000000000000034 T shared_dispatch_stub_1292
00000000004b0120 0000000000000034 T shared_dispatch_stub_1293
00000000004b0160 0000000000000034 T shared_dispatch_stub_1294
00000000004b01a0 0000000000000034 T shared_dispatch_stub_1295
00000000004b01e0 0000000000000034 T shared_dispatch_stub_1296
00000000004b0220 0000000000000034 T shared_dispatch_stub_1297
00000000004b0260 0000000000000034 T shared_dispatch_stub_1298
00000000004b02a0 0000000000000034 T shared_dispatch_stub_1299
00000000004b02e0 0000000000000034 T shared_dispatch_stub_1300
00000000004b0320 0000000000000034 T shared_dispatch_stub_1301
00000000004b0360 0000000000000034 T shared_dispatch_stub_1302
00000000004b03a0 0000000000000034 T shared_dispatch_stub_1303
00000000004b03e0 0000000000000034 T shared_dispatch_stub_1304
00000000004b0420 0000000000000034 T shared_dispatch_stub_1305
00000000004b0460 0000000000000034 T shared_dispatch_stub_1306
00000000004b04a0 0000000000000034 T shared_dispatch_stub_1307
00000000004b04e0 0000000000000034 T shared_dispatch_stub_1308
00000000004b0520 0000000000000034 T shared_dispatch_stub_1309
00000000004b0560 0000000000000034 T shared_dispatch_stub_1310
00000000004b05a0 0000000000000034 T shared_dispatch_stub_1311
00000000004b05e0 0000000000000034 T shared_dispatch_stub_1312
00000000004b0620 0000000000000028 T shared_dispatch_stub_1313
00000000004b0650 0000000000000028 T shared_dispatch_stub_1314
00000000004b0680 0000000000000034 T shared_dispatch_stub_1315
00000000004b06c0 0000000000000034 T shared_dispatch_stub_1316
00000000004b0700 0000000000000034 T shared_dispatch_stub_1317
00000000004b0740 0000000000000034 T shared_dispatch_stub_1318
00000000004b0780 0000000000000034 T shared_dispatch_stub_1319
00000000004b07c0 0000000000000034 T shared_dispatch_stub_1320
00000000004b0800 0000000000000034 T shared_dispatch_stub_1321
00000000004b0840 0000000000000034 T shared_dispatch_stub_1322
00000000004b0880 0000000000000034 T shared_dispatch_stub_1323
00000000004b08c0 0000000000000034 T shared_dispatch_stub_1324
00000000004b0900 0000000000000034 T shared_dispatch_stub_1325
00000000004b0940 0000000000000034 T shared_dispatch_stub_1326
00000000004b0980 0000000000000034 T shared_dispatch_stub_1327
00000000004b09c0 0000000000000034 T shared_dispatch_stub_1328
00000000004b0a00 0000000000000034 T shared_dispatch_stub_1329
00000000004b0a40 0000000000000034 T shared_dispatch_stub_1330
00000000004b0a80 0000000000000034 T shared_dispatch_stub_1331
00000000004b0ac0 0000000000000034 T shared_dispatch_stub_1332
00000000004b0b00 0000000000000034 T shared_dispatch_stub_1333
00000000004b0b40 0000000000000028 T shared_dispatch_stub_1334
00000000004b0b70 0000000000000034 T shared_dispatch_stub_1335
00000000004b0bb0 0000000000000034 T shared_dispatch_stub_1336
00000000004b0bf0 0000000000000034 T shared_dispatch_stub_1337
00000000004b0c30 0000000000000034 T shared_dispatch_stub_1338
00000000004b0c70 0000000000000034 T shared_dispatch_stub_1339
00000000004b0cb0 0000000000000034 T shared_dispatch_stub_1340
00000000004b0cf0 0000000000000034 T shared_dispatch_stub_1341
00000000004b0d30 0000000000000034 T shared_dispatch_stub_1342
00000000004b0d70 0000000000000034 T shared_dispatch_stub_1343
00000000004b0db0 0000000000000034 T shared_dispatch_stub_1344
00000000004b0df0 0000000000000034 T shared_dispatch_stub_1345
00000000004b0e30 0000000000000034 T shared_dispatch_stub_1346
00000000004b0e70 0000000000000034 T shared_dispatch_stub_1347
00000000004b0eb0 0000000000000034 T shared_dispatch_stub_1348
00000000004b0ef0 0000000000000034 T shared_dispatch_stub_1349
00000000004b0f30 0000000000000034 T shared_dispatch_stub_1350
00000000004b0f70 0000000000000034 T shared_dispatch_stub_1351
00000000004b0fb0 0000000000000034 T shared_dispatch_stub_1352
00000000004b0ff0 0000000000000034 T shared_dispatch_stub_1353
00000000004b1030 0000000000000034 T shared_dispatch_stub_1354
00000000004b1070 0000000000000034 T shared_dispatch_stub_1355
00000000004b10b0 0000000000000034 T shared_dispatch_stub_1356
00000000004b10f0 0000000000000034 T shared_dispatch_stub_1357
00000000004b1130 0000000000000034 T shared_dispatch_stub_1358
00000000004b1170 0000000000000034 T shared_dispatch_stub_1359
00000000004b11b0 0000000000000034 T shared_dispatch_stub_1360
00000000004b11f0 0000000000000034 T shared_dispatch_stub_1361
00000000004b1230 0000000000000034 T shared_dispatch_stub_1362
00000000004b1270 0000000000000034 T shared_dispatch_stub_1363
00000000004b12b0 0000000000000034 T shared_dispatch_stub_1364
00000000004b12f0 0000000000000034 T shared_dispatch_stub_1365
00000000004b1330 0000000000000034 T shared_dispatch_stub_1366
00000000004b1370 0000000000000028 T shared_dispatch_stub_1367
00000000004b13a0 0000000000000034 T shared_dispatch_stub_1368
00000000004b13e0 0000000000000034 T shared_dispatch_stub_1369
00000000004b1420 0000000000000034 T shared_dispatch_stub_1370
00000000004b1460 0000000000000034 T shared_dispatch_stub_1371
00000000004b14a0 0000000000000034 T shared_dispatch_stub_1372
00000000004b14e0 0000000000000034 T shared_dispatch_stub_1373
00000000004b1520 0000000000000034 T shared_dispatch_stub_1374
00000000004b1560 0000000000000034 T shared_dispatch_stub_1375
00000000004b15a0 0000000000000034 T shared_dispatch_stub_1376
00000000004b15e0 0000000000000034 T shared_dispatch_stub_1377
00000000004b1620 0000000000000034 T shared_dispatch_stub_1378
00000000004b1660 0000000000000034 T shared_dispatch_stub_1379
00000000004b16a0 0000000000000034 T shared_dispatch_stub_1380
00000000004b16e0 0000000000000034 T shared_dispatch_stub_1381
00000000004b1720 0000000000000028 T shared_dispatch_stub_1382
00000000004b1750 0000000000000034 T shared_dispatch_stub_1383
00000000004b1790 0000000000000034 T shared_dispatch_stub_1384
00000000004b17d0 0000000000000034 T shared_dispatch_stub_1385
00000000004b1810 0000000000000034 T shared_dispatch_stub_1386
00000000004b1850 0000000000000034 T shared_dispatch_stub_1387
00000000004b1890 0000000000000034 T shared_dispatch_stub_1388
00000000004b18d0 0000000000000034 T shared_dispatch_stub_1389
00000000004b1910 0000000000000034 T shared_dispatch_stub_1390
00000000004b1950 0000000000000034 T shared_dispatch_stub_1391
00000000004b1990 0000000000000034 T shared_dispatch_stub_1392
00000000004b19d0 0000000000000034 T shared_dispatch_stub_1393
00000000004b1a10 0000000000000034 T shared_dispatch_stub_1394
00000000004b1a50 0000000000000028 T shared_dispatch_stub_1395
00000000004b1a80 0000000000000034 T shared_dispatch_stub_1396
00000000004b1ac0 0000000000000034 T shared_dispatch_stub_1397
00000000004b1b00 0000000000000034 T shared_dispatch_stub_1398
00000000004b1b40 0000000000000034 T shared_dispatch_stub_1399
00000000004b1b80 0000000000000034 T shared_dispatch_stub_1400
00000000004b1bc0 0000000000000034 T shared_dispatch_stub_1401
00000000004b1c00 0000000000000034 T shared_dispatch_stub_1402
00000000004b1c40 0000000000000034 T shared_dispatch_stub_1403
00000000004b1c80 0000000000000034 T shared_dispatch_stub_1404
00000000004b1cc0 0000000000000034 T shared_dispatch_stub_1405
00000000004b1d00 0000000000000034 T shared_dispatch_stub_1406
00000000004b1d40 0000000000000034 T shared_dispatch_stub_1407
00000000004b1d80 0000000000000034 T shared_dispatch_stub_1408
00000000004b1dc0 0000000000000034 T shared_dispatch_stub_1409
00000000004b1e00 0000000000000034 T shared_dispatch_stub_1410
00000000004b1e40 0000000000000034 T shared_dispatch_stub_1411
00000000004b1e80 0000000000000034 T shared_dispatch_stub_1412
00000000004b1ec0 0000000000000034 T shared_dispatch_stub_1413
00000000004b1f00 0000000000000034 T shared_dispatch_stub_1414
00000000004b1f40 0000000000000034 T shared_dispatch_stub_1415
00000000004b1f80 0000000000000034 T shared_dispatch_stub_1416
00000000004b1fc0 0000000000000034 T shared_dispatch_stub_1417
00000000004b2000 0000000000000028 T shared_dispatch_stub_1418
00000000004b2030 0000000000000028 T shared_dispatch_stub_1419
00000000004b2060 0000000000000034 T shared_dispatch_stub_1420
00000000004b20a0 0000000000000034 T shared_dispatch_stub_1421
00000000004b20e0 0000000000000034 T shared_dispatch_stub_1422
00000000004b2120 0000000000000034 T shared_dispatch_stub_1423
00000000004b2160 0000000000000034 T shared_dispatch_stub_1424
00000000004b21a0 0000000000000034 T shared_dispatch_stub_1425
00000000004b21e0 0000000000000034 T shared_dispatch_stub_1426
00000000004b2220 0000000000000034 T shared_dispatch_stub_1427
00000000004b2260 0000000000000034 T shared_dispatch_stub_1428
00000000004b22a0 0000000000000034 T shared_dispatch_stub_1429
00000000004b22e0 0000000000000034 T shared_dispatch_stub_1430
00000000004b2320 0000000000000034 T shared_dispatch_stub_1431
00000000004b2360 0000000000000034 T shared_dispatch_stub_1432
00000000004b23a0 0000000000000034 T shared_dispatch_stub_1433
00000000004b23e0 0000000000000034 T shared_dispatch_stub_1434
00000000004b2420 0000000000000034 T shared_dispatch_stub_1435
00000000004b2460 0000000000000034 T shared_dispatch_stub_1436
00000000004b24a0 0000000000000034 T shared_dispatch_stub_1437
00000000004b24e0 0000000000000034 T shared_dispatch_stub_1438
00000000004b2520 0000000000000034 T shared_dispatch_stub_1439
00000000004b2560 0000000000000034 T shared_dispatch_stub_1440
00000000004b25a0 0000000000000034 T shared_dispatch_stub_1441
00000000004b25e0 0000000000000034 T shared_dispatch_stub_1442
00000000004b2620 0000000000000034 T shared_dispatch_stub_1443
00000000004b2660 0000000000000034 T shared_dispatch_stub_1444
00000000004b26a0 0000000000000034 T shared_dispatch_stub_1445
00000000004b26e0 0000000000000034 T shared_dispatch_stub_1446
00000000004b2720 0000000000000034 T shared_dispatch_stub_1447
00000000004b2760 0000000000000034 T shared_dispatch_stub_1448
00000000004b27a0 0000000000000034 T shared_dispatch_stub_1449
00000000004b27e0 0000000000000034 T shared_dispatch_stub_1450
00000000004b2820 0000000000000034 T shared_dispatch_stub_1451
00000000004b2860 0000000000000034 T shared_dispatch_stub_1452
00000000004b28a0 0000000000000034 T shared_dispatch_stub_1453
00000000004b28e0 0000000000000034 T shared_dispatch_stub_1454
00000000004b2920 0000000000000034 T shared_dispatch_stub_1455
00000000004b2960 0000000000000034 T shared_dispatch_stub_1456
00000000004b29a0 0000000000000034 T shared_dispatch_stub_1457
00000000004b29e0 0000000000000034 T shared_dispatch_stub_1458
00000000004b2a20 0000000000000034 T shared_dispatch_stub_1459
00000000004b2a60 0000000000000034 T shared_dispatch_stub_1460
00000000004b2aa0 0000000000000034 T shared_dispatch_stub_1461
00000000004b2ae0 0000000000000034 T shared_dispatch_stub_1462
00000000004b2b20 0000000000000034 T shared_dispatch_stub_1463
00000000004b2b60 0000000000000034 T shared_dispatch_stub_1464
00000000004b2ba0 0000000000000034 T shared_dispatch_stub_1465
00000000004b2be0 0000000000000034 T shared_dispatch_stub_1466
00000000004b2c20 0000000000000034 T shared_dispatch_stub_1467
00000000004b2c60 0000000000000034 T shared_dispatch_stub_1468
00000000004b2ca0 0000000000000034 T shared_dispatch_stub_1469
00000000004b2ce0 0000000000000034 T shared_dispatch_stub_1470
00000000004b2d20 0000000000000034 T shared_dispatch_stub_1471
00000000004b2d60 0000000000000034 T shared_dispatch_stub_1472
00000000004b2da0 0000000000000034 T shared_dispatch_stub_1473
00000000004b2de0 0000000000000034 T shared_dispatch_stub_1474
00000000004b2e20 0000000000000034 T shared_dispatch_stub_1475
00000000004b2e60 0000000000000034 T shared_dispatch_stub_1476
00000000004b2ea0 0000000000000034 T shared_dispatch_stub_1477
00000000004b2ee0 0000000000000034 T shared_dispatch_stub_1478
00000000004b2f20 0000000000000034 T shared_dispatch_stub_1479
00000000004b2f60 0000000000000034 T shared_dispatch_stub_1480
00000000004b2fa0 0000000000000034 T shared_dispatch_stub_1481
00000000004b2fe0 0000000000000034 T shared_dispatch_stub_1482
00000000004b3020 0000000000000034 T shared_dispatch_stub_1483
00000000004b3060 0000000000000034 T shared_dispatch_stub_1484
00000000004b30a0 0000000000000034 T shared_dispatch_stub_1485
00000000004b30e0 0000000000000034 T shared_dispatch_stub_1486
00000000004b3120 0000000000000034 T shared_dispatch_stub_1487
00000000004b3160 0000000000000034 T shared_dispatch_stub_1488
00000000004b31a0 0000000000000034 T shared_dispatch_stub_1489
00000000004b31e0 0000000000000034 T shared_dispatch_stub_1490
00000000004b3220 0000000000000034 T shared_dispatch_stub_1491
00000000004b3260 0000000000000034 T shared_dispatch_stub_1492
00000000004b32a0 0000000000000034 T shared_dispatch_stub_1493
00000000004b32e0 0000000000000034 T shared_dispatch_stub_1494
00000000004b3320 0000000000000034 T shared_dispatch_stub_1495
00000000004b3360 0000000000000034 T shared_dispatch_stub_1496
00000000004b33a0 0000000000000034 T shared_dispatch_stub_1497
00000000004b33e0 0000000000000034 T shared_dispatch_stub_1498
00000000004b3420 0000000000000034 T shared_dispatch_stub_1499
00000000004b3460 0000000000000034 T shared_dispatch_stub_1500
00000000004b34a0 0000000000000034 T shared_dispatch_stub_1501
00000000004b34e0 0000000000000034 T shared_dispatch_stub_1502
00000000004b3520 0000000000000034 T shared_dispatch_stub_1503
00000000004b3560 0000000000000034 T shared_dispatch_stub_1504
00000000004b35a0 0000000000000034 T shared_dispatch_stub_1505
00000000004b35e0 0000000000000034 T shared_dispatch_stub_1506
00000000004b3620 0000000000000034 T shared_dispatch_stub_1507
00000000004b3660 0000000000000034 T shared_dispatch_stub_1508
00000000004b36a0 0000000000000034 T shared_dispatch_stub_1509
00000000004b36e0 0000000000000034 T shared_dispatch_stub_1510
00000000004b3720 0000000000000034 T shared_dispatch_stub_1511
00000000004b3760 0000000000000034 T shared_dispatch_stub_1512
00000000004b37a0 0000000000000034 T shared_dispatch_stub_1513
00000000004b37e0 0000000000000034 T shared_dispatch_stub_1514
00000000004b3820 0000000000000034 T shared_dispatch_stub_1515
00000000004b3860 0000000000000034 T shared_dispatch_stub_1516
00000000004b38a0 0000000000000034 T shared_dispatch_stub_1517
00000000004b38e0 0000000000000034 T shared_dispatch_stub_1518
00000000004b3920 0000000000000034 T shared_dispatch_stub_1519
00000000004b3960 0000000000000034 T shared_dispatch_stub_1520
00000000004b39a0 0000000000000034 T shared_dispatch_stub_1521
00000000004b39e0 0000000000000034 T shared_dispatch_stub_1522
00000000004b3a20 0000000000000034 T shared_dispatch_stub_1523
00000000004b3a60 0000000000000034 T shared_dispatch_stub_1524
00000000004b3aa0 0000000000000034 T shared_dispatch_stub_1525
00000000004b3ae0 0000000000000034 T shared_dispatch_stub_1526
00000000004b3b20 0000000000000034 T shared_dispatch_stub_1527
00000000004b3b60 0000000000000034 T shared_dispatch_stub_1528
00000000004b3ba0 0000000000000034 T shared_dispatch_stub_1529
00000000004b3be0 0000000000000034 T shared_dispatch_stub_1530
00000000004b3c20 0000000000000034 T shared_dispatch_stub_1531
00000000004b3c60 0000000000000034 T shared_dispatch_stub_1532
00000000004b3ca0 0000000000000034 T shared_dispatch_stub_1533
00000000004b3ce0 0000000000000034 T shared_dispatch_stub_1534
00000000004b3d20 0000000000000034 T shared_dispatch_stub_1535
00000000004b3d60 0000000000000034 T shared_dispatch_stub_1536
00000000004b3da0 0000000000000034 T shared_dispatch_stub_1537
00000000004b3de0 0000000000000034 T shared_dispatch_stub_1538
00000000004b3e20 0000000000000034 T shared_dispatch_stub_1539
00000000004b3e60 0000000000000034 T shared_dispatch_stub_1540
00000000004b3ea0 0000000000000034 T shared_dispatch_stub_1541
00000000004b3ee0 0000000000000034 T shared_dispatch_stub_1542
00000000004b3f20 0000000000000034 T shared_dispatch_stub_1543
00000000004b3f60 0000000000000034 T shared_dispatch_stub_1544
00000000004b3fa0 0000000000000034 T shared_dispatch_stub_1545
00000000004b3fe0 0000000000000034 T shared_dispatch_stub_1546
00000000004b4020 0000000000000034 T shared_dispatch_stub_1547
00000000004b4060 0000000000000034 T shared_dispatch_stub_1548
00000000004b40a0 0000000000000034 T shared_dispatch_stub_1549
00000000004b40e0 0000000000000034 T shared_dispatch_stub_1550
00000000004b4120 0000000000000034 T shared_dispatch_stub_1551
00000000004b4160 0000000000000034 T shared_dispatch_stub_1552
00000000004b41a0 0000000000000034 T shared_dispatch_stub_1553
00000000004b41e0 0000000000000034 T shared_dispatch_stub_1554
00000000004b4220 0000000000000034 T shared_dispatch_stub_1555
00000000004b4260 0000000000000034 T shared_dispatch_stub_1556
00000000004b42a0 0000000000000034 T shared_dispatch_stub_1557
00000000004b42e0 0000000000000034 T shared_dispatch_stub_1558
00000000004b4320 0000000000000034 T shared_dispatch_stub_1559
00000000004b4360 0000000000000034 T shared_dispatch_stub_1560
00000000004b43a0 0000000000000034 T shared_dispatch_stub_1561
00000000004b43e0 0000000000000034 T shared_dispatch_stub_1562
00000000004b4420 0000000000000034 T shared_dispatch_stub_1563
00000000004b4460 0000000000000034 T shared_dispatch_stub_1564
00000000004b44a0 0000000000000034 T shared_dispatch_stub_1565
00000000004b44e0 0000000000000034 T shared_dispatch_stub_1566
00000000004b4520 0000000000000034 T shared_dispatch_stub_1567
00000000004b4560 0000000000000034 T shared_dispatch_stub_1568
00000000004b45a0 0000000000000034 T shared_dispatch_stub_1569
00000000004b45e0 0000000000000034 T shared_dispatch_stub_1570
00000000004b4620 0000000000000034 T shared_dispatch_stub_1571
00000000004b4660 0000000000000034 T shared_dispatch_stub_1572
00000000004b46a0 0000000000000034 T shared_dispatch_stub_1573
00000000004b46e0 0000000000000034 T shared_dispatch_stub_1574
00000000004b4720 0000000000000034 T shared_dispatch_stub_1575
00000000004b4760 0000000000000034 T shared_dispatch_stub_1576
00000000004b47a0 0000000000000034 T shared_dispatch_stub_1577
00000000004b47e0 0000000000000034 T shared_dispatch_stub_1578
00000000004b4820 0000000000000034 T shared_dispatch_stub_1579
00000000004b4860 0000000000000034 T shared_dispatch_stub_1580
00000000004b48a0 0000000000000034 T shared_dispatch_stub_1581
00000000004b48e0 0000000000000034 T shared_dispatch_stub_1582
00000000004b4920 0000000000000034 T shared_dispatch_stub_1583
00000000004b4960 0000000000000034 T shared_dispatch_stub_1584
00000000004b49a0 0000000000000034 T shared_dispatch_stub_1585
00000000004b49e0 0000000000000034 T shared_dispatch_stub_1586
00000000004b4a20 0000000000000034 T shared_dispatch_stub_1587
00000000004b4a60 0000000000000034 T shared_dispatch_stub_1588
00000000004b4aa0 0000000000000034 T shared_dispatch_stub_1589
00000000004b4ae0 0000000000000034 T shared_dispatch_stub_1590
00000000004b4b20 0000000000000034 T shared_dispatch_stub_1591
00000000004b4b60 0000000000000034 T shared_dispatch_stub_1592
00000000004b4ba0 0000000000000034 T shared_dispatch_stub_1593
00000000004b4be0 0000000000000034 T shared_dispatch_stub_1594
00000000004b4c20 0000000000000034 T shared_dispatch_stub_1595
00000000004b4c60 0000000000000034 T shared_dispatch_stub_1596
00000000004b4ca0 0000000000000034 T shared_dispatch_stub_1597
00000000004b4ce0 0000000000000034 T shared_dispatch_stub_1598
00000000004b4d20 0000000000000034 T shared_dispatch_stub_1599
00000000004b4d60 0000000000000034 T shared_dispatch_stub_1600
00000000004b4da0 0000000000000034 T shared_dispatch_stub_1601
00000000004b4de0 0000000000000034 T shared_dispatch_stub_1602
00000000004b4e20 0000000000000034 T shared_dispatch_stub_1603
00000000004b4e60 0000000000000034 T shared_dispatch_stub_1604
00000000004b4ea0 0000000000000034 T shared_dispatch_stub_1605
00000000004b4ee0 0000000000000034 T shared_dispatch_stub_1606
00000000004b4f20 0000000000000034 T shared_dispatch_stub_1607
00000000004b4f60 0000000000000034 T shared_dispatch_stub_1608
00000000004b4fa0 0000000000000034 T shared_dispatch_stub_1609
00000000004b4fe0 0000000000000004 T entry_patch_public
00000000004b4ff0 0000000000000010 t entry_get_public
00000000004b5000 0000000000000008 t entry_generate
00000000004b5010 0000000000000004 t entry_patch
00000000004b5020 0000000000000078 T nouveau_bufctx_new
00000000004b50a0 000000000000005c T nouveau_bufctx_reset
00000000004b5100 0000000000000074 T nouveau_bufctx_del
00000000004b5180 0000000000000090 T nouveau_bufctx_refn
00000000004b5210 0000000000000008 T nouveau_object_mclass
00000000004b5220 0000000000000098 T nouveau_object_new
00000000004b52c0 0000000000000044 T nouveau_object_del
00000000004b5310 0000000000000028 T nouveau_drm_del
00000000004b5340 0000000000000050 T nouveau_drm_new
00000000004b5390 0000000000000100 T nouveau_device_new
00000000004b5490 0000000000000050 T nouveau_device_del
00000000004b54e0 0000000000000034 T nouveau_getparam
00000000004b5520 000000000000011c T nouveau_client_new
00000000004b5640 0000000000000088 T nouveau_client_del
00000000004b56d0 0000000000000184 T nouveau_bo_new
00000000004b5860 0000000000000104 T nouveau_bo_name_ref
00000000004b5970 0000000000000010 T nouveau_bo_name_get
00000000004b5980 00000000000000d0 T nouveau_bo_ref
00000000004b5a50 0000000000000008 T nouveau_bo_prime_handle_ref
00000000004b5a60 0000000000000008 T nouveau_bo_set_prime
00000000004b5a70 0000000000000014 T nouveau_bo_get_syncpoint
00000000004b5a90 000000000000009c T nouveau_bo_wait
00000000004b5b30 000000000000000c T nouveau_bo_map
00000000004b5b40 0000000000000008 T nouveau_bo_unmap
00000000004b5b50 0000000000000098 t pushbuf_refn_fail
00000000004b5bf0 0000000000000118 T nouveau_pushbuf_del
00000000004b5d10 0000000000000280 T nouveau_pushbuf_new
00000000004b5f90 0000000000000010 T nouveau_pushbuf_bufctx
00000000004b5fa0 00000000000000c4 T nouveau_pushbuf_data
00000000004b5fa0 00000000000000c4 t nouveau_pushbuf_data.localalias
00000000004b6070 0000000000000254 t pushbuf_submit.isra.0
00000000004b62d0 000000000000012c t pushbuf_flush.isra.0
00000000004b6400 0000000000000128 t pushbuf_kref
00000000004b6530 00000000000001b0 t pushbuf_validate
00000000004b66e0 0000000000000238 T nouveau_pushbuf_space
00000000004b6920 00000000000000cc T nouveau_pushbuf_refn
00000000004b69f0 0000000000000008 T nouveau_pushbuf_validate
00000000004b6a00 0000000000000040 T nouveau_pushbuf_kick
00000000004b6a40 000000000000004c T cli_map_free
00000000004b6a90 0000000000000058 T cli_kref_get
00000000004b6af0 0000000000000058 T cli_push_get
00000000004b6b50 0000000000000110 T cli_kref_set
00000000004b6c60 0000000000000080 T mutexLock
00000000004b6ce0 0000000000000068 T mutexUnlock
00000000004b6d50 000000000000001c T mutexIsLockedByCurrentThread
00000000004b6d70 000000000000004c T rmutexLock
00000000004b6dc0 000000000000001c T rmutexUnlock
00000000004b6de0 0000000000000018 t _appletInfiniteSleepLoop
00000000004b6e00 0000000000000108 t _appletCmdGetSession
00000000004b6f10 00000000000000cc t _appletCmdInU8NoOut
00000000004b6fe0 0000000000000104 t _appletGetLaunchReason
00000000004b70f0 00000000000000e4 t _appletSetFocusHandlingMode
00000000004b71e0 00000000000000d4 t _appletCmdInSession
00000000004b72c0 00000000000000cc t _appletCmdInU32NoOut
00000000004b7390 000000000000011c t _appletCreateLibraryApplet
00000000004b74b0 000000000000010c t _appletCmdGetSessionInU64
00000000004b75c0 0000000000000138 t _appletGetSessionProxy.constprop.0
00000000004b7700 0000000000000154 t _appletOpenLibraryAppletProxy.constprop.0
00000000004b7860 00000000000000d0 t _appletCmdGetHandle.constprop.0.isra.0
00000000004b7930 00000000000001c4 t _appletStorageAccessorRW.isra.0
00000000004b7b00 00000000000000f8 t _appletStorageRW.part.0
00000000004b7c00 00000000000000d4 t _appletCmdNoInOutU8.isra.0
00000000004b7ce0 00000000000000d4 t _appletCmdNoInOutU32.isra.0
00000000004b7dc0 00000000000000d4 t _appletCmdNoInOutU64.isra.0
00000000004b7ea0 00000000000000c0 t _appletCmdNoIO.isra.0
00000000004b7f60 0000000000000010 T appletGetAppletType
00000000004b7f70 000000000000000c T appletGetThemeColorType
00000000004b7f80 0000000000000108 T appletSetFocusHandlingMode
00000000004b8090 000000000000005c T appletSetCpuBoostMode
00000000004b80f0 000000000000002c T appletCreateManagedDisplayLayer
00000000004b8120 000000000000000c T appletGetAppletResourceUserId
00000000004b8130 00000000000000f4 t _appletGetIndirectLayerConsumerHandle
00000000004b8230 0000000000000088 t _appletHolderCreateState
00000000004b82c0 00000000000000c4 T appletCreateLibraryApplet
00000000004b8390 00000000000000b0 T appletHolderClose
00000000004b8440 0000000000000010 T appletHolderActive
00000000004b8450 00000000000000b8 T appletHolderStart
00000000004b8510 0000000000000164 T appletHolderJump
00000000004b8680 0000000000000084 T appletHolderJoin
00000000004b8710 0000000000000024 T appletHolderCheckFinished
00000000004b8740 0000000000000008 T appletHolderGetExitReason
00000000004b8750 0000000000000060 T appletHolderPresetLibraryAppletGpuTimeSliceZero
00000000004b87b0 0000000000000028 T appletHolderPopOutData
00000000004b87e0 0000000000000028 T appletHolderPopInteractiveOutData
00000000004b8810 0000000000000024 T appletHolderGetLibraryAppletInfo
00000000004b8840 000000000000002c T appletCreateStorage
00000000004b8870 0000000000000090 T appletStorageClose
00000000004b8900 000000000000004c T appletHolderPushInData
00000000004b8950 000000000000004c T appletHolderPushInteractiveInData
00000000004b89a0 0000000000000008 T appletStorageCloseTmem
00000000004b89b0 00000000000000d8 T appletStorageGetSize
00000000004b8a90 0000000000000018 T appletStorageWrite
00000000004b8ab0 0000000000000018 T appletStorageRead
00000000004b8ad0 0000000000000090 T appletNotifyRunning
00000000004b8b60 000000000000008c T appletSetGamePlayRecordingState
00000000004b8bf0 0000000000000ad4 t _appletCleanup
00000000004b96d0 0000000000000044 T appletExit
00000000004b9720 0000000000000040 T appletGetLibraryAppletInfo
00000000004b9760 0000000000000a98 T appletInitialize
00000000004ba200 0000000000000024 t _appletExitProcess
00000000004ba230 000000000000000c T appletGetOperationMode
00000000004ba240 0000000000000074 T appletGetMessage
00000000004ba2c0 000000000000027c T appletProcessMessage
00000000004ba540 0000000000000034 T appletMainLoop
00000000004ba580 0000000000000084 t _audrenCleanup
00000000004ba610 00000000000000c0 t _audrenCmdNoIO.constprop.0
00000000004ba6d0 00000000000004cc T audrenInitialize
00000000004baba0 0000000000000044 T audrenExit
00000000004babf0 0000000000000010 T audrenWaitFrame
00000000004bac00 0000000000000330 T audrenRequestUpdateAudioRenderer
00000000004baf30 0000000000000008 T audrenStartAudioRenderer
00000000004baf40 00000000000001c0 t _fatalCmd
00000000004bb100 000000000000000c T fatalThrowWithPolicy
00000000004bb110 0000000000000014 T fatalThrow
00000000004bb130 0000000000000108 t _hidCleanup
00000000004bb240 00000000000000d8 t _hidCmdInAruidNoOut
00000000004bb320 00000000000000e4 t _hidCmdInU32AruidNoOut
00000000004bb410 00000000000000e4 t _hidCmdInU64AruidNoOut
00000000004bb500 00000000000001a4 t _hidGetStates
00000000004bb6b0 00000000000000f4 t _hidCmdInAruidOutU64.constprop.0
00000000004bb7b0 00000000000000e8 t _hidCmdInAruidOutU32.constprop.0
00000000004bb8a0 00000000000000c0 t _hidCmdInU32NoOut.constprop.0
00000000004bb960 0000000000000100 t _hidCmdGetSession.constprop.0
00000000004bba60 0000000000000114 t _hidCreateAppletResource.constprop.0
00000000004bbb80 00000000000000c8 t _hidCmdGetHandle.constprop.0
00000000004bbc50 00000000000000dc T hidInitialize
00000000004bbd30 0000000000000044 T hidExit
00000000004bbd80 000000000000000c T hidGetSharedmemAddr
00000000004bbd90 0000000000000090 T hidGetNpadStyleSet
00000000004bbe20 00000000000000a8 T hidGetNpadDeviceType
00000000004bbed0 0000000000000020 T hidInitializeTouchScreen
00000000004bbef0 0000000000000088 T hidGetTouchScreenStates
00000000004bbf80 0000000000000020 T hidInitializeMouse
00000000004bbfa0 0000000000000058 T hidGetMouseStates
00000000004bc000 0000000000000020 T hidInitializeKeyboard
00000000004bc020 0000000000000058 T hidGetKeyboardStates
00000000004bc080 000000000000006c T hidInitializeNpad
00000000004bc0f0 00000000000000a8 T hidGetNpadStatesFullKey
00000000004bc1a0 00000000000000a8 T hidGetNpadStatesHandheld
00000000004bc250 00000000000000a8 T hidGetNpadStatesJoyDual
00000000004bc300 00000000000000a8 T hidGetNpadStatesJoyLeft
00000000004bc3b0 00000000000000a8 T hidGetNpadStatesJoyRight
00000000004bc460 0000000000000158 T hidGetNpadStatesGc
00000000004bc5c0 00000000000000ac T hidGetNpadStatesSystemExt
00000000004bc670 0000000000000008 T hidSetSupportedNpadStyleSet
00000000004bc680 000000000000003c T hidGetSupportedNpadStyleSet
00000000004bc6c0 0000000000000100 T hidSetSupportedNpadIdType
00000000004bc7c0 000000000000000c T hidSetNpadJoyHoldType
00000000004bc7d0 0000000000000040 T hidGetNpadJoyHoldType
00000000004bc810 000000000000020c T hidInitializeVibrationDevices
00000000004bca20 0000000000000124 T hidSendVibrationValues
00000000004bcb50 00000000000000d0 t _nvSetClientPID
00000000004bcc20 00000000000000c8 t _nvCleanup
00000000004bccf0 00000000000000d8 t _nvCmdInitialize.constprop.0
00000000004bcdd0 000000000000001c W __nx_nv_create_tmem
00000000004bcdf0 00000000000002d8 T nvInitialize
00000000004bd0d0 0000000000000044 T nvExit
00000000004bd120 00000000000000f4 T nvConvertError
00000000004bd220 0000000000000118 T nvOpen
00000000004bd340 00000000000002f8 T nvIoctl
00000000004bd640 00000000000003cc T nvIoctl2
00000000004bda10 00000000000000d8 T nvClose
00000000004bdaf0 0000000000000110 T nvQueryEvent
00000000004bdc00 0000000000000068 t _psmCleanup
00000000004bdc70 0000000000000098 T psmInitialize
00000000004bdd10 0000000000000044 T psmExit
00000000004bdd60 00000000000000d0 t _smCmifCmdInPid
00000000004bde30 0000000000000068 t _smCleanup
00000000004bdea0 0000000000000048 T smAddOverrideHandle
00000000004bdef0 0000000000000054 T smGetServiceOverride
00000000004bdf50 00000000000001bc T smInitialize
00000000004be110 0000000000000044 T smExit
00000000004be160 00000000000000d0 T smGetServiceOriginal
00000000004be230 0000000000000120 T smGetServiceWrapper
00000000004be350 0000000000000044 T nvAddressSpaceClose
00000000004be3a0 0000000000000088 T nvAddressSpaceCreate
00000000004be430 0000000000000044 T nvAddressSpaceMap
00000000004be480 0000000000000008 T nvAddressSpaceUnmap
00000000004be490 000000000000007c t _nvFenceCleanup
00000000004be510 0000000000000098 T nvFenceInit
00000000004be5b0 0000000000000044 T nvFenceExit
00000000004be600 0000000000000240 T nvFenceWait
00000000004be840 0000000000000074 T nvMultiFenceWait
00000000004be8c0 0000000000000130 T nvGpuInit
00000000004be9f0 000000000000006c T nvGpuExit
00000000004bea60 000000000000000c T nvGpuGetCharacteristics
00000000004bea70 000000000000000c T nvGpuGetZcullCtxSize
00000000004bea80 0000000000000064 T nvGpuChannelClose
00000000004beaf0 000000000000010c T nvGpuChannelCreate
00000000004bec00 000000000000000c T nvGpuChannelZcullBind
00000000004bec10 00000000000000f8 T nvGpuChannelKickoff
00000000004bed10 00000000000000b8 T nvGpuChannelAppendEntry
00000000004bedd0 00000000000000b4 T nvMapInit
00000000004bee90 000000000000006c T nvMapExit
00000000004bef00 000000000000000c T nvMapGetFd
00000000004bef10 0000000000000080 T nvMapClose
00000000004bef90 0000000000000154 T nvMapCreate
00000000004bf0f0 000000000000009c T nvMapLoadRemote
00000000004bf190 0000000000000028 T nvioctlChannel_SetNvmapFd
00000000004bf1c0 00000000000000c4 T nvioctlChannel_SubmitGpfifo
00000000004bf290 000000000000005c T nvioctlChannel_KickoffPb
00000000004bf2f0 0000000000000058 T nvioctlChannel_AllocObjCtx
00000000004bf350 0000000000000030 T nvioctlChannel_ZCullBind
00000000004bf380 0000000000000030 T nvioctlChannel_SetErrorNotifier
00000000004bf3b0 0000000000000028 T nvioctlChannel_SetPriority
00000000004bf3e0 0000000000000058 T nvioctlChannel_AllocGpfifoEx2
00000000004bf440 0000000000000028 T nvioctlNvhostAsGpu_BindChannel
00000000004bf470 0000000000000054 T nvioctlNvhostAsGpu_MapBufferEx
00000000004bf4d0 0000000000000028 T nvioctlNvhostAsGpu_UnmapBuffer
00000000004bf500 0000000000000044 T nvioctlNvhostAsGpu_InitializeEx
00000000004bf550 0000000000000028 T nvioctlNvhostCtrl_EventSignal
00000000004bf580 0000000000000044 T nvioctlNvhostCtrl_EventWait
00000000004bf5d0 0000000000000030 T nvioctlNvhostCtrl_EventWaitAsync
00000000004bf600 0000000000000028 T nvioctlNvhostCtrl_EventRegister
00000000004bf630 0000000000000028 T nvioctlNvhostCtrl_EventUnregister
00000000004bf660 000000000000003c T nvioctlNvhostCtrlGpu_ZCullGetCtxSize
00000000004bf6a0 0000000000000050 T nvioctlNvhostCtrlGpu_ZCullGetInfo
00000000004bf6f0 000000000000008c T nvioctlNvhostCtrlGpu_GetCharacteristics
00000000004bf780 000000000000007c T nvioctlNvhostCtrlGpu_GetTpcMasks
00000000004bf800 0000000000000040 T nvioctlNvmap_Create
00000000004bf840 0000000000000040 T nvioctlNvmap_FromId
00000000004bf880 0000000000000038 T nvioctlNvmap_Alloc
00000000004bf8c0 0000000000000034 T nvioctlNvmap_Free
00000000004bf900 0000000000000048 T nvioctlNvmap_Param
00000000004bf950 0000000000000040 T nvioctlNvmap_GetId
00000000004bf990 000000000000000c T nwindowGetDefault
00000000004bf9a0 00000000000000b0 T __nx_win_init
00000000004bfa50 0000000000000034 T __nx_win_exit
00000000004bfa90 0000000000000024 T nwindowIsValid
00000000004bfac0 000000000000007c T nwindowClose
00000000004bfb40 00000000000000f4 T nwindowCreate
00000000004bfc40 0000000000000034 T nwindowCreateFromLayer
00000000004bfc80 0000000000000090 T nwindowGetDimensions
00000000004bfd10 0000000000000084 T nwindowSetDimensions
00000000004bfda0 0000000000000040 T nwindowSetSwapInterval
00000000004bfde0 000000000000018c T nwindowConfigureBuffer
00000000004bff70 00000000000001e0 T nwindowDequeueBuffer
00000000004c0150 00000000000000c8 T nwindowCancelBuffer
00000000004c0220 000000000000013c T nwindowQueueBuffer
00000000004c0360 0000000000000094 T nwindowReleaseBuffers
00000000004c0400 0000000000000388 T audrvCreate
00000000004c0790 0000000000000138 T audrvUpdate
00000000004c08d0 000000000000004c T audrvClose
00000000004c0920 000000000000005c T audrvMemPoolAdd
00000000004c0980 000000000000007c T audrvMemPoolAttach
00000000004c0a00 00000000000000c8 T audrvDeviceSinkAdd
00000000004c0ad0 00000000000000b4 t _audrvVoiceQueueWaveBufs
00000000004c0b90 00000000000000e8 T audrvVoiceDrop
00000000004c0c80 00000000000001bc T audrvVoiceInit
00000000004c0e40 000000000000003c T audrvVoiceIsPlaying
00000000004c0e80 00000000000000a8 T audrvVoiceAddWaveBuf
00000000004c0f30 00000000000000c0 T _audrvVoiceUpdate
00000000004c0ff0 0000000000000174 t _hidLaShow.constprop.0
00000000004c1170 0000000000000128 t _hidLaShowControllerSupportCore
00000000004c12a0 0000000000000034 T hidLaCreateControllerSupportArg
00000000004c12e0 00000000000000b0 T hidLaShowControllerSupportForSystem
00000000004c1390 0000000000000040 T libappletArgsCreate
00000000004c13d0 0000000000000008 T libappletArgsSetPlayStartupSound
00000000004c13e0 0000000000000068 T libappletCreateWriteStorage
00000000004c1450 0000000000000080 T libappletReadStorage
00000000004c14d0 0000000000000048 T libappletArgsPush
00000000004c1520 0000000000000038 T libappletPushInData
00000000004c1560 000000000000006c T libappletPopOutData
00000000004c15d0 0000000000000064 T libappletStart
00000000004c1640 00000000000000b4 t _swkbdInitVersion
00000000004c1700 00000000000000e0 t _swkbdSendRequest
00000000004c17e0 0000000000000104 t _swkbdInlineLaunch
00000000004c18f0 0000000000000408 t _swkbdGetReplies
00000000004c1d00 0000000000000134 T swkbdInlineClose
00000000004c1e40 0000000000000024 T swkbdInlineLaunchForLibraryApplet
00000000004c1e70 0000000000000008 T swkbdInlineSetDecidedCancelCallback
00000000004c1e80 0000000000000008 T swkbdInlineSetDecidedEnterCallback
00000000004c1e90 00000000000000ec T swkbdInlineAppearEx
00000000004c1f80 0000000000000008 T swkbdInlineAppear
00000000004c1f90 0000000000000018 T swkbdInlineDisappear
00000000004c1fb0 0000000000000030 T swkbdInlineMakeAppearArg
00000000004c1fe0 000000000000003c T swkbdInlineAppearArgSetOkButtonText
00000000004c2020 0000000000000060 T swkbdInlineSetInputText
00000000004c2080 0000000000000014 T swkbdInlineSetCursorPos
00000000004c20a0 0000000000000024 T swkbdInlineSetUtf8Mode
00000000004c20d0 0000000000000114 T swkbdInlineCreate
00000000004c21f0 0000000000000024 T swkbdInlineSetInputModeFadeType
00000000004c2220 0000000000000030 T swkbdInlineSetFooterBgAlpha
00000000004c2250 00000000000000d0 T swkbdInlineUpdate
00000000004c2320 0000000000000004 W __libnx_alloc
00000000004c2330 0000000000000014 W __libnx_aligned_alloc
00000000004c2350 0000000000000004 W __libnx_free
00000000004c2360 000000000000001c W diagAbortWithResult
00000000004c2380 0000000000000208 T envSetup
00000000004c2590 0000000000000020 T envGetMainThreadHandle
00000000004c25b0 000000000000000c T envIsNso
00000000004c25c0 0000000000000014 T envHasHeapOverride
00000000004c25e0 000000000000000c T envGetHeapOverrideAddr
00000000004c25f0 000000000000000c T envGetHeapOverrideSize
00000000004c2600 0000000000000014 T envHasArgv
00000000004c2620 000000000000000c T envGetArgv
00000000004c2630 000000000000000c T envGetExitFuncPtr
00000000004c2640 000000000000000c T envSetExitFuncPtr
00000000004c2650 000000000000000c T envHasRandomSeed
00000000004c2660 0000000000000010 T envGetRandomSeed
00000000004c2670 0000000000000014 T hosversionGet
00000000004c2690 0000000000000010 T hosversionSet
00000000004c26a0 000000000000009c T padConfigureInput
00000000004c2740 0000000000000024 T padInitializeWithMask
00000000004c2770 00000000000002a8 T padUpdate
00000000004c2a20 0000000000000008 t romfs_close
00000000004c2a30 0000000000000088 t romfs_seek
00000000004c2ac0 000000000000001c t romfs_dirreset
00000000004c2ae0 0000000000000100 t fillDir
00000000004c2be0 00000000000002b0 t romfs_dirnext
00000000004c2e90 0000000000000118 t searchForDir
00000000004c2fb0 0000000000000118 t searchForFile
00000000004c30d0 0000000000000164 t _romfs_read_safe
00000000004c3240 00000000000000b8 t _romfs_read
00000000004c3300 0000000000000084 t romfs_read
00000000004c3390 00000000000000b4 t romfs_free
00000000004c3450 00000000000001f4 t navigateToDir.constprop.0
00000000004c3650 00000000000000f0 t romfs_open
00000000004c3740 0000000000000190 t romfs_stat
00000000004c38d0 0000000000000054 t romfs_chdir
00000000004c3930 0000000000000084 t romfs_diropen
00000000004c39c0 0000000000000008 t romfs_dirclose
00000000004c39d0 000000000000017c t romfsFindMount
00000000004c3b50 000000000000006c t romfs_fstat
00000000004c3bc0 00000000000001b4 t romfsMountCommon
00000000004c3d80 0000000000000068 T romfsMountFromFile
00000000004c3df0 000000000000006c T romfsMountFromStorage
00000000004c3e60 0000000000000038 T romfsMountFromCurrentProcess
00000000004c3ea0 00000000000001a8 T romfsMountSelf
00000000004c4050 000000000000007c t _socketGetFd
00000000004c40d0 00000000000000a0 t _socketParseBsdResult.part.0
00000000004c4170 00000000000000d0 T fcntl
00000000004c4240 0000000000000140 T utf16_to_utf8
00000000004c4380 000000000000010c T utf8_to_utf16
00000000004c448c T armDCacheFlush
00000000004c44bc t armDCacheFlush_L0
00000000004c44d8 T svcSetHeapSize
00000000004c44ec T svcSetMemoryPermission
00000000004c44f4 T svcSetMemoryAttribute
00000000004c44fc T svcMapMemory
00000000004c4504 T svcUnmapMemory
00000000004c450c T svcQueryMemory
00000000004c4520 T svcExitProcess
00000000004c4528 T svcCreateThread
00000000004c453c T svcStartThread
00000000004c4544 T svcExitThread
00000000004c454c T svcSleepThread
00000000004c4554 T svcSetThreadPriority
00000000004c455c T svcSetThreadCoreMask
00000000004c4564 T svcMapSharedMemory
00000000004c456c T svcUnmapSharedMemory
00000000004c4574 T svcCreateTransferMemory
00000000004c4588 T svcCloseHandle
00000000004c4590 T svcResetSignal
00000000004c4598 T svcWaitSynchronization
00000000004c45ac T svcArbitrateLock
00000000004c45b4 T svcArbitrateUnlock
00000000004c45bc T svcWaitProcessWideKeyAtomic
00000000004c45c4 T svcSignalProcessWideKey
00000000004c45cc T svcConnectToNamedPort
00000000004c45e0 T svcSendSyncRequest
00000000004c45e8 T svcBreak
00000000004c45f0 T svcOutputDebugString
00000000004c45f8 T svcReturnFromException
00000000004c4600 T svcGetInfo
00000000004c4614 T svcUnmapTransferMemory
00000000004c461c T __aarch64_read_tp
00000000004c4630 000000000000000c T eventLoadRemote
00000000004c4640 0000000000000038 T eventWait
00000000004c4680 0000000000000050 T eventClose
00000000004c46d0 0000000000000014 T shmemLoadRemote
00000000004c46f0 0000000000000088 T shmemMap
00000000004c4780 0000000000000034 T shmemUnmap
00000000004c47c0 0000000000000044 T shmemClose
00000000004c4810 00000000000000a8 T tmemCreate
00000000004c48c0 0000000000000034 T tmemUnmap
00000000004c4900 0000000000000038 T tmemCloseHandle
00000000004c4940 00000000000000c8 T tmemWaitForPermission
00000000004c4a10 0000000000000054 T tmemClose
00000000004c4a70 0000000000000064 t _memregionInitWithInfo
00000000004c4ae0 0000000000000004 W __libnx_virtmem_rng
00000000004c4af0 0000000000000164 t _memregionFindRandom
00000000004c4c60 0000000000000140 T virtmemSetup
00000000004c4da0 000000000000000c T virtmemLock
00000000004c4db0 000000000000000c T virtmemUnlock
00000000004c4dc0 0000000000000050 T virtmemFindAslr
00000000004c4e10 0000000000000050 T virtmemFindStack
00000000004c4e60 000000000000056c T waitObjects
00000000004c53d0 0000000000000108 T waitHandles
00000000004c54e0 00000000000000c0 t _apmCleanup
00000000004c55a0 00000000000000fc t _apmCmdGetSession.constprop.0
00000000004c56a0 00000000000000a0 T apmInitialize
00000000004c5740 0000000000000044 T apmExit
00000000004c5790 00000000000000c8 T apmSetPerformanceConfiguration
00000000004c5860 000000000000017c T bsdFcntl
00000000004c59e0 00000000000000b4 t _fsCleanup
00000000004c5aa0 00000000000001ac t _fsCmdNoIO
00000000004c5c50 00000000000001d4 t _fsFsCmdWithInPath
00000000004c5e30 00000000000001f0 t _fsFsCmdWithTwoInPaths
00000000004c6020 000000000000026c t _fsFsOpenCommon
00000000004c6290 00000000000001e8 t _fsFsCmdWithInPathAndOutU64
00000000004c6480 00000000000000f4 t _fsObjectClose
00000000004c6580 000000000000017c t _fsCmdGetSession.constprop.0
00000000004c6700 00000000000002f8 T fsInitialize
00000000004c6a00 0000000000000044 T fsExit
00000000004c6a50 0000000000000008 T fsOpenSdCardFileSystem
00000000004c6a60 0000000000000008 T fsOpenDataStorageByCurrentProcess
00000000004c6a70 00000000000001e4 T fsFsCreateFile
00000000004c6c60 0000000000000008 T fsFsDeleteFile
00000000004c6c70 0000000000000008 T fsFsCreateDirectory
00000000004c6c80 0000000000000008 T fsFsDeleteDirectory
00000000004c6c90 0000000000000008 T fsFsRenameFile
00000000004c6ca0 0000000000000008 T fsFsRenameDirectory
00000000004c6cb0 00000000000001e8 T fsFsGetEntryType
00000000004c6ea0 0000000000000008 T fsFsOpenFile
00000000004c6eb0 0000000000000008 T fsFsOpenDirectory
00000000004c6ec0 0000000000000008 T fsFsGetFreeSpace
00000000004c6ed0 0000000000000008 T fsFsGetTotalSpace
00000000004c6ee0 0000000000000228 T fsFsGetFileTimeStampRaw
00000000004c7110 0000000000000004 T fsFsClose
00000000004c7120 0000000000000210 T fsFileRead
00000000004c7330 00000000000001f8 T fsFileWrite
00000000004c7530 0000000000000008 T fsFileFlush
00000000004c7540 00000000000001b8 T fsFileSetSize
00000000004c7540 00000000000001b8 t fsFileSetSize.localalias
00000000004c7700 00000000000001c0 T fsFileGetSize
00000000004c7700 00000000000001c0 t fsFileGetSize.localalias
00000000004c78c0 0000000000000004 T fsFileClose
00000000004c78d0 0000000000000004 T fsDirClose
00000000004c78e0 00000000000001f8 T fsDirRead
00000000004c7ae0 00000000000001ec T fsStorageRead
00000000004c7cd0 0000000000000004 T fsStorageClose
00000000004c7ce0 00000000000001dc t _viCleanup
00000000004c7ec0 0000000000000100 t _viCmdGetSessionNoParams.constprop.0
00000000004c7fc0 00000000000000fc t _viCmdGetSession.constprop.0
00000000004c80c0 0000000000000284 T viInitialize
00000000004c8350 0000000000000044 T viExit
00000000004c83a0 000000000000000c T viGetSession_IHOSBinderDriverRelay
00000000004c83b0 0000000000000118 T viOpenDisplay
00000000004c84d0 00000000000000f4 T viCloseDisplay
00000000004c85d0 00000000000000fc T viCloseLayer
00000000004c86d0 0000000000000374 T viCreateLayer
00000000004c8a50 00000000000000d8 T viSetLayerScalingMode
00000000004c8b30 0000000000000044 T nvChannelClose
00000000004c8b80 0000000000000070 T nvChannelCreate
00000000004c8bf0 0000000000000008 T nvChannelSetPriority
00000000004c8c00 000000000000001c T binderCreate
00000000004c8c20 0000000000000368 T binderTransactParcel
00000000004c8f90 00000000000000e8 T binderConvertErrorCode
00000000004c9080 0000000000000128 T binderAdjustRefcount
00000000004c91b0 0000000000000098 T binderInitSession
00000000004c9250 0000000000000068 T binderClose
00000000004c92c0 000000000000015c T binderGetNativeHandle
00000000004c9420 00000000000000d8 T bqRequestBuffer
00000000004c9500 0000000000000160 T bqDequeueBuffer
00000000004c9660 00000000000000dc T bqQueueBuffer
00000000004c9740 0000000000000094 T bqCancelBuffer
00000000004c97e0 00000000000000e4 T bqConnect
00000000004c98d0 000000000000009c T bqDisconnect
00000000004c9970 000000000000017c T bqSetPreallocatedBuffer
00000000004c9af0 0000000000000030 T parcelCreate
00000000004c9b20 0000000000000198 T parcelTransact
00000000004c9cc0 0000000000000088 T parcelWriteData
00000000004c9d50 0000000000000098 T parcelReadData
00000000004c9df0 0000000000000020 T parcelWriteInt32
00000000004c9e10 0000000000000020 T parcelWriteUInt32
00000000004c9e30 000000000000007c T parcelWriteString16
00000000004c9eb0 0000000000000030 T parcelWriteInterfaceToken
00000000004c9ee0 0000000000000024 T parcelReadInt32
00000000004c9f10 0000000000000068 T parcelReadFlattenedObject
00000000004c9f80 000000000000004c T parcelWriteFlattenedObject
00000000004c9fd0 0000000000000340 W argvSetup
00000000004ca310 0000000000000168 T __nx_dynamic
00000000004ca480 00000000000000d4 W __libnx_initheap
00000000004ca560 00000000000000ec W __appInit
00000000004ca650 0000000000000044 W __appExit
00000000004ca6a0 000000000000002c W __libnx_init
00000000004ca6d0 000000000000001c W __libnx_exit
00000000004ca6f0 000000000000001c T __syscall_exit
00000000004ca710 0000000000000030 T __syscall_getreent
00000000004ca740 0000000000000004 T __syscall_lock_acquire
00000000004ca750 0000000000000004 T __syscall_lock_release
00000000004ca760 0000000000000004 T __syscall_lock_acquire_recursive
00000000004ca770 0000000000000004 T __syscall_lock_release_recursive
00000000004ca780 000000000000001c T __syscall_cond_signal
00000000004ca7a0 000000000000001c T __syscall_cond_broadcast
00000000004ca7c0 000000000000003c T __syscall_cond_wait
00000000004ca800 0000000000000068 T __syscall_cond_wait_recursive
00000000004ca870 0000000000000014 T __syscall_thread_self
00000000004ca890 000000000000002c T __syscall_thread_exit
00000000004ca8c0 0000000000000058 t __thread_entry
00000000004ca920 000000000000015c T __syscall_thread_create
00000000004caa80 0000000000000058 T __syscall_thread_join
00000000004caae0 0000000000000044 T __syscall_tls_create
00000000004cab30 0000000000000018 T __syscall_tls_set
00000000004cab50 0000000000000004 T __syscall_tls_get
00000000004cab60 0000000000000018 T __syscall_tls_delete
00000000004cab80 0000000000000238 T __libnx_init_time
00000000004cadc0 00000000000000e8 T __syscall_clock_gettime
00000000004caeb0 000000000000008c T __syscall_gettod_r
00000000004caf40 000000000000009c T newlibSetup
00000000004cafe0 00000000000000c4 T nxlinkSetup
00000000004cb0b0 000000000000002c T _convert_errno
00000000004cb0e0 0000000000000014 t fsdev_link
00000000004cb100 0000000000000014 t fsdev_dirreset
00000000004cb120 0000000000000014 t fsdev_chmod
00000000004cb140 0000000000000018 t error_cmp
00000000004cb160 0000000000000020 t fsdev_dirclose
00000000004cb180 000000000000001c t fsdev_close
00000000004cb1a0 000000000000007c t fsdev_converttimetoutc
00000000004cb220 00000000000000dc t fsdevFindDevice.part.0
00000000004cb300 00000000000001d4 t fsdev_fixpath
00000000004cb4e0 00000000000000a0 t _fsdevUnmountDeviceStruct.part.0
00000000004cb580 0000000000000014 t fsdev_fchmod
00000000004cb5a0 00000000000000fc t fsdev_diropen
00000000004cb6a0 0000000000000100 t fsdev_statvfs
00000000004cb7a0 000000000000007c t fsdev_fsync
00000000004cb820 00000000000000f4 t fsdev_fstat
00000000004cb920 0000000000000094 t fsdev_ftruncate
00000000004cb9c0 00000000000001fc t fsdev_stat
00000000004cbbc0 000000000000014c t fsdev_rename
00000000004cbd10 0000000000000140 t fsdev_chdir
00000000004cbe50 00000000000000a4 t fsdev_rmdir
00000000004cbf00 00000000000000a4 t fsdev_mkdir
00000000004cbfb0 00000000000000a4 t fsdev_unlink
00000000004cc060 0000000000000144 t fsdev_write_safe
00000000004cc1b0 000000000000013c t fsdev_read_safe
00000000004cc2f0 0000000000000100 t fsdev_read
00000000004cc3f0 00000000000001cc t fsdev_dirnext
00000000004cc5c0 0000000000000124 t fsdev_write
00000000004cc6f0 00000000000000e0 t fsdev_seek
00000000004cc7d0 0000000000000250 t fsdev_open
00000000004cca20 0000000000000228 T fsdevMountDevice
00000000004ccc50 0000000000000040 T fsdevMountSdmc
00000000004ccc90 00000000000000c0 T __libnx_init_cwd
00000000004ccd50 0000000000000064 T fsdevUnmountAll
00000000004ccdc0 0000000000000084 T fsdevTranslatePath
00000000004cce50 0000000000000064 T decode_utf16
00000000004ccec0 000000000000012c T decode_utf8
00000000004ccff0 0000000000000058 T encode_utf16
00000000004cd050 00000000000000d0 T encode_utf8
00000000004cd120 W __libnx_exception_entry
00000000004cd1ac t __libnx_exception_entry_start
00000000004cd2d4 t __libnx_exception_entry_abort
00000000004cd2d8 t __libnx_exception_entry_end
00000000004cd2e0 T __libnx_exception_returnentry
00000000004cd300 0000000000000064 T condvarWaitTimeout
00000000004cd370 00000000000003c4 T randomGet
00000000004cd740 0000000000000020 T randomGet64
00000000004cd760 00000000000000b0 T __libnx_init_thread
00000000004cd810 00000000000002d8 T threadCreate
00000000004cdaf0 00000000000000a4 T threadExit
00000000004cdba0 00000000000000ac t _EntryWrap
00000000004cdc50 0000000000000008 T threadStart
00000000004cdc60 000000000000002c T threadWaitForExit
00000000004cdc90 0000000000000098 T threadClose
00000000004cdd30 0000000000000010 T threadTlsGet
00000000004cdd40 0000000000000010 T threadTlsSet
00000000004cdd50 00000000000000d8 T threadTlsAlloc
00000000004cde30 0000000000000048 T threadTlsFree
00000000004cde80 0000000000000178 T sessionmgrCreate
00000000004ce000 0000000000000084 T sessionmgrClose
00000000004ce090 00000000000000b4 T sessionmgrAttachClient
00000000004ce150 0000000000000070 T sessionmgrDetachClient
00000000004ce1c0 00000000000000d4 t _setsysGetFirmwareVersionImpl
00000000004ce2a0 0000000000000068 t _setsysCleanup
00000000004ce310 00000000000000a0 T setsysInitialize
00000000004ce3b0 0000000000000044 T setsysExit
00000000004ce400 0000000000000044 T setsysGetFirmwareVersion
00000000004ce450 0000000000000228 t _timeCleanup
00000000004ce680 0000000000000100 t _timeCmdGetSession.constprop.0
00000000004ce780 00000000000000cc t _timeGetSharedMemoryNativeHandle.constprop.0
00000000004ce850 00000000000000c4 t _timeCmdNoInOutU64.constprop.0.isra.0
00000000004ce920 0000000000000104 t _timeReadClockFromSharedMem
00000000004cea30 0000000000000238 T timeInitialize
00000000004cec70 0000000000000044 T timeExit
00000000004cecc0 0000000000000038 T timeGetServiceSession_SystemClock
00000000004ced00 0000000000000068 T timeGetCurrentTime
00000000004ced70 0000000000000110 T timeToCalendarTimeWithMyRule
00000000004cee80 0000000000000104 T timeToPosixTimeWithMyRule
00000000004cef90 0000000000000110 t png_colorspace_endpoints_match
00000000004cf0a0 0000000000000010 T png_zalloc
00000000004cf0b0 0000000000000004 T png_zfree
00000000004cf0c0 00000000000000e0 t png_colorspace_set_xy_and_XYZ
00000000004cf1a0 0000000000000248 t png_icc_profile_error
00000000004cf3f0 0000000000000070 T png_sig_cmp
00000000004cf460 0000000000000030 T png_reset_crc
00000000004cf490 00000000000000a4 T png_calculate_crc
00000000004cf540 0000000000000118 T png_user_version_check
00000000004cf660 000000000000015c T png_create_png_struct
00000000004cf7c0 0000000000000050 T png_create_info_struct
00000000004cf810 000000000000048c T png_free_data
00000000004cfca0 000000000000006c T png_destroy_info_struct
00000000004cfd10 0000000000000014 T png_get_io_ptr
00000000004cfd30 0000000000000004 T png_save_int_32
00000000004cfd40 0000000000000054 T png_handle_as_unknown
00000000004cfda0 0000000000000028 T png_chunk_unknown_handling
00000000004cfdd0 0000000000000100 T png_zstream_error
00000000004cfed0 000000000000005c T png_colorspace_sync_info
00000000004cff30 000000000000002c T png_colorspace_sync
00000000004cff60 0000000000000090 T png_icc_check_length
00000000004cfff0 000000000000038c T png_icc_check_header
00000000004d0380 00000000000000f0 T png_icc_check_tag_table
00000000004d0470 00000000000002cc T png_check_IHDR
00000000004d0740 0000000000000198 T png_check_fp_number
00000000004d08e0 0000000000000060 T png_check_fp_string
00000000004d0940 0000000000000084 T png_muldiv
00000000004d09d0 0000000000000180 t png_xy_from_XYZ
00000000004d0b50 0000000000000168 T png_colorspace_set_rgb_coefficients
00000000004d0cc0 0000000000000058 T png_reciprocal
00000000004d0d20 0000000000000338 t png_XYZ_from_xy
00000000004d1060 00000000000000e4 T png_colorspace_set_chromaticities
00000000004d1150 0000000000000018 T png_gamma_significant
00000000004d1170 00000000000000c0 t png_colorspace_check_gamma
00000000004d1230 00000000000000bc T png_colorspace_set_gamma
00000000004d12f0 0000000000000150 T png_colorspace_set_sRGB
00000000004d1440 00000000000001dc T png_icc_set_sRGB
00000000004d1620 000000000000017c t png_build_16bit_table
00000000004d17a0 000000000000006c T png_reciprocal2
00000000004d1810 0000000000000064 T png_gamma_8bit_correct
00000000004d1880 00000000000000bc t png_build_8bit_table
00000000004d1940 0000000000000068 T png_gamma_16bit_correct
00000000004d19b0 0000000000000030 T png_gamma_correct
00000000004d19e0 0000000000000158 T png_destroy_gamma_table
00000000004d1b40 0000000000000448 T png_build_gamma_table
00000000004d1f90 00000000000000e8 t png_format_buffer.isra.0
00000000004d2080 0000000000000058 T png_safecat
00000000004d20e0 0000000000000168 T png_format_number
00000000004d2250 0000000000000090 T png_warning
00000000004d22e0 0000000000000030 T png_warning_parameter
00000000004d2310 00000000000000ac T png_warning_parameter_signed
00000000004d23c0 0000000000000130 T png_formatted_warning
00000000004d24f0 0000000000000034 T png_chunk_warning
00000000004d2530 0000000000000078 T png_free_jmpbuf
00000000004d25b0 0000000000000024 T png_longjmp
00000000004d25e0 0000000000000070 T png_error
00000000004d2650 0000000000000018 T png_app_warning
00000000004d2670 0000000000000018 T png_app_error
00000000004d2690 0000000000000028 T png_chunk_error
00000000004d26c0 0000000000000018 T png_chunk_benign_error
00000000004d26e0 0000000000000028 T png_chunk_report
00000000004d2710 0000000000000058 T png_benign_error
00000000004d2770 00000000000000c0 T png_set_longjmp_fn
00000000004d2830 0000000000000010 T png_set_error_fn
00000000004d2840 0000000000000014 T png_get_error_ptr
00000000004d2860 0000000000000020 T png_get_valid
00000000004d2880 000000000000001c T png_get_channels
00000000004d28a0 0000000000000090 T png_get_IHDR
00000000004d2930 0000000000000040 T png_get_PLTE
00000000004d2970 0000000000000078 T png_get_tRNS
00000000004d29f0 000000000000002c T png_malloc_base
00000000004d2a20 000000000000003c T png_malloc_array
00000000004d2a60 00000000000000e4 T png_realloc_array
00000000004d2b50 0000000000000040 T png_malloc
00000000004d2b90 0000000000000038 T png_calloc
00000000004d2bd0 0000000000000048 T png_malloc_warn
00000000004d2c20 0000000000000018 T png_free_default
00000000004d2c40 0000000000000024 T png_free
00000000004d2c70 0000000000000064 T png_destroy_png_struct
00000000004d2ce0 0000000000000014 T png_set_mem_fn
00000000004d2d00 0000000000000050 T png_create_read_struct_2
00000000004d2d50 0000000000000010 T png_create_read_struct
00000000004d2d60 00000000000004a0 T png_read_info
00000000004d3200 0000000000000050 T png_read_update_info
00000000004d3250 0000000000000020 T png_start_read_image
00000000004d3270 000000000000042c T png_read_row
00000000004d36a0 00000000000000ec T png_read_image
00000000004d3790 0000000000000588 T png_read_end
00000000004d3d20 000000000000015c T png_destroy_read_struct
00000000004d3e80 000000000000004c T png_default_read_data
00000000004d3ed0 0000000000000024 T png_read_data
00000000004d3f00 0000000000000058 T png_set_read_fn
00000000004d3f60 00000000000001e0 t png_do_gray_to_rgb
00000000004d4140 0000000000000548 t png_do_expand
00000000004d4690 0000000000000034 T png_set_strip_16
00000000004d46d0 0000000000000038 T png_set_expand
00000000004d4710 0000000000000038 T png_set_palette_to_rgb
00000000004d4750 0000000000000034 T png_set_expand_gray_1_2_4_to_8
00000000004d4790 0000000000000038 T png_set_tRNS_to_alpha
00000000004d47d0 0000000000000058 T png_set_gray_to_rgb
00000000004d4830 0000000000000014 T png_set_read_user_transform_fn
00000000004d4850 0000000000000c94 T png_init_read_transformations
00000000004d54f0 00000000000002bc T png_read_transform_info
00000000004d57b0 0000000000002a20 T png_do_read_transformations
00000000004d81d0 0000000000000044 t png_read_filter_row_sub
00000000004d8220 0000000000000030 t png_read_filter_row_up
00000000004d8250 0000000000000078 t png_read_filter_row_avg
00000000004d82d0 000000000000007c t png_read_filter_row_paeth_1byte_pixel
00000000004d8350 00000000000000b0 t png_read_filter_row_paeth_multibyte_pixel
00000000004d8400 0000000000000148 t png_inflate_claim
00000000004d8550 00000000000000b4 t png_read_buffer
00000000004d8610 0000000000000028 T png_get_uint_31
00000000004d8640 00000000000000f0 T png_read_sig
00000000004d8730 0000000000000048 T png_crc_read
00000000004d8780 000000000000008c T png_crc_error
00000000004d8810 00000000000000a0 T png_crc_finish
00000000004d88b0 00000000000000d8 t png_cache_unknown_chunk
00000000004d8990 0000000000000040 T png_zlib_inflate
00000000004d89d0 0000000000000164 t png_inflate.constprop.0
00000000004d8b40 0000000000000250 t png_decompress_chunk.constprop.0
00000000004d8d90 0000000000000134 t png_inflate_read.constprop.0.isra.0
00000000004d8ed0 0000000000000158 T png_handle_IHDR
00000000004d9030 0000000000000278 T png_handle_PLTE
00000000004d92b0 000000000000006c T png_handle_IEND
00000000004d9320 00000000000000c0 T png_handle_gAMA
00000000004d93e0 00000000000001cc T png_handle_sBIT
00000000004d95b0 00000000000001c0 T png_handle_cHRM
00000000004d9770 00000000000000e8 T png_handle_sRGB
00000000004d9860 000000000000058c T png_handle_iCCP
00000000004d9df0 00000000000002c8 T png_handle_sPLT
00000000004da0c0 00000000000001e8 T png_handle_tRNS
00000000004da2b0 0000000000000240 T png_handle_bKGD
00000000004da4f0 00000000000001c4 T png_handle_eXIf
00000000004da6c0 0000000000000148 T png_handle_hIST
00000000004da810 00000000000000f4 T png_handle_pHYs
00000000004da910 0000000000000110 T png_handle_oFFs
00000000004daa20 0000000000000314 T png_handle_pCAL
00000000004dad40 000000000000029c T png_handle_sCAL
00000000004dafe0 00000000000000e0 T png_handle_tIME
00000000004db0c0 000000000000019c T png_handle_tEXt
00000000004db260 000000000000023c T png_handle_zTXt
00000000004db4a0 000000000000032c T png_handle_iTXt
00000000004db7d0 00000000000001bc T png_handle_unknown
00000000004db990 0000000000000058 T png_check_chunk_name
00000000004db9f0 00000000000000d8 T png_check_chunk_length
00000000004dbad0 000000000000008c T png_read_chunk_header
00000000004dbb60 0000000000000520 T png_combine_row
00000000004dc080 0000000000000428 T png_do_read_interlace
00000000004dc4b0 00000000000000c0 T png_read_filter_row
00000000004dc570 000000000000021c T png_read_IDAT_data
00000000004dc790 0000000000000094 T png_read_finish_IDAT
00000000004dc830 0000000000000100 T png_read_finish_row
00000000004dc930 0000000000000438 T png_read_start_row
00000000004dcd70 000000000000006c t check_location
00000000004dcde0 0000000000000030 T png_set_bKGD
00000000004dce10 00000000000000b4 T png_set_eXIf_1
00000000004dced0 00000000000000cc T png_set_hIST
00000000004dcfa0 0000000000000100 T png_set_IHDR
00000000004dd0a0 0000000000000024 T png_set_oFFs
00000000004dd0d0 00000000000002b0 T png_set_pCAL
00000000004dd380 000000000000018c T png_set_sCAL_s
00000000004dd510 0000000000000024 T png_set_pHYs
00000000004dd540 0000000000000144 T png_set_PLTE
00000000004dd690 0000000000000030 T png_set_sBIT
00000000004dd6c0 0000000000000348 T png_set_text_2
00000000004dda10 0000000000000088 T png_set_tIME
00000000004ddaa0 00000000000001c4 T png_set_tRNS
00000000004ddc70 00000000000001c0 T png_set_sPLT
00000000004dde30 0000000000000154 T png_set_unknown_chunks
00000000004ddf90 000000000000006c T png_set_rows
00000000004de000 00000000000001d4 T png_check_keyword
00000000004de1e0 0000000000000014 T png_set_bgr
00000000004de200 0000000000000024 T png_set_swap
00000000004de230 0000000000000028 T png_set_packing
00000000004de260 0000000000000020 T png_set_packswap
00000000004de280 0000000000000028 T png_set_shift
00000000004de2b0 0000000000000030 T png_set_interlace_handling
00000000004de2e0 0000000000000088 T png_set_filler
00000000004de370 0000000000000014 T png_set_swap_alpha
00000000004de390 0000000000000014 T png_set_invert_alpha
00000000004de3b0 0000000000000014 T png_set_invert_mono
00000000004de3d0 00000000000000ac T png_do_invert
00000000004de480 0000000000000048 T png_do_swap
00000000004de4d0 000000000000006c T png_do_packswap
00000000004de540 0000000000000230 T png_do_strip_channel
00000000004de770 0000000000000118 T png_do_bgr
00000000004de890 000000000000018c T png_do_check_palette_indexes
00000000004dea20 000000000000004c T png_default_write_data
00000000004dea70 0000000000000010 T png_default_flush
00000000004dea80 0000000000000024 T png_write_data
00000000004deab0 0000000000000014 T png_flush
00000000004dead0 000000000000004c T png_set_write_fn
00000000004deb20 00000000000000e4 t write_unknown_chunks.part.0
00000000004dec10 0000000000000178 T png_write_info_before_PLTE
00000000004ded90 0000000000000334 T png_write_info
00000000004df0d0 00000000000001b8 T png_write_end
00000000004df290 000000000000007c T png_create_write_struct_2
00000000004df310 0000000000000010 T png_create_write_struct
00000000004df320 0000000000000394 T png_write_row
00000000004df6c0 0000000000000080 T png_write_image
00000000004df740 0000000000000058 T png_write_flush
00000000004df7a0 00000000000000b8 T png_destroy_write_struct
00000000004df860 0000000000000160 T png_write_png
00000000004df9c0 0000000000000798 T png_do_write_transformations
00000000004e0160 0000000000000174 t png_image_size
00000000004e02e0 0000000000000258 t png_deflate_claim
00000000004e0540 00000000000000b8 t optimize_cmf.part.0
00000000004e0600 0000000000000204 t png_text_compress.constprop.0
00000000004e0810 000000000000000c T png_save_uint_32
00000000004e0820 000000000000000c T png_save_uint_16
00000000004e0830 000000000000006c T png_write_sig
00000000004e08a0 0000000000000060 T png_write_chunk_data
00000000004e0900 0000000000000078 t png_write_compressed_data_out
00000000004e0980 000000000000004c T png_write_chunk_end
00000000004e09d0 00000000000000c8 t png_write_complete_chunk
00000000004e0aa0 00000000000000d4 T png_write_chunk
00000000004e0b80 0000000000000040 T png_free_buffer_list
00000000004e0bc0 00000000000002b4 T png_write_IHDR
00000000004e0e80 0000000000000174 T png_write_PLTE
00000000004e1000 0000000000000234 T png_compress_IDAT
00000000004e1240 00000000000000b0 T png_write_IEND
00000000004e12f0 00000000000000b8 T png_write_gAMA_fixed
00000000004e13b0 00000000000000c4 T png_write_sRGB
00000000004e1480 000000000000019c T png_write_iCCP
00000000004e1620 00000000000001e8 T png_write_sPLT
00000000004e1810 00000000000000d0 T png_write_sBIT
00000000004e18e0 0000000000000114 T png_write_cHRM_fixed
00000000004e1a00 0000000000000174 T png_write_tRNS
00000000004e1b80 0000000000000174 T png_write_bKGD
00000000004e1d00 00000000000000d8 T png_write_eXIf
00000000004e1de0 00000000000000f4 T png_write_hIST
00000000004e1ee0 0000000000000170 T png_write_tEXt
00000000004e2050 0000000000000168 T png_write_zTXt
00000000004e21c0 0000000000000398 T png_write_iTXt
00000000004e2560 00000000000000ec T png_write_oFFs
00000000004e2650 00000000000002b0 T png_write_pCAL
00000000004e2900 00000000000000d0 T png_write_sCAL_s
00000000004e29d0 00000000000000ec T png_write_pHYs
00000000004e2ac0 00000000000000b8 T png_write_tIME
00000000004e2b80 00000000000001a4 T png_write_start_row
00000000004e2d30 0000000000000144 T png_write_finish_row
00000000004e2e80 0000000000000310 T png_do_write_interlace
00000000004e3190 000000000000075c T png_write_find_filter
00000000004e38f0 0000000000000070 T png_init_filter_functions_neon
00000000004e3960 0000000000000040 T png_read_filter_row_up_neon
00000000004e39a0 0000000000000060 T png_read_filter_row_sub3_neon
00000000004e3a00 0000000000000050 T png_read_filter_row_sub4_neon
00000000004e3a50 0000000000000084 T png_read_filter_row_avg3_neon
00000000004e3ae0 0000000000000068 T png_read_filter_row_avg4_neon
00000000004e3b50 000000000000014c T png_read_filter_row_paeth3_neon
00000000004e3ca0 0000000000000140 T png_read_filter_row_paeth4_neon
00000000004e3de0 0000000000000064 T png_riffle_palette_neon
00000000004e3e50 00000000000000e4 T png_do_expand_palette_rgba8_neon
00000000004e3f40 0000000000000140 T png_do_expand_palette_rgb8_neon
00000000004e4080 00000000000003a0 T adler32_z
00000000004e4420 0000000000000008 T adler32
00000000004e4430 00000000000000e4 T adler32_combine
00000000004e4520 00000000000000e4 T adler32_combine64
00000000004e4610 000000000000000c T get_crc_table
00000000004e4620 00000000000003c4 T crc32_z
00000000004e49f0 0000000000000008 T crc32
00000000004e4a00 00000000000000cc T crc32_combine64
00000000004e4ad0 0000000000000004 T crc32_combine
00000000004e4ae0 0000000000000090 T crc32_combine_gen64
00000000004e4b70 0000000000000004 T crc32_combine_gen
00000000004e4b80 0000000000000044 T crc32_combine_op
00000000004e4bd0 000000000000007c t slide_hash
00000000004e4c50 00000000000001dc t longest_match
00000000004e4e30 00000000000000c8 t read_buf
00000000004e4f00 0000000000000268 t fill_window
00000000004e5170 00000000000000b0 t flush_pending
00000000004e5220 0000000000000570 t deflate_slow
00000000004e5790 0000000000000400 t deflate_fast
00000000004e5b90 000000000000058c t deflate_stored
00000000004e6120 000000000000007c t deflateStateCheck.part.0
00000000004e61a0 000000000000008c t deflateStateCheck
00000000004e6230 00000000000001e0 T deflateSetDictionary
00000000004e6410 00000000000000d8 T deflateGetDictionary
00000000004e64f0 00000000000000f0 T deflateResetKeep
00000000004e65e0 00000000000000b4 T deflateReset
00000000004e66a0 0000000000000058 T deflateSetHeader
00000000004e6700 0000000000000068 T deflatePending
00000000004e6770 00000000000000f4 T deflatePrime
00000000004e6870 0000000000000058 T deflateTune
00000000004e68d0 0000000000000158 T deflateBound
00000000004e6a30 0000000000001184 T deflate
00000000004e7bc0 0000000000000174 T deflateParams
00000000004e7d40 00000000000000a0 T deflateEnd
00000000004e7de0 00000000000002a4 T deflateInit2_
00000000004e8090 000000000000001c T deflateInit_
00000000004e80b0 00000000000001cc T deflateCopy
00000000004e8280 0000000000000114 t updatewindow
00000000004e83a0 0000000000000050 t inflateStateCheck
00000000004e83f0 0000000000000080 T inflateResetKeep
00000000004e8470 0000000000000050 T inflateReset
00000000004e84c0 00000000000000ac T inflateReset2
00000000004e8570 0000000000000118 T inflateInit2_
00000000004e8690 0000000000000010 T inflateInit_
00000000004e86a0 00000000000000b0 T inflatePrime
00000000004e8750 00000000000018ec T inflate
00000000004ea040 000000000000005c T inflateEnd
00000000004ea0a0 00000000000000d4 T inflateGetDictionary
00000000004ea180 00000000000000c0 T inflateSetDictionary
00000000004ea240 0000000000000068 T inflateGetHeader
00000000004ea2b0 0000000000000308 T inflateSync
00000000004ea5c0 0000000000000070 T inflateSyncPoint
00000000004ea630 00000000000001e0 T inflateCopy
00000000004ea810 0000000000000060 T inflateUndermine
00000000004ea870 000000000000007c T inflateValidate
00000000004ea8f0 0000000000000090 T inflateMark
00000000004ea980 0000000000000064 T inflateCodesUsed
00000000004ea9f0 000000000000047c t inflate_table
00000000004eae70 0000000000000078 t bi_windup
00000000004eaef0 00000000000000f4 t pqdownheap
00000000004eaff0 00000000000004e8 t build_tree
00000000004eb4e0 00000000000001e0 t scan_tree
00000000004eb6c0 0000000000000668 t send_tree
00000000004ebd30 00000000000003cc t compress_block
00000000004ec100 0000000000000098 t _tr_init
00000000004ec1a0 0000000000000148 t _tr_stored_block
00000000004ec2f0 0000000000000088 t _tr_flush_bits
00000000004ec380 0000000000000148 t _tr_align
00000000004ec4d0 0000000000000614 t _tr_flush_block
00000000004ecaf0 00000000000000dc T _tr_tally
00000000004ecbd0 000000000000000c T zlibVersion
00000000004ecbe0 0000000000000008 T zlibCompileFlags
00000000004ecbf0 0000000000000030 T zError
00000000004ecc20 0000000000000008 T zcalloc
00000000004ecc30 0000000000000008 T zcfree
00000000004ecc40 00000000000004f4 t inflate_fast
00000000004ed140 0000000000000138 t _get_next_page
00000000004ed280 00000000000000f0 t _initial_pcmoffset
00000000004ed370 0000000000000094 t _seek_helper
00000000004ed410 0000000000000094 t _make_decode_ready
00000000004ed4b0 0000000000000170 t _get_prev_page_serial
00000000004ed620 0000000000000330 t _fetch_headers
00000000004ed950 0000000000000490 t _bisect_forward_serialno
00000000004edde0 00000000000002f8 t _fetch_and_process_packet.constprop.11
00000000004ee0e0 0000000000000100 T ov_clear
00000000004ee1e0 0000000000000220 t _ov_open1
00000000004ee400 00000000000000a8 T ov_pcm_total
00000000004ee4b0 00000000000000c8 T ov_time_total
00000000004ee580 0000000000000414 T ov_raw_seek
00000000004ee9a0 0000000000000140 t _open_seekable2
00000000004eeae0 0000000000000090 T ov_open_callbacks
00000000004eeb70 0000000000000084 T rescale64
00000000004eec00 000000000000068c T ov_pcm_seek_page
00000000004ef290 000000000000034c T ov_pcm_seek
00000000004ef5e0 0000000000000128 T ov_time_seek
00000000004ef710 000000000000001c T ov_pcm_tell
00000000004ef730 0000000000000060 T ov_info
00000000004ef790 000000000000005c T ov_comment
00000000004ef7f0 00000000000001bc T ov_read
00000000004ef9b0 0000000000000034 T vorbis_block_init
00000000004ef9f0 000000000000008c T _vorbis_block_alloc
00000000004efa80 0000000000000094 T _vorbis_block_ripcord
00000000004efb20 0000000000000058 T vorbis_block_clear
00000000004efb80 0000000000000054 T vorbis_synthesis_restart
00000000004efbe0 000000000000012c T vorbis_dsp_clear
00000000004efd10 0000000000000290 T vorbis_synthesis_init
00000000004effa0 000000000000047c T vorbis_synthesis_blockin
00000000004f0420 0000000000000070 T vorbis_synthesis_pcmout
00000000004f0490 0000000000000030 T vorbis_synthesis_read
00000000004f04c0 00000000000000b4 T _vorbis_window
00000000004f0580 000000000000015c T _vorbis_apply_window
00000000004f06e0 0000000000000210 t _vorbis_synthesis1
00000000004f08f0 0000000000000008 T vorbis_synthesis
00000000004f0900 0000000000000008 T vorbis_synthesis_trackonly
00000000004f0910 0000000000000098 T vorbis_packet_blocksize
00000000004f09b0 000000000000000c T vorbis_comment_init
00000000004f09c0 0000000000000088 T vorbis_comment_clear
00000000004f0a50 0000000000000018 T vorbis_info_blocksize
00000000004f0a70 0000000000000038 T vorbis_info_init
00000000004f0ab0 00000000000001b0 T vorbis_info_clear
00000000004f0c60 00000000000000cc T vorbis_synthesis_idheader
00000000004f0d30 0000000000000738 T vorbis_synthesis_headerin
00000000004f1470 0000000000000044 t bitreverse
00000000004f14c0 0000000000000410 T vorbis_staticbook_unpack
00000000004f18d0 000000000000016c T vorbis_book_decode
00000000004f1a40 0000000000000418 T vorbis_book_decodevs_add
00000000004f1e60 0000000000000388 T vorbis_book_decodev_add
00000000004f21f0 0000000000000394 T vorbis_book_decodev_set
00000000004f2590 0000000000000390 T vorbis_book_decodevv_add
00000000004f2920 0000000000000044 t bitreverse
00000000004f2970 0000000000000020 t sort32a
00000000004f2990 000000000000001c T _ilog
00000000004f29b0 000000000000023c T _make_words
00000000004f2bf0 00000000000000b8 T _book_maptype1_quantvals
00000000004f2cb0 00000000000006e8 T _book_unquantize
00000000004f33a0 0000000000000038 T vorbis_staticbook_destroy
00000000004f33e0 0000000000000070 T vorbis_book_clear
00000000004f3450 0000000000000468 T vorbis_book_init_decode
00000000004f38c0 0000000000000018 t icomp
00000000004f38e0 00000000000001e0 t floor1_inverse2
00000000004f3ac0 000000000000031c t floor1_inverse1
00000000004f3de0 000000000000000c t floor1_free_look
00000000004f3df0 000000000000000c t floor1_free_info
00000000004f3e00 0000000000000230 t floor1_look
00000000004f4030 0000000000000380 t floor1_unpack
00000000004f43b0 000000000000019c t floor0_inverse1
00000000004f4550 000000000000000c t floor0_free_info
00000000004f4560 0000000000000148 t floor0_unpack
00000000004f46b0 0000000000000040 t floor0_free_look
00000000004f46f0 0000000000000238 t floor0_look
00000000004f4930 00000000000004dc T vorbis_lsp_to_curve
00000000004f4e10 0000000000000074 t floor0_inverse2
00000000004f4e90 000000000000000c T res0_free_info
00000000004f4ea0 0000000000000244 T res0_unpack
00000000004f50f0 0000000000000274 T res0_look
00000000004f5370 000000000000034c t _01inverse
00000000004f56c0 000000000000004c T res0_inverse
00000000004f5710 000000000000004c T res1_inverse
00000000004f5760 000000000000025c T res2_inverse
00000000004f59c0 0000000000000098 T res0_free_look
00000000004f5a60 000000000000042c t mapping0_inverse
00000000004f5e90 000000000000000c t mapping0_free_info
00000000004f5ea0 0000000000000180 t mapping0_look
00000000004f6020 0000000000000264 t mapping0_unpack
00000000004f6290 00000000000000a0 t mapping0_free_look
00000000004f6330 00000000000019ac T mdct_backward
00000000004f7ce0 00000000000000f0 t ModPlug::UpdateSettings(bool)
00000000004f7dd0 00000000000000a4 T ModPlug_Load
00000000004f7e80 0000000000000044 T ModPlug_Unload
00000000004f7ed0 0000000000000020 T ModPlug_Read
00000000004f7ef0 0000000000000008 T ModPlug_SetMasterVolume
00000000004f7f00 0000000000000078 T ModPlug_Seek
00000000004f7f80 0000000000000024 T ModPlug_GetSettings
00000000004f7fb0 000000000000002c T ModPlug_SetSettings
00000000004f7fe0 000000000000000c t _muldiv(long, long, long)
00000000004f7ff0 0000000000000010 t _muldivr(long, long, long)
00000000004f8000 000000000000010c T CSoundFile::InitPlayer(bool)
00000000004f8110 00000000000000d8 T CSoundFile::FadeSong(unsigned int)
00000000004f81f0 0000000000000058 T CSoundFile::GlobalFadeSong(unsigned int)
00000000004f8250 00000000000002a8 T CSoundFile::ProcessRow()
00000000004f8500 0000000000001588 T CSoundFile::ReadNote()
00000000004f9a90 00000000000003fc T CSoundFile::Read(void*, unsigned int)
00000000004f9e90 0000000000000130 T CSoundFile::CSoundFile()
00000000004f9e90 0000000000000130 T CSoundFile::CSoundFile()
00000000004f9fc0 0000000000000040 T CSoundFile::AllocatePattern(unsigned int, unsigned int)
00000000004fa000 000000000000000c T CSoundFile::FreePattern(void*)
00000000004fa010 0000000000000028 T CSoundFile::AllocateSample(unsigned int)
00000000004fa040 0000000000000010 T CSoundFile::FreeSample(void*)
00000000004fa050 0000000000000144 T CSoundFile::Destroy()
00000000004fa1a0 0000000000000004 T CSoundFile::~CSoundFile()
00000000004fa1a0 0000000000000004 T CSoundFile::~CSoundFile()
00000000004fa1b0 0000000000000128 T CSoundFile::ResetMidiCfg()
00000000004fa2e0 0000000000000790 T CSoundFile::Create(unsigned char const*, unsigned int)
00000000004faa70 00000000000000b4 T CSoundFile::SetWaveConfig(unsigned int, unsigned int, unsigned int, bool)
00000000004fab30 0000000000000030 T CSoundFile::SetMixConfig(unsigned int, unsigned int)
00000000004fab60 000000000000005c T CSoundFile::SetResamplingMode(unsigned int)
00000000004fabc0 0000000000000078 T CSoundFile::SetMasterVolume(unsigned int, bool)
00000000004fac40 0000000000000050 T CSoundFile::GetMaxPosition() const
00000000004fac90 0000000000000210 T CSoundFile::SetCurrentPos(unsigned int)
00000000004faea0 0000000000000344 T CSoundFile::AdjustSampleLoop(_MODINSTRUMENT*)
00000000004fb1f0 0000000000000948 T CSoundFile::ReadSample(_MODINSTRUMENT*, unsigned int, char const*, unsigned int)
00000000004fbb40 000000000000003c T CSoundFile::TransposeToFrequency(int, int)
00000000004fbb80 0000000000000034 T CSoundFile::FrequencyToTranspose(unsigned int)
00000000004fbbc0 0000000000000060 T CSoundFile::FrequencyToTranspose(_MODINSTRUMENT*)
00000000004fbc20 0000000000000118 T CSoundFile::SetPatternName(unsigned int, char const*)
00000000004fbd40 0000000000000184 T CSoundFile::DetectUnusedSamples(bool*)
00000000004fbed0 00000000000000a8 T CSoundFile::DestroySample(unsigned int)
00000000004fbf80 0000000000000804 T CSoundFile::GetLength(bool, bool)
00000000004fc790 00000000000003c0 T CSoundFile::InstrumentChange(_MODCHANNEL*, unsigned int, bool, bool, bool)
00000000004fcb50 00000000000000e8 T CSoundFile::GetNNAChannel(unsigned int) const
00000000004fcc40 00000000000000ac T CSoundFile::FinePortamentoUp(_MODCHANNEL*, unsigned int)
00000000004fccf0 00000000000000b0 T CSoundFile::FinePortamentoDown(_MODCHANNEL*, unsigned int)
00000000004fcda0 00000000000000a8 T CSoundFile::ExtraFinePortamentoUp(_MODCHANNEL*, unsigned int)
00000000004fce50 00000000000000b0 T CSoundFile::ExtraFinePortamentoDown(_MODCHANNEL*, unsigned int)
00000000004fcf00 000000000000012c T CSoundFile::TonePortamento(_MODCHANNEL*, unsigned int)
00000000004fd030 0000000000000030 T CSoundFile::Vibrato(_MODCHANNEL*, unsigned int)
00000000004fd060 000000000000002c T CSoundFile::FineVibrato(_MODCHANNEL*, unsigned int)
00000000004fd090 000000000000002c T CSoundFile::Panbrello(_MODCHANNEL*, unsigned int)
00000000004fd0c0 00000000000000cc T CSoundFile::PanningSlide(_MODCHANNEL*, unsigned int)
00000000004fd190 000000000000004c T CSoundFile::FineVolumeUp(_MODCHANNEL*, unsigned int)
00000000004fd1e0 0000000000000044 T CSoundFile::FineVolumeDown(_MODCHANNEL*, unsigned int)
00000000004fd230 00000000000000f8 T CSoundFile::VolumeSlide(_MODCHANNEL*, unsigned int)
00000000004fd330 0000000000000030 T CSoundFile::Tremolo(_MODCHANNEL*, unsigned int)
00000000004fd360 00000000000000b8 T CSoundFile::ChannelVolSlide(_MODCHANNEL*, unsigned int)
00000000004fd420 0000000000000134 T CSoundFile::ExtendedChannelEffect(_MODCHANNEL*, unsigned int)
00000000004fd560 0000000000000398 T CSoundFile::ProcessMidiMacro(unsigned int, char const*, unsigned int)
00000000004fd900 00000000000000d8 T CSoundFile::DoFreqSlide(_MODCHANNEL*, int)
00000000004fd9e0 0000000000000070 T CSoundFile::PortamentoUp(_MODCHANNEL*, unsigned int)
00000000004fda50 0000000000000070 T CSoundFile::PortamentoDown(_MODCHANNEL*, unsigned int)
00000000004fdac0 000000000000003c T CSoundFile::NoteCut(unsigned int, unsigned int)
00000000004fdb00 0000000000000104 T CSoundFile::KeyOff(unsigned int)
00000000004fdc10 000000000000046c T CSoundFile::CheckNNA(unsigned int, unsigned int, int, bool)
00000000004fe080 000000000000005c T CSoundFile::SetTempo(unsigned int)
00000000004fe0e0 0000000000000084 T CSoundFile::PatternLoop(_MODCHANNEL*, unsigned int)
00000000004fe170 00000000000000c0 T CSoundFile::GlobalVolSlide(unsigned int)
00000000004fe230 0000000000000118 T CSoundFile::IsSongFinished(unsigned int, unsigned int) const
00000000004fe350 00000000000000cc T CSoundFile::SetSpeed(unsigned int)
00000000004fe420 000000000000017c T CSoundFile::IsValidBackwardJump(unsigned int, unsigned int, unsigned int, unsigned int) const
00000000004fe5a0 00000000000001dc T CSoundFile::GetPeriodFromNote(unsigned int, int, unsigned int) const
00000000004fe780 00000000000007c8 T CSoundFile::NoteChange(unsigned int, int, bool, bool)
00000000004fef50 00000000000002dc T CSoundFile::RetrigNote(unsigned int, unsigned int)
00000000004ff230 000000000000027c T CSoundFile::ExtendedMODCommands(unsigned int, unsigned int)
00000000004ff4b0 000000000000048c T CSoundFile::ExtendedS3MCommands(unsigned int, unsigned int)
00000000004ff940 0000000000000e20 T CSoundFile::ProcessEffects()
0000000000500760 000000000000011c T CSoundFile::GetNoteFromPeriod(unsigned int) const
0000000000500880 00000000000000c4 T CSoundFile::GetFreqFromPeriod(unsigned int, unsigned int, int) const
0000000000500950 0000000000000090 T CSoundFile::CutOffToFrequency(unsigned int, int) const
00000000005009e0 00000000000000ec T CSoundFile::SetupChannelFilter(_MODCHANNEL*, bool, int) const
0000000000500ad0 0000000000000528 T CSoundFile::InitializeDSP(bool)
0000000000501000 0000000000000554 T CSoundFile::ProcessStereoDSP(int)
0000000000501560 0000000000000060 T CSoundFile::SetReverbParameters(unsigned int, unsigned int)
00000000005015c0 000000000000006c T CSoundFile::SetXBassParameters(unsigned int, unsigned int)
0000000000501630 0000000000000060 T CSoundFile::SetSurroundParameters(unsigned int, unsigned int)
0000000000501690 0000000000000088 T CSoundFile::SetWaveConfigEx(bool, bool, bool, bool, bool, bool, bool)
0000000000501720 0000000000000070 T Mono8BitMix(_MODCHANNEL*, int*, int*)
0000000000501790 000000000000006c T Mono16BitMix(_MODCHANNEL*, int*, int*)
0000000000501800 0000000000000084 T Mono8BitLinearMix(_MODCHANNEL*, int*, int*)
0000000000501890 0000000000000084 T Mono16BitLinearMix(_MODCHANNEL*, int*, int*)
0000000000501920 00000000000000c0 T Mono8BitSplineMix(_MODCHANNEL*, int*, int*)
00000000005019e0 00000000000000c4 T Mono16BitSplineMix(_MODCHANNEL*, int*, int*)
0000000000501ab0 0000000000000108 T Mono8BitFirFilterMix(_MODCHANNEL*, int*, int*)
0000000000501bc0 0000000000000124 T Mono16BitFirFilterMix(_MODCHANNEL*, int*, int*)
0000000000501cf0 0000000000000080 T Mono8BitRampMix(_MODCHANNEL*, int*, int*)
0000000000501d70 0000000000000084 T Mono16BitRampMix(_MODCHANNEL*, int*, int*)
0000000000501e00 0000000000000094 T Mono8BitLinearRampMix(_MODCHANNEL*, int*, int*)
0000000000501ea0 000000000000009c T Mono16BitLinearRampMix(_MODCHANNEL*, int*, int*)
0000000000501f40 00000000000000d0 T Mono8BitSplineRampMix(_MODCHANNEL*, int*, int*)
0000000000502010 00000000000000e0 T Mono16BitSplineRampMix(_MODCHANNEL*, int*, int*)
00000000005020f0 0000000000000130 T Mono8BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
0000000000502220 0000000000000140 T Mono16BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
0000000000502360 000000000000006c T FastMono8BitMix(_MODCHANNEL*, int*, int*)
00000000005023d0 0000000000000068 T FastMono16BitMix(_MODCHANNEL*, int*, int*)
0000000000502440 0000000000000080 T FastMono8BitLinearMix(_MODCHANNEL*, int*, int*)
00000000005024c0 0000000000000080 T FastMono16BitLinearMix(_MODCHANNEL*, int*, int*)
0000000000502540 000000000000007c T FastMono8BitRampMix(_MODCHANNEL*, int*, int*)
00000000005025c0 0000000000000080 T FastMono16BitRampMix(_MODCHANNEL*, int*, int*)
0000000000502640 0000000000000090 T FastMono8BitLinearRampMix(_MODCHANNEL*, int*, int*)
00000000005026d0 0000000000000098 T FastMono16BitLinearRampMix(_MODCHANNEL*, int*, int*)
0000000000502770 0000000000000080 T Stereo8BitMix(_MODCHANNEL*, int*, int*)
00000000005027f0 000000000000007c T Stereo16BitMix(_MODCHANNEL*, int*, int*)
0000000000502870 000000000000009c T Stereo8BitLinearMix(_MODCHANNEL*, int*, int*)
0000000000502910 00000000000000a8 T Stereo16BitLinearMix(_MODCHANNEL*, int*, int*)
00000000005029c0 0000000000000110 T Stereo8BitSplineMix(_MODCHANNEL*, int*, int*)
0000000000502ad0 0000000000000108 T Stereo16BitSplineMix(_MODCHANNEL*, int*, int*)
0000000000502be0 00000000000001bc T Stereo8BitFirFilterMix(_MODCHANNEL*, int*, int*)
0000000000502da0 00000000000001b8 T Stereo16BitFirFilterMix(_MODCHANNEL*, int*, int*)
0000000000502f60 0000000000000090 T Stereo8BitRampMix(_MODCHANNEL*, int*, int*)
0000000000502ff0 0000000000000094 T Stereo16BitRampMix(_MODCHANNEL*, int*, int*)
0000000000503090 00000000000000ac T Stereo8BitLinearRampMix(_MODCHANNEL*, int*, int*)
0000000000503140 00000000000000c0 T Stereo16BitLinearRampMix(_MODCHANNEL*, int*, int*)
0000000000503200 0000000000000130 T Stereo8BitSplineRampMix(_MODCHANNEL*, int*, int*)
0000000000503330 000000000000012c T Stereo16BitSplineRampMix(_MODCHANNEL*, int*, int*)
0000000000503460 00000000000001d8 T Stereo8BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
0000000000503640 00000000000001cc T Stereo16BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
0000000000503810 000000000000009c T FilterMono8BitMix(_MODCHANNEL*, int*, int*)
00000000005038b0 000000000000009c T FilterMono16BitMix(_MODCHANNEL*, int*, int*)
0000000000503950 00000000000000b0 T FilterMono8BitLinearMix(_MODCHANNEL*, int*, int*)
0000000000503a00 00000000000000b4 T FilterMono16BitLinearMix(_MODCHANNEL*, int*, int*)
0000000000503ac0 00000000000000ec T FilterMono8BitSplineMix(_MODCHANNEL*, int*, int*)
0000000000503bb0 00000000000000f4 T FilterMono16BitSplineMix(_MODCHANNEL*, int*, int*)
0000000000503cb0 0000000000000148 T FilterMono8BitFirFilterMix(_MODCHANNEL*, int*, int*)
0000000000503e00 000000000000015c T FilterMono16BitFirFilterMix(_MODCHANNEL*, int*, int*)
0000000000503f60 00000000000000b4 T FilterMono8BitRampMix(_MODCHANNEL*, int*, int*)
0000000000504020 00000000000000b4 T FilterMono16BitRampMix(_MODCHANNEL*, int*, int*)
00000000005040e0 00000000000000c8 T FilterMono8BitLinearRampMix(_MODCHANNEL*, int*, int*)
00000000005041b0 00000000000000c8 T FilterMono16BitLinearRampMix(_MODCHANNEL*, int*, int*)
0000000000504280 0000000000000104 T FilterMono8BitSplineRampMix(_MODCHANNEL*, int*, int*)
0000000000504390 0000000000000114 T FilterMono16BitSplineRampMix(_MODCHANNEL*, int*, int*)
00000000005044b0 0000000000000168 T FilterMono8BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
0000000000504620 0000000000000178 T FilterMono16BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
00000000005047a0 00000000000000d0 T FilterStereo8BitMix(_MODCHANNEL*, int*, int*)
0000000000504870 00000000000000cc T FilterStereo16BitMix(_MODCHANNEL*, int*, int*)
0000000000504940 00000000000000ec T FilterStereo8BitLinearMix(_MODCHANNEL*, int*, int*)
0000000000504a30 00000000000000fc T FilterStereo16BitLinearMix(_MODCHANNEL*, int*, int*)
0000000000504b30 0000000000000178 T FilterStereo8BitSplineMix(_MODCHANNEL*, int*, int*)
0000000000504cb0 0000000000000174 T FilterStereo16BitSplineMix(_MODCHANNEL*, int*, int*)
0000000000504e30 0000000000000210 T FilterStereo8BitFirFilterMix(_MODCHANNEL*, int*, int*)
0000000000505040 0000000000000214 T FilterStereo16BitFirFilterMix(_MODCHANNEL*, int*, int*)
0000000000505260 00000000000000e8 T FilterStereo8BitRampMix(_MODCHANNEL*, int*, int*)
0000000000505350 00000000000000e4 T FilterStereo16BitRampMix(_MODCHANNEL*, int*, int*)
0000000000505440 0000000000000114 T FilterStereo8BitLinearRampMix(_MODCHANNEL*, int*, int*)
0000000000505560 0000000000000124 T FilterStereo16BitLinearRampMix(_MODCHANNEL*, int*, int*)
0000000000505690 0000000000000194 T FilterStereo8BitSplineRampMix(_MODCHANNEL*, int*, int*)
0000000000505830 000000000000018c T FilterStereo16BitSplineRampMix(_MODCHANNEL*, int*, int*)
00000000005059c0 0000000000000224 T FilterStereo8BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
0000000000505bf0 0000000000000224 T FilterStereo16BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
0000000000505e20 00000000000001d4 t CzCUBICSPLINE::CzCUBICSPLINE()
0000000000505e20 00000000000001d4 T CzCUBICSPLINE::CzCUBICSPLINE()
0000000000506000 00000000000001c8 t CzWINDOWEDFIR::CzWINDOWEDFIR()
0000000000506000 00000000000001c8 T CzWINDOWEDFIR::CzWINDOWEDFIR()
00000000005061d0 0000000000000084 T X86_Convert32To8(void*, int*, unsigned int, int*, int*)
0000000000506260 000000000000007c T X86_Convert32To16(void*, int*, unsigned int, int*, int*)
00000000005062e0 000000000000008c T X86_Convert32To24(void*, int*, unsigned int, int*, int*)
0000000000506370 000000000000007c T X86_Convert32To32(void*, int*, unsigned int, int*, int*)
00000000005063f0 0000000000000004 t X86_InterleaveFrontRear(int*, int*, unsigned int)
0000000000506400 000000000000003c t X86_MonoFromStereo(int*, unsigned int)
0000000000506440 000000000000007c t X86_StereoFill(int*, unsigned int, int*, int*)
00000000005064c0 0000000000000078 t X86_EndChannelOfs(_MODCHANNEL*, int*, unsigned int)
0000000000506540 00000000000006c4 T CSoundFile::CreateStereoMix(int)
0000000000506c10 000000000000007c t MMCMPBITBUFFER::GetBits(unsigned int) [clone .part.0]
0000000000506c90 0000000000000070 t _PPBITBUFFER::GetBits(unsigned int)
0000000000506d00 00000000000004c0 t PP20_Unpack(unsigned char const**, unsigned int*)
00000000005071c0 000000000000079c t MMCMP_Unpack(unsigned char const**, unsigned int*)
0000000000507960 000000000000143c T CSoundFile::ReadXM(unsigned char const*, unsigned int)
0000000000508da0 0000000000000550 T CSoundFile::ReadWav(unsigned char const*, unsigned int)
00000000005092f0 0000000000000074 t get_fci(char const*, int*)
0000000000509370 00000000000004cc T CSoundFile::ReadUMX(unsigned char const*, unsigned int)
0000000000509840 00000000000006d8 T CSoundFile::ReadUlt(unsigned char const*, unsigned int)
0000000000509f20 0000000000000598 T CSoundFile::ReadSTM(unsigned char const*, unsigned int)
000000000050a4c0 0000000000000124 T CSoundFile::S3MConvert(_MODCOMMAND*, bool) const
000000000050a5f0 0000000000000898 T CSoundFile::ReadS3M(unsigned char const*, unsigned int)
000000000050ae90 00000000000004c0 T CSoundFile::ReadPTM(unsigned char const*, unsigned int)
000000000050b350 00000000000006a0 T CSoundFile::ReadOKT(unsigned char const*, unsigned int)
000000000050b9f0 000000000000056c T CSoundFile::ReadMTM(unsigned char const*, unsigned int)
000000000050bf60 0000000000000190 T CSoundFile::ConvertModCommand(_MODCOMMAND*) const
000000000050c0f0 0000000000000a38 T CSoundFile::ReadMod(unsigned char const*, unsigned int)
000000000050cb30 0000000000000330 t MedConvert(_MODCOMMAND*, tagMMD0SONGHEADER const*)
000000000050ce60 0000000000000d84 T CSoundFile::ReadMed(unsigned char const*, unsigned int)
000000000050dbf0 0000000000000238 t ConvertMDLCommand(_MODCOMMAND*, unsigned int, unsigned int)
000000000050de30 0000000000000268 t UnpackMDLTrack(_MODCOMMAND*, unsigned int, unsigned int, unsigned int, unsigned char const*, unsigned int)
000000000050e0a0 0000000000000f9c T CSoundFile::ReadMDL(unsigned char const*, unsigned int)
000000000050f040 0000000000000068 t MDLReadBits(unsigned int&, unsigned int&, unsigned char*&, signed char)
000000000050f0b0 0000000000000508 T CSoundFile::ITInstrToMPT(void const*, _INSTRUMENTHEADER*, unsigned int)
000000000050f5c0 000000000000007c t ITReadBits(unsigned int&, unsigned int&, unsigned char*&, signed char)
000000000050f640 000000000000023c t ITUnpack8Bit(signed char*, unsigned int, unsigned char*, unsigned int, bool)
000000000050f880 0000000000000230 t ITUnpack16Bit(signed char*, unsigned int, unsigned char*, unsigned int, bool)
000000000050fab0 00000000000001d8 T CSoundFile::LoadMixPlugins(void const*, unsigned int)
000000000050fc90 000000000000108c T CSoundFile::ReadIT(unsigned char const*, unsigned int)
0000000000510d20 000000000000063c T CSoundFile::ReadFAR(unsigned char const*, unsigned int)
0000000000511360 0000000000000534 T CSoundFile::ReadDSM(unsigned char const*, unsigned int)
00000000005118a0 0000000000000cd4 T CSoundFile::ReadDMF(unsigned char const*, unsigned int)
0000000000512580 00000000000001f4 t DMFNewNode(DMF_HTREE*)
0000000000512780 00000000000001d0 t DMFUnpack(unsigned char*, unsigned char*, unsigned char*, unsigned int)
0000000000512950 00000000000009f4 T CSoundFile::ReadDBM(unsigned char const*, unsigned int)
0000000000513350 000000000000090c T CSoundFile::ReadAMS2(unsigned char const*, unsigned int)
0000000000513c60 0000000000000764 T CSoundFile::ReadAMS(unsigned char const*, unsigned int)
00000000005143d0 00000000000001c4 t AMSUnpack(char const*, unsigned int, char*, unsigned int, char)
00000000005145a0 0000000000000274 t AMF_Unpack(_MODCOMMAND*, unsigned char const*, unsigned int, unsigned int)
0000000000514820 00000000000008c0 T CSoundFile::ReadAMF(unsigned char const*, unsigned int)
00000000005150e0 00000000000005f4 T CSoundFile::Read669(unsigned char const*, unsigned int)
00000000005156e0 00000000000000fc t ConvertMT2Command(CSoundFile*, _MODCOMMAND*, _MT2COMMAND const*)
00000000005157e0 0000000000000d7c T CSoundFile::ReadMT2(unsigned char const*, unsigned int)
0000000000516560 0000000000000800 T CSoundFile::ReadPSM(unsigned char const*, unsigned int)
0000000000516d60 00000000000000f4 t abc_brokenrithm(char const*, int*, int*, int*, int)
0000000000516e60 0000000000000090 t abc_pattracktime(_ABCHANDLE*, unsigned int)
0000000000516ef0 00000000000000e8 t abc_globalslide(_ABCHANDLE*, unsigned int, int)
0000000000516fe0 000000000000006c t abc_isvalidchar(char)
0000000000517050 0000000000000074 t abc_skip_word(char*)
00000000005170d0 0000000000000170 t abc_parse_decorations(_ABCHANDLE*, _ABCTRACK*, char const*)
0000000000517240 00000000000001c0 t abc_MIDI_gchord(char const*, _ABCHANDLE*)
0000000000517400 00000000000000c8 t abc_beat_vol(_ABCHANDLE*, int, int)
00000000005174d0 0000000000000078 t abc_MIDI_beatstring(_ABCHANDLE*, char const*)
0000000000517550 00000000000001cc t abc_substitute(_ABCHANDLE*, char*, char*)
0000000000517720 0000000000000070 t abc_message(char const*, char const*)
0000000000517790 00000000000002b0 t ABC_Key(char const*)
0000000000517a40 000000000000017c t abc_addchordname(char const*, int, int const*)
0000000000517bc0 00000000000001c8 t abc_partpat_to_orderlist(unsigned char (*) [2], char const*, _ABCHANDLE*, unsigned char**, int) [clone .constprop.0]
0000000000517d90 0000000000000144 t abc_extractkeyvalue(char*, unsigned long, char*, unsigned long, char const*) [clone .constprop.0]
0000000000517ee0 0000000000000138 t abc_new_umacro(_ABCHANDLE*, char const*)
0000000000518020 0000000000000750 t ABC_ReadPatterns(_MODCOMMAND**, unsigned short*, _ABCHANDLE*, int, int)
0000000000518770 000000000000009c t ABC_CleanupMacros(_ABCHANDLE*)
0000000000518810 0000000000000138 t abc_fgetbytes(MMFILE*, char*, unsigned int) [clone .part.0]
0000000000518950 0000000000000308 t abc_gets(_ABCHANDLE*, MMFILE*)
0000000000518c60 00000000000000f0 t abc_MIDI_beat(_ABCHANDLE*, char const*)
0000000000518d50 0000000000000098 t abc_MIDI_getnumber(char const*)
0000000000518df0 0000000000000098 t abc_MIDI_getprog(char const*)
0000000000518e90 00000000000000c8 t abc_add_event(_ABCHANDLE*, _ABCTRACK*, _ABCEVENT*) [clone .isra.0]
0000000000518f60 0000000000000080 t abc_add_partbreak(_ABCHANDLE*, _ABCTRACK*, unsigned int) [clone .isra.0]
0000000000518fe0 0000000000000090 t abc_add_tempo_event(_ABCHANDLE*, _ABCTRACK*, unsigned int, int) [clone .isra.0]
0000000000519070 0000000000000090 t abc_add_noteoff(_ABCHANDLE*, _ABCTRACK*, unsigned int) [clone .isra.0]
0000000000519100 00000000000001cc t abc_add_dronenote(_ABCHANDLE*, _ABCTRACK*, unsigned int, int, int) [clone .isra.0]
00000000005192d0 0000000000000084 t abc_add_setjumploop(_ABCHANDLE*, _ABCTRACK*, unsigned int, ABCEVENT_JUMPTYPE) [clone .isra.0]
0000000000519360 00000000000000bc t abc_add_sync(_ABCHANDLE*, _ABCTRACK*, unsigned int) [clone .isra.0]
0000000000519420 0000000000000080 t abc_add_tocoda(_ABCHANDLE*, _ABCTRACK*, unsigned int) [clone .isra.0]
00000000005194a0 0000000000000988 t abc_transpose(char const*)
0000000000519e30 0000000000000318 t abc_locate_track(_ABCHANDLE*, char const*, int)
000000000051a150 00000000000004e0 t abc_add_gchord(_ABCHANDLE*, unsigned int, unsigned int)
000000000051a630 0000000000000208 t abc_add_drum(_ABCHANDLE*, unsigned int, unsigned int)
000000000051a840 0000000000000034 t abc_check_track(_ABCHANDLE*, _ABCTRACK*) [clone .part.0]
000000000051a880 000000000000071c t abc_add_noteon(_ABCHANDLE*, int, char const*, unsigned int, char*, int, ABCEVENT_X_EFFECT, int)
000000000051afa0 00000000000001a8 t abc_getexpr(char const*, int*)
000000000051b150 00000000000000d4 t abc_M_field(char const*, int*, int*)
000000000051b230 0000000000000124 t abc_notelen(char const*, int*, int*)
000000000051b360 00000000000002ec t abc_extract_tempo(char const*, int)
000000000051b650 00000000000004dc t abc_set_parts(char**, char*)
000000000051bb30 00000000000009dc t abc_song_to_parts(_ABCHANDLE*, char**, unsigned char (*) [2])
000000000051c510 0000000000001264 t abc_MIDI_command(_ABCHANDLE*, char*, char)
000000000051d780 00000000000001a8 T CSoundFile::TestABC(unsigned char const*, unsigned int)
000000000051d930 0000000000005a6c T CSoundFile::ReadABC(unsigned char const*, unsigned int)
00000000005233a0 0000000000000070 t mid_message(char const*, char const*)
0000000000523410 0000000000000610 t MID_ReadPatterns(_MODCOMMAND**, unsigned short*, _MIDHANDLE*, int, int)
0000000000523a20 000000000000001c t mid_read_long(_MIDHANDLE*) [clone .isra.0]
0000000000523a40 0000000000000084 t mid_sync_track(_MIDTRACK*, unsigned int)
0000000000523ad0 0000000000000114 t mid_add_event(_MIDHANDLE*, _MIDTRACK*, _MIDEVENT*) [clone .constprop.0]
0000000000523bf0 0000000000000258 t mid_locate_track(_MIDHANDLE*, int, int)
0000000000523e50 000000000000005c t mid_add_noteoff(_MIDHANDLE*, _MIDTRACK*)
0000000000523eb0 00000000000000a0 t mid_add_wheel(_MIDHANDLE*, _MIDTRACK*, int)
0000000000523f50 0000000000000064 T CSoundFile::TestMID(unsigned char const*, unsigned int)
0000000000523fc0 0000000000001db8 T CSoundFile::ReadMID(unsigned char const*, unsigned int)
0000000000525d80 00000000000000c8 t pat_sawtooth(int)
0000000000525e50 00000000000000ac t pat_setpat_attr(WaveHeader*, _MODINSTRUMENT*)
0000000000525f00 000000000000008c t mmreadUBYTES(unsigned char*, long, MMFILE*)
0000000000525f90 00000000000000ec t pat_build_path(char*, int)
0000000000526080 0000000000000330 t pat_setpat_inst(WaveHeader*, _INSTRUMENTHEADER*, int)
00000000005263b0 0000000000000078 t pat_square(int)
0000000000526430 0000000000000018 t pat_sinus(int)
0000000000526450 0000000000000178 t pat_read_waveheader(__sFILE*, WaveHeader*, int) [clone .constprop.0]
00000000005265d0 00000000000002b4 t pat_readpat(int, char*, int)
0000000000526890 00000000000000f4 t dec_pat_Decompress8Bit(short*, int, int) [clone .isra.0]
0000000000526990 00000000000000a8 t pat_readpat_attr(int, WaveHeader*, int) [clone .constprop.0]
0000000000526a40 0000000000000294 t PATsample(CSoundFile*, _MODINSTRUMENT*, int, int)
0000000000526ce0 0000000000000140 t pat_get_waveheader(MMFILE*, WaveHeader*, int)
0000000000526e20 0000000000000050 t pat_resetsmp
0000000000526e70 0000000000000024 t pat_smptogm
0000000000526ea0 000000000000005c t pat_gmtosmp
0000000000526f00 0000000000000024 t pat_smplooped
0000000000526f30 0000000000000058 t pat_gm_name
0000000000526f90 0000000000000024 t pat_gm_drumnr
0000000000526fc0 0000000000000088 t pat_gm_drumnote
0000000000527050 0000000000000600 t pat_init_patnames
0000000000527650 0000000000000080 T CSoundFile::TestPAT(unsigned char const*, unsigned int)
00000000005276d0 0000000000000008 t pat_modnote
00000000005276e0 00000000000002fc t PAT_Load_Instruments
00000000005279e0 0000000000000800 T CSoundFile::ReadPAT(unsigned char const*, unsigned int)
00000000005281e0 0000000000000190 t conv_s16_to_s32
0000000000528370 0000000000000280 t cap_fit
00000000005285f0 0000000000000184 t enc_chan_fit
0000000000528780 0000000000000020 T mpg123_rates
00000000005287a0 0000000000000050 T mpg123_encsize
00000000005287f0 0000000000000c30 T INT123_frame_output_format
0000000000529420 000000000000007c T mpg123_fmt_none
00000000005294a0 000000000000003c T mpg123_format_none
00000000005294e0 00000000000002c8 T mpg123_fmt_all
00000000005297b0 000000000000033c T mpg123_fmt2
0000000000529af0 0000000000000010 T mpg123_fmt
0000000000529b00 000000000000003c T mpg123_format
0000000000529b40 0000000000000010 T INT123_invalidate_format
0000000000529b50 0000000000000018 T INT123_decoder_synth_bytes
0000000000529b70 0000000000000018 T INT123_samples_to_bytes
0000000000529b90 0000000000000018 T INT123_bytes_to_samples
0000000000529bb0 0000000000000044 T INT123_outblock_bytes
0000000000529c00 0000000000000700 T swap_endian
000000000052a300 0000000000001620 T INT123_postprocess_buffer
000000000052b920 00000000000000e4 t decode_the_frame
000000000052ba10 0000000000000154 t frame_buffercheck.part.0.constprop.0
000000000052bb70 0000000000000008 T mpg123_init
000000000052bb80 0000000000000004 T mpg123_exit
000000000052bb90 0000000000000090 T mpg123_parnew
000000000052bc20 0000000000000010 T mpg123_new
000000000052bc30 00000000000001e4 T INT123_decode_update
000000000052be20 00000000000001b8 t get_next_frame
000000000052bfe0 0000000000000100 t do_the_seek
000000000052c0e0 0000000000000064 T mpg123_feed
000000000052c150 000000000000019c T mpg123_decode
000000000052c2f0 0000000000000018 T mpg123_read
000000000052c310 000000000000008c T mpg123_getformat2
000000000052c3a0 0000000000000008 T mpg123_getformat
000000000052c3b0 00000000000000d8 T mpg123_tell
000000000052c490 00000000000001e0 T mpg123_scan
000000000052c670 00000000000001f4 T mpg123_seek
000000000052c870 0000000000000064 T mpg123_close
000000000052c8e0 0000000000000058 T mpg123_open_handle
000000000052c940 000000000000004c T mpg123_replace_reader_handle
000000000052c990 0000000000000028 T mpg123_delete
000000000052c9c0 0000000000000080 T mpg123_plain_strerror
000000000052ca40 0000000000000018 T mpg123_errcode
000000000052ca60 0000000000000010 T mpg123_strerror
000000000052ca70 0000000000000014 T INT123_fi_init
000000000052ca90 0000000000000028 T INT123_fi_exit
000000000052cac0 00000000000001a0 T INT123_fi_resize
000000000052cc60 0000000000000194 T INT123_fi_add
000000000052ce00 0000000000000010 T INT123_fi_reset
000000000052ce10 0000000000000008 T INT123_init_icy
000000000052ce20 0000000000000020 T INT123_clear_icy
000000000052ce40 0000000000000018 T INT123_reset_icy
000000000052ce60 00000000000001c4 T INT123_ntom_val
000000000052d030 000000000000015c T INT123_synth_ntom_set_step
000000000052d190 000000000000001c T INT123_ntom_set_ntom
000000000052d1b0 000000000000002c T INT123_ntom_frame_outsamples
000000000052d1e0 0000000000000170 T INT123_ntom_frmouts
000000000052d350 0000000000000130 T INT123_ntom_ins2outs
000000000052d480 000000000000012c T INT123_ntom_frameoff
000000000052d5b0 000000000000000c T mpg123_init_string
000000000052d5c0 0000000000000028 T mpg123_free_string
000000000052d5f0 0000000000000094 T mpg123_resize_string
000000000052d690 000000000000002c T mpg123_grow_string
000000000052d6c0 000000000000006c T mpg123_move_string
000000000052d730 0000000000000050 T mpg123_same_string
000000000052d780 0000000000000010 T INT123_safe_realloc
000000000052d790 000000000000073c t decode_header
000000000052ded0 0000000000000094 t forget_head_shift
000000000052df70 00000000000000a4 t getbits.constprop.0
000000000052e020 0000000000000018 T INT123_frame_freq
000000000052e040 00000000000000bc T INT123_set_pointer
000000000052e100 0000000000000024 T INT123_compute_bpf
000000000052e130 0000000000001a54 T INT123_read_frame
000000000052fb90 00000000000000ec t frame_fuzzy_find.constprop.0
000000000052fc80 000000000000006c T mpg123_reset_eq
000000000052fcf0 00000000000000e0 T INT123_frame_outbuffer
000000000052fdd0 00000000000000a8 T INT123_frame_index_setup
000000000052fe80 000000000000015c T INT123_frame_buffers
000000000052ffe0 0000000000000084 T INT123_frame_buffers_reset
0000000000530070 0000000000000068 T INT123_frame_fill_toc
00000000005300e0 00000000000000ac T INT123_frame_exit
0000000000530190 00000000000000cc T INT123_frame_index_find
0000000000530260 000000000000006c T INT123_frame_ins2outs
00000000005302d0 0000000000000080 T INT123_frame_outs
0000000000530350 0000000000000078 T INT123_frame_expect_outsamples
00000000005303d0 0000000000000080 T INT123_frame_offset
0000000000530450 0000000000000060 T INT123_frame_gapless_init
00000000005304b0 0000000000000154 t frame_fixed_reset
0000000000530610 00000000000001a4 T INT123_frame_init_par
00000000005307c0 000000000000003c T INT123_frame_reset
0000000000530800 0000000000000058 T INT123_frame_gapless_realinit
0000000000530860 00000000000000cc T INT123_frame_gapless_update
0000000000530930 0000000000000118 T INT123_frame_set_frameseek
0000000000530a50 0000000000000020 T INT123_frame_skip
0000000000530a70 0000000000000088 T INT123_frame_set_seek
0000000000530b00 0000000000000150 T INT123_do_rva
0000000000530c50 0000000000000180 t next_text
0000000000530dd0 0000000000000250 t promote_framename
0000000000531020 00000000000006fc t convert_utf16bom
0000000000531720 0000000000000328 t convert_latin1
0000000000531a50 0000000000000064 t convert_utf8
0000000000531ac0 0000000000000364 t add_id3_text
0000000000531e30 0000000000000044 T INT123_init_id3
0000000000531e80 00000000000002e8 T INT123_exit_id3
0000000000532170 0000000000000018 T INT123_reset_id3
0000000000532190 0000000000000200 T INT123_id3_to_utf8
0000000000532390 0000000000000134 t store_id3_text.part.0
00000000005324d0 0000000000000120 T store_id3v2
00000000005325f0 00000000000021d0 T INT123_parse_new_id3
00000000005347c0 0000000000000050 t synth_stereo_wrap
0000000000534810 0000000000000008 T INT123_defdec
0000000000534820 0000000000000020 T INT123_decclass
0000000000534840 0000000000000368 T INT123_set_synth_functions
0000000000534bb0 0000000000000124 T INT123_dectype
0000000000534ce0 0000000000000114 T INT123_frame_cpu_opt
0000000000534e00 0000000000000008 t nix_lseek
0000000000534e10 00000000000000bc t plain_fullread
0000000000534ed0 0000000000000050 t generic_head_read
0000000000534f20 0000000000000054 t generic_head_shift
0000000000534f80 000000000000002c t generic_read_frame_body
0000000000534fb0 000000000000003c t generic_tell
0000000000534ff0 000000000000004c t feed_skip_bytes
0000000000535040 0000000000000008 t feed_seek_frame
0000000000535050 0000000000000014 t bad_init
0000000000535070 0000000000000004 t bad_close
0000000000535080 0000000000000014 t bad_fullread
00000000005350a0 0000000000000014 t bad_head_read
00000000005350c0 0000000000000014 t bad_skip_bytes
00000000005350e0 0000000000000014 t bad_read_frame_body
0000000000535100 0000000000000014 t bad_back_bytes
0000000000535120 0000000000000014 t bad_tell
0000000000535140 0000000000000038 t plain_read
0000000000535180 0000000000000154 t bc_give
00000000005352e0 0000000000000024 t feed_read
0000000000535310 000000000000013c t bc_add
0000000000535450 0000000000000398 t icy_fullread
00000000005357f0 000000000000020c t buffered_fullread
0000000000535a00 00000000000000e4 t stream_seek_frame
0000000000535af0 0000000000000004 t posix_lseek
0000000000535b00 0000000000000004 t posix_read
0000000000535b10 00000000000000d4 t buffered_forget
0000000000535bf0 0000000000000034 t io_seek
0000000000535c30 0000000000000070 t stream_rewind
0000000000535ca0 000000000000012c t stream_skip_bytes
0000000000535dd0 000000000000004c t stream_back_bytes
0000000000535e20 00000000000002ec t default_init
0000000000536110 0000000000000014 t bad_head_shift
0000000000536130 0000000000000014 t bad_seek_frame
0000000000536150 0000000000000004 t bad_rewind
0000000000536160 00000000000002dc t bc_fill_pool.isra.0
0000000000536440 000000000000004c t feed_init
0000000000536490 0000000000000078 t bc_reset
0000000000536510 0000000000000064 t stream_close
0000000000536580 0000000000000064 t feed_back_bytes
00000000005365f0 0000000000000008 T INT123_bc_poolsize
0000000000536600 0000000000000024 T INT123_bc_prepare
0000000000536630 00000000000000e4 T INT123_bc_cleanup
0000000000536720 0000000000000058 T INT123_feed_more
0000000000536780 0000000000000050 T INT123_open_bad
00000000005367d0 000000000000009c T INT123_open_stream_handle
0000000000536870 00000000000002e4 T INT123_make_decode_tables
0000000000536b60 0000000000000a84 T INT123_make_conv16to8_table
00000000005375f0 00000000000000c0 t getbits
00000000005376b0 0000000000002318 T INT123_do_layer1
00000000005399d0 00000000000000c0 t getbits
0000000000539a90 0000000000000120 T INT123_init_layer12_stuff
0000000000539bb0 0000000000000064 T INT123_init_layer12_table
0000000000539c20 0000000000001b34 T INT123_do_layer2
000000000053b760 00000000000002bc t III_get_scale_factors_2
000000000053ba20 00000000000003b8 t dct12
000000000053bde0 00000000000000c0 t getbits
000000000053bea0 00000000000017a4 t III_dequantize_sample
000000000053d650 00000000000013c4 t III_get_scale_factors_1.isra.0
000000000053ea20 0000000000000028 T INT123_init_layer3_gainpow2
000000000053ea50 0000000000000478 T INT123_init_layer3_stuff
000000000053eed0 0000000000000554 T INT123_dct36
000000000053f430 00000000000035d8 T INT123_do_layer3
0000000000542a10 00000000000003bc T INT123_synth_1to1_8bit
0000000000542dd0 00000000000000bc T INT123_synth_1to1_8bit_mono
0000000000542e90 000000000000008c T INT123_synth_1to1_8bit_m2s
0000000000542f20 0000000000000140 T INT123_synth_1to1_8bit_wrap
0000000000543060 000000000000011c T INT123_synth_1to1_8bit_wrap_mono
0000000000543180 0000000000000198 T INT123_synth_1to1_8bit_wrap_m2s
0000000000543320 00000000000003bc T INT123_synth_2to1_8bit
00000000005436e0 00000000000000d4 T INT123_synth_2to1_8bit_mono
00000000005437c0 00000000000000bc T INT123_synth_2to1_8bit_m2s
0000000000543880 0000000000000490 T INT123_synth_4to1_8bit
0000000000543d10 0000000000000094 T INT123_synth_4to1_8bit_mono
0000000000543db0 000000000000007c T INT123_synth_4to1_8bit_m2s
0000000000543e30 00000000000008d0 T INT123_synth_ntom_8bit
0000000000544700 000000000000015c T INT123_synth_ntom_8bit_mono
0000000000544860 0000000000000148 T INT123_synth_ntom_8bit_m2s
00000000005449b0 0000000000000394 T INT123_synth_1to1
0000000000544d50 00000000000000bc T INT123_synth_1to1_mono
0000000000544e10 000000000000008c T INT123_synth_1to1_m2s
0000000000544ea0 0000000000000394 T INT123_synth_2to1
0000000000545240 00000000000000d4 T INT123_synth_2to1_mono
0000000000545320 00000000000000bc T INT123_synth_2to1_m2s
00000000005453e0 0000000000000874 T INT123_synth_4to1
0000000000545c60 0000000000000094 T INT123_synth_4to1_mono
0000000000545d00 000000000000007c T INT123_synth_4to1_m2s
0000000000545d80 0000000000000be4 T INT123_synth_ntom
0000000000546970 0000000000000158 T INT123_synth_ntom_mono
0000000000546ad0 000000000000013c T INT123_synth_ntom_m2s
0000000000546c10 00000000000003bc T INT123_synth_1to1_s32
0000000000546fd0 00000000000000bc T INT123_synth_1to1_s32_mono
0000000000547090 000000000000008c T INT123_synth_1to1_s32_m2s
0000000000547120 00000000000003bc T INT123_synth_2to1_s32
00000000005474e0 00000000000000d4 T INT123_synth_2to1_s32_mono
00000000005475c0 00000000000000bc T INT123_synth_2to1_s32_m2s
0000000000547680 00000000000008d4 T INT123_synth_4to1_s32
0000000000547f60 0000000000000094 T INT123_synth_4to1_s32_mono
0000000000548000 000000000000007c T INT123_synth_4to1_s32_m2s
0000000000548080 0000000000000c1c T INT123_synth_ntom_s32
0000000000548ca0 0000000000000158 T INT123_synth_ntom_s32_mono
0000000000548e00 000000000000013c T INT123_synth_ntom_s32_m2s
0000000000548f40 000000000000035c T INT123_synth_1to1_real
00000000005492a0 00000000000000bc T INT123_synth_1to1_real_mono
0000000000549360 000000000000008c T INT123_synth_1to1_real_m2s
00000000005493f0 000000000000035c T INT123_synth_2to1_real
0000000000549750 00000000000000d4 T INT123_synth_2to1_real_mono
0000000000549830 00000000000000bc T INT123_synth_2to1_real_m2s
00000000005498f0 000000000000064c T INT123_synth_4to1_real
0000000000549f40 0000000000000094 T INT123_synth_4to1_real_mono
0000000000549fe0 000000000000007c T INT123_synth_4to1_real_m2s
000000000054a060 0000000000000598 T INT123_synth_ntom_real
000000000054a600 0000000000000158 T INT123_synth_ntom_real_mono
000000000054a760 000000000000013c T INT123_synth_ntom_real_m2s
000000000054a8a0 0000000000000004 T INT123_compat_close
000000000054a8b0 0000000000000610 T INT123_dct64
000000000054aec0 00000000000000b8 T INT123_do_equalizer
000000000054af80 0000000000000240 T atanf
000000000054b1c0 0000000000000050 T fmodf
000000000054b220 00000000000001b0 T sinf
000000000054b3e0 00000000000001b4 T log
000000000054b5a0 0000000000000098 T sin
000000000054b640 0000000000000004 T atan2
000000000054b660 0000000000000008 T fabsf
000000000054b680 0000000000000034 t with_errno
000000000054b6c0 0000000000000018 t xflow
000000000054b6e0 000000000000000c t __math_uflow
000000000054b700 000000000000000c t __math_oflow
000000000054b720 0000000000000020 t __math_divzero
000000000054b740 000000000000001c t __math_invalid
000000000054b760 0000000000000014 t __math_check_uflow
000000000054b780 0000000000000020 t __math_check_oflow
000000000054b7a0 00000000000000dc T log2f
000000000054b880 0000000000000300 T __ieee754_rem_pio2
000000000054bb80 0000000000000068 T acosf
000000000054bc00 0000000000000498 T pow
000000000054c0a0 00000000000001ec T __ieee754_fmodf
000000000054c2a0 0000000000000880 T __kernel_rem_pio2
000000000054cb20 000000000000007c T ldexpf
000000000054cba0 000000000000010c T scalbn
000000000054ccc0 00000000000000f8 T scalbnf
000000000054cdc0 00000000000000dc T expf
000000000054cea0 0000000000000318 T __ieee754_acosf
000000000054d1c0 0000000000000050 T sqrtf
000000000054d220 0000000000000050 T sqrt
000000000054d280 000000000000007c T ldexp
000000000054d300 0000000000000338 T powf
000000000054d640 000000000000009c T __kernel_sin
000000000054d6e0 0000000000000004 T atan2f
000000000054d700 0000000000000064 T tanf
000000000054d780 0000000000000090 T cos
000000000054d820 0000000000000034 t with_errnof
000000000054d860 0000000000000018 t xflowf
000000000054d880 0000000000000008 t __math_uflowf
000000000054d8a0 000000000000000c t __math_may_uflowf
000000000054d8c0 0000000000000008 t __math_oflowf
000000000054d8e0 0000000000000020 t __math_divzerof
000000000054d900 000000000000001c t __math_invalidf
000000000054d920 0000000000000078 T frexp
000000000054d9a0 0000000000000008 T __ieee754_sqrtf
000000000054d9c0 00000000000001b0 T log2
000000000054db80 000000000000000c T nanf
000000000054dba0 00000000000000c8 T exp2f
000000000054dc80 00000000000001b4 T cosf
000000000054de40 0000000000000008 T __ieee754_sqrt
000000000054de60 00000000000001dc T __ieee754_atan2
000000000054e040 0000000000000008 T floor
000000000054e060 0000000000000170 T exp
000000000054e1e0 0000000000000018 T finitef
000000000054e200 00000000000000dc T logf
000000000054e2e0 0000000000000018 T finite
000000000054e300 000000000000021c T atan
000000000054e520 00000000000001d0 T __ieee754_atan2f
000000000054e700 0000000000000130 T __kernel_cos
000000000054e840 0000000000000008 T fabs
000000000054e860 0000000000000314 T __ieee754_rem_pio2f
000000000054eb80 000000000000020c T __kernel_tanf
000000000054eda0 000000000000000c T nan
000000000054edc0 0000000000000884 T __kernel_rem_pio2f
000000000054f660 0000000000000008 T floorf
000000000054f670 000000000000009c t op_granpos_add
000000000054f710 0000000000000148 t op_get_next_page
000000000054f860 00000000000002e4 t op_fetch_headers_impl
000000000054fb50 000000000000009c t op_fetch_headers
000000000054fbf0 0000000000000054 t op_get_packet_duration
000000000054fc50 00000000000000e8 t op_collect_audio_packets
000000000054fd40 00000000000000d8 t op_clear
000000000054fe20 0000000000000080 t op_seek_helper
000000000054fea0 00000000000000ac t op_decode
000000000054ff50 0000000000000078 t op_rescale64.part.0
000000000054ffd0 0000000000000084 t op_granpos_diff
0000000000550060 0000000000000268 t op_find_initial_pcm_offset
00000000005502d0 0000000000000278 t op_find_final_pcm_offset
0000000000550550 00000000000000d8 t op_update_gain.part.7
0000000000550630 000000000000011c t op_make_decode_ready.part.8
0000000000550750 0000000000000660 t op_fetch_and_process_page
0000000000550db0 0000000000000340 t op_read_native.part.9
00000000005510f0 0000000000000a0c t op_open_seekable2
0000000000551b00 0000000000000074 t op_open2
0000000000551b80 0000000000000268 T op_test_callbacks
0000000000551df0 000000000000004c T op_open_callbacks
0000000000551e40 000000000000002c T op_free
0000000000551e70 0000000000000008 T op_seekable
0000000000551e80 0000000000000040 T op_head
0000000000551ec0 0000000000000cf8 T op_pcm_seek
0000000000552bc0 0000000000000018 T op_read
0000000000552be0 0000000000000058 t op_strdup_with_len
0000000000552c40 00000000000000d4 t op_tags_ensure_capacity
0000000000552d20 0000000000000280 t opus_tags_parse_impl
0000000000552fa0 00000000000001b0 T opus_head_parse
0000000000553150 000000000000000c T opus_tags_init
0000000000553160 0000000000000078 T opus_tags_clear
00000000005531e0 000000000000009c T opus_tags_parse
0000000000553280 000000000000003c T opus_tagncompare
00000000005532c0 0000000000000128 t opus_tags_get_gain.isra.0.constprop.1
00000000005533f0 0000000000000018 T opus_tags_get_album_gain
0000000000553410 0000000000000018 T opus_tags_get_track_gain
0000000000553430 000000000000005c t op_strncasecmp
0000000000553490 00000000000000f4 t _os_update_crc
0000000000553590 0000000000000114 t _packetout
00000000005536b0 000000000000000c T ogg_page_version
00000000005536c0 0000000000000010 T ogg_page_continued
00000000005536d0 0000000000000010 T ogg_page_bos
00000000005536e0 0000000000000010 T ogg_page_eos
00000000005536f0 000000000000000c T ogg_page_granulepos
0000000000553700 000000000000000c T ogg_page_serialno
0000000000553710 000000000000000c T ogg_page_pageno
0000000000553720 0000000000000040 T ogg_page_packets
0000000000553760 000000000000001c T ogg_stream_check
0000000000553780 0000000000000060 T ogg_stream_clear
00000000005537e0 00000000000000a4 T ogg_stream_init
0000000000553890 0000000000000090 t _os_body_expand
0000000000553920 00000000000000a4 t _os_lacing_expand
00000000005539d0 0000000000000084 T ogg_page_checksum_set
0000000000553a60 0000000000000014 T ogg_sync_init
0000000000553a80 0000000000000040 T ogg_sync_clear
0000000000553ac0 000000000000000c T ogg_sync_check
0000000000553ad0 00000000000000f0 T ogg_sync_buffer
0000000000553bc0 000000000000004c T ogg_sync_wrote
0000000000553c10 0000000000000190 T ogg_sync_pageseek
0000000000553da0 000000000000039c T ogg_stream_pagein
0000000000554140 0000000000000034 T ogg_sync_reset
0000000000554180 000000000000004c T ogg_stream_reset
00000000005541d0 0000000000000050 T ogg_stream_reset_serialno
0000000000554220 0000000000000044 T ogg_stream_packetout
0000000000554270 0000000000000044 T ogg_stream_packetpeek
00000000005542c0 0000000000000014 T oggpack_readinit
00000000005542e0 00000000000000f8 T oggpack_look
00000000005543e0 000000000000006c T oggpack_adv
0000000000554450 000000000000012c T oggpack_read
0000000000554580 0000000000000020 T oggpack_bytes
00000000005545a0 0000000000000328 T opus_pcm_soft_clip
00000000005548d0 000000000000009c T opus_packet_get_samples_per_frame
0000000000554970 0000000000000438 t opus_packet_parse_impl
0000000000554db0 0000000000000084 t smooth_fade
0000000000554e40 0000000000000cd4 t opus_decode_frame
0000000000555b20 000000000000006c T opus_decoder_get_size
0000000000555b90 0000000000000124 T opus_decoder_init
0000000000555cc0 000000000000020c T opus_decoder_ctl
0000000000555ed0 0000000000000044 T opus_packet_get_bandwidth
0000000000555f20 0000000000000010 T opus_packet_get_nb_channels
0000000000555f30 00000000000005e4 t opus_decode_native
0000000000556520 000000000000004c T opus_packet_get_nb_frames
0000000000556570 0000000000000060 T opus_packet_get_nb_samples
00000000005565d0 00000000000000f8 t opus_copy_channel_out_short
00000000005566d0 0000000000000074 T opus_multistream_decoder_get_size
0000000000556750 0000000000000160 T opus_multistream_decoder_init
00000000005568b0 0000000000000130 T opus_multistream_decoder_create
00000000005569e0 0000000000000394 t opus_multistream_decoder_ctl_va_list
0000000000556d80 0000000000000078 T opus_multistream_decoder_ctl
0000000000556e00 000000000000048c t opus_multistream_decode_native
0000000000557290 0000000000000034 T opus_multistream_decode
00000000005572d0 0000000000000004 T opus_multistream_decoder_destroy
00000000005572e0 0000000000000038 t celt_fatal
0000000000557320 0000000000000088 t resampling_factor
00000000005573b0 0000000000000234 t comb_filter
00000000005575f0 0000000000000068 t init_caps
0000000000557660 00000000000001c8 t deemphasis
0000000000557830 000000000000042c t celt_synthesis
0000000000557c60 00000000000009a0 t celt_decode_lost
0000000000558600 00000000000002ec t validate_celt_decoder
00000000005588f0 0000000000000060 t celt_decoder_get_size
0000000000558950 0000000000001088 t celt_decode_with_ec
00000000005599e0 00000000000002f8 t opus_custom_decoder_ctl
0000000000559ce0 00000000000000f0 t celt_decoder_init
0000000000559dd0 000000000000004c t ec_tell_frac
0000000000559e20 000000000000007c t ec_dec_normalize
0000000000559ea0 0000000000000060 t ec_dec_init
0000000000559f00 000000000000002c t ec_decode
0000000000559f30 0000000000000034 t ec_decode_bin
0000000000559f70 0000000000000044 t ec_dec_update
0000000000559fc0 0000000000000044 t ec_dec_bit_logp
000000000055a010 0000000000000058 t ec_dec_icdf
000000000055a070 0000000000000074 t ec_dec_bits
000000000055a0f0 0000000000000110 t ec_dec_uint
000000000055a200 000000000000021c t clt_mdct_backward_c
000000000055a420 0000000000000050 t opus_custom_mode_create
000000000055a470 00000000000000e8 t find_best_pitch
000000000055a560 000000000000023c t pitch_downsample
000000000055a7a0 0000000000000254 t pitch_search
000000000055aa00 0000000000000128 t _celt_lpc
000000000055ab30 0000000000000270 t celt_fir_c
000000000055ada0 0000000000000368 t celt_iir
000000000055b110 0000000000000184 t _celt_autocorr
000000000055b2a0 0000000000000218 t unquant_coarse_energy
000000000055b4c0 0000000000000120 t unquant_fine_energy
000000000055b5e0 0000000000000168 t unquant_energy_finalise
000000000055b750 0000000000000d04 t clt_compute_allocation
000000000055c460 00000000000000a4 t exp_rotation1
000000000055c510 000000000000017c t exp_rotation.part.0
000000000055c690 000000000000023c t op_pvq_search_c
000000000055c8d0 00000000000001e8 t alg_quant
000000000055cac0 0000000000000180 t alg_unquant
000000000055cc40 000000000000009c t renormalise_vector
000000000055cce0 000000000000024c t stereo_itheta
000000000055cf30 0000000000000228 t celt_pitch_xcorr_float_neon
000000000055d160 00000000000000bc t celt_inner_prod_neon
000000000055d220 00000000000000f4 t dual_inner_prod_neon
000000000055d320 0000000000000010 t silk_Get_Decoder_Size
000000000055d330 0000000000000038 t silk_InitDecoder
000000000055d370 0000000000000acc t silk_Decode
000000000055de40 0000000000000264 t silk_stereo_MS_to_LR
000000000055e0b0 00000000000003a0 t silk_resampler_init
000000000055e450 00000000000001ac t silk_resampler
000000000055e600 00000000000006b8 t silk_resampler_private_down_FIR
000000000055ecc0 00000000000001b8 t silk_resampler_private_IIR_FIR
000000000055ee80 0000000000000174 t silk_resampler_private_up2_HQ
000000000055f000 0000000000000004 t silk_resampler_private_up2_HQ_wrapper
000000000055f010 0000000000000130 t silk_stereo_decode_pred
000000000055f140 0000000000000030 t silk_stereo_decode_mid_only
000000000055f170 0000000000000064 t validate_layout
000000000055f1e0 0000000000000070 t get_left_channel
000000000055f250 0000000000000074 t get_right_channel
000000000055f2d0 0000000000000074 t get_mono_channel
000000000055f350 00000000000000bc t intensity_stereo.isra.0
000000000055f410 000000000000014c t deinterleave_hadamard
000000000055f560 00000000000000a8 t special_hybrid_folding.isra.1
000000000055f610 0000000000000108 t quant_band_n1.isra.2
000000000055f720 0000000000000018 t celt_lcg_rand
000000000055f740 000000000000006c t bitexact_log2tan
000000000055f7b0 00000000000008f0 t compute_theta
00000000005600a0 00000000000005b0 t quant_partition
0000000000560650 00000000000001e4 t denormalise_bands
0000000000560840 000000000000033c t anti_collapse
0000000000560b80 000000000000007c t haar1
0000000000560c00 00000000000004fc t quant_band
0000000000561100 000000000000056c t quant_band_stereo
0000000000561670 0000000000001024 t quant_all_bands
00000000005626a0 000000000000013c t encode_pulses
00000000005627e0 00000000000002d0 t decode_pulses
0000000000562ab0 00000000000000a0 t ec_enc_carry_out.part.0
0000000000562b50 00000000000000b0 t ec_encode
0000000000562c00 0000000000000098 t ec_enc_bit_logp
0000000000562ca0 00000000000000a0 t ec_enc_bits
0000000000562d40 0000000000000090 t ec_enc_uint
0000000000562dd0 0000000000000768 t opus_fft_impl
0000000000563540 0000000000000194 t ec_laplace_decode
00000000005636e0 0000000000000048 t isqrt32
0000000000563730 000000000000004c t silk_init_decoder
0000000000563780 0000000000000220 t silk_decode_frame
00000000005639a0 0000000000000260 t silk_decode_parameters
0000000000563c00 00000000000003e0 t silk_decode_indices
0000000000563fe0 0000000000000284 t silk_decode_pulses
0000000000564270 0000000000000284 t silk_decoder_set_fs
0000000000564500 00000000000000f4 t silk_gains_dequant
0000000000564600 0000000000000178 t silk_NLSF_decode
0000000000564780 0000000000000028 t silk_PLC_Reset
00000000005647b0 0000000000000aa4 t silk_PLC
0000000000565260 00000000000001f0 t silk_PLC_glue_frames
0000000000565450 0000000000000420 t silk_shell_decoder
0000000000565870 00000000000000a0 t silk_NLSF_unpack
0000000000565910 0000000000000074 t silk_bwexpander
0000000000565990 000000000000012c t silk_decode_pitch
0000000000565ac0 000000000000006c t silk_log2lin
0000000000565b30 0000000000000174 t silk_LPC_analysis_filter
0000000000565cb0 000000000000036c t silk_NLSF2A
0000000000566020 00000000000002e8 t silk_NLSF_stabilize
0000000000566310 0000000000000054 t silk_resampler_private_AR2
0000000000566370 0000000000000084 t silk_insertion_sort_increasing_all_values_int16
0000000000566400 0000000000000128 t silk_sum_sqr_shift
0000000000566530 0000000000000220 t silk_LPC_fit
0000000000566750 0000000000000640 t silk_LPC_inverse_pred_gain_neon
0000000000566d90 000000000000004c t silk_CNG_Reset
0000000000566de0 00000000000006b4 t silk_CNG
00000000005674a0 0000000000000108 t silk_decode_signs
00000000005675b0 0000000000000990 t silk_decode_core
0000000000567f40 0000000000000060 t silk_bwexpander_32
0000000000567fa0 00000000000003b4 t silk_LPC_inverse_pred_gain_c
0000000000568360 000000000000000c T lrintf
0000000000568370 00000000000000d8 T jpeg_CreateCompress
0000000000568450 0000000000000004 T jpeg_destroy_compress
0000000000568460 0000000000000094 T jpeg_suppress_tables
0000000000568500 0000000000000180 T jpeg_finish_compress
0000000000568680 00000000000000a4 T jpeg_start_compress
0000000000568730 00000000000000f0 T jpeg_write_scanlines
0000000000568820 00000000000000dc T jinit_compress_master
0000000000568900 0000000000000054 t start_pass_main
0000000000568960 0000000000000134 t process_data_simple_main
0000000000568aa0 00000000000000d0 T jinit_c_main_controller
0000000000568b70 0000000000000074 t write_marker_byte
0000000000568bf0 00000000000000c8 t write_file_trailer
0000000000568cc0 00000000000001a4 t write_marker_header
0000000000568e70 00000000000004d0 t emit_sof
0000000000569340 00000000000003a4 t emit_dqt
00000000005696f0 0000000000000188 t write_frame_header
0000000000569880 0000000000000324 t emit_dht
0000000000569bb0 0000000000000200 t write_tables_only
0000000000569db0 0000000000000bd4 t write_scan_header
000000000056a990 0000000000000ba0 t write_file_header
000000000056b530 0000000000000080 T jinit_marker_writer
000000000056b5b0 00000000000006dc t validate_script
000000000056bc90 0000000000000040 t pass_startup
000000000056bcd0 00000000000000c4 t finish_pass_master
000000000056bda0 0000000000000258 t per_scan_setup
000000000056c000 0000000000000144 t select_scan_parameters
000000000056c150 00000000000001f8 t prepare_for_pass
000000000056c350 000000000000039c T jinit_c_master_control
000000000056c6f0 000000000000005c T jpeg_abort
000000000056c750 0000000000000034 T jpeg_destroy
000000000056c790 0000000000000028 T jpeg_alloc_quant_table
000000000056c7c0 0000000000000028 T jpeg_alloc_huff_table
000000000056c7f0 00000000000000d0 t add_huff_table.part.0
000000000056c8c0 00000000000000fc T jpeg_add_quant_table
000000000056c9c0 000000000000005c T jpeg_set_linear_quality
000000000056ca20 0000000000000040 T jpeg_quality_scaling
000000000056ca60 0000000000000034 T jpeg_set_quality
000000000056caa0 000000000000029c T jpeg_set_colorspace
000000000056cd40 0000000000000068 T jpeg_default_colorspace
000000000056cdb0 0000000000000198 T jpeg_set_defaults
000000000056cf50 000000000000006c t encode_mcu_AC_first_prepare
000000000056cfc0 000000000000009c t encode_mcu_AC_refine_prepare
000000000056d060 00000000000001fc t start_pass_phuff
000000000056d260 0000000000000144 t emit_bits.constprop.0
000000000056d3b0 0000000000000170 t emit_bits
000000000056d520 0000000000000244 t emit_eobrun
000000000056d770 0000000000000058 t finish_pass_phuff
000000000056d7d0 0000000000000228 t finish_pass_gather_phuff
000000000056da00 0000000000000134 t emit_restart
000000000056db40 000000000000021c t encode_mcu_DC_refine
000000000056dd60 0000000000000478 t encode_mcu_AC_refine
000000000056e1e0 0000000000000338 t encode_mcu_AC_first
000000000056e520 00000000000001b8 t encode_mcu_DC_first
000000000056e6e0 0000000000000054 T jinit_phuff_encoder
000000000056e740 0000000000000050 t start_pass_prep
000000000056e790 000000000000027c t pre_process_data
000000000056ea10 0000000000000284 t pre_process_context
000000000056eca0 0000000000000338 T jinit_c_prep_controller
000000000056efe0 0000000000000004 t start_pass_downsample
000000000056eff0 000000000000009c t sep_downsample
000000000056f090 000000000000032c t int_downsample
000000000056f3c0 00000000000000f0 t h2v1_downsample
000000000056f4b0 0000000000000110 t h2v2_downsample
000000000056f5c0 00000000000005cc t h2v2_smooth_downsample
000000000056fb90 00000000000001e4 t fullsize_smooth_downsample
000000000056fd80 00000000000000a4 t fullsize_downsample
000000000056fe30 0000000000000274 T jinit_downsampler
00000000005700b0 0000000000000118 T jpeg_CreateDecompress
00000000005701d0 0000000000000004 T jpeg_destroy_decompress
00000000005701e0 0000000000000284 T jpeg_consume_input
0000000000570470 0000000000000090 T jpeg_read_header
0000000000570500 00000000000000ec T jpeg_finish_decompress
00000000005705f0 0000000000000158 t output_pass_setup
0000000000570750 000000000000010c T jpeg_start_decompress
0000000000570860 00000000000000dc T jpeg_read_scanlines
0000000000570940 0000000000000014 t finish_input_pass
0000000000570960 0000000000000058 t reset_input_controller
00000000005709c0 000000000000048c t start_input_pass
0000000000570e50 000000000000036c t consume_markers
00000000005711c0 0000000000000068 T jinit_input_controller
0000000000571230 00000000000003cc t get_sof
0000000000571600 0000000000000250 t examine_app0
0000000000571850 0000000000000128 t skip_variable
0000000000571980 0000000000000134 t next_marker
0000000000571ac0 0000000000000020 t reset_marker_reader
0000000000571ae0 00000000000003bc t get_dht
0000000000571ea0 0000000000000c50 t read_markers
0000000000572af0 00000000000000dc t examine_app14
0000000000572bd0 00000000000001c8 t get_interesting_appn
0000000000572da0 00000000000000bc t read_restart_marker
0000000000572e60 000000000000015c T jpeg_resync_to_restart
0000000000572fc0 00000000000000bc T jinit_marker_reader
0000000000573080 00000000000001bc t prepare_for_output_pass
0000000000573240 000000000000003c t finish_output_pass
0000000000573280 00000000000000f4 t use_merged_upsample.part.0
0000000000573380 00000000000004f4 T jpeg_calc_output_dimensions
0000000000573880 00000000000003e0 T jinit_master_decompress
0000000000573c60 0000000000000014 t start_pass_merged_upsample
0000000000573c80 0000000000000050 t merged_1v_upsample
0000000000573cd0 00000000000007bc t h2v1_merged_upsample
0000000000574490 0000000000000c58 t h2v2_merged_upsample
00000000005750f0 000000000000017c t h2v1_merged_upsample_565
0000000000575270 00000000000001d8 t h2v1_merged_upsample_565D
0000000000575450 0000000000000254 t h2v2_merged_upsample_565
00000000005756b0 0000000000000318 t h2v2_merged_upsample_565D
00000000005759d0 000000000000011c t merged_2v_upsample
0000000000575af0 0000000000000244 T jinit_merged_upsampler
0000000000575d40 00000000000003e8 t start_pass_phuff_decoder
0000000000576130 0000000000000534 t decode_mcu_AC_refine
0000000000576670 0000000000000188 t decode_mcu_DC_refine
0000000000576800 0000000000000330 t decode_mcu_AC_first
0000000000576b30 000000000000033c t decode_mcu_DC_first
0000000000576e70 00000000000000b8 T jinit_phuff_decoder
0000000000576f30 000000000000011c t start_pass_dpost
0000000000577050 000000000000008c t post_process_1pass
00000000005770e0 00000000000000f8 t post_process_prepass
00000000005771e0 00000000000000e8 t post_process_2pass
00000000005772d0 00000000000000d0 T jinit_d_post_controller
00000000005773a0 0000000000000014 t start_pass_upsample
00000000005773c0 000000000000014c t sep_upsample
0000000000577510 0000000000000008 t fullsize_upsample
0000000000577520 0000000000000008 t noop_upsample
0000000000577530 00000000000001c8 t h2v1_upsample
0000000000577700 00000000000003d4 t h2v1_fancy_upsample
0000000000577ae0 00000000000000ac t h1v2_fancy_upsample
0000000000577b90 0000000000000144 t h2v2_fancy_upsample
0000000000577ce0 0000000000000118 t int_upsample
0000000000577e00 0000000000000214 t h2v2_upsample
0000000000578020 0000000000000334 T jinit_upsampler
0000000000578360 0000000000000070 t emit_message
00000000005783d0 0000000000000010 t reset_error_mgr
00000000005783e0 00000000000000cc t format_message
00000000005784b0 0000000000000044 t output_message
0000000000578500 000000000000002c t error_exit
0000000000578530 0000000000000058 T jpeg_std_error
0000000000578590 00000000000001d8 t create_colorindex
0000000000578770 0000000000000098 t color_quantize
0000000000578810 0000000000000078 t color_quantize3
0000000000578890 00000000000000e0 t quantize3_ord_dither
0000000000578970 0000000000000004 t finish_pass_1_quant
0000000000578980 0000000000000018 t new_color_map_1_quant
00000000005789a0 0000000000000680 t start_pass_1_quant
0000000000579020 000000000000023c t quantize_fs_dither
0000000000579260 0000000000000180 t quantize_ord_dither
00000000005793e0 0000000000000520 T jinit_1pass_quantizer
0000000000579900 00000000000000a4 t prescan_quantize
00000000005799b0 00000000000009a8 t fill_inverse_cmap
000000000057a360 000000000000011c t pass2_no_dither
000000000057a480 0000000000000354 t pass2_fs_dither
000000000057a7e0 0000000000000114 t init_error_limit
000000000057a900 0000000000000004 t finish_pass2
000000000057a910 0000000000000010 t new_color_map_2_quant
000000000057a920 0000000000000160 t start_pass_2_quant
000000000057aa80 00000000000005f8 t update_box.isra.0
000000000057b080 00000000000003e0 t finish_pass1
000000000057b460 00000000000001b8 T jinit_2pass_quantizer
000000000057b620 0000000000000010 T jdiv_round_up
000000000057b630 0000000000000018 T jround_up
000000000057b650 0000000000000060 T jcopy_sample_rows
000000000057b6b0 0000000000000014 T jcopy_block_row
000000000057b6d0 000000000000000c T jzero_far
000000000057b6e0 00000000000001d0 t alloc_small
000000000057b8b0 0000000000000098 t request_virt_barray
000000000057b950 0000000000000098 t request_virt_sarray
000000000057b9f0 0000000000000158 t free_pool
000000000057bb50 0000000000000048 t self_destruct
000000000057bba0 0000000000000158 t alloc_large
000000000057bd00 00000000000000e4 t alloc_barray
000000000057bdf0 000000000000011c t alloc_sarray
000000000057bf10 0000000000000274 t realize_virt_arrays
000000000057c190 00000000000003bc t access_virt_sarray
000000000057c550 00000000000003c4 t access_virt_barray
000000000057c920 0000000000000170 T jinit_memory_mgr
000000000057ca90 0000000000000008 T jpeg_get_small
000000000057caa0 0000000000000008 T jpeg_free_small
000000000057cab0 0000000000000008 T jpeg_get_large
000000000057cac0 0000000000000008 T jpeg_free_large
000000000057cad0 0000000000000020 T jpeg_mem_available
000000000057caf0 0000000000000018 T jpeg_open_backing_store
000000000057cb10 0000000000000008 T jpeg_mem_init
000000000057cb20 0000000000000004 T jpeg_mem_term
000000000057cb30 0000000000000228 t start_pass
000000000057cd60 000000000000046c t arith_encode
000000000057d1d0 000000000000046c t arith_encode.constprop.0
000000000057d640 000000000000046c t arith_encode.constprop.1
000000000057dab0 000000000000059c t finish_pass
000000000057e050 0000000000000198 t emit_restart
000000000057e1f0 000000000000047c t encode_mcu
000000000057e670 0000000000000288 t encode_mcu_AC_refine
000000000057e900 00000000000000b4 t encode_mcu_DC_refine
000000000057e9c0 00000000000002dc t encode_mcu_AC_first
000000000057eca0 000000000000025c t encode_mcu_DC_first
000000000057ef00 000000000000007c T jinit_arith_encoder
000000000057ef80 00000000000003ec t start_pass
000000000057f370 0000000000000108 t process_restart
000000000057f480 0000000000000280 t arith_decode
000000000057f700 00000000000003c0 t decode_mcu
000000000057fac0 0000000000000214 t decode_mcu_AC_refine
000000000057fce0 00000000000000d4 t decode_mcu_DC_refine
000000000057fdc0 0000000000000278 t decode_mcu_AC_first
0000000000580040 0000000000000294 t decode_mcu_DC_first
00000000005802e0 00000000000000e8 T jinit_arith_decoder
00000000005803d0 000000000000016c t init_simd.part.0
0000000000580540 0000000000000044 T jsimd_can_rgb_ycc
0000000000580590 0000000000000044 T jsimd_can_rgb_gray
00000000005805e0 0000000000000044 T jsimd_can_ycc_rgb
0000000000580630 0000000000000044 T jsimd_can_ycc_rgb565
0000000000580680 00000000000000f4 T jsimd_rgb_ycc_convert
0000000000580780 00000000000000e4 T jsimd_rgb_gray_convert
0000000000580870 00000000000000f4 T jsimd_ycc_rgb_convert
0000000000580970 0000000000000008 T jsimd_ycc_rgb565_convert
0000000000580980 0000000000000044 T jsimd_can_h2v2_downsample
00000000005809d0 0000000000000044 T jsimd_can_h2v1_downsample
0000000000580a20 0000000000000020 T jsimd_h2v2_downsample
0000000000580a40 0000000000000020 T jsimd_h2v1_downsample
0000000000580a60 0000000000000044 T jsimd_can_h2v2_upsample
0000000000580ab0 0000000000000044 T jsimd_can_h2v1_upsample
0000000000580b00 000000000000000c T jsimd_h2v2_upsample
0000000000580b10 000000000000000c T jsimd_h2v1_upsample
0000000000580b20 0000000000000044 T jsimd_can_h2v2_fancy_upsample
0000000000580b70 0000000000000044 T jsimd_can_h2v1_fancy_upsample
0000000000580bc0 0000000000000044 T jsimd_can_h1v2_fancy_upsample
0000000000580c10 000000000000000c T jsimd_h2v2_fancy_upsample
0000000000580c20 000000000000000c T jsimd_h2v1_fancy_upsample
0000000000580c30 000000000000000c T jsimd_h1v2_fancy_upsample
0000000000580c40 0000000000000044 T jsimd_can_h2v2_merged_upsample
0000000000580c90 0000000000000044 T jsimd_can_h2v1_merged_upsample
0000000000580ce0 00000000000000e4 T jsimd_h2v2_merged_upsample
0000000000580dd0 00000000000000e4 T jsimd_h2v1_merged_upsample
0000000000580ec0 0000000000000044 T jsimd_can_convsamp
0000000000580f10 0000000000000008 T jsimd_can_convsamp_float
0000000000580f20 0000000000000004 T jsimd_convsamp
0000000000580f30 0000000000000004 T jsimd_convsamp_float
0000000000580f40 0000000000000044 T jsimd_can_fdct_islow
0000000000580f90 0000000000000044 T jsimd_can_fdct_ifast
0000000000580fe0 0000000000000008 T jsimd_can_fdct_float
0000000000580ff0 0000000000000004 T jsimd_fdct_islow
0000000000581000 0000000000000004 T jsimd_fdct_ifast
0000000000581010 0000000000000004 T jsimd_fdct_float
0000000000581020 0000000000000044 T jsimd_can_quantize
0000000000581070 0000000000000008 T jsimd_can_quantize_float
0000000000581080 0000000000000004 T jsimd_quantize
0000000000581090 0000000000000004 T jsimd_quantize_float
00000000005810a0 0000000000000044 T jsimd_can_idct_2x2
00000000005810f0 0000000000000044 T jsimd_can_idct_4x4
0000000000581140 0000000000000014 T jsimd_idct_2x2
0000000000581160 0000000000000014 T jsimd_idct_4x4
0000000000581180 0000000000000044 T jsimd_can_idct_islow
00000000005811d0 0000000000000044 T jsimd_can_idct_ifast
0000000000581220 0000000000000008 T jsimd_can_idct_float
0000000000581230 0000000000000014 T jsimd_idct_islow
0000000000581250 0000000000000014 T jsimd_idct_ifast
0000000000581270 0000000000000004 T jsimd_idct_float
0000000000581280 000000000000004c T jsimd_can_huff_encode_one_block
00000000005812d0 0000000000000014 T jsimd_huff_encode_one_block
00000000005812f0 0000000000000044 T jsimd_can_encode_mcu_AC_first_prepare
0000000000581340 0000000000000004 T jsimd_encode_mcu_AC_first_prepare
0000000000581350 0000000000000044 T jsimd_can_encode_mcu_AC_refine_prepare
00000000005813a0 0000000000000004 T jsimd_encode_mcu_AC_refine_prepare
00000000005813b0 0000000000000130 t start_pass_coef
00000000005814e0 0000000000000298 t compress_output
0000000000581780 0000000000000294 t compress_first_pass
0000000000581a20 0000000000000510 t compress_data
0000000000581f30 0000000000000134 T jinit_c_coef_controller
0000000000582070 00000000000000d0 t rgb_ycc_start
0000000000582140 0000000000000608 t rgb_ycc_convert
0000000000582750 00000000000003a8 t rgb_gray_convert
0000000000582b00 000000000000148c t rgb_rgb_convert
0000000000583f90 0000000000000108 t cmyk_ycck_convert
00000000005840a0 00000000000005c0 t grayscale_convert
0000000000584660 0000000000000afc t null_convert
0000000000585160 0000000000000004 t null_method
0000000000585170 00000000000003ac T jinit_color_converter
0000000000585520 0000000000000338 t convsamp
0000000000585860 000000000000014c t quantize
00000000005859b0 00000000000000ac t forward_DCT
0000000000585a60 0000000000000438 t convsamp_float
0000000000585ea0 0000000000000188 t quantize_float
0000000000586030 00000000000000ac t forward_DCT_float
00000000005860e0 0000000000000130 t compute_reciprocal
0000000000586210 0000000000000388 t start_pass_fdctmgr
00000000005865a0 0000000000000244 T jinit_forward_dct
00000000005867f0 0000000000000244 t encode_mcu_gather
0000000000586a40 00000000000001bc t flush_bits
0000000000586c00 0000000000000088 t finish_pass_huff
0000000000586c90 000000000000f1ec t encode_mcu_huff
0000000000595e80 00000000000002c8 T jpeg_make_c_derived_tbl
0000000000596150 00000000000001d0 t start_pass_huff
0000000000596320 00000000000003c8 T jpeg_gen_optimal_table
00000000005966f0 0000000000000100 t finish_pass_gather
00000000005967f0 0000000000000058 T jinit_huff_encoder
0000000000596850 0000000000000054 t start_input_pass
00000000005968b0 0000000000000008 t dummy_consume_data
00000000005968c0 00000000000002b4 t consume_data
0000000000596b80 0000000000000278 t decompress_data
0000000000596e00 00000000000002f0 t start_output_pass
00000000005970f0 0000000000000360 t decompress_onepass
0000000000597450 0000000000001e74 t decompress_smooth_data
00000000005992d0 0000000000000198 T jinit_d_coef_controller
0000000000599470 0000000000000118 t build_ycc_rgb_table
0000000000599590 00000000000004e0 t ycc_rgb_convert
0000000000599a70 0000000000000090 t rgb_gray_convert
0000000000599b00 0000000000000694 t null_convert
000000000059a1a0 0000000000001384 t gray_rgb_convert
000000000059b530 0000000000001744 t rgb_rgb_convert
000000000059cc80 00000000000000e0 t ycck_cmyk_convert
000000000059cd60 0000000000000244 t ycc_rgb565_convert
000000000059cfb0 00000000000002c0 t ycc_rgb565D_convert
000000000059d270 000000000000068c t rgb_rgb565_convert
000000000059d900 00000000000001fc t rgb_rgb565D_convert
000000000059db00 00000000000002d8 t gray_rgb565_convert
000000000059dde0 000000000000013c t gray_rgb565D_convert
000000000059df20 0000000000000004 t start_pass_dcolor
000000000059df30 0000000000000018 t grayscale_convert
000000000059df50 00000000000003f0 T jinit_color_deconverter
000000000059e340 00000000000006a4 t start_pass
000000000059e9f0 00000000000000c4 T jinit_inverse_dct
000000000059eac0 00000000000000d0 t add_huff_table.part.0
000000000059eb90 00000000000006d0 T jpeg_make_d_derived_tbl
000000000059f260 000000000000044c t start_pass_huff_decoder
000000000059f6b0 0000000000000150 T jpeg_fill_bit_buffer
000000000059f800 000000000000016c T jpeg_huff_decode
000000000059f970 000000000000128c t decode_mcu
00000000005a0c00 0000000000000130 T jinit_huff_decoder
00000000005a0d30 00000000000000a8 t process_data_simple_main
00000000005a0de0 0000000000000334 t process_data_context_main
00000000005a1120 0000000000000028 t process_data_crank_post
00000000005a1150 000000000000030c t start_pass_main
00000000005a1460 00000000000001d0 T jinit_d_main_controller
00000000005a1630 0000000000000438 T jpeg_fdct_float
00000000005a1a70 00000000000002f0 T jpeg_fdct_ifast
00000000005a1d60 0000000000000338 T jpeg_fdct_islow
00000000005a20a0 000000000000033c T jpeg_idct_float
00000000005a23e0 0000000000000408 T jpeg_idct_ifast
00000000005a27f0 0000000000000430 T jpeg_idct_islow
00000000005a2c20 0000000000000a20 T jpeg_idct_7x7
00000000005a3640 00000000000004a0 T jpeg_idct_6x6
00000000005a3ae0 0000000000000624 T jpeg_idct_5x5
00000000005a4110 00000000000001f0 T jpeg_idct_3x3
00000000005a4300 0000000000000a44 T jpeg_idct_9x9
00000000005a4d50 0000000000000aa4 T jpeg_idct_10x10
00000000005a5800 00000000000004b8 T jpeg_idct_11x11
00000000005a5cc0 0000000000000db8 T jpeg_idct_12x12
00000000005a6a80 00000000000005cc T jpeg_idct_13x13
00000000005a7050 0000000000000fdc T jpeg_idct_14x14
00000000005a8030 0000000000000558 T jpeg_idct_15x15
00000000005a8590 0000000000000620 T jpeg_idct_16x16
00000000005a8bb0 00000000000002b0 T jpeg_idct_4x4
00000000005a8e60 0000000000000224 T jpeg_idct_2x2
00000000005a9090 0000000000000030 T jpeg_idct_1x1
00000000005a90c0 00000000000001bc T jsimd_rgb_gray_convert_neon
00000000005a90c0 00000000000001bc t jsimd_rgb_gray_convert_neon.localalias
00000000005a9280 0000000000000004 T jsimd_extrgb_gray_convert_neon
00000000005a9290 00000000000001bc T jsimd_extrgbx_gray_convert_neon
00000000005a9450 00000000000001bc T jsimd_extbgr_gray_convert_neon
00000000005a9610 00000000000001bc T jsimd_extbgrx_gray_convert_neon
00000000005a97d0 00000000000001bc T jsimd_extxbgr_gray_convert_neon
00000000005a9990 00000000000001bc T jsimd_extxrgb_gray_convert_neon
00000000005a9b50 000000000000052c T jsimd_encode_mcu_AC_first_prepare_neon
00000000005aa080 00000000000006b4 T jsimd_encode_mcu_AC_refine_prepare_neon
00000000005aa740 0000000000000090 T jsimd_h2v1_downsample_neon
00000000005aa7d0 00000000000000b4 T jsimd_h2v2_downsample_neon
00000000005aa890 0000000000000418 T jsimd_h2v1_merged_upsample_neon
00000000005aa890 0000000000000418 t jsimd_h2v1_merged_upsample_neon.localalias
00000000005aacb0 0000000000000678 T jsimd_h2v2_merged_upsample_neon
00000000005aacb0 0000000000000678 t jsimd_h2v2_merged_upsample_neon.localalias
00000000005ab330 0000000000000004 T jsimd_h2v1_extrgb_merged_upsample_neon
00000000005ab340 0000000000000004 T jsimd_h2v2_extrgb_merged_upsample_neon
00000000005ab350 00000000000004a0 T jsimd_h2v1_extrgbx_merged_upsample_neon
00000000005ab7f0 0000000000000730 T jsimd_h2v2_extrgbx_merged_upsample_neon
00000000005abf20 0000000000000418 T jsimd_h2v1_extbgr_merged_upsample_neon
00000000005ac340 0000000000000678 T jsimd_h2v2_extbgr_merged_upsample_neon
00000000005ac9c0 00000000000004a0 T jsimd_h2v1_extbgrx_merged_upsample_neon
00000000005ace60 0000000000000740 T jsimd_h2v2_extbgrx_merged_upsample_neon
00000000005ad5a0 0000000000000494 T jsimd_h2v1_extxbgr_merged_upsample_neon
00000000005ada40 0000000000000750 T jsimd_h2v2_extxbgr_merged_upsample_neon
00000000005ae190 0000000000000494 T jsimd_h2v1_extxrgb_merged_upsample_neon
00000000005ae630 0000000000000750 T jsimd_h2v2_extxrgb_merged_upsample_neon
00000000005aed80 0000000000000154 T jsimd_h2v1_fancy_upsample_neon
00000000005aeee0 00000000000002d8 T jsimd_h2v2_fancy_upsample_neon
00000000005af1c0 00000000000000b8 T jsimd_h1v2_fancy_upsample_neon
00000000005af280 000000000000005c T jsimd_h2v1_upsample_neon
00000000005af2e0 0000000000000078 T jsimd_h2v2_upsample_neon
00000000005af360 00000000000001c8 T jsimd_fdct_ifast_neon
00000000005af530 0000000000000110 T jsimd_idct_2x2_neon
00000000005af640 00000000000003bc T jsimd_idct_4x4_neon
00000000005afa00 0000000000000068 T jsimd_convsamp_neon
00000000005afa70 00000000000001e4 T jsimd_quantize_neon
00000000005afc60 0000000000000578 T jsimd_idct_ifast_neon
00000000005b01e0 t jsimd_idct_islow_neon
00000000005b08bc T jsimd_ycc_extrgb_convert_neon
00000000005b0b24 T jsimd_ycc_extbgr_convert_neon
00000000005b0d8c T jsimd_ycc_extrgbx_convert_neon
00000000005b0ff4 T jsimd_ycc_extbgrx_convert_neon
00000000005b125c T jsimd_ycc_extxbgr_convert_neon
00000000005b14c4 T jsimd_ycc_extxrgb_convert_neon
00000000005b172c t jsimd_ycc_rgb565_convert_neon
00000000005b19a0 T jsimd_ycc_extrgb_convert_neon_slowst3
00000000005b1cc0 T jsimd_ycc_extbgr_convert_neon_slowst3
00000000005b1fe0 T jsimd_extrgb_ycc_convert_neon
00000000005b22a4 T jsimd_extbgr_ycc_convert_neon
00000000005b2568 T jsimd_extrgbx_ycc_convert_neon
00000000005b282c T jsimd_extbgrx_ycc_convert_neon
00000000005b2af0 T jsimd_extxbgr_ycc_convert_neon
00000000005b2db4 T jsimd_extxrgb_ycc_convert_neon
00000000005b3078 T jsimd_extrgb_ycc_convert_neon_slowld3
00000000005b33f4 T jsimd_extbgr_ycc_convert_neon_slowld3
00000000005b3770 t jsimd_fdct_islow_neon
00000000005b3af4 t jsimd_huff_encode_one_block_neon
00000000005b42cc t jsimd_huff_encode_one_block_neon_slowtbl
00000000005b4c60 0000000000000488 t ParseHeadersInternal
00000000005b50f0 0000000000000070 t WebPParseHeaders
00000000005b5160 00000000000001e8 t DecodeInto
00000000005b5350 00000000000000b0 T WebPDecodeRGBInto
00000000005b5400 00000000000000b0 T WebPDecodeRGBAInto
00000000005b54b0 0000000000000040 T WebPGetFeaturesInternal
00000000005b54f0 00000000000001a0 t WebPIoInitFromOptions
00000000005b5690 00000000000000ec t WebPRescalerInit
00000000005b5780 0000000000000060 t WebPRescalerGetScaledDimensions
00000000005b57e0 0000000000000020 t WebPRescaleNeededLines
00000000005b5800 0000000000000104 t WebPRescalerImport
00000000005b5910 000000000000006c t WebPRescalerExport
00000000005b5980 0000000000000160 t CheckDecBuffer
00000000005b5ae0 00000000000000c0 t WebPFlipBuffer
00000000005b5ba0 0000000000000250 t WebPAllocateDecBuffer
00000000005b5df0 000000000000003c T WebPInitDecBufferInternal
00000000005b5e30 000000000000004c T WebPFreeDecBuffer
00000000005b5e80 0000000000000090 t Dither8x8
00000000005b5f10 00000000000005b4 t ReconstructRow
00000000005b64d0 00000000000006f8 t FinishRow
00000000005b6bd0 0000000000000100 t VP8InitDithering
00000000005b6cd0 000000000000015c t VP8ProcessRow
00000000005b6e30 0000000000000248 t VP8EnterCritical
00000000005b7080 0000000000000068 t VP8ExitCritical
00000000005b70f0 0000000000000024 t VP8GetThreadMethod
00000000005b7120 00000000000003b0 t VP8InitFrame
00000000005b74d0 0000000000000084 t GetAlphaSourceRow
00000000005b7560 00000000000000f8 t EmitAlphaRGB
00000000005b7660 00000000000000f8 t EmitAlphaRGBA4444
00000000005b7760 0000000000000078 t CustomPut
00000000005b77e0 0000000000000028 t CustomTeardown
00000000005b7810 0000000000000160 t EmitYUV
00000000005b7970 00000000000001fc t EmitFancyRGB
00000000005b7b70 00000000000000e8 t EmitAlphaYUV
00000000005b7c60 000000000000006c t EmitSampledRGB
00000000005b7cd0 0000000000000594 t CustomSetup
00000000005b8270 0000000000000178 t ExportAlpha
00000000005b83f0 0000000000000164 t ExportAlphaRGBA4444
00000000005b8560 00000000000000b0 t EmitRescaledAlphaRGB
00000000005b8610 00000000000001e0 t EmitRescaledRGB
00000000005b87f0 0000000000000174 t EmitRescaledAlphaYUV
00000000005b8970 0000000000000170 t EmitRescaledYUV
00000000005b8ae0 0000000000000024 t WebPInitCustomIo
00000000005b8b10 0000000000000058 t VP8Clear.part.0
00000000005b8b70 000000000000072c t GetLargeValue
00000000005b92a0 000000000000046c t GetCoeffsAlt
00000000005b9710 0000000000000398 t GetCoeffsFast
00000000005b9ab0 0000000000000038 t VP8InitIoInternal
00000000005b9af0 00000000000000b0 t VP8New
00000000005b9ba0 000000000000002c t VP8Delete
00000000005b9bd0 0000000000000018 t VP8SetError
00000000005b9bf0 0000000000000040 T VP8CheckSignature
00000000005b9c30 000000000000063c t VP8GetHeaders.part.0.constprop.0
00000000005ba270 00000000000000bc T VP8GetInfo
00000000005ba330 0000000000000038 t VP8GetHeaders
00000000005ba370 0000000000000480 t VP8DecodeMB
00000000005ba7f0 0000000000000018 t VP8InitScanline
00000000005ba810 0000000000000234 t VP8Decode
00000000005baa50 00000000000000d8 t ConvertToYUVA
00000000005bab30 00000000000000bc t ApplyInverseTransforms
00000000005babf0 0000000000000400 t ProcessRows
00000000005baff0 000000000000014c t ExtractPalettedAlphaRows
00000000005bb140 0000000000000098 t ReadImageInfo.part.0
00000000005bb1e0 0000000000000164 t ExtractAlphaRows
00000000005bb350 00000000000000b8 t VP8LClear.part.0
00000000005bb410 0000000000000b04 t DecodeImageData
00000000005bbf20 0000000000000490 t DecodeImageStream
00000000005bc3b0 0000000000000940 t ReadHuffmanCodes
00000000005bccf0 0000000000000034 T VP8LCheckSignature
00000000005bcd30 00000000000000c8 T VP8LGetInfo
00000000005bce00 000000000000003c t VP8LNew
00000000005bce40 000000000000002c t VP8LDelete
00000000005bce70 00000000000001b8 t VP8LDecodeAlphaHeader
00000000005bd030 0000000000000608 t VP8LDecodeAlphaImageStream
00000000005bd640 00000000000000e4 t VP8LDecodeHeader
00000000005bd730 00000000000001fc t VP8LDecodeImage
00000000005bd930 00000000000000ac T WebPMultARGBRow_C
00000000005bd9e0 000000000000006c T WebPMultRow_C
00000000005bda50 0000000000000030 t HasAlpha8b_C
00000000005bda80 0000000000000040 t HasAlpha32b_C
00000000005bdac0 000000000000004c t PackRGB_C
00000000005bdb10 00000000000000b8 t ApplyAlphaMultiply_16b_C
00000000005bdbd0 0000000000000080 t WebPMultARGBRows
00000000005bdc50 0000000000000094 t WebPMultRows
00000000005bdcf0 00000000000000c8 t WebPInitAlphaProcessing
00000000005bddc0 000000000000000c t armCPUInfo
00000000005bddd0 000000000000004c t TransformUV_C
00000000005bde20 0000000000000094 t TransformDCUV_C
00000000005bdec0 000000000000007c t HE4_C
00000000005bdf40 00000000000000f4 t VR4_C
00000000005be040 00000000000000f4 t VL4_C
00000000005be140 00000000000000a4 t HU4_C
00000000005be1f0 00000000000000f4 t HD4_C
00000000005be2f0 000000000000005c t DitherCombine8x8_C
00000000005be350 00000000000000dc t VP8DspInit
00000000005be430 0000000000000004 t VP8InitClipTables
00000000005be440 00000000000000a8 t GradientUnfilter_C
00000000005be4f0 0000000000000088 t VP8FiltersInit
00000000005be580 0000000000000008 t Predictor0_C
00000000005be590 0000000000000004 t Predictor1_C
00000000005be5a0 0000000000000008 t Predictor2_C
00000000005be5b0 0000000000000008 t Predictor3_C
00000000005be5c0 0000000000000008 t Predictor4_C
00000000005be5d0 0000000000000030 t Predictor5_C
00000000005be600 000000000000001c t Predictor6_C
00000000005be620 000000000000001c t Predictor7_C
00000000005be640 000000000000001c t Predictor8_C
00000000005be660 000000000000001c t Predictor9_C
00000000005be680 0000000000000048 t Predictor10_C
00000000005be6d0 0000000000000098 t Predictor11_C
00000000005be770 0000000000000098 t Predictor12_C
00000000005be810 00000000000000b8 t Predictor13_C
00000000005be8d0 0000000000000038 t PredictorAdd0_C
00000000005be910 000000000000004c t PredictorAdd1_C
00000000005be960 0000000000000050 t PredictorAdd2_C
00000000005be9b0 0000000000000050 t PredictorAdd3_C
00000000005bea00 0000000000000050 t PredictorAdd4_C
00000000005bea50 0000000000000070 t PredictorAdd6_C
00000000005beac0 0000000000000068 t PredictorAdd7_C
00000000005beb30 0000000000000068 t PredictorAdd8_C
00000000005beba0 0000000000000068 t PredictorAdd9_C
00000000005bec10 000000000000005c t MapARGB_C
00000000005bec70 0000000000000054 t MapAlpha_C
00000000005becd0 0000000000000040 T VP8LConvertBGRAToRGBA4444_C
00000000005bed10 0000000000000048 T VP8LConvertBGRAToRGB565_C
00000000005bed60 00000000000000c0 t ColorIndexInverseTransform_C.isra.0
00000000005bee20 00000000000000a0 t PredictorAdd10_C
00000000005beec0 0000000000000088 t PredictorAdd5_C
00000000005bef50 0000000000000100 t PredictorAdd11_C
00000000005bf050 00000000000000f0 t PredictorAdd12_C
00000000005bf140 000000000000010c t PredictorAdd13_C
00000000005bf250 0000000000000044 t VP8LAddGreenToBlueAndRed_C
00000000005bf2a0 000000000000006c t VP8LTransformColorInverse_C
00000000005bf310 00000000000000c0 t VP8LColorIndexInverseTransformAlpha
00000000005bf3d0 00000000000004ec t VP8LInverseTransform
00000000005bf8c0 0000000000000038 t VP8LConvertBGRAToRGB_C
00000000005bf900 0000000000000040 t VP8LConvertBGRAToRGBA_C
00000000005bf940 0000000000000038 t VP8LConvertBGRAToBGR_C
00000000005bf980 0000000000000240 t VP8LConvertFromBGRA
00000000005bfbc0 0000000000000238 t VP8LDspInit
00000000005bfe00 00000000000000c0 T WebPRescalerImportRowExpand_C
00000000005bfec0 00000000000000cc T WebPRescalerImportRowShrink_C
00000000005bff90 0000000000000028 t WebPRescalerImportRow
00000000005bffc0 00000000000000d8 t WebPRescalerExportRow
00000000005c00a0 0000000000000088 t WebPRescalerDspInit
00000000005c0130 000000000000013c T WebPYuv444ToRgb565_C
00000000005c0270 00000000000000d8 T WebPYuv444ToBgr_C
00000000005c0350 00000000000000d8 T WebPYuv444ToRgb_C
00000000005c0430 00000000000000ec T WebPYuv444ToBgra_C
00000000005c0520 00000000000000ec T WebPYuv444ToRgba_C
00000000005c0610 00000000000000ec T WebPYuv444ToArgb_C
00000000005c0700 0000000000000150 T WebPYuv444ToRgba4444_C
00000000005c0850 00000000000000b4 t WebPInitYUV444Converters
00000000005c0910 0000000000000068 t WebPInitUpsamplers
00000000005c0980 0000000000000050 t ConvertARGBToY_C
00000000005c09d0 0000000000000054 t ConvertRGB24ToY_C
00000000005c0a30 0000000000000050 t ConvertBGR24ToY_C
00000000005c0a80 00000000000000a8 T WebPConvertRGBA32ToUV_C
00000000005c0b30 0000000000000198 t WebPConvertARGBToUV_C
00000000005c0cd0 000000000000030c t YuvToRgb565Row
00000000005c0fe0 0000000000000300 t YuvToRgba4444Row
00000000005c12e0 0000000000000298 t YuvToBgraRow
00000000005c1580 000000000000029c t YuvToArgbRow
00000000005c1820 00000000000002a0 t YuvToBgrRow
00000000005c1ac0 00000000000002a0 t YuvToRgbRow
00000000005c1d60 000000000000029c t YuvToRgbaRow
00000000005c2000 00000000000000dc t WebPSamplerProcessPlane
00000000005c20e0 00000000000000b4 t WebPInitSamplers
00000000005c21a0 00000000000000bc t WebPInitConvertARGBToYUV
00000000005c2260 0000000000000074 t ExtractGreen_NEON
00000000005c22e0 00000000000000d8 t ExtractAlpha_NEON
00000000005c23c0 00000000000000e8 t DispatchAlpha_NEON
00000000005c24b0 00000000000000b0 t DispatchAlphaToGreen_NEON
00000000005c2560 000000000000019c t ApplyAlphaMultiply_NEON
00000000005c2700 0000000000000068 t WebPInitAlphaProcessingNEON
00000000005c2770 0000000000000050 t DC4_NEON
00000000005c27c0 0000000000000018 t DC8uvNoTopLeft_NEON
00000000005c27e0 0000000000000020 t VE8uv_NEON
00000000005c2800 0000000000000020 t HE8uv_NEON
00000000005c2820 0000000000000020 t VE16_NEON
00000000005c2840 0000000000000020 t HE16_NEON
00000000005c2860 0000000000000018 t DC16NoTopLeft_NEON
00000000005c2880 000000000000009c t TM16_NEON
00000000005c2920 0000000000000028 t VE4_NEON
00000000005c2950 0000000000000040 t LD4_NEON
00000000005c2990 0000000000000070 t RD4_NEON
00000000005c2a00 00000000000000f8 t Load4x8_NEON
00000000005c2b00 00000000000000ac t DoFilter4_NEON
00000000005c2bb0 000000000000010c t DoFilter6_NEON
00000000005c2cc0 00000000000001ac t VFilter8_NEON
00000000005c2e70 0000000000000134 t TransformWHT_NEON
00000000005c2fb0 0000000000000098 t SimpleVFilter16_NEON
00000000005c3050 000000000000002c t SimpleVFilter16i_NEON
00000000005c3080 0000000000000078 t TM8uv_NEON
00000000005c3100 0000000000000064 t TM4_NEON
00000000005c3170 0000000000000078 t DC8uv_NEON
00000000005c31f0 00000000000000e0 t DC16TopLeft_NEON
00000000005c32d0 0000000000000038 t DC8uvNoLeft_NEON
00000000005c3310 0000000000000040 t DC16NoLeft_NEON
00000000005c3350 0000000000000060 t DC8uvNoTop_NEON
00000000005c33b0 000000000000005c t TransformDC_NEON
00000000005c3410 0000000000000144 t Store2x16_NEON
00000000005c3560 00000000000000e4 t TransformAC3_NEON
00000000005c3650 000000000000011c t VFilter16i_NEON
00000000005c3770 000000000000028c t TransformTwo_NEON
00000000005c3a00 0000000000000490 t HFilter16i_NEON
00000000005c3e90 0000000000000550 t HFilter8_NEON
00000000005c43e0 00000000000000b8 t DC16NoTop_NEON
00000000005c44a0 0000000000000100 t VFilter16_NEON
00000000005c45a0 000000000000021c t SimpleHFilter16_NEON
00000000005c47c0 000000000000004c t SimpleHFilter16i_NEON
00000000005c4810 0000000000000410 t HFilter8i_NEON
00000000005c4c20 0000000000000180 t VFilter8i_NEON
00000000005c4da0 00000000000001a4 t HFilter16_NEON
00000000005c4f50 000000000000025c t VP8DspInitNEON
00000000005c51b0 0000000000000080 t PredictLine_NEON
00000000005c5230 00000000000000d0 t HorizontalUnfilter_NEON
00000000005c5300 0000000000000094 t VerticalUnfilter_NEON
00000000005c53a0 000000000000016c t GradientFilter_NEON
00000000005c5510 0000000000000074 t VerticalFilter_NEON
00000000005c5590 0000000000000098 t HorizontalFilter_NEON
00000000005c5630 0000000000000048 t VP8FiltersInitNEON
00000000005c5680 0000000000000108 t TransformColorInverse_NEON
00000000005c5790 0000000000000068 t AddGreenToBlueAndRed_NEON
00000000005c5800 000000000000005c t ConvertBGRAToRGB_NEON
00000000005c5860 000000000000005c t ConvertBGRAToBGR_NEON
00000000005c58c0 0000000000000050 t ConvertBGRAToRGBA_NEON
00000000005c5910 000000000000006c t PredictorAdd0_NEON
00000000005c5980 0000000000000070 t PredictorAdd2_NEON
00000000005c59f0 0000000000000070 t PredictorAdd3_NEON
00000000005c5a60 0000000000000070 t PredictorAdd4_NEON
00000000005c5ad0 0000000000000078 t PredictorAdd8_NEON
00000000005c5b50 0000000000000078 t PredictorAdd9_NEON
00000000005c5bd0 0000000000000084 t PredictorAdd1_NEON
00000000005c5c60 00000000000000d4 t PredictorAdd5_NEON
00000000005c5d40 00000000000000c0 t PredictorAdd6_NEON
00000000005c5e00 00000000000000c0 t PredictorAdd7_NEON
00000000005c5ec0 00000000000000e0 t PredictorAdd10_NEON
00000000005c5fa0 0000000000000148 t PredictorAdd13_NEON
00000000005c60f0 00000000000000f0 t PredictorAdd12_NEON
00000000005c61e0 0000000000000118 t PredictorAdd11_NEON
00000000005c6300 0000000000000020 t Predictor5_NEON
00000000005c6320 0000000000000018 t Predictor6_NEON
00000000005c6340 0000000000000014 t Predictor7_NEON
00000000005c6360 0000000000000034 t Predictor13_NEON
00000000005c63a0 0000000000000148 t VP8LDspInitNEON
00000000005c64f0 000000000000019c t RescalerExportRowShrink_NEON
00000000005c6690 00000000000001c8 t RescalerExportRowExpand_NEON
00000000005c6860 000000000000002c t WebPRescalerDspInitNEON
00000000005c6890 0000000000000064 t Upsample16Pixels_NEON
00000000005c6900 000000000000087c t UpsampleRgba4444LinePair_NEON
00000000005c7180 0000000000000878 t UpsampleRgb565LinePair_NEON
00000000005c7a00 000000000000078c t UpsampleBgraLinePair_NEON
00000000005c8190 000000000000075c t UpsampleBgrLinePair_NEON
00000000005c88f0 00000000000007a8 t UpsampleArgbLinePair_NEON
00000000005c90a0 0000000000000754 t UpsampleRgbLinePair_NEON
00000000005c9800 0000000000000784 t UpsampleRgbaLinePair_NEON
00000000005c9f90 000000000000005c t WebPInitUpsamplersNEON
00000000005c9ff0 0000000000000158 t ConvertARGBToUV_NEON
00000000005ca150 000000000000005c t ConvertRGBToY_NEON
00000000005ca1b0 00000000000000bc t ConvertARGBToY_NEON
00000000005ca270 00000000000000c4 t ConvertRGB24ToY_NEON
00000000005ca340 00000000000000c0 t ConvertBGR24ToY_NEON
00000000005ca400 00000000000000a8 t SharpYUVUpdateRGB_NEON
00000000005ca4b0 0000000000000184 t SharpYUVFilterRow_NEON
00000000005ca640 00000000000000fc t SharpYUVUpdateY_NEON
00000000005ca740 0000000000000198 t ConvertRGBA32ToUV_NEON
00000000005ca8e0 0000000000000068 t WebPInitConvertARGBToYUVNEON
00000000005ca950 0000000000000040 t WebPInitSharpYUVNEON
00000000005ca990 0000000000000074 t ShiftBytes
00000000005caa10 0000000000000088 t VP8InitBitReader
00000000005caaa0 0000000000000068 t VP8LoadFinalBytes
00000000005cab10 00000000000000dc t VP8GetValue
00000000005cabf0 0000000000000030 t VP8GetSignedValue
00000000005cac20 0000000000000050 t VP8LInitBitReader
00000000005cac70 0000000000000048 t VP8LDoFillBitWindow
00000000005cacc0 0000000000000064 t VP8LReadBits
00000000005cad30 0000000000000068 t VP8LColorCacheInit
00000000005cada0 0000000000000030 t VP8LColorCacheClear
00000000005cadd0 000000000000001c t VP8LColorCacheCopy
00000000005cadf0 0000000000000444 t BuildHuffmanTable
00000000005cb240 000000000000000c t VP8LHtreeGroupsNew
00000000005cb250 000000000000000c t VP8LHtreeGroupsFree
00000000005cb260 00000000000000c4 t VP8LBuildHuffmanTable
00000000005cb330 000000000000007c t VP8InitRandom
00000000005cb3b0 0000000000000044 t Execute
00000000005cb400 0000000000000010 t Init
00000000005cb410 0000000000000074 t Sync
00000000005cb490 000000000000017c t Reset
00000000005cb610 0000000000000080 t Launch
00000000005cb690 0000000000000098 t End
00000000005cb730 000000000000000c T WebPGetWorkerInterface
00000000005cb740 00000000000000bc t ThreadLoop
00000000005cb800 0000000000000024 T WebPSafeMalloc
00000000005cb830 0000000000000020 T WebPSafeCalloc
00000000005cb850 0000000000000004 T WebPSafeFree
00000000005cb860 000000000000004c t WebPDeallocateAlphaMemory
00000000005cb8b0 00000000000003f8 t VP8DecompressAlphaRows
00000000005cbcb0 0000000000000278 t VP8ParseQuant
00000000005cbf30 0000000000000010 t VP8ResetProba
00000000005cbf40 0000000000000ef8 t VP8ParseIntraModeRow
00000000005cce40 0000000000000260 t VP8ParseProba
00000000005cd0a0 00000000000005c8 t WebPDequantizeLevels
00000000005cd670 0000000000000028 t hb_buffer_t::assert_unicode() [clone .part.0]
00000000005cd6a0 0000000000000054 T hb_segment_properties_equal
00000000005cd700 000000000000005c T hb_segment_properties_overlay
00000000005cd760 000000000000017c t hb_buffer_t::enlarge(unsigned int)
00000000005cd8e0 00000000000000c4 t hb_buffer_t::make_room_for(unsigned int, unsigned int)
00000000005cd9b0 00000000000000f4 t hb_buffer_t::shift_forward(unsigned int)
00000000005cdab0 0000000000000034 t hb_buffer_t::clear()
00000000005cdaf0 000000000000004c t hb_buffer_t::enter()
00000000005cdb40 0000000000000014 t hb_buffer_t::leave()
00000000005cdb60 0000000000000084 t hb_buffer_t::add(unsigned int, unsigned int)
00000000005cdbf0 000000000000001c t hb_buffer_t::clear_output()
00000000005cdc10 0000000000000038 t hb_buffer_t::clear_positions()
00000000005cdc50 0000000000000134 t hb_buffer_t::sync()
00000000005cdd90 0000000000000080 t hb_buffer_t::sync_so_far()
00000000005cde10 0000000000000194 t hb_buffer_t::move_to(unsigned int)
00000000005cdfb0 0000000000000060 t hb_buffer_t::set_masks(unsigned int, unsigned int, unsigned int, unsigned int)
00000000005ce010 00000000000002a0 t hb_buffer_t::merge_clusters_impl(unsigned int, unsigned int)
00000000005ce2b0 00000000000001a4 t hb_buffer_t::merge_out_clusters(unsigned int, unsigned int)
00000000005ce460 00000000000000e4 t hb_buffer_t::delete_glyph()
00000000005ce550 00000000000001d0 t hb_buffer_t::delete_glyphs_inplace(bool (*)(hb_glyph_info_t const*))
00000000005ce720 000000000000000c T hb_buffer_get_empty
00000000005ce730 000000000000008c T hb_buffer_create
00000000005ce7c0 0000000000000054 T hb_buffer_create_similar
00000000005ce820 0000000000000180 T hb_buffer_destroy
00000000005ce9a0 0000000000000014 T hb_buffer_set_direction
00000000005ce9c0 0000000000000008 T hb_buffer_get_direction
00000000005ce9d0 0000000000000014 T hb_buffer_set_script
00000000005ce9f0 0000000000000018 T hb_buffer_set_segment_properties
00000000005cea10 000000000000000c T hb_buffer_get_segment_properties
00000000005cea20 0000000000000014 T hb_buffer_set_flags
00000000005cea40 0000000000000008 T hb_buffer_get_flags
00000000005cea50 0000000000000014 T hb_buffer_clear_contents
00000000005cea70 00000000000000f4 T hb_buffer_set_length
00000000005ceb70 0000000000000014 T hb_buffer_get_glyph_infos
00000000005ceb90 0000000000000074 T hb_buffer_get_glyph_positions
00000000005cec10 00000000000000ec T hb_buffer_reverse
00000000005ced00 00000000000005d4 T hb_buffer_add_utf8
00000000005cf2e0 000000000000038c T hb_buffer_append
00000000005cf670 000000000000014c t hb_buffer_t::sort(unsigned int, unsigned int, int (*)(hb_glyph_info_t const*, hb_glyph_info_t const*))
00000000005cf7c0 00000000000001ec T hb_buffer_diff
00000000005cf9b0 00000000000000bc t hb_buffer_t::message_impl(hb_font_t*, char const*, std::__va_list)
00000000005cfa70 0000000000000160 t lang_find_or_insert(char const*)
00000000005cfbd0 00000000000000d4 t _hb_options_init()
00000000005cfcb0 00000000000000a4 T hb_tag_from_string
00000000005cfd60 0000000000000084 T hb_language_from_string
00000000005cfdf0 0000000000000004 T hb_language_to_string
00000000005cfe00 00000000000000ac T hb_language_matches
00000000005cfeb0 0000000000000314 T hb_script_get_horizontal_direction
00000000005d01d0 000000000000000c t hb_font_get_nominal_glyph_nil(hb_font_t*, void*, unsigned int, unsigned int*, void*)
00000000005d01e0 000000000000000c t hb_font_get_variation_glyph_nil(hb_font_t*, void*, unsigned int, unsigned int, unsigned int*, void*)
00000000005d01f0 0000000000000008 t hb_font_get_glyph_h_advance_nil(hb_font_t*, void*, unsigned int, void*)
00000000005d0200 0000000000000008 t hb_font_get_glyph_v_advance_nil(hb_font_t*, void*, unsigned int, void*)
00000000005d0210 0000000000000010 t hb_font_get_glyph_h_origin_nil(hb_font_t*, void*, unsigned int, int*, int*, void*)
00000000005d0220 0000000000000010 t hb_font_get_glyph_v_origin_nil(hb_font_t*, void*, unsigned int, int*, int*, void*)
00000000005d0230 0000000000000008 t hb_font_get_glyph_h_kerning_nil(hb_font_t*, void*, unsigned int, unsigned int, void*)
00000000005d0240 0000000000000010 t hb_font_get_glyph_contour_point_nil(hb_font_t*, void*, unsigned int, unsigned int, int*, int*, void*)
00000000005d0250 0000000000000010 t hb_font_get_glyph_name_nil(hb_font_t*, void*, unsigned int, char*, unsigned int, void*)
00000000005d0260 000000000000000c t hb_font_get_glyph_from_name_nil(hb_font_t*, void*, char const*, int, unsigned int*, void*)
00000000005d0270 0000000000000004 t hb_font_draw_glyph_nil(hb_font_t*, void*, unsigned int, hb_draw_funcs_t*, void*, void*)
00000000005d0280 0000000000000004 t hb_font_paint_glyph_nil(hb_font_t*, void*, unsigned int, hb_paint_funcs_t*, void*, unsigned int, unsigned int, void*)
00000000005d0290 0000000000000034 t hb_draw_move_to_default(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
00000000005d02d0 0000000000000048 t hb_draw_line_to_default(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
00000000005d0320 0000000000000054 t hb_draw_quadratic_to_default(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, void*)
00000000005d0380 0000000000000060 t hb_draw_cubic_to_default(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, float, float, void*)
00000000005d03e0 0000000000000018 t hb_draw_close_path_default(hb_draw_funcs_t*, void*, hb_draw_state_t*, void*)
00000000005d0400 00000000000000a0 t hb_font_draw_glyph_default(hb_font_t*, void*, unsigned int, hb_draw_funcs_t*, void*, void*)
00000000005d04a0 0000000000000110 t hb_font_paint_glyph_default(hb_font_t*, void*, unsigned int, hb_paint_funcs_t*, void*, unsigned int, unsigned int, void*)
00000000005d05b0 000000000000000c t hb_font_get_glyph_extents_nil(hb_font_t*, void*, unsigned int, hb_glyph_extents_t*, void*)
00000000005d05c0 0000000000000014 t hb_font_get_font_h_extents_nil(hb_font_t*, void*, hb_font_extents_t*, void*)
00000000005d05e0 000000000000008c t _hb_font_funcs_set_middle(hb_font_funcs_t*, void*, void (*)(void*))
00000000005d0670 00000000000000fc t hb_font_get_glyph_extents_default(hb_font_t*, void*, unsigned int, hb_glyph_extents_t*, void*)
00000000005d0770 0000000000000008 t hb_font_get_glyph_v_kerning_nil(hb_font_t*, void*, unsigned int, unsigned int, void*)
00000000005d0780 0000000000000070 t _hb_font_funcs_set_preamble(hb_font_funcs_t*, bool, void**, void (**)(void*))
00000000005d07f0 0000000000000014 t hb_font_get_font_v_extents_nil(hb_font_t*, void*, hb_font_extents_t*, void*)
00000000005d0810 0000000000000024 t hb_font_get_variation_glyph_default(hb_font_t*, void*, unsigned int, unsigned int, unsigned int*, void*)
00000000005d0840 00000000000000f8 t hb_font_get_nominal_glyphs_default(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, unsigned int*, unsigned int, void*)
00000000005d0940 0000000000000060 t hb_font_get_glyph_v_kerning_default(hb_font_t*, void*, unsigned int, unsigned int, void*)
00000000005d09a0 0000000000000060 t hb_font_get_glyph_h_kerning_default(hb_font_t*, void*, unsigned int, unsigned int, void*)
00000000005d0a00 0000000000000124 t hb_font_get_glyph_h_advances_default(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, int*, unsigned int, void*)
00000000005d0b30 0000000000000028 t hb_font_get_glyph_name_default(hb_font_t*, void*, unsigned int, char*, unsigned int, void*)
00000000005d0b60 00000000000000e4 t void hb_object_fini<hb_font_funcs_t>(hb_font_funcs_t*)
00000000005d0b60 00000000000000e4 t void hb_object_fini<hb_font_t>(hb_font_t*)
00000000005d0c50 0000000000000058 t hb_font_get_glyph_from_name_default(hb_font_t*, void*, char const*, int, unsigned int*, void*)
00000000005d0cb0 0000000000000098 t hb_font_get_font_v_extents_default(hb_font_t*, void*, hb_font_extents_t*, void*)
00000000005d0d50 0000000000000098 t hb_font_get_font_h_extents_default(hb_font_t*, void*, hb_font_extents_t*, void*)
00000000005d0df0 00000000000000ac t hb_font_get_glyph_v_advance_default(hb_font_t*, void*, unsigned int, void*)
00000000005d0ea0 0000000000000124 t hb_font_get_glyph_v_advances_default(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, int*, unsigned int, void*)
00000000005d0fd0 00000000000000ac t hb_font_get_glyph_h_advance_default(hb_font_t*, void*, unsigned int, void*)
00000000005d1080 0000000000000080 t hb_font_get_nominal_glyph_default(hb_font_t*, void*, unsigned int, unsigned int*, void*)
00000000005d1100 00000000000000d4 t hb_font_get_glyph_v_origin_default(hb_font_t*, void*, unsigned int, int*, int*, void*)
00000000005d11e0 00000000000000d4 t hb_font_get_glyph_h_origin_default(hb_font_t*, void*, unsigned int, int*, int*, void*)
00000000005d12c0 00000000000000d4 t hb_font_get_glyph_contour_point_default(hb_font_t*, void*, unsigned int, unsigned int, int*, int*, void*)
00000000005d13a0 0000000000000124 t hb_font_t::mults_changed()
00000000005d14d0 000000000000014c t OT::VarRegionList::evaluate(unsigned int, int const*, unsigned int, float*) const
00000000005d1620 0000000000000210 t OT::VarData::get_delta(unsigned int, int const*, unsigned int, OT::VarRegionList const&, float*) const
00000000005d1830 00000000000001ac t OT::SegmentMaps::map(int, unsigned int, unsigned int) const
00000000005d19e0 0000000000000450 t OT::avar::map_coords(int*, unsigned int) const
00000000005d1e30 000000000000018c t OT::fvar::sanitize(hb_sanitize_context_t*) const
00000000005d1fc0 000000000000000c T hb_font_funcs_get_empty
00000000005d1fd0 0000000000000088 T hb_font_funcs_create
00000000005d2060 0000000000000058 T hb_font_funcs_reference
00000000005d20c0 00000000000002ac T hb_font_funcs_destroy
00000000005d2370 0000000000000018 T hb_font_funcs_make_immutable
00000000005d2390 00000000000000c0 T hb_font_funcs_set_font_h_extents_func
00000000005d2450 00000000000000c0 T hb_font_funcs_set_font_v_extents_func
00000000005d2510 00000000000000c0 T hb_font_funcs_set_nominal_glyph_func
00000000005d25d0 00000000000000c0 T hb_font_funcs_set_nominal_glyphs_func
00000000005d2690 00000000000000c0 T hb_font_funcs_set_variation_glyph_func
00000000005d2750 00000000000000c0 T hb_font_funcs_set_glyph_v_advance_func
00000000005d2810 00000000000000c0 T hb_font_funcs_set_glyph_h_advances_func
00000000005d28d0 00000000000000c0 T hb_font_funcs_set_glyph_v_advances_func
00000000005d2990 00000000000000c0 T hb_font_funcs_set_glyph_v_origin_func
00000000005d2a50 00000000000000c0 T hb_font_funcs_set_glyph_h_kerning_func
00000000005d2b10 00000000000000c0 T hb_font_funcs_set_glyph_extents_func
00000000005d2bd0 00000000000000c0 T hb_font_funcs_set_glyph_contour_point_func
00000000005d2c90 00000000000000c0 T hb_font_funcs_set_glyph_name_func
00000000005d2d50 00000000000000c0 T hb_font_funcs_set_glyph_from_name_func
00000000005d2e10 00000000000000c0 T hb_font_funcs_set_draw_glyph_func
00000000005d2ed0 00000000000000c0 T hb_font_funcs_set_paint_glyph_func
00000000005d2f90 0000000000000084 t hb_font_t::has_func(unsigned int)
00000000005d3020 0000000000000054 T hb_font_get_glyph
00000000005d3080 0000000000000028 T hb_font_get_nominal_glyph
00000000005d30b0 0000000000000020 T hb_font_get_glyph_h_advance
00000000005d30d0 0000000000000028 T hb_font_get_glyph_extents
00000000005d3100 000000000000002c T hb_font_draw_glyph
00000000005d3130 000000000000000c T hb_font_get_empty
00000000005d3140 00000000000000d8 t _hb_font_create(hb_face_t*)
00000000005d3220 00000000000000e4 T hb_font_destroy
00000000005d3310 0000000000000008 T hb_font_get_face
00000000005d3320 000000000000009c T hb_font_set_funcs
00000000005d33c0 000000000000003c T hb_font_set_scale
00000000005d3400 0000000000000118 t bool OT::OffsetTo<OT::VarRegionList, OT::IntType<unsigned int, 4u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
00000000005d3520 0000000000000270 t bool OT::ArrayOf<OT::OffsetTo<OT::VarData, OT::IntType<unsigned int, 4u>, true>, OT::IntType<unsigned short, 2u> >::sanitize<OT::VariationStore const*>(hb_sanitize_context_t*, OT::VariationStore const*&&) const
00000000005d3790 0000000000000118 t bool OT::OffsetTo<OT::VariationStore, OT::IntType<unsigned int, 4u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
00000000005d38b0 000000000000016c t OT::avarV2Tail::sanitize(hb_sanitize_context_t*, void const*) const
00000000005d3a20 000000000000015c t OT::avar::sanitize(hb_sanitize_context_t*) const
00000000005d3b80 00000000000001b4 t hb_lazy_loader_t<OT::fvar, hb_table_lazy_loader_t<OT::fvar, 18u, true>, hb_face_t, 18u, hb_blob_t>::get() const
00000000005d3d40 0000000000000278 t hb_lazy_loader_t<OT::avar, hb_table_lazy_loader_t<OT::avar, 19u, true>, hb_face_t, 19u, hb_blob_t>::get() const
00000000005d3fc0 0000000000000450 T hb_font_set_var_coords_normalized
00000000005d4410 000000000000022c T hb_font_set_variations
00000000005d4640 000000000000003c T hb_font_set_var_named_instance
00000000005d4680 0000000000000054 T hb_font_create
00000000005d46e0 0000000000000344 t hb_parse_double(char const**, char const*, double*, bool)
00000000005d4a30 0000000000000008 W OT::ColorLine<OT::NoVariable>::static_get_extend(hb_color_line_t*, void*, void*)
00000000005d4a40 0000000000000008 W OT::ColorLine<OT::Variable>::static_get_extend(hb_color_line_t*, void*, void*)
00000000005d4a50 000000000000002c t _hb_ot_font_destroy(void*)
00000000005d4a80 0000000000000040 W OT::cff1::accelerator_t::gname_t::cmp(void const*, void const*)
00000000005d4ac0 0000000000000078 t hb_ot_get_font_v_extents(hb_font_t*, void*, hb_font_extents_t*, void*)
00000000005d4b40 000000000000008c t hb_ot_get_font_h_extents(hb_font_t*, void*, hb_font_extents_t*, void*)
00000000005d4bd0 0000000000000030 t int _hb_cmp_method<unsigned int, OT::CmapSubtableLongGroup const>(void const*, void const*)
00000000005d4c00 0000000000000028 t CFF::CFFIndex<OT::IntType<unsigned short, 2u> >::offset_at(unsigned int) const [clone .part.0]
00000000005d4c30 0000000000000028 t CFF::CFFIndex<OT::IntType<unsigned int, 4u> >::offset_at(unsigned int) const [clone .part.0]
00000000005d4c60 00000000000000b4 W bool OT::cmap::accelerator_t::get_glyph_from<OT::CmapSubtableFormat12>(void const*, unsigned int, unsigned int*)
00000000005d4d20 000000000000040c t void sort_r_simple<>(void*, unsigned long, unsigned long, int (*)(void const*, void const*)) [clone .constprop.0]
00000000005d5130 0000000000000dd0 t void sort_r_simple<void*>(void*, unsigned long, unsigned long, int (*)(void const*, void const*, void*), void*) [clone .constprop.0]
00000000005d5f00 000000000000004c t hb_sanitize_context_t::check_range(void const*, unsigned int) const
00000000005d5f50 00000000000000f4 t hb_font_t::scale_glyph_extents(hb_glyph_extents_t*)
00000000005d6050 0000000000000160 t OT::glyf_impl::Glyph::get_extents_without_var_scaled(hb_font_t*, OT::glyf_accelerator_t const&, hb_glyph_extents_t*) const [clone .part.0] [clone .isra.0]
00000000005d61b0 00000000000000c4 t hb_draw_session_t::line_to(float, float)
00000000005d6280 00000000000000e4 t hb_draw_session_t::quadratic_to(float, float, float, float)
00000000005d6370 00000000000000f0 t hb_draw_session_t::cubic_to(float, float, float, float, float, float)
00000000005d6460 000000000000010c t OT::OS2::sanitize(hb_sanitize_context_t*) const
00000000005d6570 00000000000000f0 t OT::CmapSubtableFormat4::accelerator_t::get_glyph(unsigned int, unsigned int*) const
00000000005d6660 0000000000000004 W OT::CmapSubtableFormat4::accelerator_t::get_glyph_func(void const*, unsigned int, unsigned int*)
00000000005d6670 0000000000000144 t OT::VariationSelectorRecord::get_glyph(unsigned int, unsigned int*, void const*) const
00000000005d67c0 0000000000000298 t OT::CmapSubtable::get_glyph(unsigned int, unsigned int*) const
00000000005d6a60 0000000000000004 W bool OT::cmap::accelerator_t::get_glyph_from<OT::CmapSubtable>(void const*, unsigned int, unsigned int*)
00000000005d6a70 00000000000000d4 t bool OT::cmap::accelerator_t::get_glyph_from_symbol<OT::CmapSubtable, &(_hb_arabic_pua_trad_map(unsigned int))>(void const*, unsigned int, unsigned int*)
00000000005d6b50 00000000000000c8 t bool OT::cmap::accelerator_t::get_glyph_from_symbol<OT::CmapSubtable, &(_hb_arabic_pua_simp_map(unsigned int))>(void const*, unsigned int, unsigned int*)
00000000005d6c20 000000000000005c t bool OT::cmap::accelerator_t::get_glyph_from_symbol<OT::CmapSubtable, &OT::_hb_symbol_pua_map>(void const*, unsigned int, unsigned int*)
00000000005d6c80 00000000000000b8 t OT::cmap::find_subtable(unsigned int, unsigned int) const
00000000005d6d40 0000000000000198 t OT::VarStoreInstancer::operator()(unsigned int, unsigned short) const
00000000005d6ee0 00000000000001f4 W OT::ColorLine<OT::Variable>::static_get_color_stops(hb_color_line_t*, void*, unsigned int, unsigned int*, hb_color_stop_t*, void*)
00000000005d70e0 00000000000001e8 W OT::ColorLine<OT::NoVariable>::static_get_color_stops(hb_color_line_t*, void*, unsigned int, unsigned int*, hb_color_stop_t*, void*)
00000000005d72d0 00000000000001cc t OT::TupleVariationData::unpack_points(OT::IntType<unsigned char, 1u> const*&, hb_vector_t<unsigned int, false>&, OT::IntType<unsigned char, 1u> const*)
00000000005d74a0 000000000000109c t OT::gvar::accelerator_t::apply_deltas_to_points(unsigned int, hb_array_t<int>, hb_array_t<OT::contour_point_t>) const [clone .isra.0]
00000000005d8540 0000000000000158 t OT::gvar::sanitize_shallow(hb_sanitize_context_t*) const
00000000005d86a0 0000000000000100 t OT::glyf_impl::SimpleGlyph::trim_padding() const
00000000005d87a0 000000000000050c t OT::glyf_impl::SimpleGlyph::get_contour_points(OT::contour_point_vector_t&, bool) const
00000000005d8cb0 00000000000005d4 t OT::glyf_impl::path_builder_t::consume_point(OT::contour_point_t const&)
00000000005d9290 00000000000001d4 t OT::glyf_accelerator_t::glyph_for_gid(unsigned int, bool) const
00000000005d9470 00000000000001e8 t CFF::Encoding::sanitize(hb_sanitize_context_t*) const
00000000005d9660 0000000000000384 W OT::post::accelerator_t::accelerator_t(hb_face_t*)
00000000005d9660 0000000000000384 t OT::post::accelerator_t::accelerator_t(hb_face_t*)
00000000005d99f0 000000000000026c t OT::post::accelerator_t::get_glyph_from_name(char const*, int, unsigned int*) const
00000000005d9c60 000000000000014c t OT::CBLC::choose_strike(hb_font_t*) const
00000000005d9db0 000000000000016c t hb_paint_extents_context_t::hb_paint_extents_context_t()
00000000005d9db0 000000000000016c W hb_paint_extents_context_t::hb_paint_extents_context_t()
00000000005d9f20 0000000000000164 t OT::Affine2x3::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
00000000005da090 000000000000014c t OT::ClipBoxFormat2::get_clip_box(OT::ClipBoxData&, OT::VarStoreInstancer const&) const
00000000005da1e0 00000000000000b8 t OT::COLR::get_base_glyph_paint(unsigned int) const
00000000005da2a0 0000000000000144 t OT::COLR::get_clip(unsigned int, hb_glyph_extents_t*, OT::VarStoreInstancer) const
00000000005da3f0 0000000000000218 t OT::SBIXStrike::get_glyph_blob(unsigned int, hb_blob_t*, unsigned int, int*, int*, unsigned int, unsigned int*) const
00000000005da610 00000000000001a0 t OT::sbix::accelerator_t::choose_strike(hb_font_t*) const
00000000005da7b0 000000000000019c t OT::sbix::accelerator_t::get_png_extents(hb_font_t*, unsigned int, hb_glyph_extents_t*, bool) const
00000000005da950 00000000000000cc t OT::SVG::accelerator_t::reference_blob_for_glyph(unsigned int) const
00000000005daa20 00000000000002a8 T hb_ot_font_set_funcs
00000000005dacd0 00000000000002f8 t bool OT::ArrayOf<OT::VariationSelectorRecord, OT::IntType<unsigned int, 4u> >::sanitize<OT::CmapSubtableFormat14 const*>(hb_sanitize_context_t*, OT::CmapSubtableFormat14 const*&&) const
00000000005dafd0 00000000000003a8 t OT::CmapSubtable::sanitize(hb_sanitize_context_t*) const
00000000005db380 00000000000001b8 t bool OT::ArrayOf<OT::EncodingRecord, OT::IntType<unsigned short, 2u> >::sanitize<OT::cmap const*>(hb_sanitize_context_t*, OT::cmap const*&&) const
00000000005db540 000000000000064c W OT::cmap::accelerator_t::accelerator_t(hb_face_t*)
00000000005db540 000000000000064c t OT::cmap::accelerator_t::accelerator_t(hb_face_t*)
00000000005dbb90 000000000000023c t hb_ot_get_variation_glyph(hb_font_t*, void*, unsigned int, unsigned int, unsigned int*, void*)
00000000005dbdd0 0000000000000194 t hb_ot_get_nominal_glyph(hb_font_t*, void*, unsigned int, unsigned int*, void*)
00000000005dbf70 000000000000019c t hb_ot_get_nominal_glyphs(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, unsigned int*, unsigned int, void*)
00000000005dc110 0000000000000170 t bool OT::OffsetTo<OT::DeltaSetIndexMap, OT::IntType<unsigned int, 4u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
00000000005dc280 0000000000000194 t OT::HVARVVAR::sanitize(hb_sanitize_context_t*) const
00000000005dc420 0000000000001594 t bool OT::glyf_impl::Glyph::get_points<OT::glyf_accelerator_t>(hb_font_t*, OT::glyf_accelerator_t const&, OT::contour_point_vector_t&, OT::contour_point_vector_t*, head_maxp_info_t*, unsigned int*, bool, bool, bool, hb_array_t<int>, unsigned int, unsigned int*) const
00000000005dd9c0 0000000000000248 t bool OT::glyf_accelerator_t::get_points<OT::glyf_accelerator_t::points_aggregator_t>(hb_font_t*, unsigned int, OT::glyf_accelerator_t::points_aggregator_t) const
00000000005ddc10 0000000000000228 t CFF::opset_t<CFF::number_t>::process_op(unsigned int, CFF::interp_env_t<CFF::number_t>&)
00000000005dde40 00000000000002a0 t CFF::dict_opset_t::process_op(unsigned int, CFF::interp_env_t<CFF::number_t>&)
00000000005de0e0 0000000000000828 t CFF::cff1_top_dict_opset_t::process_op(unsigned int, CFF::cff1_top_dict_interp_env_t&, CFF::cff1_top_dict_values_t&)
00000000005de910 0000000000000220 t CFF::FDSelect3_4<OT::IntType<unsigned short, 2u>, OT::IntType<unsigned char, 1u> >::sanitize(hb_sanitize_context_t*, unsigned int) const
00000000005deb30 0000000000000214 t CFF::CFFIndex<OT::IntType<unsigned short, 2u> >::operator[](unsigned int) const
00000000005ded50 0000000000000154 t CFF::parsed_values_t<CFF::op_str_t>::add_op(unsigned int, CFF::byte_str_ref_t const&, CFF::op_str_t const&)
00000000005deeb0 0000000000000154 t CFF::parsed_values_t<CFF::dict_val_t>::add_op(unsigned int, CFF::byte_str_ref_t const&, CFF::dict_val_t const&)
00000000005df010 00000000000000e0 t OT::cff1::accelerator_templ_t<CFF::cff1_private_dict_opset_t, CFF::cff1_private_dict_values_base_t<CFF::dict_val_t> >::fini()
00000000005df0f0 0000000000000180 t OT::cff1::accelerator_templ_t<CFF::cff1_private_dict_opset_t, CFF::cff1_private_dict_values_base_t<CFF::dict_val_t> >::sid_to_glyph(unsigned int) const
00000000005df270 00000000000004f4 t OT::cff1::accelerator_t::get_glyph_from_name(char const*, int, unsigned int*) const
00000000005df770 0000000000000258 t CFF::FDSelect3_4<OT::IntType<unsigned int, 4u>, OT::IntType<unsigned short, 2u> >::sanitize(hb_sanitize_context_t*, unsigned int) const
00000000005df9d0 0000000000000110 t OT::IndexSubtableFormat1Or3<OT::IntType<unsigned int, 4u> >::get_image_data(unsigned int, unsigned int*, unsigned int*) const
00000000005dfae0 0000000000000174 t OT::IndexSubtableRecord::get_image_data(unsigned int, void const*, unsigned int*, unsigned int*, unsigned int*) const
00000000005dfc60 0000000000000248 t OT::CBDT::accelerator_t::get_extents(hb_font_t*, unsigned int, hb_glyph_extents_t*, bool) const
00000000005dfeb0 0000000000000200 t OT::CBDT::accelerator_t::reference_png(hb_font_t*, unsigned int) const
00000000005e00b0 0000000000000248 t bool OT::UnsizedArrayOf<OT::IndexSubtableRecord>::sanitize<OT::IndexSubtableArray const*>(hb_sanitize_context_t*, unsigned int, OT::IndexSubtableArray const*&&) const
00000000005e0300 00000000000001f4 t bool OT::ArrayOf<OT::BitmapSizeTable, OT::IntType<unsigned int, 4u> >::sanitize<OT::CBLC const*>(hb_sanitize_context_t*, OT::CBLC const*&&) const
00000000005e0500 0000000000000314 W OT::CBDT::accelerator_t::accelerator_t(hb_face_t*)
00000000005e0500 0000000000000314 t OT::CBDT::accelerator_t::accelerator_t(hb_face_t*)
00000000005e0820 000000000000021c t bool OT::ArrayOf<OT::ClipRecord, OT::IntType<unsigned int, 4u> >::sanitize<OT::ClipList const*>(hb_sanitize_context_t*, OT::ClipList const*&&) const
00000000005e0a40 00000000000001bc t bool OT::ArrayOf<OT::OffsetTo<OT::SBIXStrike, OT::IntType<unsigned int, 4u>, true>, OT::IntType<unsigned int, 4u> >::sanitize<OT::sbix const*>(hb_sanitize_context_t*, OT::sbix const*&&) const
00000000005e0c00 0000000000000098 t CFF::CFFIndex<OT::IntType<unsigned short, 2u> >::offset_at(unsigned int) const
00000000005e0ca0 0000000000000178 t CFF::CFFIndex<OT::IntType<unsigned short, 2u> >::sanitize(hb_sanitize_context_t*) const
00000000005e0e20 0000000000000230 t hb_vector_t<CFF::cff1_private_dict_values_base_t<CFF::dict_val_t>, false>::resize(int, bool, bool)
00000000005e1050 00000000000001c0 t hb_vector_t<CFF::cff1_font_dict_values_t, false>::push()
00000000005e1210 00000000000004e8 t CFF::dict_interpreter_t<CFF::cff1_font_dict_opset_t, CFF::cff1_font_dict_values_t, CFF::interp_env_t<CFF::number_t> >::interpret(CFF::cff1_font_dict_values_t&)
00000000005e1700 000000000000044c t CFF::dict_interpreter_t<CFF::cff1_private_dict_opset_t, CFF::cff1_private_dict_values_base_t<CFF::dict_val_t>, CFF::interp_env_t<CFF::number_t> >::interpret(CFF::cff1_private_dict_values_base_t<CFF::dict_val_t>&)
00000000005e1b50 0000000000000d94 t OT::cff1::accelerator_templ_t<CFF::cff1_private_dict_opset_t, CFF::cff1_private_dict_values_base_t<CFF::dict_val_t> >::init(hb_face_t*)
00000000005e28f0 000000000000030c t CFF::dict_interpreter_t<CFF::cff2_top_dict_opset_t, CFF::cff2_top_dict_values_t, CFF::interp_env_t<CFF::number_t> >::interpret(CFF::cff2_top_dict_values_t&)
00000000005e2c00 0000000000000194 t CFF::CFFIndex<OT::IntType<unsigned int, 4u> >::sanitize(hb_sanitize_context_t*) const
00000000005e2da0 00000000000001bc t hb_vector_t<CFF::cff2_font_dict_values_t, false>::push()
00000000005e2f60 0000000000000098 t CFF::CFFIndex<OT::IntType<unsigned int, 4u> >::offset_at(unsigned int) const
00000000005e3000 0000000000000e68 W OT::cff2::accelerator_templ_t<CFF::cff2_private_dict_opset_t, CFF::cff2_private_dict_values_base_t<CFF::dict_val_t> >::accelerator_templ_t(hb_face_t*)
00000000005e3000 0000000000000e68 t OT::cff2::accelerator_templ_t<CFF::cff2_private_dict_opset_t, CFF::cff2_private_dict_values_base_t<CFF::dict_val_t> >::accelerator_templ_t(hb_face_t*)
00000000005e3e70 0000000000000200 t hb_lazy_loader_t<OT::cff2_accelerator_t, hb_face_lazy_loader_t<OT::cff2_accelerator_t, 17u>, hb_face_t, 17u, OT::cff2_accelerator_t>::get_stored() const
00000000005e4070 00000000000001b8 t OT::PaintLinearGradient<OT::NoVariable>::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
00000000005e4230 00000000000001b8 t OT::PaintLinearGradient<OT::Variable>::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
00000000005e43f0 00000000000001c0 t OT::PaintRadialGradient<OT::NoVariable>::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
00000000005e45b0 00000000000001c0 t OT::PaintRadialGradient<OT::Variable>::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
00000000005e4770 0000000000000190 t OT::PaintSweepGradient<OT::NoVariable>::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
00000000005e4900 0000000000000190 t OT::PaintSweepGradient<OT::Variable>::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
00000000005e4a90 0000000000000640 t OT::hb_paint_context_t::return_t OT::Paint::dispatch<OT::hb_paint_context_t>(OT::hb_paint_context_t*) const [clone .isra.0]
00000000005e50d0 0000000000000058 t OT::hb_paint_context_t::recurse(OT::Paint const&)
00000000005e5130 0000000000000138 t OT::PaintColrLayers::paint_glyph(OT::hb_paint_context_t*) const
00000000005e5270 0000000000000158 t OT::PaintTranslate::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
00000000005e53d0 0000000000000168 t OT::PaintScale::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
00000000005e5540 00000000000001a0 t OT::PaintSkew::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
00000000005e56e0 000000000000020c t OT::PaintGlyph::paint_glyph(OT::hb_paint_context_t*) const
00000000005e58f0 00000000000002e8 t OT::PaintScaleUniformAroundCenter::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
00000000005e5be0 0000000000000358 t OT::PaintRotateAroundCenter::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
00000000005e5f40 0000000000000328 t OT::PaintScaleAroundCenter::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
00000000005e6270 00000000000003ac t OT::PaintSkewAroundCenter::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
00000000005e6620 00000000000002d0 t OT::PaintColrGlyph::paint_glyph(OT::hb_paint_context_t*) const
00000000005e68f0 000000000000054c t OT::COLR::paint_glyph(hb_font_t*, unsigned int, hb_paint_funcs_t*, void*, unsigned int, unsigned int, bool) const
00000000005e6e40 00000000000001a0 t hb_lazy_loader_t<OT::cff1_accelerator_t, hb_face_lazy_loader_t<OT::cff1_accelerator_t, 16u>, hb_face_t, 16u, OT::cff1_accelerator_t>::do_destroy(OT::cff1_accelerator_t*)
00000000005e6fe0 0000000000000244 t hb_ot_get_glyph_from_name(hb_font_t*, void*, char const*, int, unsigned int*, void*)
00000000005e7230 00000000000004f8 t hb_ot_get_glyph_name(hb_font_t*, void*, unsigned int, char*, unsigned int, void*)
00000000005e7730 0000000000000138 t hb_lazy_loader_t<OT::gvar_accelerator_t, hb_face_lazy_loader_t<OT::gvar_accelerator_t, 21u>, hb_face_t, 21u, OT::gvar_accelerator_t>::create(hb_face_t*)
00000000005e7870 0000000000000294 t hb_lazy_loader_t<OT::sbix_accelerator_t, hb_face_lazy_loader_t<OT::sbix_accelerator_t, 38u>, hb_face_t, 38u, OT::sbix_accelerator_t>::create(hb_face_t*)
00000000005e7b10 0000000000000188 t hb_lazy_loader_t<OT::SVG_accelerator_t, hb_face_lazy_loader_t<OT::SVG_accelerator_t, 39u>, hb_face_t, 39u, OT::SVG_accelerator_t>::create(hb_face_t*)
00000000005e7ca0 00000000000000c8 t hb_table_lazy_loader_t<OT::hhea, 4u, true>::create(hb_face_t*)
00000000005e7d70 00000000000004f8 W OT::hmtxvmtx<OT::hmtx, OT::hhea, OT::HVAR>::accelerator_t::accelerator_t(hb_face_t*)
00000000005e7d70 00000000000004f8 t OT::hmtxvmtx<OT::hmtx, OT::hhea, OT::HVAR>::accelerator_t::accelerator_t(hb_face_t*)
00000000005e8270 00000000000000c8 t hb_table_lazy_loader_t<OT::vhea, 11u, true>::create(hb_face_t*)
00000000005e8340 000000000000052c W OT::hmtxvmtx<OT::vmtx, OT::vhea, OT::VVAR>::accelerator_t::accelerator_t(hb_face_t*)
00000000005e8340 000000000000052c t OT::hmtxvmtx<OT::vmtx, OT::vhea, OT::VVAR>::accelerator_t::accelerator_t(hb_face_t*)
00000000005e8870 0000000000000558 t OT::glyf_accelerator_t::glyf_accelerator_t(hb_face_t*)
00000000005e8870 0000000000000558 W OT::glyf_accelerator_t::glyf_accelerator_t(hb_face_t*)
00000000005e8dd0 00000000000001bc t _glyf_get_leading_bearing_with_var_unscaled(hb_font_t*, unsigned int, bool, int*)
00000000005e8f90 00000000000002e8 t _glyf_get_advance_with_var_unscaled(hb_font_t*, unsigned int, bool)
00000000005e9280 0000000000000534 t hb_ot_get_glyph_v_advances(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, int*, unsigned int, void*)
00000000005e97c0 0000000000000260 t OT::hmtxvmtx<OT::hmtx, OT::hhea, OT::HVAR>::accelerator_t::get_advance_with_var_unscaled(unsigned int, hb_font_t*, float*) const
00000000005e9a20 0000000000000638 t hb_ot_get_glyph_h_advances(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, int*, unsigned int, void*)
00000000005ea060 0000000000000488 t hb_ot_draw_glyph(hb_font_t*, void*, unsigned int, hb_draw_funcs_t*, void*, void*)
00000000005ea4f0 0000000000000b70 t hb_ot_get_glyph_v_origin(hb_font_t*, void*, unsigned int, int*, int*, void*)
00000000005eb060 0000000000000144 t bool OT::OffsetTo<OT::ColorLine<OT::NoVariable>, OT::IntType<unsigned int, 3u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
00000000005eb1b0 0000000000000144 t bool OT::OffsetTo<OT::ColorLine<OT::Variable>, OT::IntType<unsigned int, 3u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
00000000005eb300 0000000000000414 t hb_sanitize_context_t::return_t OT::Paint::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*) const
00000000005eb720 00000000000000f0 t bool OT::OffsetTo<OT::Paint, OT::IntType<unsigned int, 3u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
00000000005eb810 0000000000000258 t bool OT::OffsetTo<OT::BaseGlyphList, OT::IntType<unsigned int, 4u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
00000000005eba70 000000000000021c t bool OT::OffsetTo<OT::LayerList, OT::IntType<unsigned int, 4u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
00000000005ebc90 0000000000000248 t OT::COLR::sanitize(hb_sanitize_context_t*) const
00000000005ebee0 0000000000000828 t hb_ot_get_glyph_extents(hb_font_t*, void*, unsigned int, hb_glyph_extents_t*, void*)
00000000005ec710 00000000000007e4 t hb_ot_paint_glyph(hb_font_t*, void*, unsigned int, hb_paint_funcs_t*, void*, unsigned int, unsigned int, void*)
00000000005ecf00 000000000000020c t OT::PaintTransform<OT::NoVariable>::sanitize(hb_sanitize_context_t*) const
00000000005ed110 000000000000020c t OT::PaintTransform<OT::Variable>::sanitize(hb_sanitize_context_t*) const
00000000005ed320 00000000000000d4 t hb_outline_recording_pen_close_path(hb_draw_funcs_t*, void*, hb_draw_state_t*, void*)
00000000005ed400 00000000000000f0 t hb_outline_recording_pen_move_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
00000000005ed4f0 00000000000000f4 t hb_outline_recording_pen_line_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
00000000005ed5f0 00000000000001dc t hb_outline_recording_pen_quadratic_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, void*)
00000000005ed7d0 00000000000002c8 t hb_outline_recording_pen_cubic_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, float, float, void*)
00000000005edaa0 00000000000003d8 t hb_outline_t::replay(hb_draw_funcs_t*, void*) const
00000000005ede80 00000000000000c8 t hb_outline_t::control_area() const
00000000005edf50 00000000000003fc t hb_outline_t::embolden(float, float, float, float)
00000000005ee350 0000000000000114 t hb_outline_recording_pen_get_funcs()
00000000005ee470 00000000000001e0 t hb_paint_extents_pop_group(hb_paint_funcs_t*, void*, hb_paint_composite_mode_t, void*)
00000000005ee650 0000000000000014 t hb_paint_extents_pop_transform(hb_paint_funcs_t*, void*, void*)
00000000005ee670 0000000000000194 t hb_paint_extents_push_transform(hb_paint_funcs_t*, void*, float, float, float, float, float, float, void*)
00000000005ee810 0000000000000104 t hb_paint_extents_push_group(hb_paint_funcs_t*, void*, void*)
00000000005ee920 0000000000000018 t hb_paint_extents_pop_clip(hb_paint_funcs_t*, void*, void*)
00000000005ee940 0000000000000118 t hb_paint_extents_paint_radial_gradient(hb_paint_funcs_t*, void*, hb_color_line_t*, float, float, float, float, float, float, void*)
00000000005eea60 0000000000000118 t hb_paint_extents_paint_linear_gradient(hb_paint_funcs_t*, void*, hb_color_line_t*, float, float, float, float, float, float, void*)
00000000005eeb80 0000000000000118 t hb_paint_extents_paint_color(hb_paint_funcs_t*, void*, int, unsigned int, void*)
00000000005eeca0 0000000000000118 t hb_paint_extents_paint_sweep_gradient(hb_paint_funcs_t*, void*, hb_color_line_t*, float, float, float, float, void*)
00000000005eedc0 0000000000000050 t hb_draw_extents_line_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
00000000005eee10 0000000000000050 t hb_draw_extents_move_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
00000000005eee60 0000000000000094 t hb_draw_extents_quadratic_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, void*)
00000000005eef00 00000000000000d8 t hb_draw_extents_cubic_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, float, float, void*)
00000000005eefe0 0000000000000240 t hb_paint_extents_context_t::push_clip(hb_extents_t)
00000000005ef220 0000000000000050 t hb_paint_extents_push_clip_rectangle(hb_paint_funcs_t*, void*, float, float, float, float, void*)
00000000005ef270 00000000000001ac t hb_paint_extents_paint_image(hb_paint_funcs_t*, void*, hb_blob_t*, unsigned int, unsigned int, unsigned int, float, hb_glyph_extents_t*, void*)
00000000005ef420 0000000000000144 t hb_paint_extents_push_clip_glyph(hb_paint_funcs_t*, void*, unsigned int, hb_font_t*, void*)
00000000005ef570 00000000000001b8 t hb_paint_extents_get_funcs()
00000000005ef730 00000000000000dc t OT::MVAR::get_var(unsigned int, int const*, unsigned int) const
00000000005ef810 00000000000001fc t OT::MVAR::sanitize(hb_sanitize_context_t*) const
00000000005efa10 0000000000000278 t hb_lazy_loader_t<OT::MVAR, hb_table_lazy_loader_t<OT::MVAR, 22u, true>, hb_face_t, 22u, hb_blob_t>::get() const
00000000005efc90 00000000000001ac t hb_lazy_loader_t<OT::OS2, hb_table_lazy_loader_t<OT::OS2, 6u, true>, hb_face_t, 6u, hb_blob_t>::get() const
00000000005efe40 0000000000000b1c t _hb_ot_metrics_get_position_common(hb_font_t*, hb_ot_metrics_tag_t, int*)
00000000005f0960 0000000000000020 t _hb_glyph_info_is_default_ignorable(hb_glyph_info_t const*)
00000000005f0980 00000000000002d8 t _hb_glyph_info_set_unicode_props(hb_glyph_info_t*, hb_buffer_t*)
00000000005f0c60 0000000000000028 t hb_buffer_t::allocate_var(unsigned int, unsigned int) [clone .part.0]
00000000005f0c90 0000000000000028 t hb_buffer_t::deallocate_var(unsigned int, unsigned int) [clone .part.0]
00000000005f0cc0 0000000000000080 t hb_buffer_t::message(hb_font_t*, char const*, ...)
00000000005f0d40 0000000000000994 t hb_ot_shape_planner_t::hb_ot_shape_planner_t(hb_face_t*, hb_segment_properties_t const&)
00000000005f0d40 0000000000000994 T hb_ot_shape_planner_t::hb_ot_shape_planner_t(hb_face_t*, hb_segment_properties_t const&)
00000000005f16e0 0000000000000700 t hb_ot_shape_planner_t::compile(hb_ot_shape_plan_t&, hb_ot_shape_plan_key_t const&)
00000000005f1de0 0000000000000360 t hb_ot_shape_plan_t::init0(hb_face_t*, hb_shape_plan_key_t const*)
00000000005f2140 0000000000000074 t hb_ot_shape_plan_t::fini()
00000000005f21c0 00000000000000d4 t hb_ot_shape_plan_t::position(hb_font_t*, hb_buffer_t*) const
00000000005f22a0 0000000000000008 t _hb_ot_shaper_face_data_create
00000000005f22b0 0000000000000004 t _hb_ot_shaper_face_data_destroy
00000000005f22c0 0000000000000008 t _hb_ot_shaper_font_data_create
00000000005f22d0 0000000000000004 t _hb_ot_shaper_font_data_destroy
00000000005f22e0 0000000000001de8 t _hb_ot_shape
00000000005f40d0 000000000000011c T hb_ot_var_named_instance_get_design_coords
00000000005f41f0 00000000000003a4 T hb_ot_var_normalize_coords
00000000005f45a0 0000000000000368 t hb_shape_plan_key_t::init(bool, hb_face_t*, hb_segment_properties_t const*, hb_feature_t const*, unsigned int, int const*, unsigned int, char const* const*)
00000000005f4910 0000000000000098 t hb_shape_plan_key_t::user_features_match(hb_shape_plan_key_t const*)
00000000005f49b0 0000000000000070 t hb_shape_plan_key_t::equal(hb_shape_plan_key_t const*)
00000000005f4a20 000000000000000c T hb_shape_plan_get_empty
00000000005f4a30 0000000000000144 T hb_shape_plan_create2
00000000005f4b80 0000000000000058 T hb_shape_plan_reference
00000000005f4be0 00000000000001a4 T hb_shape_plan_destroy
00000000005f4d90 0000000000000258 T hb_shape_plan_execute
00000000005f4ff0 00000000000001b0 T hb_shape_plan_create_cached2
00000000005f51a0 00000000000001b8 T hb_shape_full
00000000005f5360 0000000000000008 T hb_shape
00000000005f5370 0000000000000188 t hb_shapers_lazy_loader_t::create()
00000000005f5500 0000000000000090 t _hb_shapers_get()
00000000005f5590 00000000000001a4 t hb_face_t::load_num_glyphs() const
00000000005f5740 0000000000000194 t hb_face_t::load_upem() const
00000000005f58e0 0000000000000008 t hb_unicode_combining_class_nil(hb_unicode_funcs_t*, unsigned int, void*)
00000000005f58f0 0000000000000008 t hb_unicode_eastasian_width_nil(hb_unicode_funcs_t*, unsigned int, void*)
00000000005f5900 0000000000000008 t hb_unicode_general_category_nil(hb_unicode_funcs_t*, unsigned int, void*)
00000000005f5910 0000000000000008 t hb_unicode_mirroring_nil(hb_unicode_funcs_t*, unsigned int, void*)
00000000005f5920 000000000000000c t hb_unicode_script_nil(hb_unicode_funcs_t*, unsigned int, void*)
00000000005f5930 0000000000000008 t hb_unicode_compose_nil(hb_unicode_funcs_t*, unsigned int, unsigned int, unsigned int*, void*)
00000000005f5940 0000000000000008 t hb_unicode_decompose_nil(hb_unicode_funcs_t*, unsigned int, unsigned int*, unsigned int*, void*)
00000000005f5950 0000000000000008 t hb_unicode_decompose_compatibility_nil(hb_unicode_funcs_t*, unsigned int, unsigned int*, void*)
00000000005f5960 0000000000000004 T hb_unicode_funcs_get_default
00000000005f5970 000000000000000c T hb_unicode_funcs_get_empty
00000000005f5980 0000000000000058 T hb_unicode_funcs_reference
00000000005f59e0 00000000000001e0 T hb_unicode_funcs_destroy
00000000005f59e0 00000000000001e0 t hb_unicode_funcs_destroy.localalias
00000000005f5bc0 0000000000000018 T hb_unicode_funcs_make_immutable
00000000005f5be0 00000000000000b8 T hb_unicode_funcs_create
00000000005f5ca0 00000000000000b0 T hb_unicode_funcs_set_combining_class_func
00000000005f5d50 00000000000000b0 T hb_unicode_funcs_set_general_category_func
00000000005f5e00 00000000000000b0 T hb_unicode_funcs_set_mirroring_func
00000000005f5eb0 00000000000000b0 T hb_unicode_funcs_set_script_func
00000000005f5f60 00000000000000b0 T hb_unicode_funcs_set_compose_func
00000000005f6010 00000000000000b0 T hb_unicode_funcs_set_decompose_func
00000000005f60c0 000000000000007c t _hb_unicode_is_emoji_Extended_Pictographic(unsigned int)
00000000005f6140 000000000000001c t _hb_ft_color_line_get_extend(hb_color_line_t*, void*, void*)
00000000005f6160 0000000000000050 t _hb_ft_font_destroy(void*)
00000000005f61b0 00000000000000b0 t _hb_ft_reference_table(hb_face_t*, unsigned int, void*)
00000000005f6260 00000000000000c4 t hb_ft_get_glyph_contour_point(hb_font_t*, void*, unsigned int, unsigned int, int*, int*, void*)
00000000005f6330 0000000000000084 t hb_ft_get_glyph_name(hb_font_t*, void*, unsigned int, char*, unsigned int, void*)
00000000005f63c0 0000000000000120 t hb_ft_get_glyph_from_name(hb_font_t*, void*, char const*, int, unsigned int*, void*)
00000000005f64e0 00000000000001a8 t hb_ft_get_glyph_v_origin(hb_font_t*, void*, unsigned int, int*, int*, void*)
00000000005f6690 0000000000000244 t hb_ft_get_glyph_extents(hb_font_t*, void*, unsigned int, hb_glyph_extents_t*, void*)
00000000005f68e0 0000000000000084 t hb_ft_get_glyph_h_kerning(hb_font_t*, void*, unsigned int, unsigned int, void*)
00000000005f6970 0000000000000158 t hb_ft_get_glyph_v_advance(hb_font_t*, void*, unsigned int, void*)
00000000005f6ad0 0000000000000180 t hb_ft_get_font_h_extents(hb_font_t*, void*, hb_font_extents_t*, void*)
00000000005f6c50 0000000000000090 t hb_ft_get_variation_glyph(hb_font_t*, void*, unsigned int, unsigned int, unsigned int*, void*)
00000000005f6ce0 0000000000000098 t hb_ft_get_nominal_glyphs(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, unsigned int*, unsigned int, void*)
00000000005f6d80 00000000000001f4 t hb_ft_get_glyph_h_advances(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, int*, unsigned int, void*)
00000000005f6f80 00000000000001fc t _hb_ft_color_line_get_color_stops(hb_color_line_t*, void*, unsigned int, unsigned int*, hb_color_stop_t*, void*)
00000000005f7180 0000000000000154 t _hb_ft_cubic_to(FT_Vector_ const*, FT_Vector_ const*, FT_Vector_ const*, void*)
00000000005f72e0 00000000000000cc t _hb_ft_line_to(FT_Vector_ const*, void*)
00000000005f73b0 00000000000000f8 t _hb_ft_conic_to(FT_Vector_ const*, FT_Vector_ const*, void*)
00000000005f74b0 00000000000000e4 t _hb_ft_move_to(FT_Vector_ const*, void*)
00000000005f75a0 0000000000000268 t hb_ft_draw_glyph(hb_font_t*, void*, unsigned int, hb_draw_funcs_t*, void*, void*)
00000000005f7810 000000000000106c t _hb_ft_paint(hb_ft_paint_context_t*, FT_Opaque_Paint_)
00000000005f8880 0000000000000028 T hb_ft_font_set_load_flags
00000000005f88b0 0000000000000510 t hb_ft_paint_glyph_colr(hb_font_t*, void*, unsigned int, hb_paint_funcs_t*, void*, unsigned int, unsigned int, void*) [clone .constprop.0]
00000000005f8dc0 00000000000001f0 t hb_ft_paint_glyph(hb_font_t*, void*, unsigned int, hb_paint_funcs_t*, void*, unsigned int, unsigned int, void*)
00000000005f8fb0 0000000000000178 t hb_ft_font_funcs_lazy_loader_t::create()
00000000005f9130 0000000000000144 t _hb_ft_font_set_funcs(hb_font_t*, FT_FaceRec_*, bool)
00000000005f9280 0000000000000098 T hb_ft_face_create
00000000005f9320 000000000000017c T hb_ft_font_changed
00000000005f94a0 0000000000000058 T hb_ft_font_create
00000000005f9500 000000000000010c t hb_table_lazy_loader_t<OT::OS2, 6u, true>::create(hb_face_t*)
00000000005f9610 0000000000000298 t hb_ft_get_nominal_glyph(hb_font_t*, void*, unsigned int, unsigned int*, void*)
00000000005f98b0 0000000000000014 t is_deleted_glyph(hb_glyph_info_t const*)
00000000005f98d0 0000000000000028 t hb_sanitize_context_t::reset_object() [clone .part.0]
00000000005f9900 0000000000000028 t bool hb_buffer_t::replace_glyphs<unsigned int>(unsigned int, unsigned int, unsigned int const*) [clone .part.0]
00000000005f9930 0000000000000028 t bool hb_buffer_t::replace_glyphs<OT::HBGlyphID16>(unsigned int, unsigned int, OT::HBGlyphID16 const*) [clone .part.0]
00000000005f9960 0000000000000320 t AAT::Lookup<OT::IntType<unsigned int, 4u> >::get_value_or_null(unsigned int, unsigned int) const [clone .part.0]
00000000005f9c80 00000000000006d0 t hb_buffer_t::_set_glyph_flags(unsigned int, unsigned int, unsigned int, bool, bool)
00000000005fa350 0000000000000140 t hb_font_t::get_glyph_v_origin_with_fallback(unsigned int, int*, int*)
00000000005fa490 00000000000001dc t hb_font_t::get_glyph_contour_point_for_origin(unsigned int, unsigned int, hb_direction_t, int*, int*)
00000000005fa670 0000000000000164 t AAT::ltag::sanitize(hb_sanitize_context_t*) const
00000000005fa7e0 0000000000000354 t AAT::ankr::get_anchor(unsigned int, unsigned int, unsigned int) const
00000000005fab40 0000000000000134 t AAT::feat::sanitize(hb_sanitize_context_t*) const
00000000005fac80 0000000000000174 t OT::MarkGlyphSetsFormat1::covers(unsigned int, unsigned int) const
00000000005fae00 000000000000023c t OT::GDEF::get_glyph_props(unsigned int) const
00000000005fb040 0000000000000288 t OT::hb_ot_apply_context_t::skipping_iterator_t::next(unsigned int*)
00000000005fb2d0 000000000000027c t AAT::TrackData::get_tracking(void const*, float) const
00000000005fb550 0000000000000204 t AAT::TrackData::sanitize(hb_sanitize_context_t*, void const*) const
00000000005fb760 0000000000000190 t AAT::trak::sanitize(hb_sanitize_context_t*) const
00000000005fb8f0 0000000000000008 t AAT::hb_aat_apply_context_t::~hb_aat_apply_context_t()
00000000005fb8f0 0000000000000008 T AAT::hb_aat_apply_context_t::~hb_aat_apply_context_t()
00000000005fb900 0000000000000058 t hb_aat_layout_find_feature_mapping(unsigned int)
00000000005fb960 000000000000004c t hb_aat_layout_zero_width_deleted_glyphs(hb_buffer_t*)
00000000005fb9b0 000000000000000c t hb_aat_layout_remove_deleted_glyphs(hb_buffer_t*)
00000000005fb9c0 00000000000001b8 t bool OT::OffsetTo<OT::Layout::Common::Coverage, OT::IntType<unsigned short, 2u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
00000000005fbb80 0000000000000348 t bool OT::ArrayOf<OT::OffsetTo<OT::CaretValue, OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> >::sanitize<OT::LigGlyph const*>(hb_sanitize_context_t*, OT::LigGlyph const*&&) const
00000000005fbed0 0000000000000270 t bool OT::ArrayOf<OT::OffsetTo<OT::Layout::Common::Coverage, OT::IntType<unsigned int, 4u>, true>, OT::IntType<unsigned short, 2u> >::sanitize<OT::MarkGlyphSetsFormat1 const*>(hb_sanitize_context_t*, OT::MarkGlyphSetsFormat1 const*&&) const
00000000005fc140 0000000000000398 t AAT::StateTable<AAT::ObsoleteTypes, void>::sanitize(hb_sanitize_context_t*, unsigned int*) const
00000000005fc4e0 00000000000001d0 t bool OT::OffsetTo<OT::ClassDef, OT::IntType<unsigned short, 2u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
00000000005fc6b0 00000000000005e0 t OT::GDEFVersion1_2<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
00000000005fcc90 000000000000029c W OT::GDEF::accelerator_t::accelerator_t(hb_face_t*)
00000000005fcc90 000000000000029c t OT::GDEF::accelerator_t::accelerator_t(hb_face_t*)
00000000005fcf30 0000000000000324 t OT::hb_ot_apply_context_t::hb_ot_apply_context_t(unsigned int, hb_font_t*, hb_buffer_t*)
00000000005fcf30 0000000000000324 W OT::hb_ot_apply_context_t::hb_ot_apply_context_t(unsigned int, hb_font_t*, hb_buffer_t*)
00000000005fd260 00000000000001d0 t AAT::hb_aat_apply_context_t::hb_aat_apply_context_t(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*, hb_blob_t*)
00000000005fd260 00000000000001d0 T AAT::hb_aat_apply_context_t::hb_aat_apply_context_t(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*, hb_blob_t*)
00000000005fd430 0000000000000208 t hb_vector_t<hb_vector_t<hb_aat_map_t::range_flags_t, true>, false>::resize(int, bool, bool)
00000000005fd640 0000000000000330 t AAT::Chain<AAT::ExtendedTypes>::compile_flags(hb_aat_map_builder_t const*) const
00000000005fd970 0000000000000338 t AAT::Chain<AAT::ObsoleteTypes>::compile_flags(hb_aat_map_builder_t const*) const
00000000005fdcb0 0000000000000260 t bool OT::VarSizedBinSearchArrayOf<AAT::LookupSegmentArray<OT::IntType<unsigned short, 2u> > >::sanitize<AAT::LookupFormat4<OT::IntType<unsigned short, 2u> > const*>(hb_sanitize_context_t*, AAT::LookupFormat4<OT::IntType<unsigned short, 2u> > const*&&) const
00000000005fdf10 0000000000000264 t AAT::Lookup<OT::IntType<unsigned short, 2u> >::sanitize(hb_sanitize_context_t*) const
00000000005fe180 000000000000027c t AAT::StateTable<AAT::ExtendedTypes, AAT::Format1Entry<true>::EntryData>::sanitize(hb_sanitize_context_t*, unsigned int*) const
00000000005fe400 000000000000027c t AAT::StateTable<AAT::ExtendedTypes, AAT::KerxSubTableFormat4<AAT::KerxSubTableHeader>::EntryData>::sanitize(hb_sanitize_context_t*, unsigned int*) const
00000000005fe680 000000000000042c t OT::hb_kern_machine_t<AAT::KerxSubTableFormat0<AAT::KerxSubTableHeader>::accelerator_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
00000000005feab0 0000000000000318 t hb_table_lazy_loader_t<AAT::trak, 32u, false>::create(hb_face_t*)
00000000005fedd0 000000000000032c t hb_aat_layout_track(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000005ff100 00000000000000e8 T hb_aat_layout_has_tracking
00000000005ff1f0 0000000000000140 t bool OT::UnsizedArrayOf<OT::OffsetTo<OT::ArrayOf<AAT::Anchor, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned short, 2u>, false> >::sanitize<void const*&>(hb_sanitize_context_t*, unsigned int, void const*&) const
00000000005ff330 0000000000000278 t bool OT::VarSizedBinSearchArrayOf<AAT::LookupSegmentSingle<OT::OffsetTo<OT::ArrayOf<AAT::Anchor, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned short, 2u>, false> > >::sanitize<void const*&>(hb_sanitize_context_t*, void const*&) const
00000000005ff5b0 000000000000033c t bool OT::VarSizedBinSearchArrayOf<AAT::LookupSegmentArray<OT::OffsetTo<OT::ArrayOf<AAT::Anchor, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned short, 2u>, false> > >::sanitize<AAT::LookupFormat4<OT::OffsetTo<OT::ArrayOf<AAT::Anchor, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned short, 2u>, false> > const*, void const*&>(hb_sanitize_context_t*, AAT::LookupFormat4<OT::OffsetTo<OT::ArrayOf<AAT::Anchor, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned short, 2u>, false> > const*&&, void const*&) const
00000000005ff8f0 0000000000000254 t bool OT::VarSizedBinSearchArrayOf<AAT::LookupSingle<OT::OffsetTo<OT::ArrayOf<AAT::Anchor, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned short, 2u>, false> > >::sanitize<void const*&>(hb_sanitize_context_t*, void const*&) const
00000000005ffb50 000000000000025c t AAT::ankr::sanitize(hb_sanitize_context_t*) const
00000000005ffdb0 00000000000001fc t hb_table_lazy_loader_t<AAT::ankr, 31u, false>::create(hb_face_t*)
00000000005fffb0 0000000000000398 t AAT::StateTable<AAT::ObsoleteTypes, AAT::ContextualSubtable<AAT::ObsoleteTypes>::EntryData>::sanitize(hb_sanitize_context_t*, unsigned int*) const
0000000000600350 0000000000000398 t AAT::StateTable<AAT::ObsoleteTypes, AAT::InsertionSubtable<AAT::ObsoleteTypes>::EntryData>::sanitize(hb_sanitize_context_t*, unsigned int*) const
00000000006006f0 0000000000000310 t AAT::Lookup<OT::HBGlyphID16>::get_value(unsigned int, unsigned int) const
0000000000600a00 0000000000000810 t void AAT::StateTableDriver<AAT::ObsoleteTypes, void>::drive<AAT::RearrangementSubtable<AAT::ObsoleteTypes>::driver_context_t>(AAT::RearrangementSubtable<AAT::ObsoleteTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
0000000000601210 0000000000000770 t void AAT::StateTableDriver<AAT::ObsoleteTypes, AAT::ContextualSubtable<AAT::ObsoleteTypes>::EntryData>::drive<AAT::ContextualSubtable<AAT::ObsoleteTypes>::driver_context_t>(AAT::ContextualSubtable<AAT::ObsoleteTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
0000000000601980 0000000000000918 t void AAT::StateTableDriver<AAT::ObsoleteTypes, void>::drive<AAT::LigatureSubtable<AAT::ObsoleteTypes>::driver_context_t>(AAT::LigatureSubtable<AAT::ObsoleteTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000006022a0 0000000000000974 t void AAT::StateTableDriver<AAT::ObsoleteTypes, AAT::InsertionSubtable<AAT::ObsoleteTypes>::EntryData>::drive<AAT::InsertionSubtable<AAT::ObsoleteTypes>::driver_context_t>(AAT::InsertionSubtable<AAT::ObsoleteTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
0000000000602c20 000000000000071c t AAT::Chain<AAT::ObsoleteTypes>::apply(AAT::hb_aat_apply_context_t*) const
0000000000603340 0000000000000260 t bool OT::VarSizedBinSearchArrayOf<AAT::LookupSegmentArray<OT::HBGlyphID16> >::sanitize<AAT::LookupFormat4<OT::HBGlyphID16> const*>(hb_sanitize_context_t*, AAT::LookupFormat4<OT::HBGlyphID16> const*&&) const
00000000006035a0 0000000000000264 t AAT::Lookup<OT::HBGlyphID16>::sanitize(hb_sanitize_context_t*) const
0000000000603810 0000000000000094 t AAT::ContextualSubtable<AAT::ObsoleteTypes>::sanitize(hb_sanitize_context_t*) const
00000000006038b0 0000000000000474 t AAT::mortmorx<AAT::ObsoleteTypes, 1836020340u>::sanitize(hb_sanitize_context_t*) const
0000000000603d30 00000000000001fc t hb_table_lazy_loader_t<AAT::mort, 29u, false>::create(hb_face_t*)
0000000000603f30 0000000000000238 t AAT::ContextualSubtable<AAT::ExtendedTypes>::driver_context_t::transition(AAT::StateTableDriver<AAT::ExtendedTypes, AAT::ContextualSubtable<AAT::ExtendedTypes>::EntryData>*, AAT::Entry<AAT::ContextualSubtable<AAT::ExtendedTypes>::EntryData> const&)
0000000000604170 0000000000000310 t AAT::Lookup<OT::IntType<unsigned short, 2u> >::get_value(unsigned int, unsigned int) const
0000000000604480 000000000000080c t void AAT::StateTableDriver<AAT::ExtendedTypes, AAT::KerxSubTableFormat4<AAT::KerxSubTableHeader>::EntryData>::drive<AAT::KerxSubTableFormat4<AAT::KerxSubTableHeader>::driver_context_t>(AAT::KerxSubTableFormat4<AAT::KerxSubTableHeader>::driver_context_t*, AAT::hb_aat_apply_context_t*)
0000000000604c90 0000000000000784 t void AAT::StateTableDriver<AAT::ExtendedTypes, AAT::Format1Entry<true>::EntryData>::drive<AAT::KerxSubTableFormat1<AAT::KerxSubTableHeader>::driver_context_t>(AAT::KerxSubTableFormat1<AAT::KerxSubTableHeader>::driver_context_t*, AAT::hb_aat_apply_context_t*)
0000000000605420 000000000000048c t AAT::KerxSubTableFormat6<AAT::KerxSubTableHeader>::get_kerning(unsigned int, unsigned int, AAT::hb_aat_apply_context_t*) const
00000000006058b0 000000000000033c t OT::hb_kern_machine_t<AAT::KerxSubTableFormat6<AAT::KerxSubTableHeader>::accelerator_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
0000000000605bf0 00000000000008cc t void AAT::StateTableDriver<AAT::ExtendedTypes, AAT::LigatureEntry<true>::EntryData>::drive<AAT::LigatureSubtable<AAT::ExtendedTypes>::driver_context_t>(AAT::LigatureSubtable<AAT::ExtendedTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000006064c0 00000000000007f8 t void AAT::StateTableDriver<AAT::ExtendedTypes, void>::drive<AAT::RearrangementSubtable<AAT::ExtendedTypes>::driver_context_t>(AAT::RearrangementSubtable<AAT::ExtendedTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
0000000000606cc0 0000000000000508 t void AAT::StateTableDriver<AAT::ExtendedTypes, AAT::ContextualSubtable<AAT::ExtendedTypes>::EntryData>::drive<AAT::ContextualSubtable<AAT::ExtendedTypes>::driver_context_t>(AAT::ContextualSubtable<AAT::ExtendedTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000006071d0 000000000000095c t void AAT::StateTableDriver<AAT::ExtendedTypes, AAT::InsertionSubtable<AAT::ExtendedTypes>::EntryData>::drive<AAT::InsertionSubtable<AAT::ExtendedTypes>::driver_context_t>(AAT::InsertionSubtable<AAT::ExtendedTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
0000000000607b30 00000000000006fc t AAT::Chain<AAT::ExtendedTypes>::apply(AAT::hb_aat_apply_context_t*) const
0000000000608230 0000000000000478 t OT::hb_kern_machine_t<AAT::KerxSubTableFormat2<AAT::KerxSubTableHeader>::accelerator_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
00000000006086b0 0000000000000268 t bool OT::VarSizedBinSearchArrayOf<AAT::LookupSegmentArray<OT::IntType<unsigned int, 4u> > >::sanitize<AAT::LookupFormat4<OT::IntType<unsigned int, 4u> > const*>(hb_sanitize_context_t*, AAT::LookupFormat4<OT::IntType<unsigned int, 4u> > const*&&) const
0000000000608920 0000000000000268 t AAT::Lookup<OT::IntType<unsigned int, 4u> >::sanitize(hb_sanitize_context_t*) const
0000000000608b90 000000000000025c t AAT::KerxSubTableFormat6<AAT::KerxSubTableHeader>::sanitize(hb_sanitize_context_t*) const
0000000000608df0 00000000000002ac t hb_sanitize_context_t::return_t AAT::KerxSubTable::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*) const
00000000006090a0 0000000000000270 t AAT::KerxTable<AAT::kerx>::sanitize(hb_sanitize_context_t*) const
0000000000609310 00000000000001fc t hb_table_lazy_loader_t<AAT::kerx, 30u, false>::create(hb_face_t*)
0000000000609510 000000000000080c t hb_aat_layout_position(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
0000000000609d20 00000000000000e8 T hb_aat_layout_has_positioning
0000000000609e10 000000000000027c t AAT::StateTable<AAT::ExtendedTypes, void>::sanitize(hb_sanitize_context_t*, unsigned int*) const
000000000060a090 000000000000027c t AAT::StateTable<AAT::ExtendedTypes, AAT::ContextualSubtable<AAT::ExtendedTypes>::EntryData>::sanitize(hb_sanitize_context_t*, unsigned int*) const
000000000060a310 00000000000001c8 t AAT::ContextualSubtable<AAT::ExtendedTypes>::sanitize(hb_sanitize_context_t*) const
000000000060a4e0 000000000000027c t AAT::StateTable<AAT::ExtendedTypes, AAT::LigatureEntry<true>::EntryData>::sanitize(hb_sanitize_context_t*, unsigned int*) const
000000000060a760 000000000000027c t AAT::StateTable<AAT::ExtendedTypes, AAT::InsertionSubtable<AAT::ExtendedTypes>::EntryData>::sanitize(hb_sanitize_context_t*, unsigned int*) const
000000000060a9e0 00000000000003a8 t AAT::Chain<AAT::ExtendedTypes>::sanitize(hb_sanitize_context_t*, unsigned int) const [clone .isra.0]
000000000060ad90 000000000000031c t hb_table_lazy_loader_t<AAT::morx, 28u, false>::create(hb_face_t*)
000000000060b0b0 0000000000000458 t hb_aat_layout_substitute(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*, hb_feature_t const*, unsigned int)
000000000060b510 0000000000000194 T hb_aat_layout_has_substitution
000000000060b6b0 000000000000046c t hb_aat_layout_compile_map(hb_aat_map_builder_t const*, hb_aat_map_t*)
000000000060bb20 0000000000000060 W hb_aat_map_builder_t::feature_info_t::cmp(void const*, void const*)
000000000060bb80 0000000000000094 W hb_aat_map_builder_t::feature_event_t::cmp(void const*, void const*)
000000000060bc20 0000000000000420 t void sort_r_simple<>(void*, unsigned long, unsigned long, int (*)(void const*, void const*))
000000000060c040 0000000000000864 t hb_aat_map_builder_t::compile(hb_aat_map_t&)
000000000060c8b0 000000000000011c t hb_table_lazy_loader_t<AAT::feat, 34u, false>::create(hb_face_t*)
000000000060c9d0 00000000000006ac t hb_aat_map_builder_t::add_feature(hb_feature_t const&)
000000000060d080 000000000000000c T hb_blob_get_empty
000000000060d090 0000000000000058 T hb_blob_reference
000000000060d0f0 0000000000000168 T hb_blob_destroy
000000000060d260 0000000000000004 t _hb_blob_destroy(void*)
000000000060d270 0000000000000018 T hb_blob_make_immutable
000000000060d290 00000000000000b0 t hb_blob_t::try_make_writable()
000000000060d340 0000000000000060 T hb_blob_get_data_writable
000000000060d3a0 00000000000000d4 T hb_blob_create_or_fail
000000000060d480 0000000000000030 T hb_blob_create
000000000060d4b0 0000000000000094 T hb_blob_create_sub_blob
000000000060d550 00000000000000d4 t buffer_verify_error(hb_buffer_t*, hb_font_t*, char const*, ...)
000000000060d630 000000000000093c t hb_buffer_t::verify(hb_buffer_t*, hb_font_t*, hb_feature_t const*, unsigned int, char const* const*)
000000000060df70 0000000000000004 t hb_draw_move_to_nil(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
000000000060df80 0000000000000054 t hb_draw_quadratic_to_nil(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, void*)
000000000060dfe0 0000000000000004 t hb_draw_cubic_to_nil(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, float, float, void*)
000000000060dff0 0000000000000004 t hb_draw_close_path_nil(hb_draw_funcs_t*, void*, hb_draw_state_t*, void*)
000000000060e000 000000000000008c t _hb_draw_funcs_set_middle(hb_draw_funcs_t*, void*, void (*)(void*))
000000000060e090 0000000000000004 t hb_draw_line_to_nil(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
000000000060e0a0 0000000000000070 t _hb_draw_funcs_set_preamble(hb_draw_funcs_t*, bool, void**, void (**)(void*))
000000000060e110 00000000000000c0 T hb_draw_funcs_set_move_to_func
000000000060e1d0 00000000000000c0 T hb_draw_funcs_set_line_to_func
000000000060e290 00000000000000c0 T hb_draw_funcs_set_quadratic_to_func
000000000060e350 00000000000000c0 T hb_draw_funcs_set_cubic_to_func
000000000060e410 00000000000000c0 T hb_draw_funcs_set_close_path_func
000000000060e4d0 0000000000000070 T hb_draw_funcs_create
000000000060e540 000000000000000c T hb_draw_funcs_get_empty
000000000060e550 00000000000001f8 T hb_draw_funcs_destroy
000000000060e750 0000000000000018 T hb_draw_funcs_make_immutable
000000000060e770 0000000000000028 t _hb_face_for_data_closure_destroy(void*)
000000000060e7a0 00000000000000e4 t void hb_object_fini<hb_sparseset_t<hb_bit_set_invertible_t> >(hb_sparseset_t<hb_bit_set_invertible_t>*)
000000000060e7a0 00000000000000e4 t void hb_object_fini<hb_face_t>(hb_face_t*)
000000000060e890 0000000000000204 t OT::OpenTypeFontFile::get_face(unsigned int, unsigned int*) const
000000000060eaa0 0000000000000134 t _hb_face_for_data_reference_table(hb_face_t*, unsigned int, void*)
000000000060ebe0 000000000000000c T hb_face_get_empty
000000000060ebf0 00000000000000fc T hb_face_create_for_tables
000000000060ecf0 0000000000000058 T hb_face_reference
000000000060ed50 00000000000000f8 T hb_face_destroy
000000000060ee50 00000000000003cc T hb_face_set_user_data
000000000060f220 00000000000000d8 T hb_face_get_user_data
000000000060f300 0000000000000018 T hb_face_make_immutable
000000000060f320 0000000000000030 T hb_face_reference_table
000000000060f350 0000000000000014 T hb_face_set_index
000000000060f370 000000000000001c T hb_face_set_upem
000000000060f390 0000000000000018 T hb_face_get_upem
000000000060f3b0 000000000000001c T hb_face_get_glyph_count
000000000060f3d0 00000000000001e4 t bool OT::ArrayOf<OT::OffsetTo<OT::OpenTypeOffsetTable, OT::IntType<unsigned int, 4u>, true>, OT::IntType<unsigned int, 4u> >::sanitize<OT::TTCHeaderVersion1 const*>(hb_sanitize_context_t*, OT::TTCHeaderVersion1 const*&&) const
000000000060f5c0 0000000000000240 t bool OT::UnsizedArrayOf<OT::ResourceRecord>::sanitize<void const*&>(hb_sanitize_context_t*, unsigned int, void const*&) const
000000000060f800 00000000000001c4 t bool OT::ArrayOfM1<OT::ResourceTypeRecord, OT::IntType<unsigned short, 2u> >::sanitize<OT::ArrayOfM1<OT::ResourceTypeRecord, OT::IntType<unsigned short, 2u> > const*, void const*&>(hb_sanitize_context_t*, OT::ArrayOfM1<OT::ResourceTypeRecord, OT::IntType<unsigned short, 2u> > const*&&, void const*&) const
000000000060f9d0 00000000000001b0 t OT::ResourceForkHeader::sanitize(hb_sanitize_context_t*) const
000000000060fb80 00000000000001b4 t OT::OpenTypeFontFile::sanitize(hb_sanitize_context_t*) const
000000000060fd40 000000000000031c t hb_blob_t* hb_sanitize_context_t::sanitize_blob<OT::OpenTypeFontFile>(hb_blob_t*)
0000000000610060 00000000000000a0 T hb_face_create
0000000000610100 0000000000000008 t _hb_fallback_shaper_face_data_create
0000000000610110 0000000000000004 t _hb_fallback_shaper_face_data_destroy
0000000000610120 0000000000000008 t _hb_fallback_shaper_font_data_create
0000000000610130 0000000000000004 t _hb_fallback_shaper_font_data_destroy
0000000000610140 00000000000004ec t _hb_fallback_shape
0000000000610630 0000000000000020 t OT::cff1::lookup_expert_charset_for_sid(unsigned int)
0000000000610650 0000000000000020 t OT::cff1::lookup_expert_subset_charset_for_sid(unsigned int)
0000000000610670 0000000000000064 t OT::cff1::lookup_expert_charset_for_glyph(unsigned int)
00000000006106e0 0000000000000064 t OT::cff1::lookup_expert_subset_charset_for_glyph(unsigned int)
0000000000610750 00000000000000f8 t cff1_path_param_t::move_to(CFF::point_t const&)
0000000000610850 00000000000000e8 t cff1_path_param_t::line_to(CFF::point_t const&)
0000000000610940 0000000000000140 t cff1_path_param_t::cubic_to(CFF::point_t const&, CFF::point_t const&, CFF::point_t const&)
0000000000610a80 000000000000017c t OT::cff1::accelerator_templ_t<CFF::cff1_private_dict_opset_t, CFF::cff1_private_dict_values_base_t<CFF::dict_val_t> >::std_code_to_glyph(unsigned int) const
0000000000610c00 0000000000000420 t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::hlineto(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
0000000000611020 0000000000000424 t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::vlineto(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
0000000000611450 0000000000000370 t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::rrcurveto(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000006117c0 0000000000000564 t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::rcurveline(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
0000000000611d30 0000000000000568 t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::rlinecurve(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000006122a0 0000000000000dec t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::vhcurveto(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
0000000000613090 0000000000000dec t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::hvcurveto(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
0000000000613e80 00000000000003fc t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::hflex(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
0000000000614280 000000000000041c t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::flex(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000006146a0 0000000000000408 t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::hflex1(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
0000000000614ab0 0000000000000378 t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::flex1(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
0000000000614e30 0000000000000fd0 t CFF::cs_opset_t<CFF::number_t, cff1_cs_opset_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t, cff1_path_procs_extents_t>::process_op(unsigned int, CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
0000000000615e00 00000000000003f4 t _get_bounds(OT::cff1::accelerator_t const*, unsigned int, bounds_t&, bool)
0000000000616200 00000000000000e4 t OT::cff1::accelerator_t::get_extents(hb_font_t*, unsigned int, hb_glyph_extents_t*) const
00000000006162f0 0000000000000344 t cff1_cs_opset_extents_t::process_seac(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
0000000000616640 00000000000002f0 t CFF::path_procs_t<cff1_path_procs_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t>::rcurveline(CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
0000000000616930 00000000000002cc t CFF::path_procs_t<cff1_path_procs_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t>::rlinecurve(CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
0000000000616c00 0000000000000710 t CFF::path_procs_t<cff1_path_procs_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t>::vhcurveto(CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
0000000000617310 0000000000000710 t CFF::path_procs_t<cff1_path_procs_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t>::hvcurveto(CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
0000000000617a20 00000000000000f8 t CFF::path_procs_t<cff1_path_procs_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t>::hflex(CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
0000000000617b20 00000000000000bc t CFF::path_procs_t<cff1_path_procs_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t>::flex(CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
0000000000617be0 00000000000000f0 t CFF::path_procs_t<cff1_path_procs_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t>::hflex1(CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
0000000000617cd0 000000000000010c t CFF::path_procs_t<cff1_path_procs_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t>::flex1(CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
0000000000617de0 00000000000011f4 t CFF::cs_opset_t<CFF::number_t, cff1_cs_opset_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t, cff1_path_procs_path_t>::process_op(unsigned int, CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
0000000000618fe0 0000000000000464 t _get_path(OT::cff1::accelerator_t const*, hb_font_t*, unsigned int, hb_draw_session_t&, bool, CFF::point_t*)
0000000000619450 000000000000000c t OT::cff1::accelerator_t::get_path(hb_font_t*, unsigned int, hb_draw_session_t&) const
0000000000619460 00000000000001ec t cff1_cs_opset_path_t::process_seac(CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
0000000000619650 0000000000000028 t CFF::CFFIndex<OT::IntType<unsigned int, 4u> >::offset_at(unsigned int) const [clone .part.0]
0000000000619680 00000000000000d8 t cff2_path_param_t::line_to(CFF::point_t const&) [clone .isra.0]
0000000000619760 0000000000000164 t cff2_path_param_t::cubic_to(CFF::point_t const&, CFF::point_t const&, CFF::point_t const&) [clone .isra.0]
00000000006198d0 00000000000000e8 t cff2_path_param_t::move_to(CFF::point_t const&) [clone .isra.0]
00000000006199c0 000000000000016c t OT::VarData::get_region_scalars(int const*, unsigned int, OT::VarRegionList const&, float*, unsigned int) const
0000000000619b30 00000000000000a4 t CFF::FDSelect3_4<OT::IntType<unsigned int, 4u>, OT::IntType<unsigned short, 2u> >::get_fd(unsigned int) const
0000000000619be0 000000000000020c t CFF::CFFIndex<OT::IntType<unsigned int, 4u> >::operator[](unsigned int) const
0000000000619df0 00000000000001b8 t CFF::cff2_cs_interp_env_t<CFF::number_t>::cff2_cs_interp_env_t<OT::cff2::accelerator_t const>(hb_array_t<unsigned char const> const&, OT::cff2::accelerator_t const&, unsigned int, int const*, unsigned int)
0000000000619df0 00000000000001b8 W CFF::cff2_cs_interp_env_t<CFF::number_t>::cff2_cs_interp_env_t<OT::cff2::accelerator_t const>(hb_array_t<unsigned char const> const&, OT::cff2::accelerator_t const&, unsigned int, int const*, unsigned int)
0000000000619fb0 00000000000002f0 t CFF::cs_interp_env_t<CFF::number_t, CFF::Subrs<OT::IntType<unsigned int, 4u> > >::call_subr(CFF::biased_subrs_t<CFF::Subrs<OT::IntType<unsigned int, 4u> > > const&, CFF::cs_type_t)
000000000061a2a0 00000000000003f4 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::hlineto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
000000000061a6a0 00000000000003f4 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::vlineto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
000000000061aaa0 0000000000000370 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::rrcurveto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
000000000061ae10 0000000000000554 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::rcurveline(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
000000000061b370 0000000000000554 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::rlinecurve(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
000000000061b8d0 0000000000000db8 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::vhcurveto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
000000000061c690 0000000000000db0 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::hvcurveto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
000000000061d440 00000000000003e8 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::hflex(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
000000000061d830 0000000000000408 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::flex(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
000000000061dc40 00000000000003f4 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::hflex1(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
000000000061e040 0000000000000364 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::flex1(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
000000000061e3b0 0000000000000c18 t CFF::cs_opset_t<CFF::number_t, cff2_cs_opset_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t, cff2_path_procs_extents_t>::process_op(unsigned int, CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
000000000061efd0 0000000000000210 t CFF::cff2_cs_interp_env_t<CFF::number_t>::process_blend()
000000000061f1e0 00000000000005b0 t OT::cff2::accelerator_t::get_extents(hb_font_t*, unsigned int, hb_glyph_extents_t*) const
000000000061f790 00000000000002f0 t CFF::path_procs_t<cff2_path_procs_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t>::rcurveline(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
000000000061fa80 00000000000002d0 t CFF::path_procs_t<cff2_path_procs_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t>::rlinecurve(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
000000000061fd50 0000000000000718 t CFF::path_procs_t<cff2_path_procs_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t>::vhcurveto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
0000000000620470 0000000000000718 t CFF::path_procs_t<cff2_path_procs_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t>::hvcurveto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
0000000000620b90 0000000000000100 t CFF::path_procs_t<cff2_path_procs_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t>::hflex(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
0000000000620c90 00000000000000c0 t CFF::path_procs_t<cff2_path_procs_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t>::flex(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
0000000000620d50 00000000000000f4 t CFF::path_procs_t<cff2_path_procs_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t>::hflex1(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
0000000000620e50 0000000000000114 t CFF::path_procs_t<cff2_path_procs_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t>::flex1(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
0000000000620f70 0000000000000e34 t CFF::cs_opset_t<CFF::number_t, cff2_cs_opset_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t, cff2_path_procs_path_t>::process_op(unsigned int, CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
0000000000621db0 00000000000006c0 t OT::cff2::accelerator_t::get_path(hb_font_t*, unsigned int, hb_draw_session_t&) const
0000000000622470 0000000000000220 t OT::CPAL::sanitize(hb_sanitize_context_t*) const
0000000000622690 00000000000001b8 t hb_lazy_loader_t<OT::CPAL, hb_table_lazy_loader_t<OT::CPAL, 36u, true>, hb_face_t, 36u, hb_blob_t>::get() const
0000000000622850 0000000000000148 T hb_ot_color_palette_get_colors
00000000006229a0 0000000000000008 t hb_ot_face_t::init0(hb_face_t*)
00000000006229b0 0000000000000164 W OT::cff2::accelerator_templ_t<CFF::cff2_private_dict_opset_t, CFF::cff2_private_dict_values_base_t<CFF::dict_val_t> >::~accelerator_templ_t()
00000000006229b0 0000000000000164 t OT::cff2::accelerator_templ_t<CFF::cff2_private_dict_opset_t, CFF::cff2_private_dict_values_base_t<CFF::dict_val_t> >::~accelerator_templ_t()
0000000000622b20 00000000000001b8 t hb_lazy_loader_t<OT::cff1_accelerator_t, hb_face_lazy_loader_t<OT::cff1_accelerator_t, 16u>, hb_face_t, 16u, OT::cff1_accelerator_t>::fini()
0000000000622ce0 00000000000006e4 t hb_ot_face_t::fini()
00000000006233d0 0000000000000004 t hb_paint_push_transform_nil(hb_paint_funcs_t*, void*, float, float, float, float, float, float, void*)
00000000006233e0 0000000000000004 t hb_paint_pop_transform_nil(hb_paint_funcs_t*, void*, void*)
00000000006233f0 0000000000000004 t hb_paint_push_clip_glyph_nil(hb_paint_funcs_t*, void*, unsigned int, hb_font_t*, void*)
0000000000623400 0000000000000004 t hb_paint_push_clip_rectangle_nil(hb_paint_funcs_t*, void*, float, float, float, float, void*)
0000000000623410 0000000000000004 t hb_paint_color_nil(hb_paint_funcs_t*, void*, int, unsigned int, void*)
0000000000623420 0000000000000008 t hb_paint_image_nil(hb_paint_funcs_t*, void*, hb_blob_t*, unsigned int, unsigned int, unsigned int, float, hb_glyph_extents_t*, void*)
0000000000623430 0000000000000004 t hb_paint_linear_gradient_nil(hb_paint_funcs_t*, void*, hb_color_line_t*, float, float, float, float, float, float, void*)
0000000000623440 0000000000000004 t hb_paint_sweep_gradient_nil(hb_paint_funcs_t*, void*, hb_color_line_t*, float, float, float, float, void*)
0000000000623450 0000000000000004 t hb_paint_pop_group_nil(hb_paint_funcs_t*, void*, hb_paint_composite_mode_t, void*)
0000000000623460 0000000000000008 t hb_paint_custom_palette_color_nil(hb_paint_funcs_t*, void*, unsigned int, unsigned int*, void*)
0000000000623470 000000000000008c t _hb_paint_funcs_set_middle(hb_paint_funcs_t*, void*, void (*)(void*))
0000000000623500 0000000000000004 t hb_paint_radial_gradient_nil(hb_paint_funcs_t*, void*, hb_color_line_t*, float, float, float, float, float, float, void*)
0000000000623510 0000000000000004 t hb_paint_pop_clip_nil(hb_paint_funcs_t*, void*, void*)
0000000000623520 0000000000000070 t _hb_paint_funcs_set_preamble(hb_paint_funcs_t*, bool, void**, void (**)(void*))
0000000000623590 0000000000000004 t hb_paint_push_group_nil(hb_paint_funcs_t*, void*, void*)
00000000006235a0 00000000000000c0 T hb_paint_funcs_set_push_transform_func
0000000000623660 00000000000000c0 T hb_paint_funcs_set_pop_transform_func
0000000000623720 00000000000000c0 T hb_paint_funcs_set_push_clip_glyph_func
00000000006237e0 00000000000000c0 T hb_paint_funcs_set_push_clip_rectangle_func
00000000006238a0 00000000000000c0 T hb_paint_funcs_set_pop_clip_func
0000000000623960 00000000000000c0 T hb_paint_funcs_set_color_func
0000000000623a20 00000000000000c0 T hb_paint_funcs_set_image_func
0000000000623ae0 00000000000000c0 T hb_paint_funcs_set_linear_gradient_func
0000000000623ba0 00000000000000c0 T hb_paint_funcs_set_radial_gradient_func
0000000000623c60 00000000000000c0 T hb_paint_funcs_set_sweep_gradient_func
0000000000623d20 00000000000000c0 T hb_paint_funcs_set_push_group_func
0000000000623de0 00000000000000c0 T hb_paint_funcs_set_pop_group_func
0000000000623ea0 0000000000000080 T hb_paint_funcs_create
0000000000623f20 000000000000000c T hb_paint_funcs_get_empty
0000000000623f30 00000000000002d8 T hb_paint_funcs_destroy
0000000000624210 0000000000000018 T hb_paint_funcs_make_immutable
0000000000624230 0000000000000010 t OT::match_glyph(hb_glyph_info_t&, unsigned int, void const*)
0000000000624240 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::SinglePosFormat1>(void const*, OT::hb_ot_apply_context_t*, bool)
0000000000624250 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::SinglePosFormat2>(void const*, OT::hb_ot_apply_context_t*, bool)
0000000000624260 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::PairPosFormat1_3<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
0000000000624270 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::PairPosFormat2_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
0000000000624280 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::CursivePosFormat1>(void const*, OT::hb_ot_apply_context_t*, bool)
0000000000624290 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::MarkBasePosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006242a0 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::MarkLigPosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006242b0 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::MarkMarkPosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006242c0 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::ContextFormat1_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006242d0 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::ContextFormat3>(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006242e0 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::ChainContextFormat1_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006242f0 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::ChainContextFormat3>(void const*, OT::hb_ot_apply_context_t*, bool)
0000000000624300 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GSUB_impl::SingleSubstFormat1_3<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
0000000000624310 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GSUB_impl::SingleSubstFormat2_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
0000000000624320 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GSUB_impl::MultipleSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
0000000000624330 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GSUB_impl::AlternateSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
0000000000624340 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GSUB_impl::LigatureSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
0000000000624350 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GSUB_impl::ReverseChainSingleSubstFormat1>(void const*, OT::hb_ot_apply_context_t*, bool)
0000000000624360 00000000000000ac t OT::Layout::GPOS_impl::reverse_cursive_minor_offset(hb_glyph_position_t*, unsigned int, hb_direction_t, unsigned int)
0000000000624410 00000000000001d4 t OT::Layout::propagate_attachment_offsets(hb_glyph_position_t*, unsigned int, unsigned int, hb_direction_t, unsigned int)
00000000006245f0 0000000000000028 t hb_sanitize_context_t::reset_object() [clone .part.0]
0000000000624620 0000000000000028 t hb_buffer_t::deallocate_var(unsigned int, unsigned int) [clone .part.0]
0000000000624650 0000000000000028 t hb_buffer_t::assert_var(unsigned int, unsigned int) [clone .part.0]
0000000000624680 0000000000000028 t bool hb_buffer_t::replace_glyphs<unsigned int>(unsigned int, unsigned int, unsigned int const*) [clone .part.0]
00000000006246b0 0000000000000090 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::ChainContextFormat2_5<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
0000000000624740 00000000000001cc t bool OT::Layout::Common::Coverage::collect_coverage<hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u> > > >(hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u> > >*) const [clone .isra.0]
0000000000624910 000000000000021c t OT::hb_accelerate_subtables_context_t::return_t OT::Context::dispatch<OT::hb_accelerate_subtables_context_t>(OT::hb_accelerate_subtables_context_t*) const [clone .isra.0]
0000000000624b30 0000000000000090 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::ContextFormat2_5<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
0000000000624bc0 000000000000024c t OT::hb_accelerate_subtables_context_t::return_t OT::ChainContext::dispatch<OT::hb_accelerate_subtables_context_t>(OT::hb_accelerate_subtables_context_t*) const [clone .isra.0]
0000000000624e10 0000000000000264 t OT::hb_accelerate_subtables_context_t::return_t OT::Layout::GPOS_impl::PosLookupSubTable::dispatch<OT::hb_accelerate_subtables_context_t>(OT::hb_accelerate_subtables_context_t*, unsigned int) const [clone .isra.0]
0000000000625080 0000000000000108 t OT::match_class(hb_glyph_info_t&, unsigned int, void const*)
0000000000625190 00000000000001fc t OT::hb_accelerate_subtables_context_t::return_t OT::Layout::GSUB_impl::SubstLookupSubTable::dispatch<OT::hb_accelerate_subtables_context_t>(OT::hb_accelerate_subtables_context_t*, unsigned int) const [clone .isra.0]
0000000000625390 0000000000000110 t hb_buffer_t::reverse_range(unsigned int, unsigned int)
00000000006254a0 0000000000000350 t OT::apply_lookup(OT::hb_ot_apply_context_t*, unsigned int, unsigned int*, unsigned int, OT::LookupRecord const*, unsigned int)
00000000006257f0 0000000000000024 t hb_buffer_t::unsafe_to_concat(unsigned int, unsigned int)
0000000000625820 0000000000000024 t hb_buffer_t::unsafe_to_concat_from_outbuffer(unsigned int, unsigned int)
0000000000625850 0000000000000124 t OT::Layout::Common::Coverage::get_coverage(unsigned int) const
0000000000625980 0000000000000034 t OT::match_coverage(hb_glyph_info_t&, unsigned int, void const*)
00000000006259c0 0000000000000088 t OT::IndexArray::get_indexes(unsigned int, unsigned int*, unsigned int*) const
0000000000625a50 00000000000000ec t OT::ClassDef::get_class(unsigned int) const
0000000000625b40 0000000000000060 t OT::match_class_cached(hb_glyph_info_t&, unsigned int, void const*)
0000000000625ba0 00000000000001a8 t OT::Device::get_x_delta(hb_font_t*, OT::VariationStore const&, float*) const
0000000000625d50 00000000000001a8 t OT::Device::get_y_delta(hb_font_t*, OT::VariationStore const&, float*) const
0000000000625f00 00000000000001a0 t OT::hb_ot_apply_context_t::matcher_t::may_skip(OT::hb_ot_apply_context_t const*, hb_glyph_info_t const&) const
00000000006260a0 0000000000000048 t OT::hb_ot_apply_context_t::skipping_iterator_t::reset(unsigned int, unsigned int)
00000000006260f0 000000000000028c t bool OT::match_input<OT::HBGlyphID16>(OT::hb_ot_apply_context_t*, unsigned int, OT::HBGlyphID16 const*, bool (*)(hb_glyph_info_t&, unsigned int, void const*), void const*, unsigned int*, unsigned int*, unsigned int*)
00000000006260f0 000000000000028c t bool OT::match_input<OT::IntType<unsigned short, 2u> >(OT::hb_ot_apply_context_t*, unsigned int, OT::IntType<unsigned short, 2u> const*, bool (*)(hb_glyph_info_t&, unsigned int, void const*), void const*, unsigned int*, unsigned int*, unsigned int*)
0000000000626380 00000000000000d4 t bool OT::context_apply_lookup<OT::IntType<unsigned short, 2u> >(OT::hb_ot_apply_context_t*, unsigned int, OT::IntType<unsigned short, 2u> const*, unsigned int, OT::LookupRecord const*, OT::ContextApplyLookupContext const&) [clone .isra.0]
0000000000626460 00000000000000a4 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::ContextFormat3>(void const*, OT::hb_ot_apply_context_t*)
0000000000626510 00000000000000a4 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::ContextFormat3>(void const*, OT::hb_ot_apply_context_t*)
00000000006265c0 0000000000000170 t OT::hb_ot_apply_context_t::skipping_iterator_t::prev(unsigned int*)
0000000000626730 0000000000000280 t bool OT::chain_context_apply_lookup<OT::IntType<unsigned short, 2u> >(OT::hb_ot_apply_context_t*, unsigned int, OT::IntType<unsigned short, 2u> const*, unsigned int, OT::IntType<unsigned short, 2u> const*, unsigned int, OT::IntType<unsigned short, 2u> const*, unsigned int, OT::LookupRecord const*, OT::ChainContextApplyLookupContext const&)
00000000006269b0 0000000000000158 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::ChainContextFormat3>(void const*, OT::hb_ot_apply_context_t*)
0000000000626b10 0000000000000158 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::ChainContextFormat3>(void const*, OT::hb_ot_apply_context_t*)
0000000000626c70 0000000000000070 t OT::hb_ot_apply_context_t::init_iters()
0000000000626ce0 0000000000000198 t OT::hb_ot_apply_context_t::_set_glyph_class(unsigned int, unsigned int, bool, bool)
0000000000626e80 00000000000000cc t OT::hb_ot_apply_context_t::replace_glyph(unsigned int)
0000000000626f50 0000000000000118 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GSUB_impl::SingleSubstFormat2_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
0000000000627070 00000000000000ec W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GSUB_impl::SingleSubstFormat1_3<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
0000000000627160 00000000000000ec W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GSUB_impl::SingleSubstFormat1_3<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
0000000000627250 0000000000000118 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GSUB_impl::SingleSubstFormat2_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
0000000000627370 000000000000017c t OT::hb_ot_layout_lookup_accelerator_t::apply(OT::hb_ot_apply_context_t*, unsigned int, bool) const
00000000006274f0 00000000000002f8 t apply_forward(OT::hb_ot_apply_context_t*, OT::hb_ot_layout_lookup_accelerator_t const&, unsigned int) [clone .isra.0]
00000000006277f0 0000000000000064 t OT::GSUBGPOS::get_lookup(unsigned int) const
0000000000627860 000000000000009c t OT::GSUBGPOS::find_script_index(unsigned int, unsigned int*) const
0000000000627900 00000000000003ac t OT::Layout::GPOS_impl::ValueFormat::apply_value(OT::hb_ot_apply_context_t*, void const*, OT::IntType<unsigned short, 2u> const*, hb_glyph_position_t&) const
0000000000627cb0 0000000000000104 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::SinglePosFormat1>(void const*, OT::hb_ot_apply_context_t*)
0000000000627dc0 0000000000000148 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::SinglePosFormat2>(void const*, OT::hb_ot_apply_context_t*)
0000000000627f10 0000000000000104 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::SinglePosFormat1>(void const*, OT::hb_ot_apply_context_t*)
0000000000628020 0000000000000148 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::SinglePosFormat2>(void const*, OT::hb_ot_apply_context_t*)
0000000000628170 0000000000000258 t OT::Layout::GPOS_impl::Anchor::get_anchor(OT::hb_ot_apply_context_t*, unsigned int, float*, float*) const
00000000006283d0 00000000000004e0 t OT::Layout::GPOS_impl::CursivePosFormat1::apply(OT::hb_ot_apply_context_t*) const
00000000006288b0 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::CursivePosFormat1>(void const*, OT::hb_ot_apply_context_t*)
00000000006288c0 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::CursivePosFormat1>(void const*, OT::hb_ot_apply_context_t*)
00000000006288d0 0000000000000244 t OT::Layout::GPOS_impl::MarkArray::apply(OT::hb_ot_apply_context_t*, unsigned int, unsigned int, OT::Layout::GPOS_impl::AnchorMatrix const&, unsigned int, unsigned int) const
0000000000628b20 0000000000000304 t OT::Layout::GSUB_impl::ReverseChainSingleSubstFormat1::apply(OT::hb_ot_apply_context_t*) const
0000000000628e30 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GSUB_impl::ReverseChainSingleSubstFormat1>(void const*, OT::hb_ot_apply_context_t*)
0000000000628e40 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GSUB_impl::ReverseChainSingleSubstFormat1>(void const*, OT::hb_ot_apply_context_t*)
0000000000628e50 0000000000000040 t hb_ot_layout_position_start(hb_font_t*, hb_buffer_t*)
0000000000628e90 0000000000000004 t hb_ot_layout_position_finish_advances(hb_font_t*, hb_buffer_t*)
0000000000628ea0 00000000000000f8 t hb_ot_layout_position_finish_offsets(hb_font_t*, hb_buffer_t*)
0000000000628fa0 0000000000000208 t bool OT::OffsetTo<OT::FeatureParams, OT::IntType<unsigned short, 2u>, true>::sanitize<unsigned int>(hb_sanitize_context_t*, void const*, unsigned int&&) const
00000000006291b0 00000000000001d0 t OT::Feature::sanitize(hb_sanitize_context_t*, OT::Record_sanitize_closure_t const*) const
0000000000629380 00000000000001ec t bool OT::ArrayOf<OT::Record<OT::LangSys>, OT::IntType<unsigned short, 2u> >::sanitize<OT::Script const*>(hb_sanitize_context_t*, OT::Script const*&&) const
0000000000629570 00000000000001cc t bool OT::ArrayOf<OT::OffsetTo<OT::Condition, OT::IntType<unsigned int, 4u>, true>, OT::IntType<unsigned short, 2u> >::sanitize<OT::ConditionSet const*>(hb_sanitize_context_t*, OT::ConditionSet const*&&) const
0000000000629740 0000000000000218 t bool OT::ArrayOf<OT::FeatureTableSubstitutionRecord, OT::IntType<unsigned short, 2u> >::sanitize<OT::FeatureTableSubstitution const*>(hb_sanitize_context_t*, OT::FeatureTableSubstitution const*&&) const
0000000000629960 0000000000000244 t bool OT::ArrayOf<OT::FeatureVariationRecord, OT::IntType<unsigned int, 4u> >::sanitize<OT::FeatureVariations const*>(hb_sanitize_context_t*, OT::FeatureVariations const*&&) const
0000000000629bb0 00000000000001b4 t bool OT::OffsetTo<OT::Device, OT::IntType<unsigned short, 2u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
0000000000629d70 0000000000000104 t OT::Layout::GPOS_impl::ValueFormat::sanitize_value_devices(hb_sanitize_context_t*, void const*, OT::IntType<unsigned short, 2u> const*) const
0000000000629e80 0000000000000170 t OT::Layout::GPOS_impl::ValueFormat::sanitize_values_stride_unsafe(hb_sanitize_context_t*, void const*, OT::IntType<unsigned short, 2u> const*, unsigned int, unsigned int) const
0000000000629ff0 00000000000000f4 t bool OT::ArrayOf<OT::OffsetTo<OT::Layout::Common::Coverage, OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> >::sanitize<OT::ChainContextFormat3 const*>(hb_sanitize_context_t*, OT::ChainContextFormat3 const*&&) const
000000000062a0f0 0000000000000184 t bool OT::OffsetTo<OT::Layout::GPOS_impl::Anchor, OT::IntType<unsigned short, 2u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
000000000062a280 00000000000000f4 t bool OT::ArrayOf<OT::OffsetTo<OT::Layout::Common::Coverage, OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> >::sanitize<OT::Layout::GSUB_impl::ReverseChainSingleSubstFormat1 const*>(hb_sanitize_context_t*, OT::Layout::GSUB_impl::ReverseChainSingleSubstFormat1 const*&&) const
000000000062a380 0000000000000064 t OT::Layout::GSUB_impl::SubstLookupSubTable const& OT::Lookup::get_subtable<OT::Layout::GSUB_impl::SubstLookupSubTable>(unsigned int) const
000000000062a3f0 0000000000000348 t bool apply_string<GSUBProxy>(OT::hb_ot_apply_context_t*, GSUBProxy::Lookup const&, OT::hb_ot_layout_lookup_accelerator_t const&) [clone .isra.0]
000000000062a740 0000000000000004 t hb_ot_layout_substitute_lookup(OT::hb_ot_apply_context_t*, OT::Layout::GSUB_impl::SubstLookup const&, OT::hb_ot_layout_lookup_accelerator_t const&)
000000000062a750 000000000000005c t OT::ArrayOf<OT::IntType<unsigned short, 2u>, OT::IntType<unsigned short, 2u> >::sanitize_shallow(hb_sanitize_context_t*) const
000000000062a7b0 0000000000000184 t OT::hb_ot_layout_lookup_accelerator_t* OT::hb_ot_layout_lookup_accelerator_t::create<OT::Layout::GPOS_impl::PosLookup>(OT::Layout::GPOS_impl::PosLookup const&)
000000000062a940 0000000000000248 W OT::hb_ot_apply_context_t::return_t OT::Layout::GPOS_impl::PosLookup::dispatch_recurse_func<OT::hb_ot_apply_context_t>(OT::hb_ot_apply_context_t*, unsigned int)
000000000062ab90 000000000000005c t OT::ArrayOf<OT::HBGlyphID16, OT::IntType<unsigned short, 2u> >::sanitize_shallow(hb_sanitize_context_t*) const
000000000062abf0 0000000000000184 t OT::hb_ot_layout_lookup_accelerator_t* OT::hb_ot_layout_lookup_accelerator_t::create<OT::Layout::GSUB_impl::SubstLookup>(OT::Layout::GSUB_impl::SubstLookup const&)
000000000062ad80 0000000000000248 W OT::hb_ot_apply_context_t::return_t OT::Layout::GSUB_impl::SubstLookup::dispatch_recurse_func<OT::hb_ot_apply_context_t>(OT::hb_ot_apply_context_t*, unsigned int)
000000000062afd0 0000000000000100 t bool OT::OffsetTo<OT::FeatureVariations, OT::IntType<unsigned int, 4u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
000000000062b0d0 0000000000000364 t AAT::KerxTable<OT::KernOT>::sanitize(hb_sanitize_context_t*) const
000000000062b440 0000000000000330 t OT::Layout::GPOS_impl::PairPosFormat2_4<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
000000000062b770 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::PairPosFormat2_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
000000000062b780 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::PairPosFormat2_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
000000000062b790 00000000000002e8 t OT::Layout::GPOS_impl::MarkBasePosFormat1_2<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
000000000062ba80 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::MarkBasePosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
000000000062ba90 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::MarkBasePosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
000000000062baa0 00000000000002dc t OT::Layout::GPOS_impl::MarkLigPosFormat1_2<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
000000000062bd80 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::MarkLigPosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
000000000062bd90 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::MarkLigPosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
000000000062bda0 00000000000001f4 t OT::Layout::GPOS_impl::MarkMarkPosFormat1_2<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
000000000062bfa0 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::MarkMarkPosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
000000000062bfb0 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::MarkMarkPosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
000000000062bfc0 0000000000000150 t OT::Layout::GSUB_impl::LigatureSubstFormat1_2<OT::Layout::SmallTypes>::would_apply(OT::hb_would_apply_context_t*) const
000000000062c110 0000000000000290 t OT::Layout::GPOS_impl::PairSet<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*, OT::Layout::GPOS_impl::ValueFormat const*, unsigned int) const
000000000062c3a0 0000000000000160 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::PairPosFormat1_3<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
000000000062c500 0000000000000160 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::PairPosFormat1_3<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
000000000062c660 00000000000002fc t OT::RuleSet<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*, OT::ContextApplyLookupContext const&) const
000000000062c960 00000000000000d8 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::ContextFormat1_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
000000000062ca40 000000000000013c W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::ContextFormat2_5<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
000000000062cb80 00000000000000d8 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::ContextFormat1_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
000000000062cc60 00000000000000f8 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::ContextFormat2_5<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
000000000062cd60 0000000000000134 t OT::ChainRuleSet<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*, OT::ChainContextApplyLookupContext const&) const
000000000062cea0 00000000000000e4 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::ChainContextFormat1_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
000000000062cf90 000000000000015c W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::ChainContextFormat2_5<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
000000000062d0f0 00000000000000e4 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::ChainContextFormat1_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
000000000062d1e0 0000000000000128 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::ChainContextFormat2_5<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
000000000062d310 0000000000000250 t bool OT::ArrayOf<OT::Record<OT::Script>, OT::IntType<unsigned short, 2u> >::sanitize<OT::RecordListOf<OT::Script> const*>(hb_sanitize_context_t*, OT::RecordListOf<OT::Script> const*&&) const
000000000062d560 00000000000001e0 t bool OT::ArrayOf<OT::Record<OT::Feature>, OT::IntType<unsigned short, 2u> >::sanitize<OT::RecordListOf<OT::Feature> const*>(hb_sanitize_context_t*, OT::RecordListOf<OT::Feature> const*&&) const
000000000062d740 000000000000071c t void AAT::StateTableDriver<AAT::ObsoleteTypes, void>::drive<AAT::KerxSubTableFormat1<OT::KernAATSubTableHeader>::driver_context_t>(AAT::KerxSubTableFormat1<OT::KernAATSubTableHeader>::driver_context_t*, AAT::hb_aat_apply_context_t*)
000000000062de60 0000000000000328 t OT::Layout::GSUB_impl::Sequence<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
000000000062e190 00000000000000c0 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GSUB_impl::MultipleSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
000000000062e250 00000000000000c0 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GSUB_impl::MultipleSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
000000000062e310 0000000000000250 t OT::Layout::GSUB_impl::AlternateSet<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
000000000062e560 00000000000000c0 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GSUB_impl::AlternateSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
000000000062e620 00000000000000c0 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GSUB_impl::AlternateSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
000000000062e6e0 0000000000000124 t OT::RuleSet<OT::Layout::SmallTypes>::would_apply(OT::hb_would_apply_context_t*, OT::ContextApplyLookupContext const&) const
000000000062e810 0000000000000200 t OT::hb_would_apply_context_t::return_t OT::Context::dispatch<OT::hb_would_apply_context_t>(OT::hb_would_apply_context_t*) const
000000000062ea10 0000000000000168 t OT::ChainRuleSet<OT::Layout::SmallTypes>::would_apply(OT::hb_would_apply_context_t*, OT::ChainContextApplyLookupContext const&) const
000000000062eb80 000000000000028c t OT::hb_would_apply_context_t::return_t OT::ChainContext::dispatch<OT::hb_would_apply_context_t>(OT::hb_would_apply_context_t*) const
000000000062ee10 0000000000000148 t OT::hb_would_apply_context_t::return_t OT::Layout::GSUB_impl::SubstLookupSubTable::dispatch<OT::hb_would_apply_context_t>(OT::hb_would_apply_context_t*, unsigned int) const
000000000062ef60 000000000000067c t OT::Layout::GSUB_impl::Ligature<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
000000000062f5e0 0000000000000130 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GSUB_impl::LigatureSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
000000000062f710 0000000000000130 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GSUB_impl::LigatureSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
000000000062f840 00000000000002dc t hb_sanitize_context_t::return_t OT::Layout::GPOS_impl::SinglePos::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*) const
000000000062fb20 0000000000000464 t AAT::KerxTable<OT::KernAAT>::sanitize(hb_sanitize_context_t*) const
000000000062ff90 0000000000000164 t hb_table_lazy_loader_t<OT::kern, 23u, true>::create(hb_face_t*)
0000000000630100 000000000000016c t hb_ot_layout_has_cross_kerning(hb_face_t*)
0000000000630270 00000000000000e8 t hb_ot_layout_has_kerning(hb_face_t*)
0000000000630360 000000000000015c t hb_ot_layout_has_machine_kerning(hb_face_t*)
00000000006304c0 00000000000001b0 t OT::Layout::GPOS_impl::PairPosFormat2_4<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
0000000000630670 00000000000002b4 t bool OT::ArrayOf<OT::OffsetTo<OT::Layout::GPOS_impl::PairSet<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> >::sanitize<OT::Layout::GPOS_impl::PairPosFormat1_3<OT::Layout::SmallTypes> const*, OT::Layout::GPOS_impl::PairSet<OT::Layout::SmallTypes>::sanitize_closure_t*>(hb_sanitize_context_t*, OT::Layout::GPOS_impl::PairPosFormat1_3<OT::Layout::SmallTypes> const*&&, OT::Layout::GPOS_impl::PairSet<OT::Layout::SmallTypes>::sanitize_closure_t*&&) const
0000000000630930 0000000000000194 t bool OT::OffsetTo<OT::Layout::GPOS_impl::MarkArray, OT::IntType<unsigned short, 2u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
0000000000630ad0 0000000000000178 t bool OT::OffsetTo<OT::Layout::GPOS_impl::AnchorMatrix, OT::IntType<unsigned short, 2u>, true>::sanitize<unsigned int>(hb_sanitize_context_t*, void const*, unsigned int&&) const
0000000000630c50 00000000000001dc t OT::Layout::GPOS_impl::MarkLigPosFormat1_2<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
0000000000630e30 0000000000000208 t bool OT::ArrayOf<OT::OffsetTo<OT::Rule<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> >::sanitize<OT::RuleSet<OT::Layout::SmallTypes> const*>(hb_sanitize_context_t*, OT::RuleSet<OT::Layout::SmallTypes> const*&&) const
0000000000631040 0000000000000380 t hb_sanitize_context_t::return_t OT::Context::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*) const
00000000006313c0 0000000000000204 t bool OT::ArrayOf<OT::OffsetTo<OT::Layout::GSUB_impl::Ligature<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> >::sanitize<OT::Layout::GSUB_impl::LigatureSet<OT::Layout::SmallTypes> const*>(hb_sanitize_context_t*, OT::Layout::GSUB_impl::LigatureSet<OT::Layout::SmallTypes> const*&&) const
00000000006315d0 00000000000001c0 t OT::ChainRule<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
0000000000631790 00000000000001d4 t bool OT::OffsetTo<OT::ChainRuleSet<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
0000000000631970 00000000000003a4 t hb_sanitize_context_t::return_t OT::ChainContext::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*) const
0000000000631d20 000000000000040c t hb_sanitize_context_t::return_t OT::Layout::GPOS_impl::PosLookupSubTable::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*, unsigned int) const
0000000000632130 00000000000002fc t bool OT::Lookup::sanitize<OT::Layout::GPOS_impl::PosLookupSubTable>(hb_sanitize_context_t*) const
0000000000632430 0000000000000284 t bool OT::GSUBGPOSVersion1_2<OT::Layout::SmallTypes>::sanitize<OT::Layout::GPOS_impl::PosLookup>(hb_sanitize_context_t*) const
00000000006326c0 00000000000002bc W OT::GSUBGPOS::accelerator_t<OT::Layout::GPOS>::accelerator_t(hb_face_t*)
00000000006326c0 00000000000002bc t OT::GSUBGPOS::accelerator_t<OT::Layout::GPOS>::accelerator_t(hb_face_t*)
0000000000632980 0000000000000108 t hb_lazy_loader_t<OT::GPOS_accelerator_t, hb_face_lazy_loader_t<OT::GPOS_accelerator_t, 26u>, hb_face_t, 26u, OT::GPOS_accelerator_t>::get_stored() const
0000000000632a90 0000000000000150 T hb_ot_layout_has_positioning
0000000000632be0 00000000000006a0 t hb_sanitize_context_t::return_t OT::Layout::GSUB_impl::SubstLookupSubTable::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*, unsigned int) const
0000000000633280 00000000000002a0 t bool OT::Lookup::sanitize<OT::Layout::GSUB_impl::SubstLookupSubTable>(hb_sanitize_context_t*) const
0000000000633520 0000000000000284 t bool OT::GSUBGPOSVersion1_2<OT::Layout::SmallTypes>::sanitize<OT::Layout::GSUB_impl::SubstLookup>(hb_sanitize_context_t*) const
00000000006337b0 00000000000002bc W OT::GSUBGPOS::accelerator_t<OT::Layout::GSUB>::accelerator_t(hb_face_t*)
00000000006337b0 00000000000002bc t OT::GSUBGPOS::accelerator_t<OT::Layout::GSUB>::accelerator_t(hb_face_t*)
0000000000633a70 0000000000000108 t hb_lazy_loader_t<OT::GSUB_accelerator_t, hb_face_lazy_loader_t<OT::GSUB_accelerator_t, 25u>, hb_face_t, 25u, OT::GSUB_accelerator_t>::get_stored() const
0000000000633b80 0000000000000508 t OT::GDEF::is_blocklisted(hb_blob_t*, hb_face_t*) const
0000000000634090 0000000000000374 t OT::hb_kern_machine_t<AAT::KerxSubTableFormat0<OT::KernOTSubTableHeader>::accelerator_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
0000000000634410 00000000000003b0 t OT::hb_kern_machine_t<AAT::KerxSubTableFormat2<OT::KernOTSubTableHeader>::accelerator_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
00000000006347c0 0000000000000374 t OT::hb_kern_machine_t<AAT::KerxSubTableFormat0<OT::KernAATSubTableHeader>::accelerator_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
0000000000634b40 00000000000003b0 t OT::hb_kern_machine_t<AAT::KerxSubTableFormat2<OT::KernAATSubTableHeader>::accelerator_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
0000000000634ef0 000000000000035c t OT::hb_kern_machine_t<OT::KernSubTableFormat3<OT::KernAATSubTableHeader> >::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
0000000000635250 000000000000095c t hb_ot_layout_kern(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
0000000000635bb0 00000000000006f0 t void hb_ot_map_t::apply<GSUBProxy>(GSUBProxy const&, hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*) const
00000000006362a0 00000000000007a8 t void hb_ot_map_t::apply<GPOSProxy>(GPOSProxy const&, hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*) const
0000000000636a50 00000000000001ac t hb_ot_map_t::position(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*) const
0000000000636c00 0000000000000114 T hb_ot_layout_has_glyph_classes
0000000000636d20 00000000000002d4 t hb_ot_layout_substitute_start(hb_font_t*, hb_buffer_t*)
0000000000637000 0000000000000084 t get_gsubgpos_table(hb_face_t*, unsigned int)
0000000000637090 0000000000000308 T hb_ot_layout_table_select_script
00000000006373a0 000000000000010c t hb_ot_layout_table_find_feature(hb_face_t*, unsigned int, unsigned int, unsigned int*)
00000000006374b0 0000000000000208 T hb_ot_layout_script_select_language2
00000000006376c0 0000000000000008 T hb_ot_layout_script_select_language
00000000006376d0 00000000000001f4 T hb_ot_layout_language_get_required_feature
00000000006378d0 00000000000001f4 T hb_ot_layout_language_find_feature
0000000000637ad0 0000000000000054 T hb_ot_layout_table_get_lookup_count
0000000000637b30 0000000000000154 T hb_ot_layout_table_find_feature_variations
0000000000637c90 00000000000001b4 T hb_ot_layout_feature_with_variations_get_lookups
0000000000637e50 0000000000000048 T hb_ot_layout_has_substitution
0000000000637ea0 000000000000029c T hb_ot_layout_lookup_would_substitute
0000000000638140 00000000000000a8 t hb_ot_map_t::substitute(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*) const
00000000006381f0 0000000000000018 W hb_ot_map_t::lookup_map_t::cmp(void const*, void const*)
0000000000638210 0000000000000034 W hb_ot_map_builder_t::feature_info_t::cmp(void const*, void const*)
0000000000638250 0000000000000420 t void sort_r_simple<>(void*, unsigned long, unsigned long, int (*)(void const*, void const*))
0000000000638670 0000000000000120 t hb_ot_map_builder_t::hb_ot_map_builder_t(hb_face_t*, hb_segment_properties_t const&)
0000000000638670 0000000000000120 T hb_ot_map_builder_t::hb_ot_map_builder_t(hb_face_t*, hb_segment_properties_t const&)
0000000000638790 0000000000000088 t hb_ot_map_builder_t::~hb_ot_map_builder_t()
0000000000638790 0000000000000088 T hb_ot_map_builder_t::~hb_ot_map_builder_t()
0000000000638820 000000000000014c t hb_ot_map_builder_t::add_feature(unsigned int, hb_ot_map_feature_flags_t, unsigned int)
0000000000638970 0000000000000074 t hb_ot_map_builder_t::has_feature(unsigned int)
00000000006389f0 0000000000000238 t hb_ot_map_builder_t::add_lookups(hb_ot_map_t&, unsigned int, unsigned int, unsigned int, unsigned int, bool, bool, bool, bool, unsigned int)
0000000000638c30 0000000000000120 t hb_ot_map_builder_t::add_pause(unsigned int, bool (*)(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*))
0000000000638d50 0000000000000cbc t hb_ot_map_builder_t::compile(hb_ot_map_t&, hb_ot_shape_plan_key_t const&)
0000000000639a10 00000000000001e0 t joining_type(unsigned int)
0000000000639bf0 0000000000000214 t collect_features_arabic(hb_ot_shape_planner_t*)
0000000000639e10 0000000000000070 t record_stch(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
0000000000639e80 0000000000000070 t arabic_fallback_plan_destroy(arabic_fallback_plan_t*) [clone .part.0]
0000000000639ef0 0000000000000028 t hb_buffer_t::deallocate_var(unsigned int, unsigned int) [clone .part.0]
0000000000639f20 000000000000026c t reorder_marks_arabic(hb_ot_shape_plan_t const*, hb_buffer_t*, unsigned int, unsigned int)
000000000063a190 0000000000000028 t OT::Lookup* hb_serialize_context_t::extend_size<OT::Lookup>(OT::Lookup*, unsigned long, bool) [clone .part.0]
000000000063a1c0 0000000000000028 t OT::ArrayOf<OT::Offset<OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> >* hb_serialize_context_t::extend_size<OT::ArrayOf<OT::Offset<OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> > >(OT::ArrayOf<OT::Offset<OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> >*, unsigned long, bool) [clone .part.0]
000000000063a1f0 0000000000000028 t OT::IntType<unsigned short, 2u>* hb_serialize_context_t::extend_size<OT::IntType<unsigned short, 2u> >(OT::IntType<unsigned short, 2u>*, unsigned long, bool) [clone .part.0]
000000000063a220 0000000000000028 t OT::ArrayOf<OT::OffsetTo<OT::Layout::GSUB_impl::LigatureSet<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> >* hb_serialize_context_t::extend_size<OT::ArrayOf<OT::OffsetTo<OT::Layout::GSUB_impl::LigatureSet<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> > >(OT::ArrayOf<OT::OffsetTo<OT::Layout::GSUB_impl::LigatureSet<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> >*, unsigned long, bool) [clone .part.0]
000000000063a250 0000000000000028 t void hb_serialize_context_t::add_link<OT::OffsetTo<OT::Layout::Common::Coverage, OT::IntType<unsigned short, 2u>, true> >(OT::OffsetTo<OT::Layout::Common::Coverage, OT::IntType<unsigned short, 2u>, true>&, unsigned int, hb_serialize_context_t::whence_t, unsigned int) [clone .part.0]
000000000063a280 0000000000000028 t void hb_serialize_context_t::add_link<OT::OffsetTo<OT::Layout::GSUB_impl::SubstLookupSubTable, OT::IntType<unsigned short, 2u>, true> >(OT::OffsetTo<OT::Layout::GSUB_impl::SubstLookupSubTable, OT::IntType<unsigned short, 2u>, true>&, unsigned int, hb_serialize_context_t::whence_t, unsigned int) [clone .part.0]
000000000063a2b0 0000000000000028 t hb_serialize_context_t::end_serialize() [clone .part.0]
000000000063a2e0 0000000000000028 t OT::ArrayOf<OT::HBGlyphID16, OT::IntType<unsigned short, 2u> >* hb_serialize_context_t::extend_size<OT::ArrayOf<OT::HBGlyphID16, OT::IntType<unsigned short, 2u> > >(OT::ArrayOf<OT::HBGlyphID16, OT::IntType<unsigned short, 2u> >*, unsigned long, bool) [clone .part.0]
000000000063a310 0000000000000028 t OT::Layout::Common::CoverageFormat2_4<OT::Layout::SmallTypes>* hb_serialize_context_t::extend_size<OT::Layout::Common::CoverageFormat2_4<OT::Layout::SmallTypes> >(OT::Layout::Common::CoverageFormat2_4<OT::Layout::SmallTypes>*, unsigned long, bool) [clone .part.0]
000000000063a340 0000000000000028 t OT::ArrayOf<OT::OffsetTo<OT::Layout::GSUB_impl::Ligature<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> >* hb_serialize_context_t::extend_size<OT::ArrayOf<OT::OffsetTo<OT::Layout::GSUB_impl::Ligature<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> > >(OT::ArrayOf<OT::OffsetTo<OT::Layout::GSUB_impl::Ligature<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> >*, unsigned long, bool) [clone .part.0]
000000000063a370 0000000000000028 t OT::ArrayOf<OT::Layout::Common::RangeRecord<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u> >* hb_serialize_context_t::extend_size<OT::ArrayOf<OT::Layout::Common::RangeRecord<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u> > >(OT::ArrayOf<OT::Layout::Common::RangeRecord<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u> >*, unsigned long, bool) [clone .part.0]
000000000063a3a0 0000000000000028 t OT::Layout::GSUB_impl::SubstLookup* hb_serialize_context_t::start_serialize<OT::Layout::GSUB_impl::SubstLookup>() [clone .part.0]
000000000063a3d0 0000000000000038 t data_destroy_arabic(void*)
000000000063a410 0000000000000024 t deallocate_buffer_var(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
000000000063a440 00000000000001e4 t data_create_arabic(hb_ot_shape_plan_t const*)
000000000063a630 0000000000000584 t postprocess_glyphs_arabic(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
000000000063abc0 0000000000000390 t hb_serialize_context_t::resolve_links()
000000000063af50 0000000000000390 t OT::Lookup::serialize(hb_serialize_context_t*, unsigned int, unsigned int, unsigned int)
000000000063b2e0 00000000000008a8 t setup_masks_arabic_plan(arabic_shape_plan_t const*, hb_buffer_t*, hb_script_t)
000000000063bb90 000000000000000c t setup_masks_arabic(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
000000000063bba0 0000000000000104 t hb_hashmap_t<hb_serialize_context_t::object_t const*, unsigned int, false>::fini()
000000000063bcb0 0000000000000124 t hb_serialize_context_t::~hb_serialize_context_t()
000000000063bcb0 0000000000000124 W hb_serialize_context_t::~hb_serialize_context_t()
000000000063bde0 00000000000001e0 t hb_serialize_context_t::hb_serialize_context_t(void*, unsigned int)
000000000063bde0 00000000000001e0 W hb_serialize_context_t::hb_serialize_context_t(void*, unsigned int)
000000000063bfc0 00000000000003f8 t hb_hashmap_t<hb_serialize_context_t::object_t const*, unsigned int, false>::resize(unsigned int)
000000000063c3c0 0000000000000508 t hb_serialize_context_t::discard_stale_objects()
000000000063c8d0 0000000000000108 t hb_serialize_context_t::pop_discard()
000000000063c9e0 00000000000009c0 t hb_serialize_context_t::pop_pack(bool)
000000000063d3a0 0000000000000198 t hb_pool_t<hb_serialize_context_t::object_t, 32u>::alloc()
000000000063d540 0000000000000114 t arabic_fallback_plan_shape(arabic_fallback_plan_t*, hb_font_t*, hb_buffer_t*)
000000000063d660 00000000000001d4 t OT::ArrayOf<OT::HBGlyphID16, OT::IntType<unsigned short, 2u> >::serialize(hb_serialize_context_t*, unsigned int, bool)
000000000063d840 00000000000001dc t OT::ArrayOf<OT::Layout::Common::RangeRecord<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u> >::serialize(hb_serialize_context_t*, unsigned int, bool)
000000000063da20 0000000000000904 t bool OT::OffsetTo<OT::Layout::Common::Coverage, OT::IntType<unsigned short, 2u>, true>::serialize_serialize<hb_map_iter_t<hb_zip_iter_t<hb_sorted_array_t<OT::HBGlyphID16>, hb_array_t<OT::HBGlyphID16> >, ._anon_114 const&, (hb_function_sortedness_t)1, (void*)0>&>(hb_serialize_context_t*, hb_map_iter_t<hb_zip_iter_t<hb_sorted_array_t<OT::HBGlyphID16>, hb_array_t<OT::HBGlyphID16> >, ._anon_114 const&, (hb_function_sortedness_t)1, (void*)0>&)
000000000063e330 0000000000000228 t bool OT::Layout::GSUB_impl::SingleSubstFormat2_4<OT::Layout::SmallTypes>::serialize<hb_zip_iter_t<hb_sorted_array_t<OT::HBGlyphID16>, hb_array_t<OT::HBGlyphID16> >, (void*)0>(hb_serialize_context_t*, hb_zip_iter_t<hb_sorted_array_t<OT::HBGlyphID16>, hb_array_t<OT::HBGlyphID16> >)
000000000063e560 0000000000000330 t bool OT::Layout::GSUB_impl::SingleSubst::serialize<hb_zip_iter_t<hb_sorted_array_t<OT::HBGlyphID16>, hb_array_t<OT::HBGlyphID16> >, (void*)0>(hb_serialize_context_t*, hb_zip_iter_t<hb_sorted_array_t<OT::HBGlyphID16>, hb_array_t<OT::HBGlyphID16> >)
000000000063e890 0000000000000618 t arabic_fallback_synthesize_lookup_single(hb_ot_shape_plan_t const*, hb_font_t*, unsigned int) [clone .constprop.0]
000000000063eeb0 000000000000068c t bool OT::OffsetTo<OT::Layout::Common::Coverage, OT::IntType<unsigned short, 2u>, true>::serialize_serialize<hb_sorted_array_t<OT::HBGlyphID16 const>&>(hb_serialize_context_t*, hb_sorted_array_t<OT::HBGlyphID16 const>&)
000000000063f540 000000000000121c t OT::Layout::GSUB_impl::SubstLookup::serialize_ligature(hb_serialize_context_t*, unsigned int, hb_sorted_array_t<OT::HBGlyphID16 const>, hb_array_t<unsigned int const>, hb_array_t<OT::HBGlyphID16 const>, hb_array_t<unsigned int const>, hb_array_t<OT::HBGlyphID16 const>) [clone .isra.0]
0000000000640760 00000000000003a4 t OT::Layout::GSUB_impl::SubstLookup* arabic_fallback_synthesize_lookup_ligature<ligature_mark_set_t [1]>(hb_ot_shape_plan_t const*, hb_font_t*, ligature_mark_set_t const (&) [1], unsigned int) [clone .constprop.0]
0000000000640b10 0000000000000524 t OT::Layout::GSUB_impl::SubstLookup* arabic_fallback_synthesize_lookup_ligature<ligature_set_t [18]>(hb_ot_shape_plan_t const*, hb_font_t*, ligature_set_t const (&) [18], unsigned int) [clone .constprop.0]
0000000000641040 00000000000003b0 t OT::Layout::GSUB_impl::SubstLookup* arabic_fallback_synthesize_lookup_ligature<ligature_3_set_t [1]>(hb_ot_shape_plan_t const*, hb_font_t*, ligature_3_set_t const (&) [1], unsigned int) [clone .constprop.0]
00000000006413f0 0000000000000208 t arabic_fallback_shape(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
0000000000641600 0000000000000004 t data_destroy_hangul(void*)
0000000000641610 0000000000000060 t collect_features_hangul(hb_ot_shape_planner_t*)
0000000000641670 0000000000000018 t override_features_hangul(hb_ot_shape_planner_t*)
0000000000641690 000000000000007c t setup_masks_hangul(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
0000000000641710 0000000000000028 t bool hb_buffer_t::replace_glyphs<unsigned int>(unsigned int, unsigned int, unsigned int const*) [clone .part.0]
0000000000641740 00000000000000a8 t data_create_hangul(hb_ot_shape_plan_t const*)
00000000006417f0 000000000000177c t preprocess_text_hangul(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
0000000000642f70 00000000000000f4 t reorder_marks_hebrew(hb_ot_shape_plan_t const*, hb_buffer_t*, unsigned int, unsigned int)
0000000000643070 0000000000000234 t compose_hebrew(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int, unsigned int*)
00000000006432b0 00000000000000d8 t compose_indic(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int, unsigned int*)
0000000000643390 0000000000000014 t preprocess_text_indic(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
00000000006433b0 0000000000000004 t data_destroy_indic(void*)
00000000006433c0 0000000000000044 t override_features_indic(hb_ot_shape_planner_t*)
0000000000643410 00000000000000fc t collect_features_indic(hb_ot_shape_planner_t*)
0000000000643510 0000000000000028 t hb_buffer_t::allocate_var(unsigned int, unsigned int) [clone .part.0]
0000000000643540 0000000000000028 t hb_buffer_t::deallocate_var(unsigned int, unsigned int) [clone .part.0]
0000000000643570 0000000000000064 t decompose_indic(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int*, unsigned int*)
00000000006435e0 0000000000000070 t setup_masks_indic(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
0000000000643650 0000000000001060 t initial_reordering_consonant_syllable(hb_ot_shape_plan_t const*, hb_face_t*, hb_buffer_t*, unsigned int, unsigned int) [clone .isra.0]
00000000006446b0 0000000000000f30 t final_reordering_indic(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006455e0 0000000000000570 t initial_reordering_indic(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
0000000000645b50 0000000000000684 t find_syllables_indic(hb_buffer_t*)
00000000006461e0 000000000000024c t setup_syllables_indic(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
0000000000646430 0000000000000138 t hb_indic_would_substitute_feature_t::init(hb_ot_map_t const*, unsigned int, bool)
0000000000646570 00000000000001fc t data_create_indic(hb_ot_shape_plan_t const*)
0000000000646770 0000000000000084 t decompose_khmer(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int*, unsigned int*)
0000000000646800 00000000000000ac t compose_khmer(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int, unsigned int*)
00000000006468b0 0000000000000004 t data_destroy_khmer(void*)
00000000006468c0 00000000000000a0 t override_features_khmer(hb_ot_shape_planner_t*)
0000000000646960 00000000000000e0 t collect_features_khmer(hb_ot_shape_planner_t*)
0000000000646a40 0000000000000028 t hb_buffer_t::allocate_var(unsigned int, unsigned int) [clone .part.0]
0000000000646a70 00000000000000c4 t data_create_khmer(hb_ot_shape_plan_t const*)
0000000000646b40 0000000000000058 t setup_masks_khmer(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
0000000000646ba0 0000000000000458 t reorder_khmer(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
0000000000647000 0000000000000454 t find_syllables_khmer(hb_buffer_t*)
0000000000647460 000000000000024c t setup_syllables_khmer(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006476b0 0000000000000010 t compare_myanmar_order(hb_glyph_info_t const*, hb_glyph_info_t const*)
00000000006476c0 00000000000000f8 t collect_features_myanmar(hb_ot_shape_planner_t*)
00000000006477c0 0000000000000028 t hb_buffer_t::allocate_var(unsigned int, unsigned int) [clone .part.0]
00000000006477f0 0000000000000028 t hb_buffer_t::deallocate_var(unsigned int, unsigned int) [clone .part.0]
0000000000647820 0000000000000064 t setup_masks_myanmar(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
0000000000647890 00000000000006a8 t reorder_myanmar(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
0000000000647f40 00000000000003a0 t find_syllables_myanmar(hb_buffer_t*)
00000000006482e0 000000000000024c t setup_syllables_myanmar(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
0000000000648530 00000000000002f0 t hb_syllabic_insert_dotted_circles(hb_font_t*, hb_buffer_t*, unsigned int, unsigned int, int, int)
0000000000648820 0000000000000040 T hb_syllabic_clear_var(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
0000000000648860 00000000000000f8 t thai_pua_shape(unsigned int, thai_action_t, hb_font_t*)
0000000000648960 0000000000000028 t bool hb_buffer_t::replace_glyphs<unsigned int>(unsigned int, unsigned int, unsigned int const*) [clone .part.0]
0000000000648990 00000000000006f8 t preprocess_text_thai(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
0000000000649090 0000000000000034 t _hb_clear_substitution_flags(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006490d0 00000000000000ac t compose_use(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int, unsigned int*)
0000000000649180 0000000000000004 t preprocess_text_use(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
0000000000649190 000000000000002c t data_destroy_use(void*)
00000000006491c0 00000000000001d8 t collect_features_use(hb_ot_shape_planner_t*)
00000000006493a0 0000000000000028 t hb_buffer_t::allocate_var(unsigned int, unsigned int) [clone .part.0]
00000000006493d0 00000000000001b8 t data_create_use(hb_ot_shape_plan_t const*)
0000000000649590 00000000000000ec t setup_masks_use(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
0000000000649680 00000000000000d8 t record_pref_use(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
0000000000649760 00000000000000cc t hb_filter_iter_t<hb_filter_iter_t<hb_zip_iter_t<hb_iota_iter_t<unsigned int, unsigned int>, hb_array_t<hb_glyph_info_t> >, find_syllables_use(hb_buffer_t*)::{lambda(hb_glyph_info_t const&)#1}, ._anon_115 const&, (void*)0>, find_syllables_use(hb_buffer_t*)::{lambda(hb_pair_t<unsigned int, hb_glyph_info_t const&>)#2}, ._anon_103 const&, (void*)0>::__next__()
0000000000649830 00000000000000d0 t hb_filter_iter_t<hb_filter_iter_t<hb_zip_iter_t<hb_iota_iter_t<unsigned int, unsigned int>, hb_array_t<hb_glyph_info_t> >, find_syllables_use(hb_buffer_t*)::{lambda(hb_glyph_info_t const&)#1}, ._anon_115 const&, (void*)0>, find_syllables_use(hb_buffer_t*)::{lambda(hb_pair_t<unsigned int, hb_glyph_info_t const&>)#2}, ._anon_103 const&, (void*)0>::__prev__()
0000000000649900 00000000000000e8 t hb_zip_iter_t<hb_iota_iter_t<unsigned int, unsigned int>, hb_filter_iter_t<hb_filter_iter_t<hb_zip_iter_t<hb_iota_iter_t<unsigned int, unsigned int>, hb_array_t<hb_glyph_info_t> >, find_syllables_use(hb_buffer_t*)::{lambda(hb_glyph_info_t const&)#1}, ._anon_115 const&, (void*)0>, find_syllables_use(hb_buffer_t*)::{lambda(hb_pair_t<unsigned int, hb_glyph_info_t const&>)#2}, ._anon_103 const&, (void*)0> >::__forward__(unsigned int)
00000000006499f0 00000000000000f4 t record_rphf_use(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
0000000000649af0 000000000000011c t machine_index_t<hb_zip_iter_t<hb_iota_iter_t<unsigned int, unsigned int>, hb_filter_iter_t<hb_filter_iter_t<hb_zip_iter_t<hb_iota_iter_t<unsigned int, unsigned int>, hb_array_t<hb_glyph_info_t> >, find_syllables_use(hb_buffer_t*)::{lambda(hb_glyph_info_t const&)#1}, ._anon_115 const&, (void*)0>, find_syllables_use(hb_buffer_t*)::{lambda(hb_pair_t<unsigned int, hb_glyph_info_t const&>)#2}, ._anon_103 const&, (void*)0> > >::operator=(machine_index_t<hb_zip_iter_t<hb_iota_iter_t<unsigned int, unsigned int>, hb_filter_iter_t<hb_filter_iter_t<hb_zip_iter_t<hb_iota_iter_t<unsigned int, unsigned int>, hb_array_t<hb_glyph_info_t> >, find_syllables_use(hb_buffer_t*)::{lambda(hb_glyph_info_t const&)#1}, ._anon_115 const&, (void*)0>, find_syllables_use(hb_buffer_t*)::{lambda(hb_pair_t<unsigned int, hb_glyph_info_t const&>)#2}, ._anon_103 const&, (void*)0> > > const&)
0000000000649c10 0000000000002008 t find_syllables_use(hb_buffer_t*)
000000000064bc20 00000000000005a4 t setup_syllables_use(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
000000000064c1d0 0000000000000374 t reorder_use(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
000000000064c550 00000000000000e8 t _output_dotted_circle(hb_buffer_t*)
000000000064c640 000000000000201c t _hb_preprocess_text_vowel_constraints(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
000000000064e660 0000000000000028 t hb_buffer_t::assert_var(unsigned int, unsigned int) [clone .part.0]
000000000064e690 00000000000007d0 t position_around_base(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*, unsigned int, unsigned int, bool)
000000000064ee60 00000000000001c4 t _hb_ot_shape_fallback_mark_position_recategorize_marks(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
000000000064f030 0000000000000218 t _hb_ot_shape_fallback_mark_position(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*, bool)
000000000064f250 00000000000002dc t _hb_ot_shape_fallback_spaces(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
000000000064f530 000000000000065c t OT::hb_kern_machine_t<hb_ot_shape_fallback_kern_driver_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
000000000064fb90 00000000000002ac t _hb_ot_shape_fallback_kern(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
000000000064fe40 0000000000000030 t decompose_unicode(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int*, unsigned int*)
000000000064fe70 0000000000000050 t compare_combining_class(hb_glyph_info_t const*, hb_glyph_info_t const*)
000000000064fec0 0000000000000040 t compose_unicode(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int, unsigned int*)
000000000064ff00 00000000000002d8 t _hb_glyph_info_set_unicode_props(hb_glyph_info_t*, hb_buffer_t*)
00000000006501e0 0000000000000028 t bool hb_buffer_t::replace_glyphs<unsigned int>(unsigned int, unsigned int, unsigned int const*) [clone .part.0]
0000000000650210 0000000000000344 t decompose(hb_ot_shape_normalize_context_t const*, bool, unsigned int)
0000000000650560 00000000000003f0 t decompose_current_character(hb_ot_shape_normalize_context_t const*, bool)
0000000000650950 0000000000000dfc t _hb_ot_shape_normalize(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
0000000000651750 0000000000000020 t TOUPPER(unsigned char)
0000000000651770 0000000000000020 t TOLOWER(unsigned char)
0000000000651790 00000000000001dc t parse_private_use_subtag(char const*, unsigned int*, unsigned int*, char const*, unsigned char (*)(unsigned char))
0000000000651970 0000000000000098 t subtag_matches(char const*, char const*, char const*, unsigned int)
0000000000651a10 00000000000036b8 T hb_ot_tags_from_script_and_language
00000000006550d0 000000000000007c t hb_ucd_combining_class(hb_unicode_funcs_t*, unsigned int, void*)
0000000000655150 0000000000000070 t hb_ucd_general_category(hb_unicode_funcs_t*, unsigned int, void*)
00000000006551c0 000000000000007c t hb_ucd_mirroring(hb_unicode_funcs_t*, unsigned int, void*)
0000000000655240 0000000000000080 t hb_ucd_script(hb_unicode_funcs_t*, unsigned int, void*)
00000000006552c0 0000000000000180 t hb_ucd_decompose(hb_unicode_funcs_t*, unsigned int, unsigned int*, unsigned int*, void*)
0000000000655440 0000000000000160 t hb_ucd_compose(hb_unicode_funcs_t*, unsigned int, unsigned int, unsigned int*, void*)
00000000006555a0 000000000000012c t hb_ucd_get_unicode_funcs
00000000006556d0 00000000000001cc t _hb_buffer_serialize_unicode_text(hb_buffer_t*, unsigned int, unsigned int, char*, unsigned int, unsigned int*, hb_buffer_serialize_flags_t)
00000000006558a0 000000000000022c t _hb_buffer_serialize_unicode_json(hb_buffer_t*, unsigned int, unsigned int, char*, unsigned int, unsigned int*, hb_buffer_serialize_flags_t)
0000000000655ad0 0000000000000028 t hb_buffer_t::assert_unicode() [clone .part.0]
0000000000655b00 00000000000000d4 T hb_buffer_serialize_unicode
0000000000655be0 00000000000002b4 t hb_indic_get_categories(unsigned int)
0000000000655ea0 000000000000006c T hypotf
0000000000655f20 00000000000001a8 T __ieee754_hypotf
00000000006560d0 000000000000003c T FT_Add_Default_Modules
0000000000656110 0000000000000184 T FT_Set_Default_Properties
00000000006562a0 0000000000000074 T FT_Init_FreeType
0000000000656320 0000000000000038 T FT_Done_FreeType
0000000000656360 0000000000000068 t FT_GlyphLoader_Adjust_Points
00000000006563d0 0000000000000028 t hash_str_lookup
0000000000656400 0000000000000038 t hash_num_lookup
0000000000656440 0000000000000014 t hash_num_compare
0000000000656460 0000000000000090 t hash_bucket
00000000006564f0 0000000000000078 t destroy_size
0000000000656570 00000000000000ac t find_unicode_charmap
0000000000656620 000000000000004c t memory_stream_close
0000000000656670 0000000000000010 t ft_raccess_sort_ref_by_id
0000000000656680 00000000000000dc t ft_trig_pseudo_rotate
0000000000656760 00000000000000f8 t ft_trig_pseudo_polarize
0000000000656860 000000000000003c t hash_str_compare
00000000006568a0 0000000000000154 t ft_property_do
0000000000656a00 00000000000000a8 t destroy_charmaps.part.0
0000000000656ab0 00000000000000c0 t raccess_guess_darwin_hfsplus
0000000000656b70 00000000000000c0 t raccess_guess_darwin_newvfs
0000000000656c30 00000000000000dc t raccess_make_file_name
0000000000656d10 0000000000000054 t raccess_guess_linux_cap
0000000000656d70 0000000000000054 t raccess_guess_vfat
0000000000656dd0 0000000000000018 T FT_RoundFix
0000000000656df0 0000000000000064 T FT_MulDiv
0000000000656e60 0000000000000060 t FT_MulDiv_No_Round
0000000000656ec0 0000000000000014 T FT_MulFix
0000000000656ee0 000000000000007c t ft_recompute_scaled_metrics
0000000000656f60 0000000000000070 T FT_DivFix
0000000000656fd0 00000000000000d8 T FT_Matrix_Multiply
00000000006570b0 00000000000000ac T FT_Matrix_Invert
0000000000657160 00000000000000fc t FT_Matrix_Multiply_Scaled
0000000000657260 00000000000000ac t FT_Matrix_Check
0000000000657310 0000000000000098 t FT_Vector_Transform_Scaled
00000000006573b0 00000000000001a0 t FT_Vector_NormLen
0000000000657550 000000000000001c t ft_corner_orientation
0000000000657570 00000000000000d8 t ft_corner_is_flat
0000000000657650 000000000000003c t FT_MulAddFix
0000000000657690 0000000000000078 T FT_Palette_Select
0000000000657710 000000000000002c T FT_Get_Font_Format
0000000000657740 000000000000002c t FT_GlyphLoader_Rewind
0000000000657770 00000000000000cc t FT_GlyphLoader_Reset
0000000000657840 000000000000003c t FT_GlyphLoader_Done
0000000000657880 0000000000000088 t FT_GlyphLoader_Prepare
0000000000657910 00000000000000ac t FT_GlyphLoader_Add
00000000006579c0 0000000000000080 t ft_hash_str_init
0000000000657a40 0000000000000080 t ft_hash_num_init
0000000000657ac0 0000000000000080 t ft_hash_str_free
0000000000657b40 0000000000000024 t ft_hash_str_lookup
0000000000657b70 0000000000000028 t ft_hash_num_lookup
0000000000657ba0 00000000000000e0 t ft_lcd_padding
0000000000657c80 0000000000000058 t ft_service_list_lookup
0000000000657ce0 0000000000000014 t ft_validator_init
0000000000657d00 0000000000000018 t ft_validator_error
0000000000657d20 0000000000000064 t FT_Stream_Free
0000000000657d90 0000000000000068 t ft_glyphslot_free_bitmap
0000000000657e00 0000000000000114 t ft_glyphslot_done
0000000000657f20 000000000000005c t ft_glyphslot_set_bitmap
0000000000657f80 00000000000000a0 t FT_Done_GlyphSlot
0000000000658020 0000000000000024 T FT_Get_Transform
0000000000658050 0000000000000138 t FT_Match_Size
0000000000658190 0000000000000064 t ft_synthesize_vertical_metrics
0000000000658200 00000000000000b4 t FT_Select_Metrics
00000000006582c0 00000000000002c8 t FT_Request_Metrics
0000000000658590 0000000000000064 T FT_Select_Size
0000000000658600 00000000000000b0 T FT_Request_Size
00000000006586b0 0000000000000094 T FT_Set_Char_Size
0000000000658750 0000000000000120 T FT_Get_Kerning
0000000000658870 0000000000000088 T FT_Select_Charmap
0000000000658900 000000000000004c T FT_Get_Char_Index
0000000000658950 000000000000009c T FT_Get_Next_Char
00000000006589f0 00000000000000bc T FT_Get_Name_Index
0000000000658ab0 00000000000000f4 T FT_Get_Glyph_Name
0000000000658bb0 00000000000000b4 T FT_Load_Sfnt_Table
0000000000658c70 0000000000000070 T FT_Get_CMap_Format
0000000000658ce0 00000000000000a4 T FT_Set_Charmap
0000000000658d90 0000000000000088 t find_variant_selector_charmap.isra.0
0000000000658e20 0000000000000088 T FT_Face_GetCharVariantIndex
0000000000658eb0 0000000000000034 T FT_Activate_Size
0000000000658ef0 000000000000004c t FT_Lookup_Renderer
0000000000658f40 000000000000009c T FT_Get_Module
0000000000658fe0 0000000000000020 t FT_Get_Module_Interface
0000000000659000 00000000000000bc t ft_module_get_service
00000000006590c0 000000000000000c t ft_property_string_set
00000000006590d0 0000000000000088 T FT_New_Library
0000000000659160 0000000000000048 T FT_Get_Color_Glyph_Layer
00000000006591b0 0000000000000034 T FT_Get_Color_Glyph_Paint
00000000006591f0 0000000000000030 T FT_Get_Color_Glyph_ClipBox
0000000000659220 0000000000000034 T FT_Get_Paint_Layers
0000000000659260 0000000000000030 T FT_Get_Paint
0000000000659290 0000000000000034 T FT_Get_Colorline_Stops
00000000006592d0 00000000000003b0 T FT_Outline_Decompose
0000000000659680 0000000000000084 T FT_Outline_Check
0000000000659710 00000000000000c4 T FT_Outline_Copy
00000000006597e0 00000000000000a0 T FT_Outline_Done
0000000000659880 0000000000000084 T FT_Outline_Get_CBox
0000000000659910 00000000000002a0 t ft_glyphslot_preset_bitmap
0000000000659bb0 0000000000000048 T FT_Outline_Translate
0000000000659c00 000000000000007c T FT_Vector_Transform
0000000000659c80 0000000000000064 T FT_Outline_Transform
0000000000659cf0 00000000000001bc T FT_Outline_Get_Orientation
0000000000659eb0 00000000000003ac T FT_Outline_EmboldenXY
000000000065a260 000000000000022c T ps_property_set
000000000065a490 00000000000000cc T ps_property_get
000000000065a560 00000000000000f0 t FT_Raccess_Guess
000000000065a650 0000000000000014 t FT_Stream_OpenMemory
000000000065a670 0000000000000018 t FT_Stream_Close
000000000065a690 000000000000005c t FT_Stream_Seek
000000000065a6f0 0000000000000070 t FT_Stream_Skip
000000000065a760 0000000000000008 t FT_Stream_Pos
000000000065a770 00000000000000a0 t FT_Stream_Read
000000000065a810 000000000000009c t FT_Stream_ReadAt
000000000065a8b0 0000000000000090 t FT_Stream_TryRead
000000000065a940 0000000000000040 t FT_Stream_ReleaseFrame
000000000065a980 0000000000000170 t FT_Stream_EnterFrame
000000000065aaf0 0000000000000034 t FT_Stream_ExtractFrame
000000000065ab30 0000000000000040 t FT_Stream_ExitFrame
000000000065ab70 0000000000000024 t FT_Stream_GetByte
000000000065aba0 0000000000000034 t FT_Stream_GetUShort
000000000065abe0 000000000000002c t FT_Stream_GetUShortLE
000000000065ac10 0000000000000030 t FT_Stream_GetULong
000000000065ac40 000000000000002c t FT_Stream_GetULongLE
000000000065ac70 0000000000000094 t FT_Stream_ReadByte
000000000065ad10 00000000000000a8 t FT_Stream_ReadUShort
000000000065adc0 000000000000031c t FT_Raccess_Get_HeaderInfo
000000000065b0e0 00000000000000a0 t FT_Stream_ReadUShortLE
000000000065b180 00000000000000b8 t FT_Stream_ReadUOffset
000000000065b240 00000000000000a4 t FT_Stream_ReadULong
000000000065b2f0 0000000000000448 t FT_Raccess_Get_DataOffsets
000000000065b740 0000000000000198 t raccess_guess_apple_generic.isra.0
000000000065b8e0 0000000000000024 t raccess_guess_apple_double
000000000065b910 0000000000000024 t raccess_guess_apple_single
000000000065b940 00000000000000a0 t FT_Stream_ReadULongLE
000000000065b9e0 0000000000000284 t FT_Stream_ReadFields
000000000065bc70 0000000000000028 T FT_Tan
000000000065bca0 000000000000008c T FT_Atan2
000000000065bd30 0000000000000044 T FT_Vector_Unit
000000000065bd80 0000000000000020 T FT_Cos
000000000065bda0 0000000000000020 T FT_Sin
000000000065bdc0 0000000000000164 T FT_Vector_Rotate
000000000065bf30 0000000000000118 T FT_Vector_Length
000000000065c050 0000000000000020 t FT_Hypot
000000000065c070 0000000000000018 T FT_Vector_From_Polar
000000000065c090 0000000000000048 T FT_Angle_Diff
000000000065c0e0 0000000000000088 t ft_mem_alloc
000000000065c170 0000000000000160 t FT_Stream_New
000000000065c2d0 000000000000007c t ft_glyphslot_alloc_bitmap
000000000065c350 0000000000000220 t open_face
000000000065c570 0000000000000200 t FT_New_GlyphSlot
000000000065c770 0000000000000254 t FT_Render_Glyph_Internal
000000000065c9d0 0000000000000028 T FT_Render_Glyph
000000000065ca00 0000000000000604 T FT_Load_Glyph
000000000065d010 00000000000001ec T FT_Get_Advances
000000000065d200 000000000000011c T FT_Get_Advance
000000000065d320 00000000000000e8 t raccess_guess_linux_double_from_file_name
000000000065d410 00000000000000b8 t raccess_guess_linux_netatalk
000000000065d4d0 00000000000000b8 t raccess_guess_linux_double
000000000065d590 00000000000000b8 t raccess_guess_darwin_ufs_export
000000000065d650 000000000000005c t ft_mem_qalloc
000000000065d6b0 00000000000000dc t ft_mem_qrealloc
000000000065d790 000000000000016c t FT_CMap_New
000000000065d900 0000000000000090 t ft_mem_realloc
000000000065d990 000000000000008c t FT_GlyphLoader_CreateExtra
000000000065da20 000000000000025c t FT_GlyphLoader_CheckPoints
000000000065dc80 000000000000009c t FT_GlyphLoader_CheckSubGlyphs
000000000065dd20 0000000000000184 T FT_Outline_New
000000000065deb0 0000000000000134 t hash_insert
000000000065dff0 0000000000000004 t ft_hash_str_insert
000000000065e000 0000000000000008 t ft_hash_num_insert
000000000065e010 0000000000000014 t ft_mem_free
000000000065e030 00000000000000ac t ft_mem_strdup
000000000065e0e0 0000000000000040 t ft_mem_strcpyn
000000000065e120 0000000000000030 T FT_List_Find
000000000065e150 0000000000000030 T FT_List_Add
000000000065e180 0000000000000180 T FT_New_Size
000000000065e300 0000000000000034 T FT_List_Remove
000000000065e340 00000000000000ec T FT_Done_Size
000000000065e430 0000000000000060 T FT_List_Iterate
000000000065e490 0000000000000084 T FT_List_Finalize
000000000065e520 0000000000000108 t destroy_face
000000000065e630 00000000000000c0 T FT_Done_Face
000000000065e6f0 0000000000000940 t ft_open_face_internal
000000000065f030 0000000000000118 t open_face_from_buffer
000000000065f150 000000000000038c t open_face_PS_from_sfnt_stream.isra.0
000000000065f4e0 00000000000007a8 t IsMacResource
000000000065fc90 0000000000000008 T FT_Open_Face
000000000065fca0 00000000000001dc T FT_Remove_Module
000000000065fe80 00000000000002e0 T FT_Add_Module
0000000000660160 000000000000013c T FT_Done_Library
00000000006602a0 0000000000000038 t ft_bitmap_glyph_bbox
00000000006602e0 0000000000000034 t ft_outline_glyph_prepare
0000000000660320 0000000000000020 t ft_bitmap_glyph_copy
0000000000660340 000000000000000c t ft_bitmap_glyph_done
0000000000660350 00000000000000ac t ft_bitmap_glyph_init
0000000000660400 0000000000000008 t ft_outline_glyph_bbox
0000000000660410 0000000000000068 t ft_outline_glyph_copy
0000000000660480 0000000000000090 t ft_outline_glyph_init
0000000000660510 000000000000000c t ft_outline_glyph_done
0000000000660520 00000000000000ac t ft_svg_glyph_prepare
00000000006605d0 00000000000000e0 t ft_svg_glyph_transform
00000000006606b0 00000000000000e4 t ft_svg_glyph_copy
00000000006607a0 00000000000000fc t ft_svg_glyph_init
00000000006608a0 0000000000000030 t ft_svg_glyph_done
00000000006608d0 0000000000000044 t ft_outline_glyph_transform
0000000000660920 00000000000000e4 T FT_New_Glyph
0000000000660a10 0000000000000074 T FT_Glyph_Transform
0000000000660a90 0000000000000040 T FT_Done_Glyph
0000000000660ad0 0000000000000108 T FT_Glyph_Copy
0000000000660be0 0000000000000114 T FT_Get_Glyph
0000000000660d00 0000000000000278 T FT_Glyph_To_Bitmap
0000000000660f80 00000000000000b8 t ft_face_get_mm_service
0000000000661040 00000000000000a0 t ft_face_get_mvar_service.constprop.0.isra.0
00000000006610e0 00000000000000c0 T FT_Get_MM_Var
00000000006611a0 0000000000000028 T FT_Done_MM_Var
00000000006611d0 00000000000000c8 T FT_Get_Var_Blend_Coordinates
00000000006612a0 0000000000000104 T FT_Set_Named_Instance
00000000006613b0 00000000000000fc t ft_stroke_border_close
00000000006614b0 0000000000000094 t ft_stroke_border_get_counts
0000000000661550 00000000000000e0 t ft_stroke_border_grow
0000000000661630 0000000000000084 t ft_stroke_border_cubicto
00000000006616c0 0000000000000198 t ft_stroke_border_arcto
0000000000661860 00000000000000e4 t ft_stroke_border_lineto
0000000000661950 00000000000003fc t ft_stroker_process_corner
0000000000661d50 00000000000000a4 t ft_stroker_cap.part.0.constprop.0
0000000000661e00 00000000000000d8 t ft_stroker_subpath_start
0000000000661ee0 00000000000007d0 t FT_Stroker_CubicTo.part.0
00000000006626b0 00000000000005b0 t FT_Stroker_ConicTo.part.0
0000000000662c60 00000000000000a0 T FT_Stroker_New
0000000000662d00 0000000000000024 T FT_Stroker_Rewind
0000000000662d30 0000000000000024 T FT_Stroker_Set
0000000000662d60 00000000000000ac T FT_Stroker_Done
0000000000662e10 0000000000000144 T FT_Stroker_LineTo
0000000000662f60 000000000000001c T FT_Stroker_ConicTo
0000000000662f80 0000000000000024 T FT_Stroker_CubicTo
0000000000662fb0 0000000000000064 T FT_Stroker_BeginSubPath
0000000000663020 0000000000000278 T FT_Stroker_EndSubPath
00000000006632a0 0000000000000098 T FT_Stroker_GetCounts
0000000000663340 000000000000013c T FT_Stroker_ExportBorder
0000000000663480 0000000000000038 T FT_Stroker_Export
00000000006634c0 0000000000000314 T FT_Stroker_ParseOutline
00000000006637e0 0000000000000148 T FT_Glyph_Stroke
0000000000663930 000000000000003c t tt_get_kerning
0000000000663970 000000000000007c t tt_get_metrics_incremental
00000000006639f0 0000000000000074 t TT_Load_Glyph_Header
0000000000663a70 0000000000000084 t tt_loader_set_pp
0000000000663b00 0000000000000408 t ft_var_get_value_pointer
0000000000663f10 0000000000000020 t ft_size_reset_iterator
0000000000663f30 0000000000000014 t tt_cvt_ready_iterator
0000000000663f50 0000000000000060 t tt_get_var_blend
0000000000663fb0 000000000000004c t TT_MulFix14
0000000000664000 000000000000006c t TT_DotFix14
0000000000664070 0000000000000008 t Current_Ppem
0000000000664080 000000000000000c t Read_CVT
0000000000664090 0000000000000068 t Direct_Move_X
0000000000664100 000000000000005c t Direct_Move_Y
0000000000664160 0000000000000018 t Direct_Move_Orig_X
0000000000664180 0000000000000018 t Direct_Move_Orig_Y
00000000006641a0 0000000000000028 t Round_None
00000000006641d0 000000000000003c t Round_To_Grid
0000000000664210 0000000000000040 t Round_To_Half_Grid
0000000000664250 0000000000000034 t Round_Down_To_Grid
0000000000664290 000000000000003c t Round_Up_To_Grid
00000000006642d0 000000000000003c t Round_To_Double_Grid
0000000000664310 0000000000000058 t Round_Super
0000000000664370 0000000000000058 t Round_Super_45
00000000006643d0 000000000000002c t Project
0000000000664400 000000000000002c t Dual_Project
0000000000664430 0000000000000008 t Project_x
0000000000664440 0000000000000008 t Project_y
0000000000664450 000000000000012c t Compute_Funcs
0000000000664580 0000000000000090 t SkipCode
0000000000664610 00000000000000bc t Move_Zp2_Point
00000000006646d0 0000000000000020 t tt_size_init
00000000006646f0 0000000000000014 t tt_driver_init
0000000000664710 0000000000000004 t tt_driver_done
0000000000664720 00000000000000f8 t tt_face_get_location
0000000000664820 0000000000000018 t compare_ppem
0000000000664840 00000000000000c4 t tt_size_reset_height
0000000000664910 0000000000000110 t ft_var_apply_tuple
0000000000664a20 00000000000000b4 t Direct_Move_Orig
0000000000664ae0 000000000000011c t Direct_Move
0000000000664c00 0000000000000090 t TT_Done_Context
0000000000664c90 0000000000000078 t tt_glyphzone_done
0000000000664d10 0000000000000090 t tt_size_done_bytecode
0000000000664da0 0000000000000024 t tt_size_done
0000000000664dd0 0000000000000040 t tt_var_done_delta_set_index_map
0000000000664e10 00000000000000d8 t tt_var_done_item_variation_store
0000000000664ef0 000000000000002c t tt_construct_ps_name
0000000000664f20 00000000000001f0 t TT_Load_Context
0000000000665110 0000000000000170 t tt_size_run_prep
0000000000665280 0000000000000258 t TT_Hint_Glyph
00000000006654e0 0000000000000068 t TT_Access_Glyph_Frame
0000000000665550 0000000000000008 t TT_Forget_Glyph_Frame
0000000000665560 00000000000001ec t ft_var_readpackedpoints
0000000000665750 00000000000001a8 t ft_var_readpackeddeltas
0000000000665900 0000000000000094 t Current_Ratio
00000000006659a0 00000000000003dc t TT_Load_Simple_Glyph
0000000000665d80 000000000000000c t tt_slot_init
0000000000665d90 000000000000067c t tt_face_vary_cvt
0000000000666410 0000000000000104 t tt_face_load_cvt
0000000000666520 0000000000000988 t tt_face_init
0000000000666eb0 0000000000000284 t TT_Load_Composite_Glyph
0000000000667140 000000000000004c t tt_property_get
0000000000667190 00000000000003fc t tt_var_get_item_delta
0000000000667590 00000000000001b0 t tt_apply_mvar
0000000000667740 00000000000002c8 t ft_var_to_normalized
0000000000667a10 00000000000004e0 t tt_var_load_item_variation_store
0000000000667ef0 0000000000000254 t tt_var_load_delta_set_index_mapping
0000000000668150 0000000000000234 t ft_var_load_hvvar
0000000000668390 00000000000000f4 t tt_hvadvance_adjust
0000000000668490 0000000000000008 t tt_vadvance_adjust
00000000006684a0 0000000000000008 t tt_hadvance_adjust
00000000006684b0 00000000000002bc t ft_var_load_avar
0000000000668770 00000000000009bc t TT_Get_MM_Var
0000000000669130 0000000000000044 t TT_Get_Default_Named_Instance
0000000000669180 000000000000009c t TT_Get_VMetrics
0000000000669220 0000000000000134 t tt_get_advances
0000000000669360 0000000000000188 t tt_delta_interpolate.part.0
00000000006694f0 0000000000000d74 t TT_Vary_Apply_Glyph_Deltas
000000000066a270 000000000000019c t iup_worker_interpolate_
000000000066a410 000000000000007c t Modify_CVT_Check.part.0
000000000066a490 000000000000004c t Write_CVT
000000000066a4e0 000000000000006c t Move_CVT_Stretched
000000000066a550 0000000000000060 t Write_CVT_Stretched
000000000066a5b0 0000000000000088 t tt_get_interface
000000000066a640 00000000000000b0 t tt_property_set
000000000066a6f0 00000000000001c0 t Ins_DELTAP.constprop.0
000000000066a8b0 00000000000003cc t Ins_IP.constprop.0
000000000066ac80 0000000000000264 t Ins_ISECT.constprop.0
000000000066aef0 0000000000000280 t Ins_MIRP.constprop.0
000000000066b170 0000000000000138 t Compute_Point_Displacement.constprop.0
000000000066b2b0 000000000000008c t Ins_JMPR.constprop.0
000000000066b340 00000000000000fc t SetSuperRound.constprop.0
000000000066b440 0000000000000160 t tt_size_reset
000000000066b5a0 0000000000000064 t tt_size_select
000000000066b610 0000000000000110 t tt_size_request
000000000066b720 0000000000000054 t Move_CVT
000000000066b780 00000000000002b0 t Ins_IUP.constprop.0
000000000066ba30 0000000000000790 t tt_set_mm_blend
000000000066c1c0 0000000000000008 t TT_Set_MM_Blend
000000000066c1d0 00000000000000f4 t TT_Get_Var_Design
000000000066c2d0 000000000000024c t TT_Set_Var_Design
000000000066c520 0000000000000120 t TT_Set_Named_Instance
000000000066c640 00000000000000f4 t TT_Get_MM_Blend
000000000066c740 0000000000001084 t load_truetype_glyph
000000000066d7d0 0000000000000100 t Ins_SxVTL.constprop.0
000000000066d8d0 000000000000021c t tt_done_blend
000000000066daf0 00000000000000c4 t tt_face_done
000000000066dbc0 0000000000000098 t Current_Ppem_Stretched
000000000066dc60 000000000000009c t Read_CVT_Stretched
000000000066dd00 000000000000010c t Ins_UNKNOWN.constprop.0
000000000066de10 0000000000002ab8 T TT_RunIns
00000000006708d0 0000000000000098 T TT_New_Context
0000000000670970 0000000000000f04 t TT_Load_Glyph
0000000000671880 00000000000000c8 t tt_glyph_load
0000000000671950 0000000000000020 t compare_kern_pairs
0000000000671970 0000000000000008 t t1_get_ps_name
0000000000671980 0000000000000024 t t1_ps_get_font_info
00000000006719b0 0000000000000010 t t1_ps_get_font_extra
00000000006719c0 0000000000000008 t t1_ps_has_glyph_names
00000000006719d0 0000000000000044 t t1_ps_get_font_private
0000000000671a20 0000000000000068 t T1_Get_Multi_Master
0000000000671a90 00000000000000c4 t T1_Set_MM_WeightVector
0000000000671b60 00000000000000ac t T1_Get_MM_WeightVector
0000000000671c10 0000000000000038 t parse_buildchar
0000000000671c50 0000000000000010 t parse_private
0000000000671c60 00000000000000d0 t read_binary_data
0000000000671d30 0000000000000010 t T1_GlyphSlot_Done
0000000000671d40 0000000000000078 t T1_Driver_Init
0000000000671dc0 0000000000000004 t T1_Driver_Done
0000000000671dd0 0000000000000050 t T1_GlyphSlot_Init
0000000000671e20 00000000000001d0 t T1_Parse_Glyph_And_Get_Char_String
0000000000671ff0 0000000000000060 t T1_Parse_Glyph
0000000000672050 0000000000000144 t T1_Compute_Max_Advance
00000000006721a0 000000000000012c t T1_Get_Advances
00000000006722d0 0000000000000174 t T1_Done_Blend
0000000000672450 00000000000004b4 t parse_encoding
0000000000672910 00000000000004b4 t T1_Load_Glyph
0000000000672dd0 000000000000007c t t1_get_name_index
0000000000672e50 00000000000001ec t t1_allocate_blend
0000000000673040 0000000000000164 t parse_weight_vector
00000000006731b0 00000000000002b0 t parse_blend_design_positions
0000000000673460 0000000000000590 t parse_dict
00000000006739f0 0000000000000090 t read_pfb_tag
0000000000673a80 0000000000000644 t parse_charstrings
00000000006740d0 00000000000003d8 t parse_subrs
00000000006744b0 0000000000000130 t t1_parse_font_matrix
00000000006745e0 000000000000000c t Get_Interface
00000000006745f0 00000000000000a0 t mm_axis_unmap
0000000000674690 00000000000000ec t T1_Get_Track_Kerning
0000000000674780 00000000000006d8 t t1_ps_get_font_value
0000000000674e60 0000000000000028 t t1_get_glyph_name
0000000000674e90 000000000000015c t mm_weights_unmap
0000000000674ff0 0000000000000098 t T1_Get_MM_Blend
0000000000675090 00000000000000d0 t T1_Get_Var_Design
0000000000675160 000000000000025c t T1_Get_MM_Var
00000000006753c0 00000000000000c4 t t1_get_index
0000000000675490 00000000000000a4 t check_type1_format.part.0
0000000000675540 0000000000000090 t Get_Kerning
00000000006755d0 0000000000000058 t T1_Size_Get_Globals_Funcs.isra.0
0000000000675630 0000000000000060 t T1_Size_Init
0000000000675690 000000000000004c t T1_Size_Done
00000000006756e0 0000000000000070 t T1_Size_Request
0000000000675750 000000000000011c t t1_set_mm_blend.isra.0
0000000000675870 0000000000000154 t T1_Set_MM_Design
00000000006759d0 000000000000007c t T1_Set_Var_Design
0000000000675a50 0000000000000010 t T1_Reset_MM_Blend
0000000000675a60 0000000000000008 t T1_Set_MM_Blend
0000000000675a70 0000000000000a88 t T1_Open_Face
0000000000676500 0000000000000428 t T1_Face_Init
0000000000676930 00000000000001b4 t T1_Face_Done
0000000000676af0 00000000000003e8 t T1_Read_Metrics
0000000000676ee0 00000000000001ac t parse_blend_axis_types
0000000000677090 00000000000002a0 t parse_blend_design_map
0000000000677330 000000000000001c t cff_cmap_encoding_init
0000000000677350 0000000000000008 t cff_cmap_encoding_done
0000000000677360 000000000000001c t cff_cmap_encoding_char_index
0000000000677380 0000000000000040 t cff_cmap_encoding_char_next
00000000006773c0 000000000000004c t cff_cmap_unicode_init
0000000000677410 0000000000000018 t cff_cmap_unicode_char_index
0000000000677430 0000000000000018 t cff_cmap_unicode_char_next
0000000000677450 000000000000003c t cff_get_kerning
0000000000677490 000000000000000c t cff_ps_has_glyph_names
00000000006774a0 000000000000002c t cff_get_is_cid
00000000006774d0 0000000000000048 t cff_get_cid_from_glyph_index
0000000000677520 0000000000000010 t cff_set_mm_blend
0000000000677530 0000000000000010 t cff_get_mm_blend
0000000000677540 0000000000000010 t cff_set_mm_weightvector
0000000000677550 0000000000000010 t cff_get_mm_weightvector
0000000000677560 0000000000000010 t cff_construct_ps_name
0000000000677570 0000000000000010 t cff_get_mm_var
0000000000677580 0000000000000010 t cff_set_var_design
0000000000677590 0000000000000010 t cff_get_var_design
00000000006775a0 0000000000000010 t cff_set_named_instance
00000000006775b0 0000000000000010 t cff_get_default_named_instance
00000000006775c0 0000000000000010 t cff_load_item_variation_store
00000000006775d0 0000000000000010 t cff_load_delta_set_index_mapping
00000000006775e0 0000000000000010 t cff_get_item_delta
00000000006775f0 0000000000000010 t cff_done_item_variation_store
0000000000677600 0000000000000010 t cff_done_delta_set_index_map
0000000000677610 0000000000000010 t cff_hadvance_adjust
0000000000677620 0000000000000010 t cff_metrics_adjust
0000000000677630 00000000000000d0 t cff_parse_integer
0000000000677700 0000000000000020 t cff_get_standard_encoding
0000000000677720 00000000000000ac t cff_fd_select_get
00000000006777d0 0000000000000010 t cff_get_var_blend
00000000006777e0 0000000000000018 t cff_done_blend
0000000000677800 0000000000000010 t cff_slot_done
0000000000677810 0000000000000078 t cff_driver_init
0000000000677890 0000000000000004 t cff_driver_done
00000000006778a0 0000000000000034 t cff_cmap_unicode_done
00000000006778e0 00000000000000c4 t cff_vstore_done
00000000006779b0 0000000000000054 t cff_slot_init
0000000000677a10 0000000000000178 t cff_make_private_dict
0000000000677b90 0000000000000050 t cff_index_done
0000000000677be0 00000000000000a0 t cff_get_cmap_info
0000000000677c80 0000000000000084 t cff_get_ps_name
0000000000677d10 0000000000000420 t cff_parse_real
0000000000678130 0000000000000128 t cff_get_name_index
0000000000678260 00000000000000f0 t cff_charset_compute_cids
0000000000678350 0000000000000064 t cff_blend_check_vector
00000000006783c0 0000000000000290 t cff_blend_build_vector
0000000000678650 0000000000000408 t cff_index_get_pointers
0000000000678a60 0000000000000058 t cff_index_get_sid_string
0000000000678ac0 00000000000000c4 t cff_get_ros
0000000000678b90 0000000000000118 t cff_ps_get_font_info
0000000000678cb0 00000000000000d4 t cff_get_glyph_name
0000000000678d90 0000000000000144 t cff_ps_get_font_extra
0000000000678ee0 0000000000000068 t cff_subfont_done.part.0
0000000000678f50 000000000000007c t cff_get_interface
0000000000678fd0 0000000000000058 t cff_size_get_globals_funcs.isra.0
0000000000679030 0000000000000170 t cff_size_init
00000000006791a0 000000000000008c t cff_size_done
0000000000679230 0000000000000108 t cff_size_select
0000000000679340 00000000000001a0 t cff_size_request
00000000006794e0 00000000000001e8 t cff_face_done
00000000006796d0 0000000000000308 t cff_parse_font_matrix
00000000006799e0 00000000000000f8 t do_fixed.isra.0
0000000000679ae0 00000000000000b8 t cff_parse_font_bbox
0000000000679ba0 0000000000000074 t cff_parse_num.isra.0
0000000000679c20 000000000000008c t cff_parse_private_dict
0000000000679cb0 0000000000000080 t cff_parse_multiple_master
0000000000679d30 0000000000000084 t cff_parse_cid_ros
0000000000679dc0 0000000000000060 t cff_parse_vsindex
0000000000679e20 0000000000000354 t cff_parser_run
000000000067a180 000000000000021c t cff_load_private_dict
000000000067a3a0 0000000000000058 t cff_free_glyph_data
000000000067a400 0000000000000310 t cff_parse_blend
000000000067a710 0000000000000260 t cff_index_access_element
000000000067a970 0000000000000058 t cff_get_glyph_data
000000000067a9d0 0000000000000898 t cff_slot_load
000000000067b270 0000000000000038 t cff_glyph_load
000000000067b2b0 0000000000000220 t cff_get_advances
000000000067b4d0 00000000000000d8 t cff_index_get_name
000000000067b5b0 00000000000001c4 t cff_index_init
000000000067b780 0000000000000354 t cff_subfont_load
000000000067bae0 0000000000001da4 t cff_face_init
000000000067d890 0000000000000060 t cff_sid_to_glyph_name
000000000067d8f0 00000000000000b0 t cff_parse_maxstack
000000000067d9a0 0000000000000054 t parse_expansion_factor
000000000067da00 0000000000000004 t parse_font_name
000000000067da10 0000000000000010 t cid_slot_done
000000000067da20 0000000000000078 t cid_driver_init
000000000067daa0 0000000000000004 t cid_driver_done
000000000067dab0 0000000000000018 t cid_get_postscript_name
000000000067dad0 0000000000000024 t cid_ps_get_font_info
000000000067db00 0000000000000010 t cid_ps_get_font_extra
000000000067db10 000000000000002c t cid_get_ros
000000000067db40 0000000000000014 t cid_get_is_cid
000000000067db60 0000000000000050 t cid_slot_init
000000000067dbb0 0000000000000154 t cid_face_done
000000000067dd10 000000000000016c t cid_compute_fd_and_offsets
000000000067de80 00000000000003a0 t cid_load_glyph
000000000067e220 00000000000003e0 t cid_slot_load_glyph
000000000067e600 000000000000003c t cid_get_cid_from_glyph_index
000000000067e640 0000000000000164 t cid_parse_font_matrix
000000000067e7b0 0000000000000100 t parse_fd_array
000000000067e8b0 000000000000000c t cid_get_interface
000000000067e8c0 0000000000000058 t cid_size_get_globals_funcs.isra.0
000000000067e920 0000000000000070 t cid_size_init
000000000067e990 000000000000004c t cid_size_done
000000000067e9e0 000000000000006c t cid_size_request
000000000067ea50 0000000000000d40 t cid_face_open
000000000067f790 0000000000000298 t cid_face_init
000000000067fa30 0000000000000060 t pfr_cmap_init
000000000067fa90 000000000000000c t pfr_cmap_done
000000000067faa0 0000000000000070 t pfr_cmap_char_index
000000000067fb10 00000000000000c0 t pfr_cmap_char_next
000000000067fbd0 0000000000000044 t pfr_get_advance
000000000067fc20 00000000000000a8 t pfr_glyph_close_contour
000000000067fcd0 00000000000001ec t pfr_face_get_kerning
000000000067fec0 0000000000000228 t pfr_extra_item_load_bitmap_info
00000000006800f0 0000000000000058 t pfr_slot_done
0000000000680150 0000000000000034 t pfr_slot_init
0000000000680190 0000000000000114 t pfr_extra_item_load_stem_snaps
00000000006802b0 000000000000014c t pfr_extra_item_load_kerning_pairs
0000000000680400 000000000000009c t pfr_extra_item_load_font_id
00000000006804a0 00000000000000e8 t pfr_aux_name_load
0000000000680590 000000000000000c t pfr_get_service
00000000006805a0 0000000000000090 t pfr_get_metrics
0000000000680630 0000000000000080 t pfr_get_kerning
00000000006806b0 00000000000000f8 t pfr_face_done
00000000006807b0 000000000000008c t pfr_glyph_line_to.isra.0
0000000000680840 0000000000000a6c t pfr_glyph_load_rec
00000000006812b0 0000000000000a20 t pfr_slot_load
0000000000681cd0 0000000000000cb0 t pfr_face_init
0000000000682980 0000000000000008 t t42_get_ps_font_name
0000000000682990 0000000000000024 t t42_ps_get_font_info
00000000006829c0 0000000000000010 t t42_ps_get_font_extra
00000000006829d0 0000000000000008 t t42_ps_has_glyph_names
00000000006829e0 0000000000000004 t T42_Driver_Done
00000000006829f0 000000000000006c t T42_Size_Select
0000000000682a60 000000000000006c t T42_Size_Request
0000000000682ad0 0000000000000148 t T42_GlyphSlot_Load
0000000000682c20 000000000000000c t T42_GlyphSlot_Done
0000000000682c30 0000000000000098 t T42_GlyphSlot_Init
0000000000682cd0 000000000000005c t T42_Size_Init
0000000000682d30 0000000000000138 t T42_Face_Done
0000000000682e70 000000000000004c t T42_Driver_Init
0000000000682ec0 0000000000000510 t t42_parse_charstrings
00000000006833d0 00000000000000ac t t42_get_name_index
0000000000683480 00000000000004ec t t42_parse_sfnts
0000000000683970 0000000000000120 t t42_parse_font_matrix
0000000000683a90 000000000000000c t T42_Get_Interface
0000000000683aa0 0000000000000028 t t42_get_glyph_name
0000000000683ad0 0000000000000040 t T42_Size_Done
0000000000683b10 0000000000000a3c t T42_Face_Init
0000000000684550 0000000000000478 t t42_parse_encoding
00000000006849d0 000000000000002c t fnt_cmap_init
0000000000684a00 0000000000000014 t fnt_cmap_char_index
0000000000684a20 0000000000000050 t fnt_cmap_char_next
0000000000684a70 0000000000000048 t winfnt_get_header
0000000000684ac0 0000000000000058 t FNT_Size_Select
0000000000684b20 0000000000000250 t FNT_Load_Glyph
0000000000684d70 0000000000000064 t fnt_font_done
0000000000684de0 00000000000000d4 t fnt_font_load
0000000000684ec0 000000000000000c t winfnt_get_service
0000000000684ed0 0000000000000aa0 t FNT_Face_Init
0000000000685970 0000000000000040 t FNT_Face_Done
00000000006859b0 0000000000000100 t FNT_Size_Request
0000000000685ab0 0000000000000018 t pcf_cmap_init
0000000000685ad0 0000000000000008 t pcf_cmap_done
0000000000685ae0 0000000000000058 t pcf_cmap_char_index
0000000000685b40 00000000000000c0 t pcf_cmap_char_next
0000000000685c00 000000000000001c t pcf_get_charset_id
0000000000685c20 0000000000000008 t pcf_property_set
0000000000685c30 0000000000000008 t pcf_property_get
0000000000685c40 0000000000000008 t pcf_driver_init
0000000000685c50 0000000000000004 t pcf_driver_done
0000000000685c60 000000000000004c t PCF_Size_Select
0000000000685cb0 00000000000002a8 t PCF_Glyph_Load
0000000000685f60 000000000000000c t pcf_driver_requester
0000000000685f70 0000000000000168 t PCF_Face_Done.part.0
00000000006860e0 000000000000000c t PCF_Face_Done
00000000006860f0 0000000000000090 t pcf_find_property.isra.0
0000000000686180 0000000000000070 t pcf_get_bdf_property
00000000006861f0 00000000000000f0 t PCF_Size_Request
00000000006862e0 0000000000000230 t pcf_get_accel
0000000000686510 0000000000001494 t pcf_load_font
00000000006879b0 0000000000000270 t PCF_Face_Init
0000000000687c20 00000000000000b8 t bdf_atol_
0000000000687ce0 00000000000000c0 t bdf_atos_
0000000000687da0 0000000000000018 t by_encoding
0000000000687dc0 0000000000000008 t bdf_parse_end_
0000000000687dd0 000000000000001c t bdf_cmap_init
0000000000687df0 0000000000000008 t bdf_cmap_done
0000000000687e00 0000000000000078 t bdf_cmap_char_index
0000000000687e80 00000000000000c8 t bdf_cmap_char_next
0000000000687f50 000000000000001c t bdf_get_charset_id
0000000000687f70 0000000000000048 t BDF_Size_Select
0000000000687fc0 0000000000000148 t BDF_Glyph_Load
0000000000688110 000000000000009c t bdf_list_ensure_
00000000006881b0 0000000000000088 t bdf_add_comment_
0000000000688240 000000000000000c t bdf_driver_requester
0000000000688250 0000000000000088 t bdf_atoul_
00000000006882e0 0000000000000088 t bdf_atous_
0000000000688370 00000000000001cc t bdf_free_font.part.0
0000000000688540 00000000000000a4 t BDF_Face_Done
00000000006885f0 0000000000000258 t bdf_list_split_.part.0
0000000000688850 00000000000000a4 t bdf_list_join_.constprop.0
0000000000688900 0000000000000058 t bdf_list_shift_.constprop.0
0000000000688960 000000000000053c t bdf_add_property_.isra.0
0000000000688ea0 00000000000000f0 t BDF_Size_Request
0000000000688f90 00000000000000b0 t bdf_get_bdf_property
0000000000689040 00000000000003c4 t bdf_parse_properties_
0000000000689410 0000000000001010 t BDF_Face_Init
000000000068a420 00000000000008a0 t bdf_parse_start_
000000000068acc0 0000000000000c64 t bdf_parse_glyphs_
000000000068b930 0000000000000098 t premultiply_data
000000000068b9d0 0000000000000048 t convert_bytes_to_data
000000000068ba20 0000000000000004 t warning_callback
000000000068ba30 0000000000000094 t get_sfnt_table
000000000068bad0 0000000000000060 t sfnt_table_info
000000000068bb30 0000000000000034 t sfnt_is_postscript
000000000068bb70 0000000000000028 t sfnt_is_alphanumeric
000000000068bba0 00000000000000d4 t sfnt_get_name_id
000000000068bc80 0000000000000020 t compare_offsets
000000000068bca0 0000000000000010 t tt_cmap_init
000000000068bcb0 0000000000000020 t tt_cmap0_char_index
000000000068bcd0 0000000000000044 t tt_cmap0_char_next
000000000068bd20 0000000000000020 t tt_cmap0_get_info
000000000068bd40 0000000000000058 t tt_cmap2_get_subheader
000000000068bda0 000000000000008c t tt_cmap2_char_index
000000000068be30 00000000000001ac t tt_cmap2_char_next
000000000068bfe0 0000000000000024 t tt_cmap2_get_info
000000000068c010 0000000000000028 t tt_cmap4_init
000000000068c040 0000000000000114 t tt_cmap4_set_range
000000000068c160 0000000000000154 t tt_cmap4_next
000000000068c2c0 0000000000000234 t tt_cmap4_char_map_linear
000000000068c500 00000000000005a4 t tt_cmap4_char_map_binary
000000000068cab0 0000000000000050 t tt_cmap4_char_index
000000000068cb00 0000000000000080 t tt_cmap4_char_next
000000000068cb80 0000000000000024 t tt_cmap4_get_info
000000000068cbb0 0000000000000040 t tt_cmap6_char_index
000000000068cbf0 00000000000000a4 t tt_cmap6_char_next
000000000068cca0 0000000000000024 t tt_cmap6_get_info
000000000068ccd0 000000000000008c t tt_cmap8_char_index
000000000068cd60 0000000000000128 t tt_cmap8_char_next
000000000068ce90 0000000000000020 t tt_cmap8_get_info
000000000068ceb0 000000000000004c t tt_cmap10_char_index
000000000068cf00 000000000000008c t tt_cmap10_char_next
000000000068cf90 0000000000000020 t tt_cmap10_get_info
000000000068cfb0 0000000000000020 t tt_cmap12_init
000000000068cfd0 00000000000000e8 t tt_cmap12_next
000000000068d0c0 0000000000000140 t tt_cmap12_char_map_binary
000000000068d200 0000000000000020 t tt_cmap12_char_index
000000000068d220 0000000000000020 t tt_cmap12_get_info
000000000068d240 0000000000000020 t tt_cmap13_init
000000000068d260 0000000000000084 t tt_cmap13_next
000000000068d2f0 0000000000000124 t tt_cmap13_char_map_binary
000000000068d420 0000000000000020 t tt_cmap13_char_index
000000000068d440 0000000000000020 t tt_cmap13_get_info
000000000068d460 0000000000000024 t tt_cmap14_init
000000000068d490 0000000000000008 t tt_cmap14_char_index
000000000068d4a0 000000000000000c t tt_cmap14_char_next
000000000068d4b0 0000000000000014 t tt_cmap14_get_info
000000000068d4d0 0000000000000074 t tt_cmap14_char_map_def_binary
000000000068d550 0000000000000074 t tt_cmap14_char_map_nondef_binary
000000000068d5d0 0000000000000070 t tt_cmap14_find_variant
000000000068d640 000000000000007c t tt_cmap14_char_var_index
000000000068d6c0 0000000000000084 t tt_cmap14_char_var_isdefault
000000000068d750 0000000000000038 t tt_cmap_unicode_init
000000000068d790 0000000000000014 t tt_cmap_unicode_char_index
000000000068d7b0 0000000000000014 t tt_cmap_unicode_char_next
000000000068d7d0 000000000000001c t tt_get_cmap_info
000000000068d7f0 0000000000000144 t tt_face_get_colr_layer
000000000068d940 000000000000007c t get_child_table_pointer
000000000068d9c0 00000000000000ec t get_deltas_for_var_index_base
000000000068dab0 00000000000000d4 t tt_face_get_colr_glyph_paint
000000000068db90 00000000000000a8 t tt_face_get_paint_layers
000000000068dc40 00000000000000a0 t tt_face_palette_set
000000000068dce0 000000000000002c t extract_svg_doc
000000000068dd10 0000000000000188 t tt_face_get_kerning
000000000068dea0 00000000000000a8 t tt_sbit_decoder_load_metrics
000000000068df50 00000000000001ec t tt_sbit_decoder_load_byte_aligned
000000000068e140 000000000000022c t tt_sbit_decoder_load_bit_aligned
000000000068e370 000000000000000c t sfnt_get_interface
000000000068e380 00000000000001b0 t tt_face_load_kern
000000000068e530 0000000000000030 t tt_face_free_sbit
000000000068e560 00000000000001fc t tt_face_get_metrics
000000000068e760 00000000000000a0 t tt_name_ascii_from_other
000000000068e800 00000000000000b8 t tt_name_ascii_from_utf16
000000000068e8c0 0000000000000040 t tt_face_free_svg
000000000068e900 0000000000000288 t tt_face_get_name
000000000068eb90 000000000000007c t tt_face_free_colr
000000000068ec10 0000000000000040 t tt_face_free_cpal
000000000068ec50 0000000000000084 t tt_face_free_ps_names
000000000068ece0 00000000000000e4 t tt_face_free_name
000000000068edd0 000000000000020c t sfnt_done_face
000000000068efe0 0000000000000030 t sfnt_stream_close
000000000068f010 0000000000000038 t tt_cmap14_done
000000000068f050 0000000000000034 t tt_cmap_unicode_done
000000000068f090 00000000000002b0 t tt_face_load_svg_doc
000000000068f340 0000000000000154 t tt_face_load_svg
000000000068f4a0 00000000000003bc t tt_face_colr_blend_layer
000000000068f860 00000000000003b8 t tt_face_load_colr
000000000068fc20 0000000000000080 t tt_face_load_hmtx
000000000068fca0 00000000000003c4 t tt_face_load_cpal
0000000000690070 00000000000002a4 t tt_face_load_strike_metrics
0000000000690320 0000000000000164 t tt_face_load_gasp
0000000000690490 000000000000000c t tt_face_set_sbit_strike
00000000006904a0 00000000000003f4 t tt_face_load_sbit
00000000006908a0 0000000000000058 t tt_face_load_pclt
0000000000690900 0000000000000398 t tt_face_load_name
0000000000690ca0 00000000000000e0 t tt_face_load_maxp
0000000000690d80 0000000000000098 t tt_face_load_hhea
0000000000690e20 0000000000000430 t Load_SBit_Png
0000000000691250 000000000000007c t tt_sbit_decoder_load_png
00000000006912d0 000000000000003c t error_callback
0000000000691310 00000000000000b8 t tt_cmap0_validate
00000000006913d0 000000000000024c t tt_cmap2_validate
0000000000691620 00000000000004fc t tt_cmap4_validate
0000000000691b20 00000000000000e4 t tt_cmap6_validate
0000000000691c10 0000000000000298 t tt_cmap8_validate
0000000000691eb0 00000000000000e8 t tt_cmap10_validate
0000000000691fa0 0000000000000168 t tt_cmap12_validate
0000000000692110 0000000000000158 t tt_cmap13_validate
0000000000692270 000000000000036c t tt_cmap14_validate
00000000006925e0 0000000000000070 t tt_cmap12_char_next
0000000000692650 0000000000000070 t tt_cmap13_char_next
00000000006926c0 0000000000000060 t tt_face_load_cmap
0000000000692720 0000000000000470 t tt_face_get_ps_name.part.0
0000000000692b90 0000000000000024 t tt_face_get_ps_name
0000000000692bc0 0000000000000058 t tt_face_load_bhed
0000000000692c20 0000000000000084 t tt_face_load_post
0000000000692cb0 00000000000000fc t tt_face_load_os2
0000000000692db0 0000000000000074 t read_data_from_FT_Stream
0000000000692e30 00000000000003f0 t tt_face_load_font_dir
0000000000693220 000000000000027c t tt_face_build_cmaps.isra.0
00000000006934a0 0000000000000ef0 t sfnt_init_face
0000000000694390 000000000000012c t get_apple_string.isra.0
00000000006944c0 0000000000000144 t get_win_string.isra.0
0000000000694610 0000000000000a60 t sfnt_get_ps_name
0000000000695070 0000000000000058 t tt_face_load_head
00000000006950d0 00000000000000cc t sfnt_get_name_index
00000000006951a0 0000000000000048 t tt_get_glyph_name
00000000006951f0 0000000000000088 t sfnt_get_glyph_name
0000000000695280 0000000000000058 t tt_face_goto_table
00000000006952e0 0000000000000090 t sfnt_load_table
0000000000695370 0000000000000090 t tt_face_load_any
0000000000695400 000000000000032c t tt_face_find_bdf_prop
0000000000695730 0000000000000098 t sfnt_get_charset_id
00000000006957d0 00000000000000e4 t tt_cmap14_variants
00000000006958c0 00000000000000f4 t tt_cmap14_get_nondef_chars
00000000006959c0 0000000000000158 t tt_cmap14_get_def_chars
0000000000695b20 00000000000003b0 t tt_cmap14_variant_chars
0000000000695ed0 0000000000000140 t tt_cmap14_char_variants
0000000000696010 0000000000000688 t tt_sbit_decoder_load_image
00000000006966a0 0000000000000160 t tt_sbit_decoder_load_compound
0000000000696800 0000000000000544 t tt_face_load_sbit_image
0000000000696d50 0000000000000c58 t sfnt_load_face
00000000006979b0 00000000000001cc t tt_face_get_colorline_stops
0000000000697b80 0000000000000364 t tt_face_get_color_glyph_clipbox
0000000000697ef0 0000000000000f70 t tt_face_get_paint
0000000000698e60 000000000000001c t af_cjk_get_standard_widths
0000000000698e80 000000000000007c t af_cjk_hints_init
0000000000698f00 0000000000000078 t af_cjk_snap_width
0000000000698f00 0000000000000078 t af_latin_snap_width
0000000000698f80 000000000000002c t af_dummy_hints_init
0000000000698fb0 0000000000000300 t af_sort_and_quantize_widths
00000000006992b0 000000000000001c t af_latin_get_standard_widths
00000000006992d0 00000000000001a4 t af_latin_hints_link_segments
0000000000699480 0000000000000080 t af_latin_hints_init
0000000000699500 0000000000000044 t af_autofitter_init
0000000000699550 0000000000000004 t af_autofitter_done
0000000000699560 000000000000019c t af_cjk_hints_compute_blue_edges
0000000000699700 0000000000000780 t af_glyph_hints_reload
0000000000699e80 00000000000007a8 t af_latin_hints_compute_segments
000000000069a630 00000000000001d0 t af_axis_hints_new_edge
000000000069a800 0000000000000260 t af_glyph_hints_align_strong_points
000000000069aa60 00000000000001b0 t af_cjk_metrics_scale_dim
000000000069ac10 0000000000000048 t af_cjk_metrics_scale
000000000069ac60 000000000000044c t af_latin_hints_compute_edges
000000000069b0b0 00000000000003d8 t af_latin_metrics_scale_dim
000000000069b490 0000000000000044 t af_latin_metrics_scale
000000000069b4e0 00000000000000f0 t af_glyph_hints_done
000000000069b5d0 00000000000000a0 t af_face_globals_free
000000000069b670 000000000000000c t af_get_interface
000000000069b680 0000000000000700 t af_cjk_hints_detect_features
000000000069bd80 0000000000000110 t af_iup_interp.part.0
000000000069be90 00000000000002a0 t af_glyph_hints_align_weak_points
000000000069c130 00000000000003bc t af_face_globals_new
000000000069c4f0 00000000000002b8 t af_property_set
000000000069c7b0 0000000000000278 t af_loader_compute_darkening.isra.0
000000000069ca30 000000000000084c t af_autofitter_load_glyph
000000000069d280 0000000000000240 t af_latin_compute_stem_width.isra.0
000000000069d4c0 0000000000000044 t af_glyph_hints_save.isra.0
000000000069d510 0000000000000058 t af_dummy_hints_apply
000000000069d570 0000000000000194 t af_cjk_compute_stem_width.isra.0
000000000069d710 000000000000025c t af_hint_normal_stem
000000000069d970 000000000000001c t af_indic_get_standard_widths
000000000069d990 0000000000000048 t af_indic_metrics_scale
000000000069d9e0 00000000000007d8 t af_cjk_hints_apply
000000000069e1c0 0000000000000004 t af_indic_hints_apply
000000000069e1d0 0000000000000bd4 t af_latin_hints_apply
000000000069edb0 000000000000007c t af_indic_hints_init
000000000069ee30 00000000000001b8 t af_property_get
000000000069eff0 0000000000000154 t af_shaper_get_cluster
000000000069f150 00000000000002dc t af_cjk_metrics_init_widths
000000000069f430 00000000000004bc t af_cjk_metrics_init_blues
000000000069f8f0 00000000000002f4 t af_latin_metrics_init_widths
000000000069fbf0 0000000000000ac4 t af_latin_metrics_init_blues
00000000006a06c0 000000000000014c t af_latin_metrics_init
00000000006a0810 0000000000000104 t af_cjk_metrics_check_digits.isra.0
00000000006a0920 000000000000007c t af_indic_metrics_init
00000000006a09a0 0000000000000088 t af_cjk_metrics_init
00000000006a0a30 00000000000000a8 t psh_hint_table_record
00000000006a0ae0 0000000000000008 t pshinter_get_globals_funcs
00000000006a0af0 0000000000000008 t pshinter_get_t1_funcs
00000000006a0b00 0000000000000008 t pshinter_get_t2_funcs
00000000006a0b10 0000000000000028 t t1_hints_open
00000000006a0b40 0000000000000028 t t2_hints_open
00000000006a0b70 00000000000000cc t psh_globals_scale_widths
00000000006a0c40 00000000000002b8 t psh_globals_set_scale
00000000006a0f00 00000000000000d0 t ps_hinter_init
00000000006a0fd0 0000000000000078 t ps_mask_table_done
00000000006a1050 00000000000000dc t ps_mask_table_alloc
00000000006a1130 000000000000008c t ps_mask_ensure
00000000006a11c0 000000000000002c t psh_globals_destroy
00000000006a11f0 0000000000000458 t psh_hint_align
00000000006a1650 00000000000001f0 t ps_mask_table_merge_all
00000000006a1840 0000000000000138 t psh_blues_set_zones_0.isra.0
00000000006a1980 00000000000001ec t psh_blues_set_zones
00000000006a1b70 00000000000002c0 t psh_hint_table_find_strong_points.isra.0
00000000006a1e30 000000000000021c t psh_hint_table_init.isra.0
00000000006a2050 0000000000000128 t psh_hint_table_activate_mask.isra.0
00000000006a2180 0000000000000084 t ps_hints_close.part.0
00000000006a2210 0000000000000014 t t1_hints_close
00000000006a2230 0000000000000088 t ps_hinter_done
00000000006a22c0 0000000000000014 t t2_hints_close
00000000006a22e0 0000000000000140 t ps_dimension_set_mask_bits
00000000006a2420 00000000000000ac t ps_hints_t2counter
00000000006a24d0 00000000000000ac t ps_hints_t2mask
00000000006a2580 00000000000000b0 t ps_hints_t1reset
00000000006a2630 000000000000120c t ps_hints_apply.part.0
00000000006a3840 000000000000001c t t1_hints_apply
00000000006a3860 000000000000001c t t2_hints_apply
00000000006a3880 0000000000000274 t psh_globals_new
00000000006a3b00 00000000000001cc t ps_dimension_add_t1stem
00000000006a3cd0 000000000000007c t t1_hints_stem
00000000006a3d50 0000000000000124 t t2_hints_stems
00000000006a3e80 0000000000000284 t ps_hints_t1stem3
00000000006a4110 0000000000000004 t gray_raster_reset
00000000006a4120 0000000000000008 t gray_raster_set_mode
00000000006a4130 0000000000000018 t ft_smooth_set_mode
00000000006a4150 0000000000000048 t ft_smooth_init
00000000006a41a0 0000000000000070 t ft_smooth_lcd_spans
00000000006a4210 0000000000000094 t ft_smooth_overlap_spans
00000000006a42b0 000000000000000c t gray_raster_done
00000000006a42c0 0000000000000084 t gray_convert_glyph_inner
00000000006a4350 00000000000000b8 t gray_set_cell
00000000006a4410 0000000000000304 t gray_render_line
00000000006a4720 000000000000002c t gray_line_to
00000000006a4750 000000000000004c t gray_move_to
00000000006a47a0 0000000000000650 t gray_convert_glyph
00000000006a4df0 0000000000000144 t gray_raster_render
00000000006a4f40 0000000000000040 t gray_raster_new
00000000006a4f80 000000000000002c t ft_smooth_get_cbox
00000000006a4fb0 0000000000000620 t ft_smooth_render
00000000006a55d0 0000000000000064 t ft_smooth_transform
00000000006a5640 0000000000000210 t gray_render_cubic.isra.0
00000000006a5850 000000000000002c t gray_cubic_to
00000000006a5880 00000000000001a4 t gray_conic_to
00000000006a5a30 00000000000000b0 t New_Profile
00000000006a5ae0 00000000000000a4 t End_Profile
00000000006a5b90 00000000000000bc t Insert_Y_Turn
00000000006a5c50 0000000000000030 t Split_Conic
00000000006a5c80 000000000000009c t Split_Cubic
00000000006a5d20 000000000000020c t Bezier_Up
00000000006a5f30 000000000000021c t Conic_To
00000000006a6150 000000000000009c t Sort
00000000006a61f0 000000000000001c t Vertical_Sweep_Init
00000000006a6210 0000000000000148 t Vertical_Sweep_Span
00000000006a6360 0000000000000248 t Vertical_Sweep_Drop
00000000006a65b0 0000000000000014 t Vertical_Sweep_Step
00000000006a65d0 0000000000000004 t Horizontal_Sweep_Init
00000000006a65e0 00000000000000cc t Horizontal_Sweep_Span
00000000006a66b0 0000000000000268 t Horizontal_Sweep_Drop
00000000006a6920 0000000000000004 t Horizontal_Sweep_Step
00000000006a6930 0000000000000004 t ft_black_reset
00000000006a6940 0000000000000008 t ft_black_set_mode
00000000006a6950 0000000000000030 t ft_raster1_init
00000000006a6980 0000000000000018 t ft_raster1_set_mode
00000000006a69a0 000000000000000c t ft_black_done
00000000006a69b0 0000000000000254 t Line_Up
00000000006a6c10 0000000000000248 t Line_To
00000000006a6e60 0000000000000040 t ft_black_new
00000000006a6ea0 000000000000002c t ft_raster1_get_cbox
00000000006a6ed0 00000000000001c4 t ft_raster1_render
00000000006a70a0 0000000000000064 t ft_raster1_transform
00000000006a7110 0000000000000260 t Cubic_To
00000000006a7370 0000000000000ae0 t Render_Single_Pass.constprop.0
00000000006a7e50 0000000000000218 t ft_black_render
00000000006a8070 0000000000000010 t ft_svg_init
00000000006a8080 0000000000000038 t ft_svg_done
00000000006a80c0 0000000000000080 t ft_svg_preset_slot
00000000006a8140 00000000000000e8 t ft_svg_transform
00000000006a8230 000000000000000c t ft_svg_get_interface
00000000006a8240 0000000000000050 t ft_svg_property_get
00000000006a8290 00000000000000a4 t ft_svg_property_set
00000000006a8340 0000000000000128 t ft_svg_render
00000000006a8470 000000000000001c t ft_sdf_init
00000000006a8490 0000000000000004 t ft_sdf_done
00000000006a84a0 0000000000000018 t ft_sdf_set_mode
00000000006a84c0 0000000000000004 t bsdf_raster_reset
00000000006a84d0 0000000000000008 t bsdf_raster_set_mode
00000000006a84e0 0000000000000118 t split_cubic
00000000006a8600 000000000000002c t ft_sdf_get_cbox
00000000006a8630 000000000000000c t bsdf_raster_done
00000000006a8640 000000000000000c t sdf_raster_done
00000000006a8650 00000000000002a0 t ft_sdf_render
00000000006a88f0 000000000000000c t ft_sdf_requester
00000000006a8900 00000000000000b4 t sdf_property_get
00000000006a89c0 00000000000000e0 t sdf_property_set
00000000006a8aa0 00000000000001fc t ft_bsdf_render
00000000006a8ca0 0000000000000090 t compare_neighbor
00000000006a8d30 0000000000000078 t map_fixed_to_sdf
00000000006a8db0 0000000000000040 t bsdf_raster_new
00000000006a8df0 0000000000000040 t sdf_raster_new
00000000006a8e30 0000000000000068 t sdf_edge_new
00000000006a8ea0 00000000000000ac t sdf_cubic_to
00000000006a8f50 00000000000000a4 t sdf_line_to
00000000006a9000 00000000000000fc t sdf_conic_to
00000000006a9100 0000000000000164 t split_sdf_conic
00000000006a9270 0000000000000188 t split_sdf_cubic
00000000006a9400 0000000000000064 t ft_sdf_transform
00000000006a9470 0000000000000068 t sdf_contour_done
00000000006a94e0 00000000000001f0 t split_sdf_shape
00000000006a96d0 0000000000000008 t sdf_raster_set_mode
00000000006a96e0 0000000000000004 t sdf_raster_reset
00000000006a96f0 0000000000000f10 t sdf_generate_bounding_box.isra.0
00000000006aa600 00000000000006f8 t sdf_raster_render
00000000006aad00 000000000000007c t sdf_move_to
00000000006aad80 0000000000000bc8 t bsdf_raster_render
00000000006ab950 0000000000000004 t ft_gzip_free
00000000006ab960 0000000000000130 t ft_gzip_check_header
00000000006aba90 0000000000000020 t ft_gzip_alloc
00000000006abab0 000000000000012c t ft_gzip_file_fill_output
00000000006abbe0 000000000000016c t ft_gzip_file_io
00000000006abd50 0000000000000008 t ft_gzip_stream_io
00000000006abd60 0000000000000090 t ft_gzip_stream_close
00000000006abdf0 00000000000002d0 T FT_Stream_OpenGzip
00000000006ac0c0 0000000000000114 T FT_Gzip_Uncompress
00000000006ac1e0 0000000000000064 t ft_lzw_check_header
00000000006ac250 00000000000001c8 t ft_lzwstate_get_code
00000000006ac420 00000000000000e8 t ft_lzwstate_stack_grow
00000000006ac510 0000000000000174 T FT_Stream_OpenLZW
00000000006ac690 0000000000000088 t ft_lzwstate_done
00000000006ac720 0000000000000050 t ft_lzw_stream_close
00000000006ac770 00000000000003d8 t ft_lzwstate_io
00000000006acb50 00000000000001dc t ft_lzw_stream_io
00000000006acd30 0000000000000020 t ft_bzip2_alloc
00000000006acd50 0000000000000004 t ft_bzip2_free
00000000006acd60 0000000000000068 t ft_bzip2_stream_close
00000000006acdd0 0000000000000134 t ft_bzip2_file_fill_output
00000000006acf10 000000000000018c t ft_bzip2_stream_io
00000000006ad0a0 0000000000000070 t ft_bzip2_check_header
00000000006ad110 0000000000000194 T FT_Stream_OpenBzip2
00000000006ad2b0 0000000000000020 t afm_compare_kern_pairs
00000000006ad2d0 0000000000000130 t PS_Conv_Strtol
00000000006ad400 0000000000000090 t PS_Conv_ToInt
00000000006ad490 0000000000000084 t skip_spaces
00000000006ad520 0000000000000108 t skip_literal_string
00000000006ad630 0000000000000098 t skip_string
00000000006ad6d0 0000000000000008 t ps_parser_skip_spaces
00000000006ad6e0 0000000000000018 t ps_parser_to_int
00000000006ad700 0000000000000160 t ps_parser_to_bytes
00000000006ad860 0000000000000040 t ps_parser_init
00000000006ad8a0 0000000000000004 t ps_parser_done
00000000006ad8b0 0000000000000024 t t1_builder_done
00000000006ad8e0 000000000000012c t t1_builder_close_contour
00000000006ada10 0000000000000024 t cff_builder_done
00000000006ada40 0000000000000050 t cff_builder_add_point
00000000006ada90 000000000000012c t cff_builder_close_contour
00000000006adbc0 0000000000000024 t ps_builder_done
00000000006adbf0 0000000000000010 t cff_random
00000000006adc00 0000000000000010 t t1_cmap_std_done
00000000006adc10 000000000000002c t t1_cmap_standard_init
00000000006adc40 0000000000000030 t t1_cmap_expert_init
00000000006adc70 0000000000000028 t t1_cmap_custom_init
00000000006adca0 0000000000000008 t t1_cmap_custom_done
00000000006adcb0 0000000000000034 t t1_cmap_custom_char_index
00000000006adcf0 0000000000000064 t t1_cmap_custom_char_next
00000000006add60 000000000000000c t psaux_get_glyph_name
00000000006add70 0000000000000038 t t1_cmap_unicode_init
00000000006addb0 0000000000000014 t t1_cmap_unicode_char_index
00000000006addd0 0000000000000014 t t1_cmap_unicode_char_next
00000000006addf0 000000000000006c t cf2_stack_popInt
00000000006ade60 0000000000000064 t cf2_stack_popFixed
00000000006aded0 000000000000006c t cf2_stack_getReal
00000000006adf40 0000000000000074 t ps_table_release
00000000006adfc0 0000000000000028 t afm_parser_done
00000000006adff0 0000000000000034 t t1_cmap_unicode_done
00000000006ae030 00000000000000a8 t ps_table_realloc
00000000006ae0e0 0000000000000008 t ps_table_done
00000000006ae0f0 00000000000000e4 t ps_table_new
00000000006ae1e0 00000000000000b0 t t1_builder_add_point
00000000006ae290 00000000000000e4 t cf2_arrstack_setNumElements
00000000006ae380 0000000000000068 t cf2_arrstack_push
00000000006ae3f0 0000000000000114 t cf2_doStems
00000000006ae510 00000000000003b0 t PS_Conv_ToFixed
00000000006ae8c0 00000000000001b8 t ps_tofixedarray
00000000006aea80 0000000000000030 t ps_parser_to_fixed_array
00000000006aeab0 000000000000013c t ps_parser_to_coord_array
00000000006aebf0 0000000000000020 t ps_parser_to_fixed
00000000006aec10 00000000000000b4 t ps_builder_init
00000000006aecd0 00000000000000e4 t cf2_getSeacComponent
00000000006aedc0 000000000000021c t t1_make_subfont
00000000006aefe0 00000000000000b0 t t1_builder_add_contour
00000000006af090 00000000000000a8 t cff_builder_add_contour
00000000006af140 00000000000000b4 t t1_builder_init
00000000006af200 00000000000000c0 t cff_builder_init
00000000006af2c0 0000000000000064 t afm_parser_init
00000000006af330 0000000000000110 t cf2_hintmap_map
00000000006af440 00000000000000e0 t cf2_glyphpath_hintPoint
00000000006af520 000000000000032c t cf2_hintmap_insertHint
00000000006af850 00000000000001b4 t cf2_glyphpath_computeOffset
00000000006afa10 0000000000000378 t t1_decoder_parse_metrics
00000000006afd90 00000000000000a0 t t1_lookup_glyph_by_stdcharcode_ps
00000000006afe30 0000000000000098 t t1_cmap_std_char_index
00000000006afed0 0000000000000078 t t1_cmap_std_char_next
00000000006aff50 00000000000000e0 t t1_decoder_init
00000000006b0030 00000000000000cc t afm_tokenize
00000000006b0100 00000000000000f8 t cff_decoder_prepare
00000000006b0200 0000000000000048 t cf2_free_instance
00000000006b0250 0000000000000110 t ps_table_add
00000000006b0360 00000000000004d0 t cf2_glyphpath_pushPrevElem
00000000006b0830 000000000000022c t cf2_computeDarkening.part.0.constprop.0
00000000006b0a60 00000000000000b0 t ps_builder_add_contour.constprop.0
00000000006b0b10 0000000000000034 t cff_check_points
00000000006b0b50 000000000000002c t ps_builder_check_points.part.0.isra.0
00000000006b0b80 0000000000000034 t t1_builder_check_points
00000000006b0bc0 0000000000000040 t cf2_stack_pushFixed
00000000006b0c00 000000000000006c t afm_stream_skip_spaces.part.0.isra.0
00000000006b0c70 0000000000000038 t cf2_freeT1SeacComponent.isra.0
00000000006b0cb0 0000000000000074 t cf2_getT1SeacComponent.isra.0
00000000006b0d30 0000000000000128 t ps_builder_close_contour.isra.0
00000000006b0e60 0000000000000020 t cf2_builder_moveTo
00000000006b0e80 0000000000000064 t t1_decrypt
00000000006b0ef0 00000000000000b8 t afm_stream_read_one
00000000006b0fb0 00000000000000d4 t cff_decoder_init
00000000006b1090 00000000000000e4 t afm_stream_read_string
00000000006b1180 0000000000000188 t afm_parser_read_vals
00000000006b1310 0000000000000064 t afm_parser_next_key.constprop.0.isra.0
00000000006b1380 0000000000000154 t skip_procedure
00000000006b14e0 00000000000001ec t ps_parser_skip_PS_token
00000000006b16d0 000000000000019c t ps_parser_to_token
00000000006b1870 0000000000000120 t ps_parser_to_token_array
00000000006b1990 00000000000004c4 t ps_parser_load_field
00000000006b1e60 0000000000000150 t ps_parser_load_field_table
00000000006b1fb0 0000000000000084 t t1_builder_add_point1
00000000006b2040 000000000000006c t t1_builder_start_point
00000000006b20b0 0000000000000044 t cf2_stack_setReal
00000000006b2100 0000000000000044 t cf2_stack_pushInt
00000000006b2150 0000000000000060 t t1_decoder_done
00000000006b21b0 00000000000000a4 t cf2_hintmask_read
00000000006b2260 00000000000000b4 t cff_builder_add_point1
00000000006b2320 0000000000000068 t cff_builder_start_point
00000000006b2390 0000000000000154 t cf2_hint_init
00000000006b24f0 00000000000009d0 t cf2_hintmap_build
00000000006b2ec0 0000000000000168 t ps_decoder_init
00000000006b3030 00000000000001d0 t cf2_builder_cubeTo
00000000006b3200 00000000000000f4 t cf2_glyphpath_moveTo
00000000006b3300 00000000000000a0 t cf2_glyphpath_pushMove
00000000006b33a0 0000000000000180 t cf2_glyphpath_lineTo
00000000006b3520 00000000000001dc t cf2_glyphpath_curveTo
00000000006b3700 00000000000001ac t cf2_doFlex
00000000006b38b0 000000000000015c t cf2_builder_lineTo
00000000006b3a10 0000000000000738 t afm_parser_parse
00000000006b4150 0000000000002e58 t cf2_interpT2CharString
00000000006b6fb0 0000000000000b1c t cf2_decoder_parse_charstrings
00000000006b7ad0 0000000000000244 t ps_unicode_value
00000000006b7d20 0000000000000034 t compare_uni_maps
00000000006b7d60 00000000000000ac t ps_unicodes_char_index
00000000006b7e10 00000000000000d0 t ps_unicodes_char_next
00000000006b7ee0 0000000000000028 t ps_get_macintosh_name
00000000006b7f10 000000000000002c t ps_get_standard_strings
00000000006b7f40 000000000000000c t psnames_get_service
00000000006b7f50 0000000000000294 t ps_unicodes_init
00000000006b81f0 000000000000002c t ft_ansi_stream_close
00000000006b8220 00000000000000d0 t ft_ansi_stream_io
00000000006b82f0 0000000000000008 t ft_alloc
00000000006b8300 0000000000000008 t ft_free
00000000006b8310 000000000000000c t ft_realloc
00000000006b8320 00000000000000c8 t FT_Stream_Open
00000000006b83f0 000000000000003c t FT_New_Memory
00000000006b8430 0000000000000004 t FT_Done_Memory
00000000006b8440 0000000000000004 t FT_Trace_Disable
00000000006b8450 0000000000000004 t FT_Trace_Enable
00000000006b8460 0000000000000014 T FT_Bitmap_Init
00000000006b8480 0000000000000014 T FT_Bitmap_New
00000000006b84a0 00000000000001c4 T FT_Bitmap_Copy
00000000006b8670 0000000000000058 T FT_Bitmap_Done
00000000006b86d0 00000000000004b4 T FT_Bitmap_Convert
00000000006b8b90 0000000000000010 t default_bzfree
00000000006b8ba0 000000000000000c t default_bzalloc
00000000006b8bb0 00000000000000f0 T BZ2_bzDecompressInit
00000000006b8ca0 0000000000000038 T BZ2_indexIntoF
00000000006b8ce0 0000000000000e6c T BZ2_bzDecompress
00000000006b9b50 0000000000000088 T BZ2_bzDecompressEnd
00000000006b9be0 000000000000000c T BZ2_bzlibVersion
00000000006b9bf0 0000000000000064 T BZ2_bz__AssertH__fail
00000000006b9c60 0000000000002a3c T BZ2_decompress
00000000006bc6a0 0000000000000158 T BZ2_hbCreateDecodeTables
00000000006bc800 0000000000000914 t __multf3
00000000006bd120 0000000000000064 t __floatunsitf
00000000006bd1a0 0000000000000130 t __extenddftf2
00000000006bd2e0 0000000000000370 t __trunctfsf2
00000000006bd660 00000000000002ac t init_dwarf_reg_size_table
00000000006bd920 0000000000000160 t uw_install_context_1
00000000006bda80 000000000000018c t read_encoded_value
00000000006bdc20 00000000000007c4 t execute_stack_op
00000000006be400 0000000000000338 t uw_update_context_1
00000000006be740 0000000000000148 t uw_update_context
00000000006be8a0 00000000000007d4 t execute_cfa_program_specialized
00000000006bf080 0000000000000814 t execute_cfa_program_generic
00000000006bf8a0 0000000000000444 t uw_frame_state_for
00000000006bfd00 0000000000000370 t uw_init_context_1
00000000006c0080 000000000000010c t _Unwind_RaiseException_Phase2
00000000006c01a0 000000000000010c t _Unwind_ForcedUnwind_Phase2
00000000006c02c0 0000000000000054 t _Unwind_SetGR
00000000006c0320 0000000000000014 t _Unwind_GetIPInfo
00000000006c0340 0000000000000008 t _Unwind_SetIP
00000000006c0360 0000000000000008 t _Unwind_GetLanguageSpecificData
00000000006c0380 0000000000000008 t _Unwind_GetRegionStart
00000000006c03a0 0000000000000008 t _Unwind_GetDataRelBase
00000000006c03c0 0000000000000008 t _Unwind_GetTextRelBase
00000000006c03e0 0000000000000004 t _Unwind_DebugHook
00000000006c0400 000000000000018c t _Unwind_RaiseException
00000000006c05a0 0000000000000114 t _Unwind_Resume
00000000006c06c0 000000000000001c t _Unwind_DeleteException
00000000006c06e0 0000000000000018 t fde_unencoded_compare
00000000006c0700 000000000000002c t fde_unencoded_extract
00000000006c0740 00000000000000d4 t frame_downheap
00000000006c0820 0000000000000138 t read_encoded_value_with_base
00000000006c0960 0000000000000238 t fde_radixsort
00000000006c0ba0 0000000000000104 t __deregister_frame_info_bases.part.0
00000000006c0cc0 000000000000012c t get_cie_encoding
00000000006c0e00 00000000000000d4 t fde_mixed_encoding_extract
00000000006c0ee0 00000000000001f0 t classify_object_over_fdes.constprop.0
00000000006c10e0 00000000000000bc t fde_single_encoding_extract
00000000006c11a0 00000000000000ac t fde_single_encoding_compare
00000000006c1260 000000000000010c t fde_mixed_encoding_compare
00000000006c1380 0000000000000214 t add_fdes.isra.0
00000000006c15a0 000000000000027c t linear_search_fdes
00000000006c1820 0000000000000528 t search_object
00000000006c1d60 0000000000000074 t __register_frame_info
00000000006c1de0 0000000000000018 t __deregister_frame_info
00000000006c1e00 00000000000001d4 t _Unwind_Find_FDE
00000000006c1fe0 0000000000000030 T __arm_za_disable
00000000006c1fe0 0000000000000030 t __libgcc_arm_za_disable
00000000006c2020 0000000000000070 t __sfp_handle_exceptions
00000000006c2090 00000000000000a0 T __arm_tpidr2_save
00000000006c2090 00000000000000a0 t __libgcc_arm_tpidr2_save
00000000006c2140 0000000000000038 T rand
00000000006c2180 000000000000002c T getenv
00000000006c21c0 000000000000002c T strndup
00000000006c2200 0000000000000020 T _freelocale_r
00000000006c2220 0000000000000024 T freelocale
00000000006c2260 00000000000000b8 T __submore
00000000006c2320 00000000000000b4 T _fputs_r
00000000006c23e0 000000000000002c T fputs
00000000006c2420 0000000000000064 T _init_signal_r
00000000006c24a0 000000000000006c T _signal_r
00000000006c2520 00000000000000a4 T _raise_r
00000000006c25e0 0000000000000024 T raise
00000000006c2620 000000000000002c T signal
00000000006c2660 0000000000000018 T isalpha
00000000006c2680 0000000000000064 T __assert_func
00000000006c2700 0000000000000418 T _strerror_r
00000000006c2b20 000000000000002c T strerror
00000000006c2b60 00000000000000f0 T _fwrite_r
00000000006c2c60 0000000000000044 T fwrite
00000000006c2cc0 0000000000000104 T strrchr
00000000006c2de0 0000000000000060 T __itoa
00000000006c2e40 0000000000000004 T itoa
00000000006c2e60 0000000000000184 T _fgets_r
00000000006c3000 000000000000003c T fgets
00000000006c3040 0000000000000494 T __sfvwrite_r
00000000006c34e0 000000000000003c T setenv
00000000006c3520 0000000000000008 T _user_strerror
00000000006c3540 00000000000002e8 t _strtoll_l.isra.0
00000000006c3840 0000000000000044 T _strtoll_r
00000000006c38a0 0000000000000048 T strtoll
00000000006c3900 00000000000007ac T __loadlocale
00000000006c40c0 0000000000000094 T __get_locale_env
00000000006c4160 000000000000002c T __locale_mb_cur_max
00000000006c41a0 0000000000000008 T atof
00000000006c41c0 0000000000000054 t sulp
00000000006c4220 0000000000001210 T _strtod_l
00000000006c5440 0000000000000050 T _strtod_r
00000000006c54a0 000000000000003c T strtod_l
00000000006c54e0 0000000000000054 T strtod
00000000006c5540 00000000000000d0 T strtof_l
00000000006c5620 0000000000000024 T srandom
00000000006c5660 0000000000000038 T random
00000000006c56a0 00000000000000a0 T sprintf
00000000006c5740 0000000000000078 T fiprintf
00000000006c57c0 00000000000000b4 T getc
00000000006c5880 00000000000000a8 T __utoa
00000000006c5940 0000000000000028 T putchar
00000000006c5980 000000000000007c T strcat
00000000006c5a00 000000000000011c t rshift
00000000006c5b20 00000000000008c4 T __gethex
00000000006c6400 00000000000001a4 t _strtoul_l.isra.0
00000000006c65c0 0000000000000044 T _strtoul_r
00000000006c6620 0000000000000048 T strtoul
00000000006c6680 0000000000000130 T strlen
00000000006c67c0 0000000000000048 T __ascii_mbtowc
00000000006c6820 00000000000002dc T __utf8_mbtowc
00000000006c6b00 00000000000000cc T __sjis_mbtowc
00000000006c6be0 0000000000000124 T __eucjp_mbtowc
00000000006c6d20 00000000000001c0 T __jis_mbtowc
00000000006c6ee0 000000000000003c T write
00000000006c6f20 00000000000004b0 T _fseeko_r
00000000006c73e0 000000000000003c T fseeko
00000000006c7420 0000000000000094 T ferror
00000000006c74c0 0000000000000080 T strncat
00000000006c7540 000000000000002c T gettimeofday
00000000006c7580 00000000000000b8 T bsearch
00000000006c7640 00000000000000cc T strchr
00000000006c7720 0000000000000314 T _fread_r
00000000006c7a40 0000000000000044 T fread
00000000006c7aa0 000000000000002c T calloc
00000000006c7ae0 00000000000000d8 T _vsnprintf_r
00000000006c7bc0 0000000000000054 T vsnprintf
00000000006c7c40 00000000000000dc T memchr
00000000006c7d20 000000000000004c T __sread
00000000006c7d80 0000000000000008 T __seofread
00000000006c7da0 0000000000000068 T __swrite
00000000006c7e20 0000000000000050 T __sseek
00000000006c7e80 0000000000000008 T __sclose
00000000006c7ea0 000000000000006c T _vasprintf_r
00000000006c7f20 000000000000004c T vasprintf
00000000006c7f80 000000000000002c T aligned_alloc
00000000006c7fc0 0000000000000974 T qsort
00000000006c7fc0 0000000000000974 t qsort.localalias
00000000006c8940 0000000000000018 T abort
00000000006c8960 0000000000000038 t lflush
00000000006c89a0 00000000000001b0 T __srefill_r
00000000006c8b60 0000000000000004 T call_once
00000000006c8b80 0000000000000004 T mtx_destroy
00000000006c8ba0 000000000000002c T mtx_init
00000000006c8be0 000000000000005c T mtx_lock
00000000006c8c40 000000000000005c T mtx_unlock
00000000006c8ca0 0000000000000134 T _fclose_r
00000000006c8de0 0000000000000024 T fclose
00000000006c8e20 000000000000003c T read
00000000006c8e80 00000000000001b4 T strncmp
00000000006c9034 0000000000000790 t get_arg
00000000006c97c4 0000000000003c10 T _vfprintf_r
00000000006cd3d4 000000000000004c T vfprintf
00000000006cd420 00000000000000d4 t __sbprintf
00000000006cd500 00000000000000c0 T _calloc_r
00000000006cd5c0 0000000000000078 T fprintf
00000000006cd640 0000000000000134 T strcmp
00000000006cd780 0000000000000094 T __swhatbuf_r
00000000006cd820 00000000000000fc T __smakebuf_r
00000000006cd920 000000000000002c T realloc
00000000006cd960 0000000000000038 T strlcpy
00000000006cd9a0 0000000000000024 T strdup
00000000006cda00 00000000000000b8 T strnlen
00000000006cdac0 000000000000002c T memalign
00000000006cdb00 000000000000001c t stdio_exit_handler
00000000006cdb20 000000000000006c t cleanup_stdio
00000000006cdba0 0000000000000134 t global_stdio_init.part.0
00000000006cdce0 000000000000000c T __sfp_lock_acquire
00000000006cdd00 000000000000000c T __sfp_lock_release
00000000006cdd20 000000000000012c T __sfp
00000000006cde60 0000000000000054 T __sinit
00000000006cdec0 000000000000000c T _Exit
00000000006cdee0 00000000000007e8 T _malloc_r
00000000006ce6c8 0000000000000038 T setjmp
00000000006ce700 000000000000003c T longjmp
00000000006ce740 00000000000000e0 T _putc_r
00000000006ce820 0000000000000074 T strcasecmp
00000000006ce8a0 00000000000001a4 t quorem
00000000006cea60 0000000000001304 T _dtoa_r
00000000006cfd80 00000000000000d8 T _wcrtomb_r
00000000006cfe60 0000000000000024 T isatty
00000000006cfec0 000000000000022c T memcpy
00000000006cfec0 T memmove
00000000006d0100 0000000000000078 T _strndup_r
00000000006d0180 0000000000000124 T _malloc_trim_r
00000000006d02c0 00000000000002d4 T _free_r
00000000006d05a0 0000000000000034 T strtok
00000000006d05d4 0000000000000790 t get_arg
00000000006d0d64 0000000000003c0c T _svfprintf_r
00000000006d4980 000000000000001c T atoi
00000000006d49a0 00000000000002e8 t _strtol_l.part.0
00000000006d4ca0 0000000000000070 T _strtol_r
00000000006d4d20 0000000000000074 T strtol
00000000006d4da0 0000000000000098 T clearerr
00000000006d4e40 0000000000000024 T close
00000000006d4e80 0000000000000018 T isspace
00000000006d4ea0 0000000000000094 T feof
00000000006d4f40 0000000000000014 T __errno
00000000006d4f60 0000000000000044 T malloc
00000000006d4fc0 0000000000000024 T free
00000000006d5000 0000000000000078 T printf
00000000006d5080 000000000000003c T lseek
00000000006d50c0 00000000000000b4 T sscanf
00000000006d5180 0000000000000124 T _fopen_r
00000000006d52c0 000000000000002c T fopen
00000000006d5300 0000000000000010 T __set_ctype
00000000006d5320 0000000000000048 T time
00000000006d5380 00000000000000a8 T strlcat
00000000006d5440 0000000000000020 T isblank
00000000006d5460 00000000000000ac T asprintf
00000000006d5520 00000000000000d0 T _puts_r
00000000006d5600 0000000000000024 T puts
00000000006d5640 0000000000000154 T _fdopen_r
00000000006d57a0 000000000000002c T fdopen
00000000006d57e0 0000000000000088 T open
00000000006d5880 000000000000002c T gmtime
00000000006d58c0 0000000000000104 T _findenv_r
00000000006d59e0 0000000000000018 T _getenv_r
00000000006d5a00 0000000000000134 t critical_factorization
00000000006d5b40 0000000000000334 t two_way_long_needle
00000000006d5e80 0000000000000258 T strstr
00000000006d60e0 00000000000000a4 T fputc
00000000006d61a0 0000000000000090 T _vsscanf_r
00000000006d6240 000000000000004c T vsscanf
00000000006d62a0 000000000000053c T _realloc_r
00000000006d67e0 0000000000000020 T islower
00000000006d6800 0000000000000084 T strncasecmp
00000000006d68a0 000000000000005c T _strdup_r
00000000006d6900 0000000000000098 T _fwalk_sglue
00000000006d69a0 000000000000000c T __malloc_lock
00000000006d69c0 000000000000000c T __malloc_unlock
00000000006d69e0 0000000000000160 T _ftello_r
00000000006d6b40 0000000000000024 T ftello
00000000006d6b80 00000000000000ac T fileno
00000000006d6c40 0000000000000068 T __srget_r
00000000006d6cc0 0000000000000104 T memset
00000000006d6de0 0000000000000004 T _ftell_r
00000000006d6e00 0000000000000024 T ftell
00000000006d6e40 0000000000000254 T _setenv_r
00000000006d70a0 000000000000002c T stat
00000000006d70e0 00000000000000a0 T __strtok_r
00000000006d7180 0000000000000008 T strtok_r
00000000006d7188 0000000000000074 t get_arg
00000000006d71fc 00000000000032d0 T __ssvfscanf_r
00000000006da4e0 0000000000000004 T _fseek_r
00000000006da500 000000000000003c T fseek
00000000006da540 0000000000000014 T atexit
00000000006da580 000000000000012c T strcpy
00000000006da6c0 0000000000000350 T _newlocale_r
00000000006daa20 000000000000003c T newlocale
00000000006daa60 0000000000000034 T __ascii_wctomb
00000000006daaa0 00000000000000e4 T __utf8_wctomb
00000000006daba0 0000000000000084 T __sjis_wctomb
00000000006dac40 00000000000000a8 T __eucjp_wctomb
00000000006dad00 00000000000000bc T __jis_wctomb
00000000006dadc0 0000000000000040 T __memcpy_chk
00000000006dae00 0000000000000020 T isupper
00000000006dae20 0000000000000158 T snprintf
00000000006daf80 000000000000008c T strncpy
00000000006db020 0000000000000024 T toupper
00000000006db060 00000000000001a4 t _strtoull_l.isra.0
00000000006db220 0000000000000044 T _strtoull_r
00000000006db280 0000000000000048 T strtoull
00000000006db300 0000000000000150 T stpcpy
00000000006db460 0000000000000010 T _wcsrtombs_r
00000000006db480 00000000000001c8 T memcmp
00000000006db660 0000000000000048 T __match
00000000006db6c0 000000000000025c T __hexnan
00000000006db920 00000000000000bc T __sflags
00000000006db9e0 00000000000000f0 T _mbrtowc_r
00000000006dbae0 0000000000000090 T __libc_init_array
00000000006dbb80 0000000000000180 T __swsetup_r
00000000006dbd00 00000000000001e8 T __sflush_r
00000000006dbf00 00000000000000b8 T _fflush_r
00000000006dbfc0 0000000000000044 T fflush
00000000006dc020 000000000000000c T __env_lock
00000000006dc040 000000000000000c T __env_unlock
00000000006dc060 000000000000008c T _Balloc
00000000006dc100 0000000000000020 T _Bfree
00000000006dc120 0000000000000108 T __multadd
00000000006dc240 000000000000013c T __s2b
00000000006dc380 0000000000000094 T __hi0bits
00000000006dc420 00000000000000fc T __lo0bits
00000000006dc520 000000000000004c T __i2b
00000000006dc580 00000000000001ec T __multiply
00000000006dc780 00000000000000fc T __pow5mult
00000000006dc880 0000000000000174 T __lshift
00000000006dca00 0000000000000050 T __mcmp
00000000006dca60 00000000000001c4 T __mdiff
00000000006dcc40 0000000000000084 T __ulp
00000000006dcce0 0000000000000168 T __b2d
00000000006dce60 0000000000000154 T __d2b
00000000006dcfc0 00000000000000ac T __ratio
00000000006dd080 0000000000000078 T __copybits
00000000006dd100 000000000000006c T __any_on
00000000006dd180 00000000000000c8 T __ssprint_r
00000000006dd260 00000000000002a0 T gmtime_r
00000000006dd500 0000000000000790 t get_arg
00000000006ddc90 000000000000294c T _vfiprintf_r
00000000006e05dc 00000000000000d4 t __sbprintf
00000000006e06c0 000000000000017c T _memalign_r
00000000006e0840 0000000000000118 T __swbuf_r
00000000006e0960 0000000000000188 T _wcsnrtombs_l
00000000006e0b00 0000000000000074 T _wcsnrtombs_r
00000000006e0b74 00000000000000f0 T _sungetc_r
00000000006e0c64 0000000000000070 T __ssrefill_r
00000000006e0cd4 00000000000000e0 T _sfread_r
00000000006e0dc0 0000000000000044 T __sprint_r
00000000006e0e20 0000000000000008 T iswspace
00000000006e0e40 00000000000000d4 T __sccl
00000000006e0f20 0000000000000008 T __localeconv_l
00000000006e0f40 0000000000000028 T _localeconv_r
00000000006e0f80 0000000000000050 T __chk_fail
00000000006e0fe0 00000000000000e0 T __register_exitproc
00000000006e10c0 000000000000009c T stpncpy
00000000006e1160 0000000000000188 T __ssputs_r
00000000006e1300 0000000000000048 T iswspace_l
00000000006e1360 000000000000013c T __call_exitprocs
00000000006e14a0 000000000000007c T category
00000000006e1520 0000000000000020 T _exit
00000000006e1540 0000000000000170 T chdir
00000000006e16c0 0000000000000034 T clock_gettime
00000000006e1700 000000000000021c T _concatenate_path
00000000006e1920 0000000000000094 T _fstat_r
00000000006e19c0 0000000000000014 T _getpid_r
00000000006e19e0 0000000000000020 T __getreent
00000000006e1a00 0000000000000024 T _gettimeofday_r
00000000006e1a40 0000000000000094 T __release_handle
00000000006e1ae0 00000000000000c8 T __alloc_handle
00000000006e1bc0 0000000000000050 T __get_handle
00000000006e1c20 0000000000000108 T _close_r
00000000006e1d40 0000000000000008 t null_write
00000000006e1d60 0000000000000018 T setDefaultDevice
00000000006e1d80 0000000000000114 T FindDevice
00000000006e1ea0 0000000000000034 T RemoveDevice
00000000006e1ee0 00000000000000c8 T AddDevice
00000000006e1fc0 0000000000000034 T GetDeviceOpTab
00000000006e2000 0000000000000008 T _isatty_r
00000000006e2020 0000000000000014 T _kill_r
00000000006e2040 00000000000000a4 T _lseek_r
00000000006e2100 000000000000001c T pthread_mutexattr_init
00000000006e2120 000000000000001c T pthread_mutexattr_settype
00000000006e2140 0000000000000080 T pthread_mutex_init
00000000006e21c0 0000000000000010 T pthread_mutex_destroy
00000000006e21e0 000000000000006c T pthread_mutex_lock
00000000006e2260 000000000000006c T pthread_mutex_unlock
00000000006e22e0 0000000000000020 T pthread_condattr_init
00000000006e2300 0000000000000058 T pthread_cond_init
00000000006e2360 0000000000000010 T pthread_cond_destroy
00000000006e2380 0000000000000014 T pthread_cond_signal
00000000006e23a0 0000000000000014 T pthread_cond_broadcast
00000000006e23c0 0000000000000054 T pthread_cond_wait
00000000006e2420 0000000000000020 T pthread_attr_init
00000000006e2440 0000000000000020 T pthread_attr_setstacksize
00000000006e2460 000000000000001c T pthread_attr_setdetachstate
00000000006e2480 0000000000000084 T pthread_create
00000000006e2520 0000000000000040 T pthread_join
00000000006e2560 0000000000000018 T pthread_self
00000000006e2580 00000000000000d8 T pthread_once
00000000006e2660 0000000000000024 T pthread_key_create
00000000006e26a0 0000000000000018 T pthread_setspecific
00000000006e26c0 0000000000000018 T pthread_getspecific
00000000006e26e0 0000000000000018 T pthread_key_delete
00000000006e2700 0000000000000008 T pthread_setcanceltype
00000000006e2720 0000000000000030 T sem_destroy
00000000006e2760 0000000000000058 T sem_init
00000000006e27c0 0000000000000064 T sem_post
00000000006e2840 00000000000000b0 T sem_timedwait
00000000006e2900 0000000000000078 T sem_trywait
00000000006e2980 0000000000000098 T sem_wait
00000000006e2a20 00000000000000e0 T _open_r
00000000006e2b00 00000000000000ac T _read_r
00000000006e2bc0 0000000000000078 W _sbrk_r
00000000006e2c40 0000000000000090 T _stat_r
00000000006e2ce0 0000000000000014 T timespec2nsec
00000000006e2d00 00000000000000c8 T abstimespec2nsec
00000000006e2de0 0000000000000014 T __libc_lock_acquire
00000000006e2e00 0000000000000014 T __libc_lock_release
00000000006e2e20 0000000000000014 T __libc_lock_acquire_recursive
00000000006e2e40 0000000000000014 T __libc_lock_release_recursive
00000000006e2e60 0000000000000018 T __libc_cond_signal
00000000006e2e80 0000000000000018 T __libc_cond_broadcast
00000000006e2ea0 0000000000000018 T __libc_cond_wait
00000000006e2ec0 0000000000000018 T __libc_cond_wait_recursive
00000000006e2ee0 00000000000000ac T _write_r
00000000006e2fa0 00000000000003c4 t __trunctfdf2
00000000006e3368 T _init
00000000006e33a0 T _fini
00000000007ac1f0 0000000000000400 R bend_coarse
00000000007ac5f0 0000000000000800 R bend_fine
00000000007acdf0 0000000000000200 R freq_table
00000000007acff0 0000000000000400 R vol_table
00000000007ad808 0000000000000036 r CSWTCH.143
00000000007ad840 00000000000000c8 r format_list
00000000007ad910 0000000000002804 r ResamplerFilterDifference
00000000007b0120 0000000000002804 r ResamplerFilter
00000000007b2930 0000000000000200 r mix8
00000000007b2da0 0000000000000044 r CSWTCH.10
00000000007b2df0 0000000000000800 r SDL_default_keymap
00000000007b3610 0000000000000010 r emptyGUID.0
00000000007b3640 000000000000000c r CSWTCH.396
00000000007b3640 000000000000000c r CSWTCH.398
00000000007b3640 000000000000000c r CSWTCH.400
00000000007b3640 000000000000000c r CSWTCH.402
00000000007b3640 000000000000000c r CSWTCH.404
00000000007b3640 000000000000000c r CSWTCH.406
00000000007b3650 0000000000000014 r CSWTCH.91
00000000007b3668 0000000000000028 r CSWTCH.89
00000000007b3690 0000000000000014 r __func__.0
00000000007b36a8 0000000000000014 r __func__.1
00000000007b36c0 0000000000000017 r __func__.2
00000000007b36d8 0000000000000016 r __func__.3
00000000007b36f0 0000000000000016 r __func__.4
00000000007b3708 0000000000000017 r __func__.5
00000000007b3720 0000000000000016 r __func__.6
00000000007b3738 0000000000000015 r __func__.7
00000000007b3770 00000000000000d8 r GLES2_Fragment_TextureExternalOES
00000000007b3850 0000000000000031 r GLES2_Fragment_TextureExternalOES_Prologue
00000000007b3890 000000000000030f r GLES2_Fragment_TextureNV21BT709
00000000007b3ba0 000000000000030f r GLES2_Fragment_TextureNV21BT601
00000000007b3eb0 00000000000002fd r GLES2_Fragment_TextureNV21JPEG
00000000007b41b0 000000000000030f r GLES2_Fragment_TextureNV12BT709_RG
00000000007b44c0 000000000000030f r GLES2_Fragment_TextureNV12BT709_RA
00000000007b47d0 000000000000030f r GLES2_Fragment_TextureNV12BT601_RG
00000000007b4ae0 000000000000030f r GLES2_Fragment_TextureNV12BT601_RA
00000000007b4df0 00000000000002fd r GLES2_Fragment_TextureNV12JPEG
00000000007b50f0 000000000000033f r GLES2_Fragment_TextureYUVBT709
00000000007b5430 000000000000033f r GLES2_Fragment_TextureYUVBT601
00000000007b5770 000000000000032d r GLES2_Fragment_TextureYUVJPEG
00000000007b5aa0 0000000000000107 r GLES2_Fragment_TextureBGR
00000000007b5bb0 0000000000000141 r GLES2_Fragment_TextureRGB
00000000007b5d00 0000000000000127 r GLES2_Fragment_TextureARGB
00000000007b5e30 00000000000000cf r GLES2_Fragment_TextureABGR
00000000007b5f00 000000000000004c r GLES2_Fragment_Solid
00000000007b5f50 0000000000000133 r GLES2_Vertex_Default
00000000007b6090 000000000000004c r GLES2_Fragment_Include_Undef_Precision
00000000007b60e0 0000000000000040 r GLES2_Fragment_Include_High_Texture_Precision
00000000007b6120 0000000000000042 r GLES2_Fragment_Include_Medium_Texture_Precision
00000000007b6170 0000000000000097 r GLES2_Fragment_Include_Best_Texture_Precision
00000000007b6208 000000000000000d r __func__.0
00000000007b6218 0000000000000020 r CSWTCH.26
00000000007b6238 0000000000000020 r CSWTCH.25
00000000007b6258 0000000000000020 r CSWTCH.24
00000000007b6278 0000000000000020 r CSWTCH.23
00000000007b62f0 0000000000000078 r RGB2YUVFactorTables.0
00000000007b6370 0000000000000200 r lut.0
00000000007b6570 0000000000000024 r YUV2RGB
00000000007b6598 0000000000000002 r sink_channels.0
00000000007b65a0 0000000000000018 r arConfig
00000000007b65c0 00000000000000e0 r pad_mapping_right_joy
00000000007b66a0 00000000000000e0 r pad_mapping_left_joy
00000000007b6780 00000000000000e0 r pad_mapping_default
00000000007b6860 0000000000000800 r RGB565_BGRA8888_LUT
00000000007b7060 0000000000000800 r RGB565_RGBA8888_LUT
00000000007b7860 0000000000000800 r RGB565_ABGR8888_LUT
00000000007b8060 0000000000000800 r RGB565_ARGB8888_LUT
00000000007b8870 0000000000000018 r __func__.0
00000000007b8888 0000000000000015 r __func__.1
00000000007b88a0 0000000000000013 r __func__.10
00000000007b88b8 0000000000000012 r __func__.11
00000000007b88d0 000000000000001b r __func__.12
00000000007b88f0 0000000000000019 r __func__.13
00000000007b8910 000000000000001e r __func__.14
00000000007b8930 0000000000000016 r __func__.15
00000000007b8948 000000000000001a r __func__.16
00000000007b8968 0000000000000018 r __func__.17
00000000007b8980 0000000000000019 r __func__.18
00000000007b89a0 0000000000000014 r __func__.19
00000000007b89b8 0000000000000016 r __func__.2
00000000007b89d0 0000000000000019 r __func__.20
00000000007b89f0 0000000000000012 r __func__.21
00000000007b8a08 0000000000000013 r __func__.22
00000000007b8a20 0000000000000011 r __func__.23
00000000007b8a38 0000000000000018 r __func__.24
00000000007b8a50 0000000000000018 r __func__.25
00000000007b8a68 0000000000000013 r __func__.26
00000000007b8a80 0000000000000019 r __func__.27
00000000007b8aa0 0000000000000019 r __func__.28
00000000007b8ac0 000000000000001b r __func__.29
00000000007b8ae0 0000000000000012 r __func__.3
00000000007b8af8 0000000000000018 r __func__.30
00000000007b8b10 000000000000001c r __func__.31
00000000007b8b30 0000000000000016 r __func__.32
00000000007b8b48 0000000000000011 r __func__.33
00000000007b8b60 0000000000000018 r __func__.34
00000000007b8b78 000000000000001c r __func__.35
00000000007b8b98 0000000000000020 r __func__.36
00000000007b8bb8 000000000000001c r __func__.37
00000000007b8bd8 000000000000001a r __func__.38
00000000007b8bf8 000000000000000f r __func__.39
00000000007b8c08 0000000000000022 r __func__.4
00000000007b8c30 0000000000000012 r __func__.41
00000000007b8c48 0000000000000018 r __func__.42
00000000007b8c60 0000000000000011 r __func__.43
00000000007b8c78 0000000000000013 r __func__.44
00000000007b8c90 000000000000000c r __func__.45
00000000007b8ca0 0000000000000019 r __func__.46
00000000007b8cc0 0000000000000012 r __func__.47
00000000007b8cd8 0000000000000010 r __func__.48
00000000007b8ce8 000000000000000f r __func__.49
00000000007b8cf8 0000000000000022 r __func__.5
00000000007b8d20 000000000000000f r __func__.50
00000000007b8d30 000000000000000e r __func__.51
00000000007b8d40 0000000000000017 r __func__.52
00000000007b8d58 0000000000000010 r __func__.53
00000000007b8d68 0000000000000016 r __func__.54
00000000007b8d80 000000000000000f r __func__.55
00000000007b8d90 0000000000000011 r __func__.56
00000000007b8da8 0000000000000021 r __func__.57
00000000007b8dd0 000000000000000c r __func__.58
00000000007b8de0 000000000000000b r __func__.59
00000000007b8df0 0000000000000013 r __func__.6
00000000007b8e08 0000000000000015 r __func__.60
00000000007b8e20 0000000000000015 r __func__.61
00000000007b8e38 0000000000000015 r __func__.62
00000000007b8e50 000000000000000e r __func__.63
00000000007b8e60 000000000000000a r __func__.64
00000000007b8e70 0000000000000015 r __func__.65
00000000007b8e88 000000000000000e r __func__.66
00000000007b8e98 000000000000000f r __func__.67
00000000007b8ea8 000000000000000f r __func__.68
00000000007b8eb8 0000000000000010 r __func__.69
00000000007b8ec8 0000000000000011 r __func__.7
00000000007b8ee0 0000000000000013 r __func__.70
00000000007b8ef8 0000000000000010 r __func__.71
00000000007b8f08 0000000000000011 r __func__.72
00000000007b8f20 0000000000000010 r __func__.73
00000000007b8f30 0000000000000012 r __func__.74
00000000007b8f48 0000000000000018 r __func__.75
00000000007b8f60 000000000000001f r __func__.76
00000000007b8f80 000000000000001e r __func__.77
00000000007b8fa0 0000000000000017 r __func__.78
00000000007b8fb8 000000000000001f r __func__.79
00000000007b8fd8 0000000000000022 r __func__.8
00000000007b9000 000000000000001e r __func__.80
00000000007b9020 0000000000000017 r __func__.81
00000000007b9038 0000000000000010 r __func__.82
00000000007b9048 000000000000000f r __func__.83
00000000007b9058 0000000000000012 r __func__.84
00000000007b9070 0000000000000011 r __func__.85
00000000007b9088 0000000000000013 r __func__.86
00000000007b90a0 0000000000000010 r __func__.87
00000000007b90b0 000000000000000e r __func__.88
00000000007b90c0 000000000000000f r __func__.89
00000000007b90d0 000000000000001a r __func__.9
00000000007b90f0 000000000000000d r __func__.90
00000000007b9100 000000000000000e r __func__.91
00000000007b9110 000000000000001d r __func__.92
00000000007b9130 0000000000000016 r __func__.93
00000000007b9148 000000000000000e r __func__.94
00000000007b9230 0000000000000250 r _eglValidationTable
00000000007b9480 000000000000000c r CSWTCH.4
00000000007b94f8 000000000000001c r depthfmts.0
00000000007b9518 0000000000000018 r CSWTCH.53
00000000007b9530 000000000000001c r CSWTCH.55
00000000007b9550 00000000000002b2 r CSWTCH.63
00000000007b9808 0000000000000010 r CSWTCH.86
00000000007b9818 0000000000000010 r CSWTCH.91
00000000007b9b38 0000000000000010 r CSWTCH.133
00000000007b9b48 000000000000001c r CSWTCH.91
00000000007b9b68 0000000000000030 r code_gk110.5
00000000007b9b98 0000000000000078 r code_gm107.6
00000000007b9c10 0000000000000028 r code_nvc0.3
00000000007b9c38 0000000000000030 r code_nve4.4
00000000007b9c68 00000000000002f0 r nve4_su_format_aux_map
00000000007b9f58 0000000000000178 r nve4_su_format_map
00000000007ba0d0 0000000000000088 r cpbs.0
00000000007ba158 0000000000000004 r deleted_key_value
00000000007ba160 00000000000003e0 r hash_sizes
00000000007ba540 0000000000000017 r __func__.4
00000000007ba848 0000000000000010 r debug_severity_enums
00000000007ba858 0000000000000018 r debug_source_enums
00000000007ba870 0000000000000024 r debug_type_enums
00000000007bad20 0000000000000028 r CSWTCH.3422
00000000007bad48 0000000000000028 r CSWTCH.3875
00000000007bad70 0000000000000017 r __func__.0
00000000007bad88 0000000000000018 r __func__.1
00000000007bada0 0000000000000015 r __func__.10
00000000007badb8 0000000000000015 r __func__.11
00000000007badd0 0000000000000016 r __func__.12
00000000007bade8 0000000000000016 r __func__.13
00000000007bae00 0000000000000016 r __func__.14
00000000007bae18 0000000000000016 r __func__.15
00000000007bae30 0000000000000016 r __func__.16
00000000007bae48 0000000000000016 r __func__.17
00000000007bae60 0000000000000016 r __func__.18
00000000007bae78 0000000000000017 r __func__.19
00000000007bae90 0000000000000017 r __func__.2
00000000007baea8 0000000000000017 r __func__.20
00000000007baec0 0000000000000017 r __func__.21
00000000007baed8 0000000000000018 r __func__.3
00000000007baef0 0000000000000017 r __func__.4
00000000007baf08 0000000000000018 r __func__.5
00000000007baf20 0000000000000016 r __func__.52
00000000007baf38 0000000000000017 r __func__.53
00000000007baf50 0000000000000016 r __func__.54
00000000007baf68 0000000000000017 r __func__.55
00000000007baf80 0000000000000016 r __func__.56
00000000007baf98 0000000000000017 r __func__.57
00000000007bafb0 0000000000000016 r __func__.58
00000000007bafc8 0000000000000017 r __func__.59
00000000007bafe0 0000000000000017 r __func__.6
00000000007baff8 0000000000000015 r __func__.60
00000000007bb010 0000000000000015 r __func__.61
00000000007bb028 0000000000000015 r __func__.62
00000000007bb040 0000000000000015 r __func__.63
00000000007bb058 0000000000000016 r __func__.64
00000000007bb070 0000000000000016 r __func__.65
00000000007bb088 0000000000000016 r __func__.66
00000000007bb0a0 0000000000000016 r __func__.67
00000000007bb0b8 000000000000001b r __func__.68
00000000007bb0d8 000000000000001c r __func__.69
00000000007bb0f8 0000000000000018 r __func__.7
00000000007bb110 0000000000000015 r __func__.8
00000000007bb128 0000000000000015 r __func__.9
00000000007bb140 0000000000000029 r CSWTCH.23
00000000007bb8c0 000000000000001f r __func__.0
00000000007bbaa8 0000000000000020 r CSWTCH.175
00000000007bbac8 0000000000000018 r CSWTCH.179
00000000007bbae0 0000000000000018 r CSWTCH.180
00000000007bbae0 0000000000000018 r CSWTCH.181
00000000007bbaf8 0000000000000030 r CSWTCH.182
00000000007bbb28 000000000000001e r __func__.0
00000000007bbb48 00000000000000a9 r mappings
00000000007bbbf8 0000000000000013 r __func__.0
00000000007bbc10 000000000000001b r __func__.0
00000000007bbc30 0000000000002598 r MESA_remap_table_functions
00000000007be1c8 000000000000f43d r _mesa_function_pool
00000000007cd630 0000000000000114 r CSWTCH.18
00000000007cd748 000000000000002c r CSWTCH.20
00000000007cd840 0000000000000030 r targets.0
00000000007cdd70 00000000000000c0 r anchor_indices
00000000007cde30 0000000000000a68 r bptc_float_modes
00000000007ce898 0000000000000100 r bptc_unorm_modes
00000000007ce998 0000000000000100 r partition_table1
00000000007cea98 0000000000000100 r partition_table2
00000000007ceb98 0000000000000004 r weights2.0
00000000007ceba0 0000000000000008 r weights3.1
00000000007ceba8 0000000000000010 r weights4.2
00000000007cebb8 0000000000000080 r etc1_modifier_tables
00000000007cec38 0000000000000020 r etc2_distance_table
00000000007cec58 0000000000000200 r etc2_modifier_tables
00000000007cee58 0000000000000080 r etc2_modifier_tables_non_opaque
00000000007ceed8 0000000000000020 r lookup.0
00000000007ceed8 0000000000000020 r lookup.1
00000000007ceef8 0000000000000020 r _rgb_scale_5
00000000007cef18 0000000000000040 r _rgb_scale_6
00000000007cef90 0000000000000014 r CSWTCH.326
00000000007cefa8 0000000000000014 r CSWTCH.327
00000000007cefc0 0000000000000028 r targets.2
00000000007cefe8 0000000000000010 r zeroData.0
00000000007ceff8 0000000000000030 r CSWTCH.135
00000000007cf028 0000000000000030 r CSWTCH.136
00000000007cf058 0000000000000030 r CSWTCH.137
00000000007cf088 0000000000000030 r CSWTCH.138
00000000007cf0b8 0000000000000028 r default_combine_state
00000000007cf0e0 0000000000000030 r targets.0
00000000007cf110 00000000000001f8 r compatible_internal_formats
00000000007cf308 00000000000000a0 r gles_astc_3d_compatible_internal_formats
00000000007cf3a8 00000000000000e0 r gles_astc_compatible_internal_formats
00000000007cf488 0000000000000050 r gles_etc2_compatible_internal_formats
00000000007cf4d8 0000000000000040 r s3tc_compatible_internal_formats
00000000007cf518 0000000000000050 r CSWTCH.125
00000000007cf588 000000000000000e r CSWTCH.253
00000000007cf598 000000000000000e r CSWTCH.254
00000000007cf5a8 000000000000000e r CSWTCH.255
00000000007cf5b8 0000000000000038 r CSWTCH.256
00000000007cf5f0 0000000000000038 r CSWTCH.257
00000000007cf628 0000000000000038 r CSWTCH.258
00000000007cf660 0000000000000038 r CSWTCH.259
00000000007cf698 0000000000000038 r CSWTCH.260
00000000007cf6d0 0000000000000038 r CSWTCH.261
00000000007cf708 0000000000000038 r CSWTCH.262
00000000007cf740 0000000000000038 r CSWTCH.263
00000000007cf778 00000000000001a0 r vertex_formats
00000000007cf918 0000000000000040 r Identity
00000000007cf958 0000000000000015 r __func__.0
00000000007cf970 000000000000001b r __func__.1
00000000007cf990 0000000000000019 r __func__.10
00000000007cf9b0 0000000000000019 r __func__.11
00000000007cf9d0 0000000000000019 r __func__.12
00000000007cf9f0 000000000000001a r __func__.13
00000000007cfa10 000000000000001a r __func__.14
00000000007cfa30 000000000000001a r __func__.15
00000000007cfa50 000000000000001a r __func__.16
00000000007cfa70 000000000000001a r __func__.17
00000000007cfa90 000000000000001a r __func__.18
00000000007cfab0 000000000000001a r __func__.19
00000000007cfad0 000000000000001c r __func__.2
00000000007cfaf0 000000000000001b r __func__.20
00000000007cfb10 000000000000001b r __func__.21
00000000007cfb30 000000000000001b r __func__.22
00000000007cfb50 000000000000001b r __func__.3
00000000007cfb70 000000000000001c r __func__.4
00000000007cfb90 000000000000001b r __func__.5
00000000007cfbb0 000000000000001a r __func__.53
00000000007cfbd0 000000000000001b r __func__.54
00000000007cfbf0 000000000000001a r __func__.55
00000000007cfc10 000000000000001b r __func__.56
00000000007cfc30 000000000000001a r __func__.57
00000000007cfc50 000000000000001b r __func__.58
00000000007cfc70 000000000000001a r __func__.59
00000000007cfc90 000000000000001c r __func__.6
00000000007cfcb0 000000000000001b r __func__.60
00000000007cfcd0 0000000000000019 r __func__.61
00000000007cfcf0 0000000000000019 r __func__.62
00000000007cfd10 0000000000000019 r __func__.63
00000000007cfd30 0000000000000019 r __func__.64
00000000007cfd50 000000000000001a r __func__.65
00000000007cfd70 000000000000001a r __func__.66
00000000007cfd90 000000000000001a r __func__.67
00000000007cfdb0 000000000000001a r __func__.68
00000000007cfdd0 000000000000001f r __func__.69
00000000007cfdf0 000000000000001b r __func__.7
00000000007cfe10 0000000000000020 r __func__.74
00000000007cfe30 000000000000001c r __func__.8
00000000007cfe50 0000000000000019 r __func__.9
00000000007cfe70 0000000000000020 r default_double.71
00000000007cfe90 0000000000000010 r default_float.73
00000000007cfea0 0000000000000010 r default_int.72
00000000007cfeb0 0000000000000020 r default_uint64.70
00000000007cfed0 0000000000000040 R _vbo_attribute_alias_map
00000000007cff10 000000000000001d r __func__.0
00000000007cff30 000000000000001e r __func__.1
00000000007cff50 000000000000001b r __func__.10
00000000007cff70 000000000000001b r __func__.11
00000000007cff90 000000000000001c r __func__.12
00000000007cffb0 000000000000001c r __func__.13
00000000007cffd0 000000000000001c r __func__.14
00000000007cfff0 000000000000001c r __func__.15
00000000007d0010 000000000000001c r __func__.16
00000000007d0030 000000000000001c r __func__.17
00000000007d0050 000000000000001c r __func__.18
00000000007d0070 000000000000001d r __func__.19
00000000007d0090 000000000000001d r __func__.2
00000000007d00b0 000000000000001d r __func__.20
00000000007d00d0 000000000000001d r __func__.21
00000000007d00f0 000000000000001e r __func__.3
00000000007d0110 000000000000001d r __func__.4
00000000007d0130 000000000000001e r __func__.5
00000000007d0150 000000000000001c r __func__.52
00000000007d0170 000000000000001d r __func__.53
00000000007d0190 000000000000001c r __func__.54
00000000007d01b0 000000000000001d r __func__.55
00000000007d01d0 000000000000001c r __func__.56
00000000007d01f0 000000000000001d r __func__.57
00000000007d0210 000000000000001c r __func__.58
00000000007d0230 000000000000001d r __func__.59
00000000007d0250 000000000000001d r __func__.6
00000000007d0270 000000000000001b r __func__.60
00000000007d0290 000000000000001b r __func__.61
00000000007d02b0 000000000000001b r __func__.62
00000000007d02d0 000000000000001b r __func__.63
00000000007d02f0 000000000000001c r __func__.64
00000000007d0310 000000000000001c r __func__.65
00000000007d0330 000000000000001c r __func__.66
00000000007d0350 000000000000001c r __func__.67
00000000007d0370 0000000000000021 r __func__.68
00000000007d0398 0000000000000022 r __func__.69
00000000007d03c0 000000000000001e r __func__.7
00000000007d03e0 000000000000001b r __func__.8
00000000007d0400 000000000000001b r __func__.9
00000000007d0420 0000000000000018 r __func__.0
00000000007d0438 0000000000000019 r __func__.1
00000000007d0458 0000000000000016 r __func__.10
00000000007d0470 0000000000000016 r __func__.11
00000000007d0488 0000000000000017 r __func__.12
00000000007d04a0 0000000000000017 r __func__.13
00000000007d04b8 0000000000000017 r __func__.14
00000000007d04d0 0000000000000017 r __func__.15
00000000007d04e8 0000000000000017 r __func__.16
00000000007d0500 0000000000000017 r __func__.17
00000000007d0518 0000000000000017 r __func__.18
00000000007d0530 0000000000000018 r __func__.19
00000000007d0548 0000000000000018 r __func__.2
00000000007d0560 0000000000000018 r __func__.20
00000000007d0578 0000000000000018 r __func__.21
00000000007d0590 0000000000000019 r __func__.3
00000000007d05b0 0000000000000018 r __func__.4
00000000007d05c8 0000000000000019 r __func__.5
00000000007d05e8 0000000000000017 r __func__.52
00000000007d0600 0000000000000018 r __func__.53
00000000007d0618 0000000000000017 r __func__.54
00000000007d0630 0000000000000018 r __func__.55
00000000007d0648 0000000000000017 r __func__.56
00000000007d0660 0000000000000018 r __func__.57
00000000007d0678 0000000000000017 r __func__.58
00000000007d0690 0000000000000018 r __func__.59
00000000007d06a8 0000000000000018 r __func__.6
00000000007d06c0 0000000000000016 r __func__.60
00000000007d06d8 0000000000000016 r __func__.61
00000000007d06f0 0000000000000016 r __func__.62
00000000007d0708 0000000000000016 r __func__.63
00000000007d0720 0000000000000017 r __func__.64
00000000007d0738 0000000000000017 r __func__.65
00000000007d0750 0000000000000017 r __func__.66
00000000007d0768 0000000000000017 r __func__.67
00000000007d0780 000000000000001c r __func__.68
00000000007d07a0 0000000000000019 r __func__.7
00000000007d07c0 000000000000001d r __func__.73
00000000007d07e0 0000000000000016 r __func__.8
00000000007d07f8 0000000000000016 r __func__.9
00000000007d0810 0000000000000020 r default_double.70
00000000007d0830 0000000000000010 r default_float.72
00000000007d0840 0000000000000010 r default_int.71
00000000007d0850 0000000000000020 r default_uint64.69
00000000007d0ef0 000000000001671d r enum_string_table
00000000007e7610 0000000000007660 r enum_string_table_offsets
00000000007eed70 0000000000000018 r CSWTCH.218
00000000007ef098 00000000000002b2 r CSWTCH.47
00000000007efb60 0000000000000010 r table_1010102_snorm
00000000007efb70 0000000000000010 r table_1010102_uint
00000000007efb80 0000000000000010 r table_1010102_unorm
00000000007efb90 0000000000000020 r table_8888_unorm
00000000007efbb0 0000000000000010 r zeros.3
00000000007efbc0 000000000000001c r CSWTCH.3
00000000007efbe0 000000000000001c r CSWTCH.4
00000000007efc00 000000000000001c r CSWTCH.5
00000000007efc20 0000000000000018 r CSWTCH.43
00000000007efc38 0000000000000320 r cap_mapping.10
00000000007eff58 0000000000000010 r color_formats.4
00000000007eff68 0000000000000014 r depth_formats.3
00000000007eff80 000000000000008c r depthstencil_mapping.7
00000000007f0010 00000000000004ec r rendertarget_mapping.9
00000000007f0500 000000000000008c r rt_blendable.8
00000000007f0590 000000000000008c r tbo_rgb32.0
00000000007f0620 00000000000009d8 r texture_mapping.6
00000000007f0ff8 00000000000001a4 r vertex_mapping.5
00000000007f11a0 0000000000005d00 r format_map
00000000007f70a0 0000000000000004 r zero.0
00000000007f70a8 000000000000001c r CSWTCH.47
00000000007f70c8 000000000000000a r bias_state.1
00000000007f70d8 000000000000000a r depth_range_state
00000000007f70e8 000000000000000a r scale_state.2
00000000007f70f8 000000000000000a r texcoord_state.0
00000000007f7108 000000000000001c r CSWTCH.24
00000000007f7128 0000000000000034 r known_desktop_gl_versions
00000000007f7160 0000000000000034 r known_desktop_glsl_versions
00000000007f7198 0000000000000028 r _mesa_glsl_process_extension(char const*, YYLTYPE*, char const*, YYLTYPE*, _mesa_glsl_parse_state*)::fmt
00000000007f73b0 0000000000000034 r CSWTCH.324
00000000007f73e8 000000000000000e R ir_variable::tmp_name
00000000007f73f8 000000000000001a r ir_swizzle::create(ir_rvalue*, char const*, unsigned int)::idx_map
00000000007f7418 000000000000001a r ir_swizzle::create(ir_rvalue*, char const*, unsigned int)::base_idx
00000000007f7438 0000000000000050 r CSWTCH.302
00000000007f7488 0000000000000050 r CSWTCH.30
00000000007f7500 0000000000000050 r CSWTCH.228
00000000007f7550 000000000000000e r CSWTCH.231
00000000007f7560 000000000000000c r CSWTCH.255
00000000007f76c0 0000000000000050 r CSWTCH.67
00000000007f7710 0000000000000010 r CSWTCH.61
00000000007f7850 0000000000000018 r CSWTCH.162
00000000007f7868 000000000000000d r CSWTCH.41
00000000007f7ae8 000000000000018a r yytranslate
00000000007f7c78 0000000000000272 r yyr1
00000000007f7ef0 0000000000000139 r yyr2
00000000007f8030 00000000000003b6 r yypact
00000000007f83e8 00000000000013a6 r yycheck
00000000007f9790 00000000000000de r yypgoto
00000000007f9870 00000000000013a6 r yytable
00000000007fac18 00000000000003b6 r yydefact
00000000007fafd0 00000000000000de r yydefgoto
00000000007fb0b0 0000000000000020 r _mesa_glsl_parse(_mesa_glsl_parse_state*)::yyloc_default
00000000007fb310 0000000000000100 r yy_ec
00000000007fb410 0000000000000d28 r yy_chk
00000000007fc138 00000000000008ce r yy_def
00000000007fca08 0000000000000d28 r yy_nxt
00000000007fd730 00000000000008ce r yy_base
00000000007fe000 000000000000004a r yy_meta
00000000007fe050 00000000000008b0 r yy_accept
00000000007fe980 000000000000017a r yy_accept
00000000007feb00 00000000000001a0 r yy_base
00000000007feca0 0000000000000498 r yy_chk
00000000007ff138 00000000000001a0 r yy_def
00000000007ff2d8 0000000000000100 r yy_ec
00000000007ff3d8 0000000000000031 r yy_meta
00000000007ff410 0000000000000498 r yy_nxt
00000000007ff9b0 00000000000005b8 r yycheck
00000000007fff68 00000000000000b9 r yydefact
0000000000800028 0000000000000028 r yydefgoto
0000000000800050 0000000000000014 r yyloc_default.0
0000000000800068 0000000000000172 r yypact
00000000008001e0 0000000000000028 r yypgoto
0000000000800208 0000000000000075 r yyr1
0000000000800280 0000000000000075 r yyr2
00000000008002f8 00000000000000ea r yyrline
00000000008003e8 00000000000000b9 r yystos
00000000008004a8 00000000000002dc r yytable
0000000000800788 000000000000012b r yytranslate
00000000008008b8 0000000000000050 r CSWTCH.378
0000000000800908 000000000000000e r CSWTCH.381
0000000000800918 0000000000000020 r prime_deltas
0000000000800988 00000000000003f0 r opcode_info
0000000000800d78 0000000000000038 r CSWTCH.35
0000000000800db0 0000000000000028 r CSWTCH.39
0000000000800f10 0000000000000048 r CSWTCH.21
0000000000800f58 0000000000000024 r CSWTCH.4
0000000000801000 0000000000000048 r shader_templ.3
0000000000801048 000000000000023b r text.4
0000000000801288 00000000000000b4 r text.5
0000000000801340 00000000000001e0 r vbuf_format_fallbacks
0000000000801520 000000000000000f r slab_order.0
0000000000801530 0000000000000060 r CSWTCH.24
0000000000801590 0000000000000030 r CSWTCH.45
00000000008015c0 0000000000000060 r nouveau_decoder_msvld
0000000000801620 000000000000001c r CSWTCH.104
0000000000801640 0000000000000002 r ms1.3
0000000000801648 0000000000000004 r ms2.2
0000000000801650 0000000000000008 r ms4.1
0000000000801658 0000000000000010 r ms8.0
0000000000801668 00000000000011a0 R nvc0_format_table
0000000000802808 0000000000000bc0 R nvc0_vertex_format
00000000008033c8 0000000000000010 r CSWTCH.33
00000000008033d8 000000000000000c r CSWTCH.34
0000000000803408 0000000000000028 r CSWTCH.44
0000000000803430 0000000000000028 r CSWTCH.45
0000000000803458 0000000000000028 r sm20_achieved_occupancy
0000000000803480 0000000000000028 r sm20_branch_efficiency
00000000008034a8 0000000000000028 r sm20_inst_per_wrap
00000000008034d0 0000000000000028 r sm20_inst_replay_overhead
00000000008034f8 0000000000000028 r sm20_ipc
0000000000803520 0000000000000028 r sm20_issue_slot_utilization
0000000000803548 0000000000000028 r sm20_issued_ipc
0000000000803570 0000000000000028 r sm21_inst_issued
0000000000803598 0000000000000028 r sm21_inst_replay_overhead
00000000008035c0 0000000000000028 r sm21_issue_slot_utilization
00000000008035e8 0000000000000028 r sm21_issue_slots
0000000000803610 0000000000000028 r sm21_issued_ipc
0000000000803638 0000000000000028 r sm30_inst_issued
0000000000803660 0000000000000028 r sm30_inst_replay_overhead
0000000000803688 0000000000000028 r sm30_issue_slot_utilization
00000000008036b0 0000000000000028 r sm30_issue_slots
00000000008036d8 0000000000000028 r sm30_issued_ipc
0000000000803700 0000000000000028 r sm30_shared_replay_overhead
0000000000803728 0000000000000028 r sm30_warp_execution_efficiency
0000000000803750 0000000000000028 r sm35_warp_nonpred_execution_efficiency
0000000000803778 0000000000000160 r gm107_read_hw_sm_counters_code
00000000008038d8 00000000000000b8 r nvc0_read_hw_sm_counters_code
0000000000803990 0000000000000130 r nve4_read_hw_sm_counters_code
0000000000803ac0 0000000000000130 r nvf0_read_hw_sm_counters_code
0000000000803bf0 0000000000000068 r sm20_active_cycles
0000000000803c58 0000000000000068 r sm20_active_warps
0000000000803cc0 0000000000000068 r sm20_atom_count
0000000000803d28 0000000000000068 r sm20_branch
0000000000803d90 0000000000000068 r sm20_divergent_branch
0000000000803df8 0000000000000068 r sm20_gld_request
0000000000803e60 0000000000000068 r sm20_gred_count
0000000000803ec8 0000000000000068 r sm20_gst_request
0000000000803f30 0000000000000068 r sm20_inst_executed
0000000000803f98 0000000000000068 r sm20_inst_issued
0000000000804000 0000000000000068 r sm20_local_ld
0000000000804068 0000000000000068 r sm20_local_st
00000000008040d0 0000000000000068 r sm20_prof_trigger_0
0000000000804138 0000000000000068 r sm20_prof_trigger_1
00000000008041a0 0000000000000068 r sm20_prof_trigger_2
0000000000804208 0000000000000068 r sm20_prof_trigger_3
0000000000804270 0000000000000068 r sm20_prof_trigger_4
00000000008042d8 0000000000000068 r sm20_prof_trigger_5
0000000000804340 0000000000000068 r sm20_prof_trigger_6
00000000008043a8 0000000000000068 r sm20_prof_trigger_7
0000000000804410 0000000000000068 r sm20_shared_ld
0000000000804478 0000000000000068 r sm20_shared_st
00000000008044e0 0000000000000068 r sm20_th_inst_executed_0
0000000000804548 0000000000000068 r sm20_th_inst_executed_1
00000000008045b0 0000000000000068 r sm20_threads_launched
0000000000804618 0000000000000068 r sm20_warps_launched
0000000000804680 0000000000000068 r sm21_inst_executed
00000000008046e8 0000000000000068 r sm21_inst_issued1_0
0000000000804750 0000000000000068 r sm21_inst_issued1_1
00000000008047b8 0000000000000068 r sm21_inst_issued2_0
0000000000804820 0000000000000068 r sm21_inst_issued2_1
0000000000804888 0000000000000068 r sm21_th_inst_executed_0
00000000008048f0 0000000000000068 r sm21_th_inst_executed_1
0000000000804958 0000000000000068 r sm21_th_inst_executed_2
00000000008049c0 0000000000000068 r sm21_th_inst_executed_3
0000000000804a28 0000000000000068 r sm30_active_cycles
0000000000804a90 0000000000000068 r sm30_active_warps
0000000000804af8 0000000000000068 r sm30_atom_cas_count
0000000000804b60 0000000000000068 r sm30_atom_count
0000000000804bc8 0000000000000068 r sm30_branch
0000000000804c30 0000000000000068 r sm30_divergent_branch
0000000000804c98 0000000000000068 r sm30_gld_mem_div_replay
0000000000804d00 0000000000000068 r sm30_gld_request
0000000000804d68 0000000000000068 r sm30_gred_count
0000000000804dd0 0000000000000068 r sm30_gst_mem_div_replay
0000000000804e38 0000000000000068 r sm30_gst_request
0000000000804ea0 0000000000000068 r sm30_gst_transactions
0000000000804f08 0000000000000068 r sm30_inst_executed
0000000000804f70 0000000000000068 r sm30_inst_issued1
0000000000804fd8 0000000000000068 r sm30_inst_issued2
0000000000805040 0000000000000068 r sm30_l1_gld_hit
00000000008050a8 0000000000000068 r sm30_l1_gld_miss
0000000000805110 0000000000000068 r sm30_l1_gld_transactions
0000000000805178 0000000000000068 r sm30_l1_gst_transactions
00000000008051e0 0000000000000068 r sm30_l1_local_ld_hit
0000000000805248 0000000000000068 r sm30_l1_local_ld_miss
00000000008052b0 0000000000000068 r sm30_l1_local_st_hit
0000000000805318 0000000000000068 r sm30_l1_local_st_miss
0000000000805380 0000000000000068 r sm30_l1_shared_ld_transactions
00000000008053e8 0000000000000068 r sm30_l1_shared_st_transactions
0000000000805450 0000000000000068 r sm30_local_ld
00000000008054b8 0000000000000068 r sm30_local_ld_transactions
0000000000805520 0000000000000068 r sm30_local_st
0000000000805588 0000000000000068 r sm30_local_st_transactions
00000000008055f0 0000000000000068 r sm30_prof_trigger_0
0000000000805658 0000000000000068 r sm30_prof_trigger_1
00000000008056c0 0000000000000068 r sm30_prof_trigger_2
0000000000805728 0000000000000068 r sm30_prof_trigger_3
0000000000805790 0000000000000068 r sm30_prof_trigger_4
00000000008057f8 0000000000000068 r sm30_prof_trigger_5
0000000000805860 0000000000000068 r sm30_prof_trigger_6
00000000008058c8 0000000000000068 r sm30_prof_trigger_7
0000000000805930 0000000000000068 r sm30_shared_ld
0000000000805998 0000000000000068 r sm30_shared_ld_replay
0000000000805a00 0000000000000068 r sm30_shared_st
0000000000805a68 0000000000000068 r sm30_shared_st_replay
0000000000805ad0 0000000000000068 r sm30_sm_cta_launched
0000000000805b38 0000000000000068 r sm30_threads_launched
0000000000805ba0 0000000000000068 r sm30_uncached_gld_transactions
0000000000805c08 0000000000000068 r sm30_warps_launched
0000000000805c70 0000000000000068 r sm35_atom_cas_count
0000000000805cd8 0000000000000068 r sm35_atom_count
0000000000805d40 0000000000000068 r sm35_gred_count
0000000000805da8 0000000000000068 r sm35_not_pred_off_inst_executed
0000000000805e10 0000000000000068 r sm35_shared_ld_replay
0000000000805e78 0000000000000068 r sm35_shared_st_replay
0000000000805ee0 0000000000000068 r sm35_th_inst_executed
0000000000805f48 0000000000000068 r sm50_active_ctas
0000000000805fb0 0000000000000068 r sm50_active_cycles
0000000000806018 0000000000000068 r sm50_active_warps
0000000000806080 0000000000000068 r sm50_atom_count
00000000008060e8 0000000000000068 r sm50_branch
0000000000806150 0000000000000068 r sm50_divergent_branch
00000000008061b8 0000000000000068 r sm50_global_atom_cas
0000000000806220 0000000000000068 r sm50_global_ld
0000000000806288 0000000000000068 r sm50_global_st
00000000008062f0 0000000000000068 r sm50_gred_count
0000000000806358 0000000000000068 r sm50_inst_executed
00000000008063c0 0000000000000068 r sm50_inst_issued0
0000000000806428 0000000000000068 r sm50_inst_issued1
0000000000806490 0000000000000068 r sm50_inst_issued2
00000000008064f8 0000000000000068 r sm50_local_ld
0000000000806560 0000000000000068 r sm50_local_st
00000000008065c8 0000000000000068 r sm50_not_pred_off_inst_executed
0000000000806630 0000000000000068 r sm50_prof_trigger_0
0000000000806698 0000000000000068 r sm50_prof_trigger_1
0000000000806700 0000000000000068 r sm50_prof_trigger_2
0000000000806768 0000000000000068 r sm50_prof_trigger_3
00000000008067d0 0000000000000068 r sm50_prof_trigger_4
0000000000806838 0000000000000068 r sm50_prof_trigger_5
00000000008068a0 0000000000000068 r sm50_prof_trigger_6
0000000000806908 0000000000000068 r sm50_prof_trigger_7
0000000000806970 0000000000000068 r sm50_shared_atom
00000000008069d8 0000000000000068 r sm50_shared_atom_cas
0000000000806a40 0000000000000068 r sm50_shared_ld
0000000000806aa8 0000000000000068 r sm50_shared_ld_bank_conflict
0000000000806b10 0000000000000068 r sm50_shared_ld_transactions
0000000000806b78 0000000000000068 r sm50_shared_st
0000000000806be0 0000000000000068 r sm50_shared_st_bank_conflict
0000000000806c48 0000000000000068 r sm50_shared_st_transactions
0000000000806cb0 0000000000000068 r sm50_sm_cta_launched
0000000000806d18 0000000000000068 r sm50_th_inst_executed
0000000000806d80 0000000000000068 r sm50_warps_launched
0000000000806de8 0000000000000068 r sm52_atom_count
0000000000806e50 0000000000000068 r sm52_global_atom_cas
0000000000806eb8 0000000000000068 r sm52_global_ld
0000000000806f20 0000000000000068 r sm52_global_st
0000000000806f88 0000000000000068 r sm52_gred_count
0000000000806ff0 0000000000000068 r sm52_inst_executed
0000000000807058 0000000000000068 r sm52_inst_issued0
00000000008070c0 0000000000000068 r sm52_inst_issued1
0000000000807128 0000000000000068 r sm52_inst_issued2
0000000000807190 0000000000000068 r sm52_local_ld
00000000008071f8 0000000000000068 r sm52_local_st
0000000000807260 0000000000000068 r sm52_shared_atom
00000000008072c8 0000000000000068 r sm52_shared_atom_cas
0000000000807330 0000000000000068 r sm52_shared_ld
0000000000807398 0000000000000068 r sm52_shared_st
0000000000807400 0000000000000068 r sm52_warps_launched
0000000000807468 0000000000000038 r supported_modifiers.0
00000000008074a0 0000000000000014 r CSWTCH.55
00000000008074b8 0000000000000010 r CSWTCH.57
00000000008074c8 0000000000000040 r CSWTCH.59
0000000000807508 0000000000000020 r CSWTCH.63
0000000000807528 0000000000000068 r CSWTCH.66
0000000000807590 0000000000000010 r lut.0
00000000008075a0 0000000000000060 r CSWTCH.8
0000000000807600 0000000000000060 r CSWTCH.9
0000000000807660 0000000000000060 r CSWTCH.11
00000000008076c0 0000000000000011 r hex_digits.0
00000000008076dc 0000000000000004 r deleted_key_value
00000000008076e0 00000000000003e0 r hash_sizes
0000000000807ac0 0000000000000100 R util_format_linear_to_srgb_8unorm_table
0000000000807bc0 00000000000001a0 R util_format_linear_to_srgb_helper_table
0000000000807d60 0000000000000400 R util_format_srgb_8unorm_to_linear_float_table
0000000000808160 0000000000000100 R util_format_srgb_to_linear_8unorm_table
0000000000808260 00000000000000c0 r anchor_indices
0000000000808320 0000000000000a68 r bptc_float_modes
0000000000808d88 0000000000000100 r bptc_unorm_modes
0000000000808e88 0000000000000100 r partition_table1
0000000000808f88 0000000000000100 r partition_table2
0000000000809088 0000000000000004 r weights2.0
0000000000809090 0000000000000008 r weights3.1
0000000000809098 0000000000000010 r weights4.2
00000000008090a8 0000000000000080 r etc1_modifier_tables
0000000000809128 0000000000000020 r lookup.0
0000000000809148 0000000000000029 r __func__.0
0000000000809178 000000000000002b r __func__.1
00000000008091a8 000000000000002a r __func__.2
00000000008091d8 0000000000000029 r __func__.3
0000000000809208 000000000000002b r __func__.4
0000000000809238 000000000000002a r __func__.5
0000000000809268 0000000000000029 r __func__.0
0000000000809298 000000000000002b r __func__.1
00000000008092c8 000000000000002a r __func__.2
00000000008092f8 0000000000000029 r __func__.3
0000000000809328 000000000000002b r __func__.4
0000000000809358 000000000000002a r __func__.5
0000000000809388 0000000000000050 r CSWTCH.136
0000000000809450 0000000000000009 r swz.5
0000000000809460 0000000000000014 r CSWTCH.9
0000000000809478 000000000000000a r fogColorState.0
0000000000809488 000000000000000a r fogPStateOpt.1
0000000000809498 0000000000000028 r mvpState.2
00000000008094c0 0000000000000028 r mvpState.3
0000000000809620 0000000000000048 r CSWTCH.38
0000000000809668 000000000000001e r __func__.1
0000000000809688 000000000000001e r __func__.2
0000000000809730 0000000000000060 R _mesa_vao_attribute_map
0000000000809790 0000000000000074 r CSWTCH.71
0000000000809808 0000000000000010 r color_logicop_mapping
00000000008099a0 0000000000000004 r undef
0000000000809be4 0000000000000004 R RGBA32_FLOAT
0000000000809be8 0000000000000004 R RGBA32_INT
0000000000809bec 0000000000000004 R RGBA32_UINT
0000000000809f70 0000000000000018 r error_value
0000000000809f88 0000000000000008 r extra_AMD_depth_clamp_separate
0000000000809f90 0000000000000008 r extra_AMD_framebuffer_multisample_advanced
0000000000809f98 000000000000000c r extra_ARB_ES2_compatibility_api_es2
0000000000809fa8 000000000000000c r extra_ARB_ES3_compatibility_api_es3
0000000000809fb8 0000000000000008 r extra_ARB_blend_func_extended
0000000000809fc0 0000000000000008 r extra_ARB_clip_control
0000000000809fc8 0000000000000008 r extra_ARB_color_buffer_float
0000000000809fd0 000000000000000c r extra_ARB_color_buffer_float_or_glcore
0000000000809fe0 000000000000000c r extra_ARB_compute_shader_es31
0000000000809ff0 0000000000000008 r extra_ARB_compute_variable_group_size
0000000000809ff8 0000000000000008 r extra_ARB_cull_distance
000000000080a000 0000000000000008 r extra_ARB_depth_clamp
000000000080a008 0000000000000008 r extra_ARB_draw_indirect
000000000080a010 0000000000000008 r extra_ARB_explicit_uniform_location
000000000080a018 0000000000000008 r extra_ARB_fragment_program
000000000080a020 0000000000000008 r extra_ARB_fragment_shader
000000000080a028 0000000000000008 r extra_ARB_framebuffer_no_attachments
000000000080a030 0000000000000008 r extra_ARB_framebuffer_no_attachments_and_geometry_shader
000000000080a038 000000000000000c r extra_ARB_framebuffer_object_EXT_framebuffer_multisample
000000000080a048 000000000000000c r extra_ARB_gpu_shader5_or_OES_sample_variables
000000000080a058 000000000000000c r extra_ARB_gpu_shader5_or_oes_geometry_shader
000000000080a068 0000000000000008 r extra_ARB_indirect_parameters
000000000080a070 0000000000000008 r extra_ARB_polygon_offset_clamp
000000000080a078 0000000000000008 r extra_ARB_query_buffer_object
000000000080a080 0000000000000008 r extra_ARB_sample_locations
000000000080a088 0000000000000008 r extra_ARB_seamless_cube_map
000000000080a090 0000000000000008 r extra_ARB_shader_atomic_counters
000000000080a098 0000000000000008 r extra_ARB_shader_atomic_counters_and_geometry_shader
000000000080a0a0 0000000000000008 r extra_ARB_shader_atomic_counters_and_tessellation
000000000080a0a8 0000000000000008 r extra_ARB_shader_image_load_store
000000000080a0b0 0000000000000008 r extra_ARB_shader_image_load_store_and_geometry_shader
000000000080a0b8 0000000000000008 r extra_ARB_shader_image_load_store_and_tessellation
000000000080a0c0 0000000000000010 r extra_ARB_shader_image_load_store_shader_storage_buffer_object_es31
000000000080a0d0 0000000000000008 r extra_ARB_shader_storage_buffer_object
000000000080a0d8 0000000000000008 r extra_ARB_shader_storage_buffer_object_and_geometry_shader
000000000080a0e0 000000000000000c r extra_ARB_shader_storage_buffer_object_es31
000000000080a0f0 0000000000000008 r extra_ARB_sparse_buffer
000000000080a0f8 0000000000000008 r extra_ARB_spirv_extensions
000000000080a100 0000000000000008 r extra_ARB_sync
000000000080a108 0000000000000008 r extra_ARB_tessellation_shader
000000000080a110 0000000000000008 r extra_ARB_texture_buffer_range
000000000080a118 0000000000000008 r extra_ARB_texture_cube_map
000000000080a120 000000000000000c r extra_ARB_texture_cube_map_array_OES_texture_cube_map_array
000000000080a130 0000000000000008 r extra_ARB_texture_gather
000000000080a138 0000000000000008 r extra_ARB_texture_multisample
000000000080a140 0000000000000008 r extra_ARB_timer_query
000000000080a148 000000000000000c r extra_ARB_transform_feedback2_api_es3
000000000080a158 0000000000000008 r extra_ARB_transform_feedback3
000000000080a160 000000000000000c r extra_ARB_transform_feedback3_ARB_gpu_shader5
000000000080a170 0000000000000008 r extra_ARB_uniform_buffer_object
000000000080a178 0000000000000008 r extra_ARB_uniform_buffer_object_and_geometry_shader
000000000080a180 0000000000000008 r extra_ARB_vertex_program
000000000080a188 000000000000000c r extra_ARB_vertex_program_ARB_fragment_program
000000000080a198 000000000000000c r extra_ARB_vertex_program_api_es2
000000000080a1a8 0000000000000008 r extra_ARB_vertex_shader
000000000080a1b0 000000000000000c r extra_ARB_viewport_array_or_oes_geometry_shader
000000000080a1c0 000000000000000c r extra_ARB_viewport_array_or_oes_viewport_array
000000000080a1d0 0000000000000008 r extra_ATI_fragment_shader
000000000080a1d8 0000000000000008 r extra_ATI_meminfo
000000000080a1e0 000000000000000c r extra_ES32
000000000080a1f0 0000000000000008 r extra_EXT_depth_bounds_test
000000000080a1f8 0000000000000010 r extra_EXT_disjoint_timer_query
000000000080a208 0000000000000008 r extra_EXT_framebuffer_sRGB
000000000080a210 000000000000000c r extra_EXT_framebuffer_sRGB_and_new_buffers
000000000080a220 000000000000000c r extra_EXT_packed_float
000000000080a230 0000000000000008 r extra_EXT_pixel_buffer_object
000000000080a238 0000000000000008 r extra_EXT_provoking_vertex
000000000080a240 0000000000000008 r extra_EXT_provoking_vertex_32
000000000080a248 0000000000000010 r extra_EXT_shader_framebuffer_fetch
000000000080a258 0000000000000008 r extra_EXT_stencil_two_side
000000000080a260 0000000000000008 r extra_EXT_texture_array
000000000080a268 000000000000000c r extra_EXT_texture_array_es3
000000000080a278 0000000000000008 r extra_EXT_texture_filter_anisotropic
000000000080a280 000000000000000c r extra_EXT_texture_integer_and_new_buffers
000000000080a290 0000000000000008 r extra_EXT_transform_feedback
000000000080a298 0000000000000008 r extra_EXT_window_rectangles
000000000080a2a0 0000000000000010 r extra_GLSL_130_es3_gpushader4
000000000080a2b0 0000000000000008 r extra_INTEL_conservative_rasterization
000000000080a2b8 0000000000000008 r extra_INTEL_performance_query
000000000080a2c0 0000000000000008 r extra_KHR_blend_equation_advanced_coherent
000000000080a2c8 0000000000000008 r extra_KHR_robustness
000000000080a2d0 0000000000000010 r extra_KHR_robustness_or_GL
000000000080a2e0 0000000000000008 r extra_NVX_gpu_memory_info
000000000080a2e8 0000000000000008 r extra_NV_conservative_raster
000000000080a2f0 0000000000000008 r extra_NV_conservative_raster_dilate
000000000080a2f8 0000000000000008 r extra_NV_conservative_raster_pre_snap_triangles
000000000080a300 0000000000000008 r extra_NV_fog_distance
000000000080a308 0000000000000008 r extra_NV_point_sprite
000000000080a310 000000000000000c r extra_NV_point_sprite_ARB_point_sprite
000000000080a320 0000000000000008 r extra_NV_primitive_restart
000000000080a328 000000000000000c r extra_NV_read_buffer_api_gl
000000000080a338 0000000000000008 r extra_NV_texture_rectangle
000000000080a340 0000000000000008 r extra_NV_viewport_swizzle
000000000080a348 0000000000000008 r extra_OES_EGL_image_external
000000000080a350 0000000000000008 r extra_OES_primitive_bounding_box
000000000080a358 0000000000000010 r extra_core_ARB_color_buffer_float_and_new_buffers
000000000080a368 0000000000000008 r extra_flush_current
000000000080a370 000000000000000c r extra_flush_current_valid_texture_unit
000000000080a380 000000000000000c r extra_gl30_es3
000000000080a390 000000000000000c r extra_gl32_es3
000000000080a3a0 000000000000000c r extra_gl40_ARB_sample_shading
000000000080a3b0 0000000000000008 r extra_new_buffers
000000000080a3b8 0000000000000008 r extra_new_frag_clamp
000000000080a3c0 0000000000000008 r extra_texture_buffer_object
000000000080a3c8 0000000000000008 r extra_valid_clip_distance
000000000080a3d0 0000000000000008 r extra_valid_draw_buffer
000000000080a3d8 0000000000000008 r extra_valid_texture_unit
000000000080a3e0 0000000000000008 r extra_version_30
000000000080a3e8 0000000000000008 r extra_version_31
000000000080a3f0 0000000000000008 r extra_version_32
000000000080a3f8 000000000000000c r extra_version_32_OES_geometry_shader
000000000080a408 0000000000000008 r extra_version_43
000000000080a410 0000000000000800 r table_API_OPENGL
000000000080ac10 0000000000000800 r table_API_OPENGLES
000000000080b410 0000000000000800 r table_API_OPENGLES2
000000000080bc10 0000000000000800 r table_API_OPENGLES3
000000000080c410 0000000000000800 r table_API_OPENGLES31
000000000080cc10 0000000000000800 r table_API_OPENGLES32
000000000080d410 0000000000000040 r transpose
000000000080d450 0000000000000020 r stage_pairs.0
000000000080d470 0000000000000044 r cem_ranges
000000000080d4b8 00000000000000c8 r formats
000000000080d580 0000000000000028 r CSWTCH.17
000000000080d580 0000000000000028 r CSWTCH.27
000000000080dc28 0000000000000080 r CSWTCH.53
000000000080dca8 000000000000000a r fog_color.0
000000000080dcb8 000000000000000a r fog_params_state.1
000000000080dcc8 000000000000001c r CSWTCH.10
000000000080dce8 0000000000000080 r table.0
000000000080dd68 0000000000000030 r CSWTCH.32
000000000080df98 0000000000000010 r zeros.0
000000000080dfa8 000000000000001c r CSWTCH.4
000000000080dfc8 0000000000000007 r CSWTCH.5
000000000080dfd0 0000000000000014 r CSWTCH.15
000000000080dfe8 000000000000001c r CSWTCH.6
000000000080e3c8 000000000000001c r CSWTCH.14
000000000080eb20 000000000000002c r CSWTCH.1206
000000000080eb50 000000000000002c r CSWTCH.1207
000000000080eb80 000000000000002c r CSWTCH.1208
000000000080ebb0 000000000000002c r CSWTCH.1209
000000000080ebe0 000000000000002c r CSWTCH.1210
000000000080ec10 000000000000002c r CSWTCH.1211
000000000080ec40 000000000000002c r CSWTCH.1212
000000000080ec70 000000000000002c r CSWTCH.1213
000000000080eca0 000000000000002c r CSWTCH.1214
000000000080ecd0 000000000000002c r CSWTCH.1215
000000000080ed00 000000000000002c r CSWTCH.1216
000000000080ed30 000000000000002c r CSWTCH.1217
000000000080ed60 000000000000002c r CSWTCH.1218
000000000080ed90 000000000000002c r CSWTCH.1219
000000000080edc0 000000000000002c r CSWTCH.1220
000000000080edf0 000000000000002c r CSWTCH.1221
000000000080ee20 000000000000002c r CSWTCH.1222
000000000080ee50 000000000000002c r CSWTCH.1223
000000000080ee80 000000000000002c r CSWTCH.1224
000000000080eeb0 000000000000002c r CSWTCH.1225
000000000080eee0 0000000000000050 r CSWTCH.470
000000000080ef30 0000000000000014 r CSWTCH.625
000000000080ef48 000000000000001c r CSWTCH.648
000000000080ef68 0000000000000010 r swizzle_for_size(int)::size_swizzles
000000000080ef78 000000000000000a r get_mesa_program_tgsi(gl_context*, gl_shader_program*, gl_linked_shader*)::wposTransformState
000000000080ef88 000000000000000a r glsl_to_tgsi_visitor::visit_expression(ir_expression*, st_src_reg*)::transform_y_state
000000000080ef98 000000000000000a r glsl_to_tgsi_visitor::visit_expression(ir_expression*, st_src_reg*)::transform_y_state
000000000080efa8 000000000000000c r glsl_to_tgsi_visitor::emit_dp(ir_instruction*, st_dst_reg, st_src_reg, st_src_reg, unsigned int)::dot_opcodes
000000000080efb8 0000000000000030 r CSWTCH.223
000000000080efe8 000000000000000c r CSWTCH.251
000000000080eff8 0000000000000038 r CSWTCH.98
000000000080f030 000000000000000a r wposTransformState.0
000000000080f040 0000000000000040 r emit_inline_matrix_constructor(glsl_type const*, exec_list*, exec_list*, void*)::rhs_swiz
000000000080f0e8 000000000000002c r CSWTCH.1085
000000000080f118 000000000000002c r CSWTCH.1086
000000000080f148 0000000000000050 r CSWTCH.922
000000000080f198 00000000000000d4 r ast_expression::do_hir(exec_list*, _mesa_glsl_parse_state*, bool)::operations
000000000080f270 0000000000000018 r gl_ClipPlane_elements
000000000080f288 0000000000000018 r gl_EyePlaneQ_elements
000000000080f2a0 0000000000000018 r gl_EyePlaneR_elements
000000000080f2b8 0000000000000018 r gl_EyePlaneS_elements
000000000080f2d0 0000000000000018 r gl_EyePlaneT_elements
000000000080f2e8 0000000000000018 r gl_NumSamples_elements
000000000080f300 0000000000000018 r gl_NormalScale_elements
000000000080f318 0000000000000048 r gl_NormalMatrix_elements
000000000080f360 0000000000000018 r gl_ObjectPlaneQ_elements
000000000080f378 0000000000000018 r gl_ObjectPlaneR_elements
000000000080f390 0000000000000018 r gl_ObjectPlaneS_elements
000000000080f3a8 0000000000000018 r gl_ObjectPlaneT_elements
000000000080f3c0 0000000000000060 r gl_TextureMatrix_elements
000000000080f420 0000000000000060 r gl_ModelViewMatrix_elements
000000000080f480 0000000000000018 r gl_TextureEnvColor_elements
000000000080f498 0000000000000060 r gl_ProjectionMatrix_elements
000000000080f4f8 0000000000000060 r gl_TextureMatrixInverse_elements
000000000080f558 0000000000000018 r gl_CurrentAttribFragMESA_elements
000000000080f570 0000000000000018 r gl_CurrentAttribVertMESA_elements
000000000080f588 0000000000000018 r gl_FogParamsOptimizedMESA_elements
000000000080f5a0 0000000000000060 r gl_ModelViewMatrixInverse_elements
000000000080f600 0000000000000060 r gl_TextureMatrixTranspose_elements
000000000080f660 0000000000000060 r gl_ProjectionMatrixInverse_elements
000000000080f6c0 0000000000000060 r gl_ModelViewMatrixTranspose_elements
000000000080f720 0000000000000060 r gl_ModelViewProjectionMatrix_elements
000000000080f780 0000000000000060 r gl_ProjectionMatrixTranspose_elements
000000000080f7e0 0000000000000060 r gl_TextureMatrixInverseTranspose_elements
000000000080f840 0000000000000060 r gl_ModelViewMatrixInverseTranspose_elements
000000000080f8a0 0000000000000060 r gl_ModelViewProjectionMatrixInverse_elements
000000000080f900 0000000000000060 r gl_ProjectionMatrixInverseTranspose_elements
000000000080f960 0000000000000060 r gl_ModelViewProjectionMatrixTranspose_elements
000000000080f9c0 0000000000000060 r gl_ModelViewProjectionMatrixInverseTranspose_elements
000000000080fa20 0000000000000050 r CSWTCH.31
000000000080fa70 0000000000000050 r CSWTCH.26
000000000080fac0 0000000000000038 r CSWTCH.160
000000000080fca0 000000000000001c r CSWTCH.72
000000000080fef8 0000000000000018 r CSWTCH.981
000000000080ff10 0000000000000520 R nv50_ir::TexInstruction::formatTable
0000000000810430 00000000000001b0 R nv50_ir::TexInstruction::Target::descTable
0000000000810960 0000000000000030 r CSWTCH.652
0000000000810990 0000000000000029 r CSWTCH.654
00000000008109c0 0000000000000048 r CSWTCH.656
0000000000810a08 00000000000000fc r CSWTCH.659
0000000000810b08 0000000000000054 r CSWTCH.661
0000000000810b60 00000000000000dc r CSWTCH.880
0000000000810de0 0000000000000034 r CSWTCH.708
0000000000810e18 0000000000000024 r CSWTCH.828
0000000000810e40 0000000000000008 r nv50_ir::reverseCondCode(nv50_ir::CondCode)::ccRev
0000000000810e48 0000000000000034 r CSWTCH.574
0000000000810e80 0000000000000034 r CSWTCH.45
0000000000810eb8 00000000000001f8 R nv50_ir::Target::operationClass
00000000008110b0 000000000000007e R nv50_ir::Target::operationSrcNr
0000000000811158 0000000000000034 r CSWTCH.60
0000000000811190 0000000000000160 r nv50_ir::_initProps
00000000008112f0 0000000000000030 r nv50_ir::_initPropsNVE4
0000000000811320 0000000000000038 r nv50_ir::_initPropsGM107
0000000000811358 000000000000003c r nv50_ir::TargetNVC0::initOpInfo()::commutative
0000000000811398 000000000000006c r nv50_ir::TargetNVC0::initOpInfo()::noDest
0000000000811408 0000000000000060 r CSWTCH.39
0000000000811468 0000000000000400 r util_crc32_table
0000000000811868 0000000000000010 r fog_modes.0
0000000000811a88 00000000000002c4 r yycheck
0000000000811d50 0000000000000384 r yydefact
00000000008120d8 0000000000000110 r yydefgoto
00000000008121e8 0000000000000014 r yyloc_default.0
0000000000812200 0000000000000384 r yypact
0000000000812588 0000000000000110 r yypgoto
0000000000812698 000000000000010c r yyr1
00000000008127a8 000000000000010c r yyr2
00000000008128b8 00000000000002c4 r yytable
0000000000812b80 000000000000016a r yytranslate
0000000000812cf0 000000000000001c r CSWTCH.4
0000000000812d10 0000000000000038 r CSWTCH.5
0000000000812d48 0000000000000060 r CSWTCH.2
0000000000812da8 0000000000000060 r CSWTCH.8
0000000000812e08 0000000000000034 r CSWTCH.129
0000000000812e40 0000000000000020 r nv50_ir::BuildUtil::mkClobber(nv50_ir::DataFile, unsigned int, int)::baseSize2
0000000000812f58 0000000000000034 r CSWTCH.357
0000000000812f90 000000000000000e r CSWTCH.363
0000000000812fa0 0000000000000038 r CSWTCH.475
0000000000812fd8 0000000000000038 r CSWTCH.477
0000000000813010 000000000000001c r CSWTCH.488
0000000000813030 000000000000001c r CSWTCH.489
0000000000813050 0000000000000038 r CSWTCH.501
0000000000813088 0000000000000004 r CSWTCH.661
0000000000813090 0000000000000020 r CSWTCH.680
0000000000813090 0000000000000020 r CSWTCH.739
00000000008130b0 000000000000000c r CSWTCH.694
00000000008130c0 000000000000000c r CSWTCH.696
00000000008130c0 000000000000000c r CSWTCH.698
00000000008130d0 000000000000001c r CSWTCH.748
00000000008130f0 0000000000000030 r CSWTCH.751
0000000000813120 0000000000000005 r CSWTCH.753
0000000000813128 0000000000000008 r nv50_ir::reverseCondCode(nv50_ir::CondCode)::ccRev
0000000000813130 0000000000000034 r CSWTCH.79
0000000000813270 0000000000000034 r CSWTCH.451
00000000008132a8 0000000000000014 r CSWTCH.459
00000000008133f0 0000000000000068 r CSWTCH.15
0000000000813458 000000000000053a r yy_accept
0000000000813998 0000000000000540 r yy_base
0000000000813ed8 00000000000007f0 r yy_chk
00000000008146c8 0000000000000540 r yy_def
0000000000814c08 0000000000000100 r yy_ec
0000000000814d08 0000000000000044 r yy_meta
0000000000814d50 00000000000007f0 r yy_nxt
0000000000815540 0000000000000027 V typeinfo name for __gnu_cxx::__concurrence_lock_error
0000000000815568 0000000000000029 V typeinfo name for __gnu_cxx::__concurrence_unlock_error
0000000000815598 000000000000002c V typeinfo name for __gnu_cxx::__concurrence_broadcast_error
00000000008155c8 0000000000000027 V typeinfo name for __gnu_cxx::__concurrence_wait_error
00000000008155f0 0000000000000025 V typeinfo name for __cxxabiv1::__si_class_type_info
0000000000815618 000000000000000d V typeinfo name for std::type_info
0000000000815628 000000000000000e r std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned long) const::__fast_bkt
0000000000815638 0000000000000988 R std::__detail::__prime_list
0000000000815fc0 000000000000000d V typeinfo name for std::bad_alloc
0000000000815fd0 0000000000000019 V typeinfo name for std::bad_array_new_length
0000000000815ff0 0000000000000022 V typeinfo name for __cxxabiv1::__class_type_info
0000000000816018 000000000000000d V typeinfo name for std::exception
0000000000816028 0000000000000020 V typeinfo name for __cxxabiv1::__forced_unwind
0000000000816048 0000000000000024 V typeinfo name for __cxxabiv1::__foreign_exception
0000000000816070 0000000000000010 V typeinfo name for std::logic_error
0000000000816080 0000000000000011 V typeinfo name for std::length_error
0000000000816098 0000000000000011 V typeinfo name for std::out_of_range
00000000008160b0 000000000000a555 r public_string_pool
0000000000820608 000000000000d7a0 r public_stubs
000000000082dda8 0000000000000014 r CSWTCH.1001
000000000082ddd0 0000000000000024 r s_emptyFence.0
000000000082de70 0000000000000023 r g_bq_InterfaceDescriptor
000000000082dea0 0000000000000086 r _error_code_map
000000000082df28 0000000000000020 r error_table
000000000082df48 0000000000000024 r sRGB_XYZ.0
000000000082df70 00000000000000e0 r png_sRGB_checks
000000000082e050 0000000000000020 r sRGB_xy
000000000082e070 000000000000000a r valid_parameters.0
000000000082e080 0000000000000011 r digits.1
000000000082e0a0 0000000000000010 r png_digit
000000000082e0b0 0000000000000007 r png_pass_ystart.4
000000000082e0b8 0000000000000007 r png_pass_yinc.5
000000000082e0c0 0000000000000007 r png_pass_start.0
000000000082e0c0 0000000000000007 r png_pass_start.6
000000000082e0c8 0000000000000007 r png_pass_inc.1
000000000082e0c8 0000000000000007 r png_pass_inc.7
000000000082e0d0 000000000000001c r png_pass_inc.8
000000000082e0f0 0000000000000090 r row_mask.9
000000000082e180 0000000000000048 r display_mask.10
000000000082e1d0 0000000000000100 r fourbppswaptable
000000000082e2d0 0000000000000100 r twobppswaptable
000000000082e3d0 0000000000000100 r onebppswaptable
000000000082e4d0 0000000000000007 r png_pass_ystart.2
000000000082e4d8 0000000000000007 r png_pass_yinc.3
000000000082e4e0 0000000000000007 r png_pass_start.1
000000000082e4e0 0000000000000007 r png_pass_start.4
000000000082e4e8 0000000000000007 r png_pass_inc.0
000000000082e4e8 0000000000000007 r png_pass_inc.5
000000000082e4f0 0000000000000400 r crc_table
000000000082e8f0 0000000000000080 r x2n_table
000000000082e970 0000000000002000 r crc_braid_table
00000000008309b0 0000000000000800 r lenfix.1
00000000008311b0 0000000000000080 r distfix.0
0000000000831230 0000000000000026 r order.2
0000000000831260 0000000000000040 r dext.0
00000000008312a0 0000000000000040 r dbase.1
00000000008312e0 000000000000003e r lext.2
0000000000831320 000000000000003e r lbase.3
0000000000831360 000000000000002f R inflate_copyright
0000000000831390 0000000000000100 R _length_code
0000000000831490 0000000000000074 r extra_lbits
0000000000831510 0000000000000074 r base_length
0000000000831590 0000000000000200 R _dist_code
0000000000831790 0000000000000078 r extra_dbits
0000000000831810 0000000000000078 r base_dist
0000000000831890 0000000000000013 r bl_order
00000000008318a8 0000000000000078 r static_dtree
0000000000831920 0000000000000480 r static_ltree
0000000000831da0 000000000000004c r extra_blbits
0000000000831df0 0000000000000800 r vwin1024
00000000008325f0 0000000000000100 r vwin128
00000000008326f0 0000000000001000 r vwin2048
00000000008336f0 0000000000000200 r vwin256
00000000008338f0 0000000000002000 r vwin4096
00000000008358f0 0000000000000400 r vwin512
0000000000835cf0 0000000000000080 r vwin64
0000000000835d70 0000000000004000 r vwin8192
0000000000839d70 0000000000000400 r FLOOR_fromdB_LOOKUP
000000000083a170 0000000000000010 r ADJUST_SQRT2
000000000083a180 0000000000000204 r COS_LOOKUP_I
000000000083a388 0000000000000080 r FROMdB2_LOOKUP
000000000083a408 000000000000008c r FROMdB_LOOKUP
000000000083a498 0000000000000208 r INVSQ_LOOKUP_I
000000000083a6a0 0000000000000200 r INVSQ_LOOKUP_IDel
000000000083a8a0 0000000000000040 r MLOOP_1
000000000083a8e0 0000000000000040 r MLOOP_2
000000000083a920 0000000000000008 r MLOOP_3
000000000083a928 0000000000000070 r barklook
000000000083a998 0000000000000010 r bitrev
000000000083a9a8 0000000000001008 r sincos_lookup0
000000000083b9b0 0000000000001000 r sincos_lookup1
000000000083c9b0 0000000000000040 r PreAmpTable
000000000083c9f0 0000000000000080 r ModSinusTable
000000000083ca70 0000000000000080 r ModRandomTable
000000000083caf0 0000000000000080 r ModSquareTable
000000000083cb70 0000000000000040 r PreAmpAGCTable
000000000083cbb0 0000000000000100 r ft2VibratoTable
000000000083ccb0 0000000000000080 r ModRampDownTable
000000000083cd30 0000000000000400 r LinearSlideUpTable
000000000083d130 0000000000000400 r LinearSlideDownTable
000000000083d530 0000000000000040 r FineLinearSlideUpTable
000000000083d570 0000000000000040 r FineLinearSlideDownTable
000000000083d5f0 0000000000000020 r FreqS3MTable
000000000083d610 0000000000000010 r retrigTable1
000000000083d620 0000000000000010 r retrigTable2
000000000083d630 0000000000000c00 r XMLinearTable
000000000083e230 00000000000000d0 r XMPeriodTable
000000000083e300 0000000000000020 r S3MFineTuneTable
000000000083e320 0000000000000400 r LinearSlideUpTable
000000000083e720 0000000000000400 r LinearSlideDownTable
000000000083eb20 0000000000000090 r ProTrackerPeriodTable
000000000083ebb0 0000000000000040 r FineLinearSlideUpTable
000000000083ebf0 0000000000000180 r ProTrackerTunedPeriods
000000000083ed70 0000000000000040 r FineLinearSlideDownTable
000000000083edb0 0000000000000010 r ImpulseTrackerPortaVolCmd
000000000083edc8 0000000000000020 r MMCMP8BitFetch
000000000083ede8 0000000000000040 r MMCMP16BitFetch
000000000083ee28 0000000000000020 r MMCMP8BitCommands
000000000083ee48 0000000000000040 r MMCMP16BitCommands
000000000083eef8 000000000000003c r CSWTCH.23
000000000083ef38 000000000000003c r CSWTCH.24
000000000083ef78 000000000000000a r bpmvals
000000000083eff0 0000000000000010 r abc_setup_chordnames()::list_7sus4
000000000083f000 0000000000000010 r abc_setup_chordnames()::list_7sus9
000000000083f010 0000000000000014 r abc_setup_chordnames()::list_9sus4
000000000083f028 0000000000000008 r abc_setup_chordnames()::list_5
000000000083f030 0000000000000010 r abc_setup_chordnames()::list_6
000000000083f040 0000000000000010 r abc_setup_chordnames()::list_7
000000000083f050 0000000000000014 r abc_setup_chordnames()::list_9
000000000083f068 000000000000000c r abc_setup_chordnames()::list_m
000000000083f078 0000000000000018 r abc_setup_chordnames()::list_11
000000000083f090 0000000000000018 r abc_setup_chordnames()::list_13
000000000083f0a8 0000000000000010 r abc_setup_chordnames()::list_M7
000000000083f0b8 0000000000000014 r abc_setup_chordnames()::list_M9
000000000083f0d0 0000000000000010 r abc_setup_chordnames()::list_m6
000000000083f0e0 0000000000000010 r abc_setup_chordnames()::list_m7
000000000083f0f0 0000000000000014 r abc_setup_chordnames()::list_m9
000000000083f108 000000000000000c r abc_setup_chordnames()::list_Maj
000000000083f118 000000000000000c r abc_setup_chordnames()::list_aug
000000000083f128 000000000000000c r abc_setup_chordnames()::list_dim
000000000083f138 000000000000000c r abc_setup_chordnames()::list_sus
000000000083f148 0000000000000010 r abc_setup_chordnames()::list_7sus
000000000083f158 0000000000000010 r abc_setup_chordnames()::list_aug7
000000000083f168 0000000000000010 r abc_setup_chordnames()::list_dim7
000000000083f178 0000000000000014 r abc_setup_chordnames()::list_dim9
000000000083f190 0000000000000010 r abc_setup_chordnames()::list_maj7
000000000083f1a0 0000000000000014 r abc_setup_chordnames()::list_maj9
000000000083f1b8 000000000000000c r abc_setup_chordnames()::list_plus
000000000083f1c8 000000000000000c r abc_setup_chordnames()::list_sus9
00000000008405d8 0000000000000027 r CSWTCH.60
0000000000840600 0000000000000041 r tune
0000000000840648 0000000000000010 r __func__.0
0000000000840658 0000000000000010 r __func__.1
0000000000840668 000000000000001b r __func__.2
0000000000840690 0000000000000030 r my_encodings
00000000008406c0 0000000000000048 r my_rates
0000000000840708 0000000000000015 r __func__.0
0000000000840720 000000000000001b r __func__.0
0000000000840740 0000000000000008 r __func__.1
0000000000840748 000000000000000d r __func__.2
0000000000840758 000000000000000e r __func__.3
0000000000840768 0000000000000008 r __func__.4
0000000000840770 000000000000001b r __func__.5
0000000000840790 000000000000000e r __func__.6
00000000008407a0 000000000000000a r __func__.7
00000000008407b0 0000000000000048 r freqs
0000000000840800 0000000000000180 r tabsel_123
0000000000840980 000000000000000e r __func__.0
0000000000840990 000000000000001c r __func__.1
00000000008409b0 0000000000000014 r __func__.2
00000000008409c8 000000000000001f r __func__.3
00000000008409e8 0000000000000012 r __func__.4
0000000000840a00 0000000000000016 r __func__.5
0000000000840a18 0000000000000019 r __func__.6
0000000000840a38 0000000000000017 r __func__.7
0000000000840a50 0000000000000010 r __func__.0
0000000000840a60 000000000000000d r __func__.1
0000000000840a70 000000000000000e r __func__.2
0000000000840a80 000000000000000f r __func__.3
0000000000840a90 0000000000000010 r __func__.4
0000000000840aa0 0000000000000015 r __func__.5
0000000000840ab8 000000000000000c r __func__.6
0000000000840ac8 0000000000000011 r __func__.7
0000000000840ae0 0000000000000013 r __func__.8
0000000000840b00 0000000000000010 r encoding_widths
0000000000840b10 0000000000000019 r frame_type
0000000000840b30 0000000000000015 r __func__.0
0000000000840b48 000000000000000d r __func__.1
0000000000840b58 000000000000001b r __func__.2
0000000000840b78 0000000000000006 r dn_nodec
0000000000840b80 000000000000000c r dn_sse_vintage
0000000000840b90 0000000000000011 r dn_dreidnowext_vintage
0000000000840ba8 000000000000000e r dn_dreidnow_vintage
0000000000840bb8 0000000000000004 r dn_avx
0000000000840bc0 0000000000000007 r dn_neon64
0000000000840bc8 0000000000000005 r dn_neon
0000000000840bd0 0000000000000004 r dn_arm
0000000000840bd8 0000000000000007 r dn_x86_64
0000000000840be0 0000000000000004 r dn_sse
0000000000840be8 0000000000000008 r dn_altivec
0000000000840bf0 0000000000000009 r dn_dreidnowext
0000000000840c00 0000000000000006 r dn_dreidnow
0000000000840c08 0000000000000004 r dn_mmx
0000000000840c10 000000000000000c r dn_ifuenf_dither
0000000000840c20 0000000000000005 r dn_ifuenf
0000000000840c28 0000000000000005 r dn_ivier
0000000000840c30 0000000000000005 r dn_idrei
0000000000840c38 000000000000000f r dn_generic_dither
0000000000840c48 0000000000000008 r dn_generic
0000000000840c50 0000000000000005 r dn_autodec
0000000000840c58 000000000000000d r __func__.1
0000000000840c68 000000000000000d r __func__.2
0000000000840c78 0000000000000012 r __func__.3
0000000000840c90 0000000000000011 r __func__.5
0000000000840ca8 000000000000001c r __func__.0
0000000000840cd0 0000000000000808 r intwinbase
00000000008414d8 0000000000000004 r cos4
00000000008414e0 0000000000000008 r cos8
00000000008414f0 0000000000000010 r cos16
0000000000841500 0000000000000020 r cos32
0000000000841520 0000000000000040 r cos64
0000000000841560 0000000000000008 r __func__.0
0000000000841568 000000000000000b r __func__.1
0000000000841578 000000000000000d r __func__.2
0000000000841588 000000000000000b r __func__.3
0000000000841598 0000000000000011 r __func__.4
00000000008415b0 0000000000000008 r __func__.0
00000000008415b8 000000000000000c r __func__.1
00000000008415c8 0000000000000011 r __func__.2
00000000008415e0 0000000000000c00 r grp_9tab
00000000008421e0 0000000000000180 r grp_5tab
0000000000842360 0000000000000060 r grp_3tab
00000000008423c0 0000000000001b00 r layer12_table
0000000000843ec0 0000000000000310 r alloc_4
00000000008441d0 00000000000001c0 r alloc_3
0000000000844390 0000000000000140 r alloc_2
00000000008444d0 00000000000004b0 r alloc_1
0000000000844980 0000000000000480 r alloc_0
0000000000844f98 0000000000000016 r __func__.0
0000000000844fb0 0000000000000008 r __func__.1
0000000000844fb8 0000000000000012 r __func__.2
0000000000844fd0 0000000000000011 r __func__.3
0000000000844fe8 00000000000003de r bandInfo
00000000008453d0 0000000000000200 r i_slen2
00000000008455d0 0000000000000400 r n_slen2
00000000008459d0 0000000000000318 r mapbuf2
0000000000845cf0 0000000000000af8 r mapbuf1
00000000008467f0 0000000000000ab0 r mapbuf0
00000000008472a0 0000000000000100 r pow2_2
00000000008473a0 0000000000000100 r pow1_2
00000000008474a0 0000000000000100 r pow2_1
00000000008475a0 0000000000000100 r pow1_1
00000000008476a0 0000000000000040 r tan2_2
00000000008476e0 0000000000000040 r tan1_2
0000000000847720 0000000000000040 r tan2_1
0000000000847760 0000000000000040 r tan1_1
00000000008477a0 0000000000000240 r win1
00000000008479e0 0000000000000240 r win
0000000000847c20 000000000000803c r ispow
000000000084fc60 000000000000003e r tab_c1
000000000084fca0 000000000000003e r tab_c0
000000000084fce0 0000000000000800 r tab24_
00000000008504e0 0000000000000820 r tab16_
0000000000850d00 00000000000007e0 r tab15_
00000000008514e0 00000000000007e0 r tab13_
0000000000851cc0 00000000000001e0 r tab12_
0000000000851ea0 00000000000001e0 r tab11_
0000000000852080 0000000000000220 r tab10_
00000000008522a0 0000000000000100 r tab9_
00000000008523a0 0000000000000100 r tab8_
00000000008524a0 0000000000000120 r tab7_
00000000008525c0 0000000000000080 r tab6_
0000000000852640 0000000000000060 r tab5_
00000000008526a0 0000000000000060 r tab3_
0000000000852700 0000000000000060 r tab2_
0000000000852760 0000000000000020 r tab1_
0000000000852780 0000000000000020 r tab0_
0000000000852830 0000000000000010 r atanlo
0000000000852840 0000000000000010 r atanhi
0000000000852850 0000000000000080 r npio2_hw
00000000008528d0 0000000000000108 r two_over_pi
00000000008529d8 0000000000000008 r Zero
00000000008529e0 0000000000000040 r PIo2
0000000000852a20 0000000000000010 r init_jk
0000000000852a30 0000000000000060 R __inv_pio4
0000000000852a90 00000000000000e0 R __sincosf_table
0000000000852b70 0000000000000870 R __exp_data
00000000008533e0 0000000000001048 R __pow_log_data
0000000000854430 0000000000000890 R __log_data
0000000000854cc0 0000000000000018 r CSWTCH.9
0000000000854cd8 0000000000000018 r CSWTCH.8
0000000000854cf0 0000000000000128 R __powf_log2_data
0000000000854e20 0000000000000120 R __log2f_data
0000000000854f40 0000000000000020 r atanlo
0000000000854f60 0000000000000020 r atanhi
0000000000854f80 000000000000000c r CSWTCH.9
0000000000854f90 000000000000000c r CSWTCH.8
0000000000854fa0 0000000000000148 R __exp2f_data
00000000008550f0 0000000000000080 r npio2_hw
0000000000855170 0000000000000318 r two_over_pi
0000000000855488 0000000000000120 R __logf_data
00000000008555b0 000000000000002c r PIo2
00000000008555e0 000000000000000c r init_jk
00000000008555f0 0000000000000490 R __log2_data
0000000000855a80 0000000000002000 r crc_lookup
0000000000857a80 0000000000000108 r mask
0000000000857b88 0000000000000014 r CSWTCH.52
0000000000857ba0 0000000000000024 r gains.6636
0000000000857bc8 0000000000000020 R tf_select_table
0000000000857be8 0000000000000004 r spread_icdf
0000000000857bf0 0000000000000003 r tapset_icdf
0000000000857bf8 000000000000000b r trim_icdf
0000000000857c08 0000000000000020 r correction.4177
0000000000857c28 00000000000000e7 r band_allocation
0000000000857d10 0000000000000188 r cache_bits50
0000000000857e98 00000000000000a8 r cache_caps50
0000000000857f40 00000000000000d2 r cache_index50
0000000000858018 000000000000002c r eband5ms
0000000000858048 00000000000000f0 r fft_bitrev120
0000000000858138 00000000000001e0 r fft_bitrev240
0000000000858318 00000000000003c0 r fft_bitrev480
00000000008586d8 0000000000000078 r fft_bitrev60
0000000000858750 0000000000000f00 r fft_twiddles48000_960
0000000000859650 000000000000002a r logN400
0000000000859680 0000000000001c20 r mdct_twiddles960
000000000085b2a0 00000000000001e0 r window120
000000000085b480 0000000000000010 r beta_coef
000000000085b490 0000000000000064 R eMeans
000000000085b4f8 0000000000000150 r e_prob_model
000000000085b648 0000000000000010 r pred_coef
000000000085b658 0000000000000003 r small_energy_icdf
000000000085b660 0000000000000018 r LOG2_FRAC_TABLE
000000000085b678 000000000000000c r SPREAD_FACTOR.6494
000000000085b688 0000000000000003 r silk_LBRR_flags_2_iCDF
000000000085b690 0000000000000007 r silk_LBRR_flags_3_iCDF
000000000085b698 0000000000000006 R silk_LTPScales_table_Q14
000000000085b6a0 0000000000000003 R silk_LTPscale_iCDF
000000000085b6a8 0000000000000007 R silk_NLSF_EXT_iCDF
000000000085b6b0 0000000000000005 R silk_NLSF_interpolation_factor_iCDF
000000000085b6b8 0000000000000008 R silk_Quantization_Offsets_Q10
000000000085b6c0 0000000000000002 R silk_lsb_iCDF
000000000085b6c8 0000000000000002 R silk_stereo_only_code_mid_iCDF
000000000085b6d0 0000000000000019 R silk_stereo_pred_joint_iCDF
000000000085b6f0 0000000000000020 R silk_stereo_pred_quant_Q13
000000000085b710 0000000000000004 R silk_type_offset_VAD_iCDF
000000000085b718 0000000000000002 R silk_type_offset_no_VAD_iCDF
000000000085b720 0000000000000003 R silk_uniform3_iCDF
000000000085b728 0000000000000004 R silk_uniform4_iCDF
000000000085b730 0000000000000005 R silk_uniform5_iCDF
000000000085b738 0000000000000006 R silk_uniform6_iCDF
000000000085b740 0000000000000008 R silk_uniform8_iCDF
000000000085b748 000000000000000f r delay_matrix_dec
000000000085b758 000000000000000f r delay_matrix_enc
000000000085b768 000000000000001c R silk_Resampler_1_2_COEFS
000000000085b788 0000000000000028 R silk_Resampler_1_3_COEFS
000000000085b7b0 0000000000000028 R silk_Resampler_1_4_COEFS
000000000085b7d8 0000000000000028 R silk_Resampler_1_6_COEFS
000000000085b800 0000000000000028 R silk_Resampler_2_3_COEFS
000000000085b828 000000000000003a R silk_Resampler_3_4_COEFS
000000000085b868 0000000000000060 R silk_resampler_frac_FIR_12
000000000085b8c8 0000000000000010 r bit_deinterleave_table.7015
000000000085b8d8 0000000000000010 r bit_interleave_table.7005
000000000085b8e8 0000000000000010 r exp2_table8.6846
000000000085b8f8 0000000000000078 r ordery_table
000000000085b970 00000000000013e0 r CELT_PVQ_U_DATA
000000000085cd50 0000000000000004 r HARM_ATT_Q15
000000000085cd58 0000000000000004 r PLC_RAND_ATTENUATE_UV_Q15
000000000085cd60 0000000000000004 r PLC_RAND_ATTENUATE_V_Q15
000000000085cd68 0000000000000029 R silk_delta_gain_iCDF
000000000085cd98 0000000000000018 R silk_gain_iCDF
000000000085cdb0 0000000000000008 r silk_LTP_gain_iCDF_0
000000000085cdb8 0000000000000010 r silk_LTP_gain_iCDF_1
000000000085cdc8 0000000000000020 r silk_LTP_gain_iCDF_2
000000000085cde8 0000000000000028 r silk_LTP_gain_vq_0
000000000085ce10 0000000000000050 r silk_LTP_gain_vq_1
000000000085ce60 00000000000000a0 r silk_LTP_gain_vq_2
000000000085cf00 0000000000000003 R silk_LTP_per_index_iCDF
000000000085cf08 0000000000000140 r silk_NLSF_CB1_NB_MB_Q8
000000000085d048 0000000000000280 r silk_NLSF_CB1_Wght_Q9
000000000085d2c8 0000000000000040 r silk_NLSF_CB1_iCDF_NB_MB
000000000085d308 0000000000000048 r silk_NLSF_CB2_BITS_NB_MB_Q5
000000000085d350 00000000000000a0 r silk_NLSF_CB2_SELECT_NB_MB
000000000085d3f0 0000000000000048 r silk_NLSF_CB2_iCDF_NB_MB
000000000085d438 0000000000000016 r silk_NLSF_DELTA_MIN_NB_MB_Q15
000000000085d450 0000000000000012 r silk_NLSF_PRED_NB_MB_Q8
000000000085d468 0000000000000200 r silk_NLSF_CB1_WB_Q8
000000000085d668 0000000000000400 r silk_NLSF_CB1_WB_Wght_Q9
000000000085da68 0000000000000040 r silk_NLSF_CB1_iCDF_WB
000000000085daa8 0000000000000048 r silk_NLSF_CB2_BITS_WB_Q5
000000000085daf0 0000000000000100 r silk_NLSF_CB2_SELECT_WB
000000000085dbf0 0000000000000048 r silk_NLSF_CB2_iCDF_WB
000000000085dc38 0000000000000022 r silk_NLSF_DELTA_MIN_WB_Q15
000000000085dc60 000000000000001e r silk_NLSF_PRED_WB_Q8
000000000085dc80 0000000000000003 R silk_pitch_contour_10_ms_NB_iCDF
000000000085dc88 000000000000000c R silk_pitch_contour_10_ms_iCDF
000000000085dc98 000000000000000b R silk_pitch_contour_NB_iCDF
000000000085dca8 0000000000000022 R silk_pitch_contour_iCDF
000000000085dcd0 0000000000000015 R silk_pitch_delta_iCDF
000000000085dce8 0000000000000020 R silk_pitch_lag_iCDF
000000000085dd08 00000000000000b4 R silk_pulses_per_block_iCDF
000000000085ddc0 0000000000000012 R silk_rate_levels_iCDF
000000000085ddd8 0000000000000098 R silk_shell_code_table0
000000000085de70 0000000000000098 R silk_shell_code_table1
000000000085df08 0000000000000098 R silk_shell_code_table2
000000000085dfa0 0000000000000098 R silk_shell_code_table3
000000000085e038 0000000000000011 R silk_shell_code_table_offsets
000000000085e050 000000000000002a R silk_sign_iCDF
000000000085e080 000000000000000a r ordering10.23678
000000000085e090 0000000000000010 r ordering16.23677
000000000085e0a0 000000000000002c R silk_CB_lags_stage2
000000000085e0d0 0000000000000006 R silk_CB_lags_stage2_10_ms
000000000085e0d8 0000000000000088 R silk_CB_lags_stage3
000000000085e160 0000000000000018 R silk_CB_lags_stage3_10_ms
000000000085e178 0000000000000102 R silk_LSFCosTab_FIX_Q12
000000000085e280 0000000000000011 r bits_ac_chrominance.1
000000000085e2a0 0000000000000011 r bits_ac_luminance.5
000000000085e2c0 0000000000000011 r bits_dc_chrominance.3
000000000085e2e0 0000000000000011 r bits_dc_luminance.7
000000000085e300 0000000000000100 r std_chrominance_quant_tbl
000000000085e400 0000000000000100 r std_luminance_quant_tbl
000000000085e500 00000000000000a2 r val_ac_chrominance.0
000000000085e5b0 00000000000000a2 r val_ac_luminance.4
000000000085e658 000000000000000c r val_dc_chrominance.2
000000000085e668 000000000000000c r val_dc_luminance.6
000000000085e700 0000000000000044 r rgb_pixelsize
000000000085e750 0000000000000020 r dither_matrix
000000000085e770 0000000000000100 r base_dither_matrix
000000000085e870 0000000000000044 r rgb_blue
000000000085e8c0 0000000000000044 r rgb_green
000000000085e910 0000000000000044 r rgb_red
000000000085e958 000000000000000c r c_scales
000000000085e970 0000000000000044 r rgb_blue
000000000085e9c0 0000000000000044 r rgb_green
000000000085ea10 0000000000000044 r rgb_red
000000000085ea58 0000000000000140 R jpeg_natural_order
000000000085eba0 0000000000000010 r extra_pool_slop
000000000085ebb0 0000000000000010 r first_pool_slop
000000000085ebc0 0000000000000044 r rgb_blue
000000000085ec10 0000000000000044 r rgb_green
000000000085ec60 0000000000000044 r rgb_pixelsize
000000000085ecb0 0000000000000044 r rgb_red
000000000085ed00 0000000000000040 r aanscalefactor.0
000000000085ed40 0000000000000080 r aanscales.1
000000000085edc0 0000000000000020 r dither_matrix
000000000085ede0 0000000000000044 r rgb_blue
000000000085ee30 0000000000000044 r rgb_green
000000000085ee80 0000000000000044 r rgb_pixelsize
000000000085eed0 0000000000000044 r rgb_red
000000000085ef20 0000000000000040 r aanscalefactor.0
000000000085ef60 0000000000000011 r bits_ac_chrominance.1
000000000085ef80 0000000000000011 r bits_ac_luminance.5
000000000085efa0 0000000000000011 r bits_dc_chrominance.3
000000000085efc0 0000000000000011 r bits_dc_luminance.7
000000000085efe0 00000000000000a2 r val_ac_chrominance.0
000000000085f090 00000000000000a2 r val_ac_luminance.4
000000000085f138 000000000000000c r val_dc_chrominance.2
000000000085f148 000000000000000c r val_dc_luminance.6
000000000085f158 0000000000000390 R jpeg_aritab
000000000085f4f0 0000000000000100 r jsimd_h2_downsample_consts
000000000085f5f0 0000000000000008 r jsimd_ycc_rgb_convert_neon_consts
000000000085f600 0000000000000008 r jsimd_fdct_ifast_neon_consts
000000000085f610 0000000000000008 r jsimd_idct_2x2_neon_consts
000000000085f620 0000000000000018 r jsimd_idct_4x4_neon_consts
000000000085f640 0000000000000008 r jsimd_idct_ifast_neon_consts
000000000085f650 r Ljsimd_idct_islow_neon_consts
000000000085f670 r Ljsimd_ycc_rgb_neon_consts
000000000085f690 r Ljsimd_rgb_ycc_neon_consts
000000000085f6b0 r Ljsimd_fdct_islow_neon_consts
000000000085f6d0 r Ljsimd_huff_encode_one_block_neon_consts
000000000085f7a0 000000000000000d r kModeBpp
000000000085f7b0 0000000000000003 r kFilterExtraRows
000000000085f7b8 000000000000000c r kQuantToDitherAmp
000000000085f7c8 0000000000000020 r kScan
000000000085f7e8 0000000000000030 r CSWTCH.31
000000000085f818 0000000000000004 r kCat3
000000000085f820 0000000000000005 r kCat4
000000000085f828 0000000000000006 r kCat5
000000000085f830 000000000000000c r kCat6
000000000085f840 0000000000000010 r kZigzag
000000000085f850 000000000000000a r kAlphabetSize
000000000085f860 0000000000000013 r kCodeLengthCodeOrder
000000000085f878 0000000000000003 r kCodeLengthExtraBits
000000000085f880 0000000000000003 r kCodeLengthRepeatOffsets
000000000085f888 0000000000000078 r kCodeToPlane
000000000085f900 0000000000000005 r kLiteralMap
000000000085f908 0000000000000018 r kTableSize
000000000085f990 0000000000000008 r k0g0g.0
000000000085f998 0000000000000008 r kGreenShuffle
000000000085f9a0 0000000000000008 r kCoeffs1
000000000085f9a8 0000000000000064 r kBitMask
000000000085fa10 0000000000000080 R kVP8Log2Range
000000000085fa90 0000000000000080 R kVP8NewRange
000000000085fb10 00000000000000dc r kRandomTable
000000000085fbf0 0000000000000100 r kAcTable
000000000085fcf0 0000000000000080 r kDcTable
000000000085fd70 0000000000000420 r CoeffsProba0
0000000000860190 0000000000000420 r CoeffsUpdateProba
00000000008605b0 0000000000000384 r kBModesProba
0000000000860938 0000000000000011 r kBands
0000000000860950 0000000000000100 r canon_map
0000000000860a50 0000000000000048 r _pow10(unsigned int)::_powers_of_10
0000000000860a98 000000000000000a r _double_parser_trans_actions
0000000000860aa8 000000000000000a r _double_parser_trans_targs
0000000000860ac0 00000000000000bf r _double_parser_indicies
0000000000860b80 0000000000000009 r _double_parser_index_offsets
0000000000860b90 0000000000000009 r _double_parser_key_spans
0000000000860ba0 0000000000000013 r _double_parser_trans_keys
0000000000860c40 000000000000040c r format1_names_msgidx
0000000000861050 000000000000073a r format1_names_msgstr
0000000000861790 0000000000000620 r cff1_std_strings_msgidx
0000000000861db0 0000000000000d73 r cff1_std_strings_msgstr
0000000000862b30 00000000000005a0 r _hb_arabic_u16
00000000008630d0 00000000000001d0 r _hb_arabic_u8
0000000000863390 0000000000000038 r horizontal_features
00000000008633d0 0000000000000038 r common_features
0000000000863408 0000000000000002 R _hb_Null_AAT_Lookup
0000000000863410 000000000000000c R _hb_Null_OT_CmapSubtableLongGroup
0000000000863420 0000000000000009 R _hb_Null_OT_RangeRecord
0000000000863430 0000000000000008 R _hb_Null_OT_LangSys
0000000000863438 0000000000000002 R _hb_Null_OT_Index
0000000000863440 00000000000001c0 R _hb_NullPool
0000000000863600 00000000000001d0 r _hb_emoji_u8
00000000008637d0 0000000000000100 R _hb_modified_combining_class
0000000000863910 00000000000005a0 r _hb_arabic_u16
0000000000863eb0 00000000000001d0 r _hb_arabic_u8
0000000000864080 00000000000004e0 r feature_mappings
00000000008645f0 0000000000000100 r standard_encoding_to_sid
00000000008646f0 0000000000000158 r expert_subset_charset_sid_to_gid
0000000000864850 0000000000000294 r expert_charset_sid_to_gid
0000000000864af0 00000000000000ae r expert_subset_charset_to_sid
0000000000864ba0 000000000000014c r expert_charset_to_sid
0000000000864d70 0000000000000008 r table_tags
0000000000864d80 0000000000000038 r modifier_combining_marks
0000000000864dc0 000000000000001c r arabic_fallback_features
0000000000864de0 00000000000000a8 r arabic_state_table
0000000000864e90 0000000000000020 r arabic_features
0000000000864eb0 0000000000000014 r ligature_3_table
0000000000864ec8 0000000000000016 r ligature_mark_table
0000000000864ee0 0000000000000414 r ligature_table
0000000000865300 0000000000000598 r shaping_table
00000000008658a0 0000000000000597 r joining_table
0000000000865e38 0000000000000001 r hb_first
0000000000865ec0 0000000000000060 R _hb_ot_shaper_dumber
0000000000865f20 0000000000000060 R _hb_ot_shaper_default
0000000000865f80 0000000000000010 r hangul_features
0000000000865f90 000000000000006c r compose_hebrew(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int, unsigned int*)::sDageshForms
0000000000866030 0000000000000088 r indic_features
00000000008660b8 00000000000000f0 r indic_configs
00000000008661b0 0000000000000114 r _indic_syllable_machine_eof_trans
00000000008662d0 000000000000008a r _indic_syllable_machine_from_state_actions
0000000000866360 000000000000008a r _indic_syllable_machine_to_state_actions
00000000008663f0 0000000000000096 r _indic_syllable_machine_trans_actions
0000000000866490 0000000000000096 r _indic_syllable_machine_trans_targs
0000000000866530 000000000000059f r _indic_syllable_machine_indicies
0000000000866ad0 0000000000000114 r _indic_syllable_machine_index_offsets
0000000000866bf0 000000000000008a r _indic_syllable_machine_key_spans
0000000000866c80 0000000000000115 r _indic_syllable_machine_trans_keys
0000000000866da0 0000000000000048 r khmer_features
0000000000866df0 0000000000000056 r _khmer_syllable_machine_eof_trans
0000000000866e50 000000000000002b r _khmer_syllable_machine_from_state_actions
0000000000866e80 000000000000002b r _khmer_syllable_machine_to_state_actions
0000000000866eb0 0000000000000031 r _khmer_syllable_machine_trans_actions
0000000000866ef0 0000000000000031 r _khmer_syllable_machine_trans_targs
0000000000866f30 00000000000003bd r _khmer_syllable_machine_indicies
00000000008672f0 0000000000000056 r _khmer_syllable_machine_index_offsets
0000000000867350 000000000000002b r _khmer_syllable_machine_key_spans
0000000000867380 0000000000000057 r _khmer_syllable_machine_trans_keys
00000000008673d8 0000000000000060 R _hb_ot_shaper_myanmar_zawgyi
0000000000867440 0000000000000010 r myanmar_other_features
0000000000867450 0000000000000010 r myanmar_basic_features
0000000000867460 000000000000006e r _myanmar_syllable_machine_eof_trans
00000000008674d0 0000000000000037 r _myanmar_syllable_machine_from_state_actions
0000000000867510 0000000000000037 r _myanmar_syllable_machine_to_state_actions
0000000000867550 000000000000003d r _myanmar_syllable_machine_trans_actions
0000000000867590 000000000000003d r _myanmar_syllable_machine_trans_targs
00000000008675d0 00000000000007cd r _myanmar_syllable_machine_indicies
0000000000867da0 000000000000006e r _myanmar_syllable_machine_index_offsets
0000000000867e10 0000000000000037 r _myanmar_syllable_machine_key_spans
0000000000867e50 000000000000006f r _myanmar_syllable_machine_trans_keys
0000000000867ec0 0000000000000048 r thai_below_state_machine
0000000000867f10 0000000000000014 r thai_below_start_state
0000000000867f30 0000000000000060 r thai_above_state_machine
0000000000867f90 0000000000000014 r thai_above_start_state
0000000000867fa8 0000000000000012 r thai_pua_shape(unsigned int, thai_action_t, hb_font_t*)::RD_mappings
0000000000867fc0 000000000000004e r thai_pua_shape(unsigned int, thai_action_t, hb_font_t*)::SL_mappings
0000000000868010 0000000000000024 r thai_pua_shape(unsigned int, thai_action_t, hb_font_t*)::SDL_mappings
0000000000868038 0000000000000036 r thai_pua_shape(unsigned int, thai_action_t, hb_font_t*)::SD_mappings
00000000008680a0 0000000000000014 r use_other_features
00000000008680c0 0000000000000010 r use_topographical_features
00000000008680d0 000000000000001c r use_basic_features
00000000008680f0 0000000000000620 r hb_use_u16
0000000000868710 0000000000000c45 r hb_use_u8
0000000000869360 00000000000000fc r _use_syllable_machine_eof_trans
0000000000869460 000000000000007e r _use_syllable_machine_from_state_actions
00000000008694e0 000000000000007e r _use_syllable_machine_to_state_actions
0000000000869560 000000000000008f r _use_syllable_machine_trans_actions
00000000008695f0 000000000000008f r _use_syllable_machine_trans_targs
0000000000869680 000000000000118b r _use_syllable_machine_indicies
000000000086a810 00000000000000fc r _use_syllable_machine_index_offsets
000000000086a910 000000000000007e r _use_syllable_machine_key_spans
000000000086a990 00000000000000fd r _use_syllable_machine_trans_keys
000000000086aa90 0000000000000001 r hb_second
000000000086aa98 0000000000000001 r hb_identity
000000000086ab70 00000000000025c8 r ot_languages3
000000000086d140 0000000000000658 r ot_languages2
000000000086d7a0 0000000000000188 r _hb_ucd_i16
000000000086d930 00000000000048d0 r _hb_ucd_u16
0000000000872200 00000000000045cc r _hb_ucd_u8
00000000008767d0 0000000000000c20 r _hb_ucd_dm2_u64_map
00000000008773f0 00000000000009f8 r _hb_ucd_dm2_u32_map
0000000000877df0 00000000000000dc r _hb_ucd_dm1_p2_map
0000000000877ed0 0000000000000672 r _hb_ucd_dm1_p0_map
0000000000878550 0000000000000294 r _hb_ucd_sc_map
00000000008787f0 0000000000000d80 r indic_table
0000000000879570 00000000000000b0 r ft_trig_arctan_table
0000000000879750 0000000000000020 r fvaraxis_fields.0
0000000000879770 0000000000000024 r fvar_fields.1
00000000008797a0 0000000000000024 r gvar_fields.2
00000000008797c8 00000000000005d0 r sfnt_id.3
0000000000879da0 0000000000000190 r trick_names.4
0000000000879f30 0000000000000100 r opcode_length
000000000087a030 0000000000000100 r Pop_Push_Count
000000000087a130 0000000000000060 R tt_default_graphics_state
000000000087a190 0000000000000004 r tt_service_truetype_engine
000000000087a1f0 0000000000000014 r cff_header_fields.0
000000000087a210 0000000000000200 r cff_expert_encoding
000000000087a410 0000000000000200 r cff_standard_encoding
000000000087a610 00000000000000ae r cff_expertsubset_charset
000000000087a6c0 000000000000014c r cff_expert_charset
000000000087a810 00000000000001ca r cff_isoadobe_charset
000000000087a9e0 0000000000000050 r power_ten_limits
000000000087aa30 0000000000000050 r power_tens
000000000087aa80 0000000000000074 r pfr_header_fields
000000000087ab00 0000000000000098 r winfnt_header_fields
000000000087aba0 0000000000000018 r winpe_rsrc_data_entry_fields
000000000087abc0 0000000000000010 r winpe_rsrc_dir_entry_fields
000000000087abd0 0000000000000020 r winpe_rsrc_dir_fields
000000000087abf0 0000000000000020 r winpe32_section_fields
000000000087ac10 0000000000000034 r winpe32_header_fields
000000000087ac50 0000000000000018 r winne_header_fields
000000000087ac70 0000000000000014 r winmz_header_fields
000000000087ac90 0000000000000034 r pcf_accel_msb_header
000000000087acd0 0000000000000034 r pcf_accel_header
000000000087ad10 000000000000001c r pcf_enc_msb_header
000000000087ad30 000000000000001c r pcf_enc_header
000000000087ad50 0000000000000014 r pcf_property_msb_header
000000000087ad70 0000000000000014 r pcf_property_header
000000000087ad90 000000000000001c r pcf_compressed_metric_header
000000000087adb0 0000000000000020 r pcf_metric_msb_header
000000000087add0 0000000000000020 r pcf_metric_header
000000000087adf0 0000000000000018 r pcf_table_header
000000000087ae10 0000000000000010 r pcf_toc_header
000000000087ae20 0000000000000008 r nibble_mask
000000000087ae30 0000000000000020 r hdigits
000000000087ae50 0000000000000020 r ddigits
000000000087ae70 0000000000000080 r a2i
000000000087aef0 0000000000000001 r empty
000000000087af20 000000000000003c r woff_header_fields.0
000000000087af60 0000000000000010 r ttc_header_fields.1
000000000087af70 0000000000000084 r tt_encodings.2
000000000087b000 000000000000004c r metrics_header_fields.3
000000000087b050 000000000000003c r maxp_fields_extra.4
000000000087b090 0000000000000010 r maxp_fields.5
000000000087b0a0 0000000000000010 r os2_fields_extra5.6
000000000087b0b0 000000000000001c r os2_fields_extra2.7
000000000087b0d0 0000000000000010 r os2_fields_extra1.8
000000000087b0e0 00000000000000b0 r os2_fields.9
000000000087b190 000000000000002c r post_fields.10
000000000087b1c0 000000000000001c r name_record_fields.11
000000000087b1e0 000000000000000c r langTag_record_fields.12
000000000087b1f0 0000000000000014 r name_table_fields.13
000000000087b210 0000000000000044 r pclt_fields.14
000000000087b260 0000000000000054 r header_fields.15
000000000087b2c0 0000000000000018 r table_dir_entry_fields.16
000000000087b2e0 0000000000000018 r offset_table_fields.17
000000000087b300 0000000000000010 r hexdigits
000000000087b310 0000000000000010 r sfnt_ps_map
000000000087b320 0000000000000018 R af_hani_nonbase_uniranges
000000000087b340 0000000000000110 R af_hani_uniranges
000000000087b450 0000000000000050 R af_tibt_nonbase_uniranges
000000000087b4a0 0000000000000010 R af_tibt_uniranges
000000000087b4b0 0000000000000028 R af_sylo_nonbase_uniranges
000000000087b4e0 0000000000000010 R af_sylo_uniranges
000000000087b4f0 0000000000000038 R af_orya_nonbase_uniranges
000000000087b530 0000000000000010 R af_orya_uniranges
000000000087b540 0000000000000020 R af_limb_nonbase_uniranges
000000000087b560 0000000000000010 R af_limb_uniranges
000000000087b570 0000000000000008 R af_vaii_nonbase_uniranges
000000000087b580 0000000000000010 R af_vaii_uniranges
000000000087b590 0000000000000008 R af_tfng_nonbase_uniranges
000000000087b5a0 0000000000000010 R af_tfng_uniranges
000000000087b5b0 0000000000000020 R af_thai_nonbase_uniranges
000000000087b5d0 0000000000000010 R af_thai_uniranges
000000000087b5e0 0000000000000030 R af_telu_nonbase_uniranges
000000000087b610 0000000000000010 R af_telu_uniranges
000000000087b620 0000000000000030 R af_tavt_nonbase_uniranges
000000000087b650 0000000000000010 R af_tavt_uniranges
000000000087b660 0000000000000020 R af_taml_nonbase_uniranges
000000000087b680 0000000000000010 R af_taml_uniranges
000000000087b690 0000000000000018 R af_sund_nonbase_uniranges
000000000087b6b0 0000000000000018 R af_sund_uniranges
000000000087b6d0 0000000000000018 R af_sinh_nonbase_uniranges
000000000087b6f0 0000000000000010 R af_sinh_uniranges
000000000087b700 0000000000000008 R af_shaw_nonbase_uniranges
000000000087b710 0000000000000010 R af_shaw_uniranges
000000000087b720 0000000000000018 R af_saur_nonbase_uniranges
000000000087b740 0000000000000010 R af_saur_uniranges
000000000087b750 0000000000000008 R af_rohg_nonbase_uniranges
000000000087b760 0000000000000010 R af_rohg_uniranges
000000000087b770 0000000000000008 R af_osma_nonbase_uniranges
000000000087b780 0000000000000010 R af_osma_uniranges
000000000087b790 0000000000000008 R af_osge_nonbase_uniranges
000000000087b7a0 0000000000000010 R af_osge_uniranges
000000000087b7b0 0000000000000008 R af_orkh_nonbase_uniranges
000000000087b7c0 0000000000000010 R af_orkh_uniranges
000000000087b7d0 0000000000000008 R af_olck_nonbase_uniranges
000000000087b7e0 0000000000000010 R af_olck_uniranges
000000000087b7f0 0000000000000008 R af_none_nonbase_uniranges
000000000087b7f8 0000000000000008 R af_none_uniranges
000000000087b800 0000000000000018 R af_nkoo_nonbase_uniranges
000000000087b820 0000000000000010 R af_nkoo_uniranges
000000000087b830 0000000000000068 R af_mymr_nonbase_uniranges
000000000087b8a0 0000000000000020 R af_mymr_uniranges
000000000087b8c0 0000000000000018 R af_mong_nonbase_uniranges
000000000087b8e0 0000000000000018 R af_mong_uniranges
000000000087b8f8 0000000000000008 R af_medf_nonbase_uniranges
000000000087b900 0000000000000010 R af_medf_uniranges
000000000087b910 0000000000000028 R af_mlym_nonbase_uniranges
000000000087b940 0000000000000010 R af_mlym_uniranges
000000000087b950 0000000000000008 R af_lisu_nonbase_uniranges
000000000087b960 0000000000000010 R af_lisu_uniranges
000000000087b970 0000000000000008 R af_latp_nonbase_uniranges
000000000087b980 0000000000000070 R af_latp_uniranges
000000000087b9f0 0000000000000008 R af_latb_nonbase_uniranges
000000000087ba00 0000000000000020 R af_latb_uniranges
000000000087ba20 0000000000000088 R af_latn_nonbase_uniranges
000000000087bab0 0000000000000108 R af_latn_uniranges
000000000087bbc0 0000000000000020 R af_lao_nonbase_uniranges
000000000087bbe0 0000000000000010 R af_lao_uniranges
000000000087bbf0 0000000000000008 R af_khms_nonbase_uniranges
000000000087bc00 0000000000000010 R af_khms_uniranges
000000000087bc10 0000000000000028 R af_khmr_nonbase_uniranges
000000000087bc40 0000000000000010 R af_khmr_uniranges
000000000087bc50 0000000000000038 R af_knda_nonbase_uniranges
000000000087bc90 0000000000000010 R af_knda_uniranges
000000000087bca0 0000000000000010 R af_kali_nonbase_uniranges
000000000087bcb0 0000000000000010 R af_kali_uniranges
000000000087bcc0 0000000000000030 R af_hebr_nonbase_uniranges
000000000087bcf0 0000000000000018 R af_hebr_uniranges
000000000087bd10 0000000000000030 R af_guru_nonbase_uniranges
000000000087bd40 0000000000000010 R af_guru_uniranges
000000000087bd50 0000000000000038 R af_gujr_nonbase_uniranges
000000000087bd90 0000000000000010 R af_gujr_uniranges
000000000087bda0 0000000000000040 R af_grek_nonbase_uniranges
000000000087bde0 0000000000000018 R af_grek_uniranges
000000000087bdf8 0000000000000008 R af_goth_nonbase_uniranges
000000000087be00 0000000000000010 R af_goth_uniranges
000000000087be10 0000000000000010 R af_glag_nonbase_uniranges
000000000087be20 0000000000000018 R af_glag_uniranges
000000000087be38 0000000000000008 R af_geok_nonbase_uniranges
000000000087be40 0000000000000018 R af_geok_uniranges
000000000087be58 0000000000000008 R af_geor_nonbase_uniranges
000000000087be60 0000000000000018 R af_geor_uniranges
000000000087be80 0000000000000010 R af_ethi_nonbase_uniranges
000000000087be90 0000000000000028 R af_ethi_uniranges
000000000087beb8 0000000000000008 R af_dsrt_nonbase_uniranges
000000000087bec0 0000000000000010 R af_dsrt_uniranges
000000000087bed0 0000000000000048 R af_deva_nonbase_uniranges
000000000087bf20 0000000000000038 R af_deva_uniranges
000000000087bf60 0000000000000028 R af_cyrl_nonbase_uniranges
000000000087bf90 0000000000000030 R af_cyrl_uniranges
000000000087bfc0 0000000000000008 R af_cprt_nonbase_uniranges
000000000087bfd0 0000000000000010 R af_cprt_uniranges
000000000087bfe0 0000000000000010 R af_copt_nonbase_uniranges
000000000087bff0 0000000000000010 R af_copt_uniranges
000000000087c000 0000000000000008 R af_cher_nonbase_uniranges
000000000087c010 0000000000000018 R af_cher_uniranges
000000000087c028 0000000000000008 R af_cari_nonbase_uniranges
000000000087c030 0000000000000010 R af_cari_uniranges
000000000087c040 0000000000000008 R af_cans_nonbase_uniranges
000000000087c050 0000000000000018 R af_cans_uniranges
000000000087c070 0000000000000020 R af_cakm_nonbase_uniranges
000000000087c090 0000000000000010 R af_cakm_uniranges
000000000087c0a0 0000000000000010 R af_buhd_nonbase_uniranges
000000000087c0b0 0000000000000010 R af_buhd_uniranges
000000000087c0c0 0000000000000038 R af_beng_nonbase_uniranges
000000000087c100 0000000000000010 R af_beng_uniranges
000000000087c110 0000000000000010 R af_bamu_nonbase_uniranges
000000000087c120 0000000000000010 R af_bamu_uniranges
000000000087c130 0000000000000010 R af_avst_nonbase_uniranges
000000000087c140 0000000000000010 R af_avst_uniranges
000000000087c150 0000000000000010 R af_armn_nonbase_uniranges
000000000087c160 0000000000000018 R af_armn_uniranges
000000000087c180 00000000000000a0 R af_arab_nonbase_uniranges
000000000087c220 0000000000000038 R af_arab_uniranges
000000000087c260 0000000000000010 R af_adlm_nonbase_uniranges
000000000087c270 0000000000000010 R af_adlm_uniranges
000000000087c280 0000000000000014 R af_hani_dflt_style_class
000000000087c298 0000000000000014 R af_tibt_dflt_style_class
000000000087c2b0 0000000000000014 R af_sylo_dflt_style_class
000000000087c2c8 0000000000000014 R af_orya_dflt_style_class
000000000087c2e0 0000000000000014 R af_limb_dflt_style_class
000000000087c2f8 0000000000000014 R af_vaii_dflt_style_class
000000000087c310 0000000000000014 R af_thai_dflt_style_class
000000000087c328 0000000000000014 R af_tfng_dflt_style_class
000000000087c340 0000000000000014 R af_telu_dflt_style_class
000000000087c358 0000000000000014 R af_tavt_dflt_style_class
000000000087c370 0000000000000014 R af_taml_dflt_style_class
000000000087c388 0000000000000014 R af_sund_dflt_style_class
000000000087c3a0 0000000000000014 R af_sinh_dflt_style_class
000000000087c3b8 0000000000000014 R af_shaw_dflt_style_class
000000000087c3d0 0000000000000014 R af_saur_dflt_style_class
000000000087c3e8 0000000000000014 R af_rohg_dflt_style_class
000000000087c400 0000000000000014 R af_osma_dflt_style_class
000000000087c418 0000000000000014 R af_osge_dflt_style_class
000000000087c430 0000000000000014 R af_orkh_dflt_style_class
000000000087c448 0000000000000014 R af_olck_dflt_style_class
000000000087c460 0000000000000014 R af_none_dflt_style_class
000000000087c478 0000000000000014 R af_nkoo_dflt_style_class
000000000087c490 0000000000000014 R af_mymr_dflt_style_class
000000000087c4a8 0000000000000014 R af_mong_dflt_style_class
000000000087c4c0 0000000000000014 R af_medf_dflt_style_class
000000000087c4d8 0000000000000014 R af_mlym_dflt_style_class
000000000087c4f0 0000000000000014 R af_lisu_dflt_style_class
000000000087c508 0000000000000014 R af_latp_dflt_style_class
000000000087c520 0000000000000014 R af_latb_dflt_style_class
000000000087c538 0000000000000014 R af_latn_dflt_style_class
000000000087c550 0000000000000014 R af_latn_titl_style_class
000000000087c568 0000000000000014 R af_latn_sups_style_class
000000000087c580 0000000000000014 R af_latn_subs_style_class
000000000087c598 0000000000000014 R af_latn_smcp_style_class
000000000087c5b0 0000000000000014 R af_latn_sinf_style_class
000000000087c5c8 0000000000000014 R af_latn_pcap_style_class
000000000087c5e0 0000000000000014 R af_latn_ordn_style_class
000000000087c5f8 0000000000000014 R af_latn_c2sc_style_class
000000000087c610 0000000000000014 R af_latn_c2cp_style_class
000000000087c628 0000000000000014 R af_lao_dflt_style_class
000000000087c640 0000000000000014 R af_knda_dflt_style_class
000000000087c658 0000000000000014 R af_khms_dflt_style_class
000000000087c670 0000000000000014 R af_khmr_dflt_style_class
000000000087c688 0000000000000014 R af_kali_dflt_style_class
000000000087c6a0 0000000000000014 R af_hebr_dflt_style_class
000000000087c6b8 0000000000000014 R af_guru_dflt_style_class
000000000087c6d0 0000000000000014 R af_gujr_dflt_style_class
000000000087c6e8 0000000000000014 R af_grek_dflt_style_class
000000000087c700 0000000000000014 R af_grek_titl_style_class
000000000087c718 0000000000000014 R af_grek_sups_style_class
000000000087c730 0000000000000014 R af_grek_subs_style_class
000000000087c748 0000000000000014 R af_grek_smcp_style_class
000000000087c760 0000000000000014 R af_grek_sinf_style_class
000000000087c778 0000000000000014 R af_grek_pcap_style_class
000000000087c790 0000000000000014 R af_grek_ordn_style_class
000000000087c7a8 0000000000000014 R af_grek_c2sc_style_class
000000000087c7c0 0000000000000014 R af_grek_c2cp_style_class
000000000087c7d8 0000000000000014 R af_goth_dflt_style_class
000000000087c7f0 0000000000000014 R af_glag_dflt_style_class
000000000087c808 0000000000000014 R af_geok_dflt_style_class
000000000087c820 0000000000000014 R af_geor_dflt_style_class
000000000087c838 0000000000000014 R af_ethi_dflt_style_class
000000000087c850 0000000000000014 R af_dsrt_dflt_style_class
000000000087c868 0000000000000014 R af_deva_dflt_style_class
000000000087c880 0000000000000014 R af_cyrl_dflt_style_class
000000000087c898 0000000000000014 R af_cyrl_titl_style_class
000000000087c8b0 0000000000000014 R af_cyrl_sups_style_class
000000000087c8c8 0000000000000014 R af_cyrl_subs_style_class
000000000087c8e0 0000000000000014 R af_cyrl_smcp_style_class
000000000087c8f8 0000000000000014 R af_cyrl_sinf_style_class
000000000087c910 0000000000000014 R af_cyrl_pcap_style_class
000000000087c928 0000000000000014 R af_cyrl_ordn_style_class
000000000087c940 0000000000000014 R af_cyrl_c2sc_style_class
000000000087c958 0000000000000014 R af_cyrl_c2cp_style_class
000000000087c970 0000000000000014 R af_cprt_dflt_style_class
000000000087c988 0000000000000014 R af_copt_dflt_style_class
000000000087c9a0 0000000000000014 R af_cher_dflt_style_class
000000000087c9b8 0000000000000014 R af_cari_dflt_style_class
000000000087c9d0 0000000000000014 R af_cans_dflt_style_class
000000000087c9e8 0000000000000014 R af_cakm_dflt_style_class
000000000087ca00 0000000000000014 R af_buhd_dflt_style_class
000000000087ca18 0000000000000014 R af_beng_dflt_style_class
000000000087ca30 0000000000000014 R af_bamu_dflt_style_class
000000000087ca48 0000000000000014 R af_avst_dflt_style_class
000000000087ca60 0000000000000014 R af_armn_dflt_style_class
000000000087ca78 0000000000000014 R af_arab_dflt_style_class
000000000087ca90 0000000000000014 R af_adlm_dflt_style_class
000000000087cab0 0000000000000848 R af_blue_stringsets
000000000087d300 000000000000159b R af_blue_strings
000000000087e9c0 000000000000000c r readFromStack.0
000000000087e9d0 000000000000000c r readFromStack.1
000000000087e9e0 000000000000000c r readFromStack.2
000000000087e9f0 000000000000000c r readFromStack.3
000000000087ea00 0000000000000080 r ft_char_table
000000000087ea80 0000000000000028 r ft_extra_glyph_name_offsets
000000000087eab0 0000000000000055 r ft_extra_glyph_names
000000000087eb10 0000000000000028 r ft_extra_glyph_unicodes
000000000087eb40 000000000000dabd R ft_adobe_glyph_list
000000000088c600 0000000000000200 R t1_expert_encoding
000000000088c800 0000000000000200 R t1_standard_encoding
000000000088ca00 000000000000030e R ft_sid_names
000000000088cd10 0000000000000204 R ft_mac_names
000000000088cf20 0000000000000e70 R ft_standard_glyph_names
000000000088def8 0000000000000008 r terminator.0
000000000088df00 0000000000000001 R __aarch64_have_sme
000000000088e090 0000000000000014 r fpinan.0
000000000088e0a8 0000000000000014 r fpi.1
000000000088e0c0 0000000000000028 r tinytens
000000000088e0e8 0000000000000100 R __hexdig
000000000088e1f0 0000000000000048 r JIS_action_table
000000000088e240 0000000000000048 r JIS_state_table
000000000088e3c0 0000000000000010 r zeroes.0
000000000088e3d0 0000000000000010 r blanks.1
000000000088e4e0 0000000000000010 r zeroes.0
000000000088e4f0 0000000000000010 r blanks.1
000000000088e500 0000000000000101 R _ctype_
000000000088e710 0000000000000022 r basefix.0
000000000088e738 000000000000006c R __action_table
000000000088e7a8 000000000000006c R __state_table
000000000088e818 0000000000000100 R __chclass
000000000088e918 000000000000000c r p05.0
000000000088e928 0000000000000028 R __mprec_bigtens
000000000088e950 00000000000000c8 R __mprec_tens
000000000088eb10 0000000000000010 r zeroes.0
000000000088eb20 0000000000000010 r blanks.1
000000000088eb30 00000000000035dc r categories
0000000000892110 r __tls_align
00000000008921ac r __eh_frame_hdr_end
00000000008921ac r __eh_frame_hdr_start
00000000008921b0 r __EH_FRAME_BEGIN__
0000000000972c40 r __FRAME_END__
0000000000973000 d __frame_dummy_init_array_entry
0000000000973000 d __init_array_start
0000000000973000 d __preinit_array_end
0000000000973000 d __preinit_array_start
0000000000973000 d __relro_start
0000000000973050 d __do_global_dtors_aux_fini_array_entry
0000000000973050 d __fini_array_start
0000000000973050 d __init_array_end
0000000000973078 d __fini_array_end
0000000000973080 0000000000000070 d known.9876
00000000009730f0 0000000000000038 d SDL_priority_prefixes
0000000000973130 0000000000000200 d channel_converters
0000000000973330 00000000000000b0 d map_StringForControllerButton
00000000009733e0 0000000000000038 d map_StringForControllerAxis
0000000000973418 00000000000020b0 d arrControllers
00000000009754d0 0000000000000020 d getpixes
00000000009754f0 0000000000000028 d colorkey_blit
0000000000975520 0000000000000028 d bitmap_blit
0000000000975550 0000000000000028 d one_blitkey
0000000000975580 0000000000000028 d one_blit
00000000009755b0 0000000000000020 d normal_blit
00000000009755d0 00000000000001b0 d normal_blit_4
0000000000975780 0000000000000150 d normal_blit_3
00000000009758d0 0000000000000150 d normal_blit_2
0000000000975a20 0000000000000030 d normal_blit_1
0000000000975a50 0000000000000080 d egl_platforms
0000000000975ad0 0000000000000020 d level_strings
0000000000975af0 0000000000000048 d st_gl_api
0000000000975b38 00000000000000d8 D util_format_a16_float_description
0000000000975c10 00000000000000d8 D util_format_a16_sint_description
0000000000975ce8 00000000000000d8 D util_format_a16_snorm_description
0000000000975dc0 00000000000000d8 D util_format_a16_uint_description
0000000000975e98 00000000000000d8 D util_format_a16_unorm_description
0000000000975f70 00000000000000d8 D util_format_a1b5g5r5_uint_description
0000000000976048 00000000000000d8 D util_format_a1b5g5r5_unorm_description
0000000000976120 00000000000000d8 D util_format_a1r5g5b5_uint_description
00000000009761f8 00000000000000d8 D util_format_a1r5g5b5_unorm_description
00000000009762d0 00000000000000d8 D util_format_a2b10g10r10_uint_description
00000000009763a8 00000000000000d8 D util_format_a2b10g10r10_unorm_description
0000000000976480 00000000000000d8 D util_format_a2r10g10b10_uint_description
0000000000976558 00000000000000d8 D util_format_a2r10g10b10_unorm_description
0000000000976630 00000000000000d8 D util_format_a32_float_description
0000000000976708 00000000000000d8 D util_format_a32_sint_description
00000000009767e0 00000000000000d8 D util_format_a32_uint_description
00000000009768b8 00000000000000d8 D util_format_a4b4g4r4_uint_description
0000000000976990 00000000000000d8 D util_format_a4b4g4r4_unorm_description
0000000000976a68 00000000000000d8 D util_format_a4r4_unorm_description
0000000000976b40 00000000000000d8 D util_format_a4r4g4b4_uint_description
0000000000976c18 00000000000000d8 D util_format_a4r4g4b4_unorm_description
0000000000976cf0 00000000000000d8 D util_format_a8_sint_description
0000000000976dc8 00000000000000d8 D util_format_a8_snorm_description
0000000000976ea0 00000000000000d8 D util_format_a8_uint_description
0000000000976f78 00000000000000d8 D util_format_a8_unorm_description
0000000000977050 00000000000000d8 D util_format_a8b8g8r8_sint_description
0000000000977128 00000000000000d8 D util_format_a8b8g8r8_snorm_description
0000000000977200 00000000000000d8 D util_format_a8b8g8r8_srgb_description
00000000009772d8 00000000000000d8 D util_format_a8b8g8r8_sscaled_description
00000000009773b0 00000000000000d8 D util_format_a8b8g8r8_uint_description
0000000000977488 00000000000000d8 D util_format_a8b8g8r8_unorm_description
0000000000977560 00000000000000d8 D util_format_a8b8g8r8_uscaled_description
0000000000977638 00000000000000d8 D util_format_a8r8_unorm_description
0000000000977710 00000000000000d8 D util_format_a8r8g8b8_srgb_description
00000000009777e8 00000000000000d8 D util_format_a8r8g8b8_uint_description
00000000009778c0 00000000000000d8 D util_format_a8r8g8b8_unorm_description
0000000000977998 00000000000000d8 D util_format_astc_10x10_description
0000000000977a70 00000000000000d8 D util_format_astc_10x10_srgb_description
0000000000977b48 00000000000000d8 D util_format_astc_10x5_description
0000000000977c20 00000000000000d8 D util_format_astc_10x5_srgb_description
0000000000977cf8 00000000000000d8 D util_format_astc_10x6_description
0000000000977dd0 00000000000000d8 D util_format_astc_10x6_srgb_description
0000000000977ea8 00000000000000d8 D util_format_astc_10x8_description
0000000000977f80 00000000000000d8 D util_format_astc_10x8_srgb_description
0000000000978058 00000000000000d8 D util_format_astc_12x10_description
0000000000978130 00000000000000d8 D util_format_astc_12x10_srgb_description
0000000000978208 00000000000000d8 D util_format_astc_12x12_description
00000000009782e0 00000000000000d8 D util_format_astc_12x12_srgb_description
00000000009783b8 00000000000000d8 D util_format_astc_3x3x3_description
0000000000978490 00000000000000d8 D util_format_astc_3x3x3_srgb_description
0000000000978568 00000000000000d8 D util_format_astc_4x3x3_description
0000000000978640 00000000000000d8 D util_format_astc_4x3x3_srgb_description
0000000000978718 00000000000000d8 D util_format_astc_4x4_description
00000000009787f0 00000000000000d8 D util_format_astc_4x4_srgb_description
00000000009788c8 00000000000000d8 D util_format_astc_4x4x3_description
00000000009789a0 00000000000000d8 D util_format_astc_4x4x3_srgb_description
0000000000978a78 00000000000000d8 D util_format_astc_4x4x4_description
0000000000978b50 00000000000000d8 D util_format_astc_4x4x4_srgb_description
0000000000978c28 00000000000000d8 D util_format_astc_5x4_description
0000000000978d00 00000000000000d8 D util_format_astc_5x4_srgb_description
0000000000978dd8 00000000000000d8 D util_format_astc_5x4x4_description
0000000000978eb0 00000000000000d8 D util_format_astc_5x4x4_srgb_description
0000000000978f88 00000000000000d8 D util_format_astc_5x5_description
0000000000979060 00000000000000d8 D util_format_astc_5x5_srgb_description
0000000000979138 00000000000000d8 D util_format_astc_5x5x4_description
0000000000979210 00000000000000d8 D util_format_astc_5x5x4_srgb_description
00000000009792e8 00000000000000d8 D util_format_astc_5x5x5_description
00000000009793c0 00000000000000d8 D util_format_astc_5x5x5_srgb_description
0000000000979498 00000000000000d8 D util_format_astc_6x5_description
0000000000979570 00000000000000d8 D util_format_astc_6x5_srgb_description
0000000000979648 00000000000000d8 D util_format_astc_6x5x5_description
0000000000979720 00000000000000d8 D util_format_astc_6x5x5_srgb_description
00000000009797f8 00000000000000d8 D util_format_astc_6x6_description
00000000009798d0 00000000000000d8 D util_format_astc_6x6_srgb_description
00000000009799a8 00000000000000d8 D util_format_astc_6x6x5_description
0000000000979a80 00000000000000d8 D util_format_astc_6x6x5_srgb_description
0000000000979b58 00000000000000d8 D util_format_astc_6x6x6_description
0000000000979c30 00000000000000d8 D util_format_astc_6x6x6_srgb_description
0000000000979d08 00000000000000d8 D util_format_astc_8x5_description
0000000000979de0 00000000000000d8 D util_format_astc_8x5_srgb_description
0000000000979eb8 00000000000000d8 D util_format_astc_8x6_description
0000000000979f90 00000000000000d8 D util_format_astc_8x6_srgb_description
000000000097a068 00000000000000d8 D util_format_astc_8x8_description
000000000097a140 00000000000000d8 D util_format_astc_8x8_srgb_description
000000000097a218 00000000000000d8 D util_format_atc_rgb_description
000000000097a2f0 00000000000000d8 D util_format_atc_rgba_explicit_description
000000000097a3c8 00000000000000d8 D util_format_atc_rgba_interpolated_description
000000000097a4a0 00000000000000d8 D util_format_b10g10r10a2_sint_description
000000000097a578 00000000000000d8 D util_format_b10g10r10a2_snorm_description
000000000097a650 00000000000000d8 D util_format_b10g10r10a2_sscaled_description
000000000097a728 00000000000000d8 D util_format_b10g10r10a2_uint_description
000000000097a800 00000000000000d8 D util_format_b10g10r10a2_unorm_description
000000000097a8d8 00000000000000d8 D util_format_b10g10r10a2_uscaled_description
000000000097a9b0 00000000000000d8 D util_format_b10g10r10x2_unorm_description
000000000097aa88 00000000000000d8 D util_format_b2g3r3_uint_description
000000000097ab60 00000000000000d8 D util_format_b2g3r3_unorm_description
000000000097ac38 00000000000000d8 D util_format_b4g4r4a4_uint_description
000000000097ad10 00000000000000d8 D util_format_b4g4r4a4_unorm_description
000000000097ade8 00000000000000d8 D util_format_b4g4r4x4_unorm_description
000000000097aec0 00000000000000d8 D util_format_b5g5r5a1_uint_description
000000000097af98 00000000000000d8 D util_format_b5g5r5a1_unorm_description
000000000097b070 00000000000000d8 D util_format_b5g5r5x1_unorm_description
000000000097b148 00000000000000d8 D util_format_b5g6r5_srgb_description
000000000097b220 00000000000000d8 D util_format_b5g6r5_uint_description
000000000097b2f8 00000000000000d8 D util_format_b5g6r5_unorm_description
000000000097b3d0 00000000000000d8 D util_format_b8g8r8_sint_description
000000000097b4a8 00000000000000d8 D util_format_b8g8r8_snorm_description
000000000097b580 00000000000000d8 D util_format_b8g8r8_srgb_description
000000000097b658 00000000000000d8 D util_format_b8g8r8_sscaled_description
000000000097b730 00000000000000d8 D util_format_b8g8r8_uint_description
000000000097b808 00000000000000d8 D util_format_b8g8r8_unorm_description
000000000097b8e0 00000000000000d8 D util_format_b8g8r8_uscaled_description
000000000097b9b8 00000000000000d8 D util_format_b8g8r8a8_sint_description
000000000097ba90 00000000000000d8 D util_format_b8g8r8a8_snorm_description
000000000097bb68 00000000000000d8 D util_format_b8g8r8a8_srgb_description
000000000097bc40 00000000000000d8 D util_format_b8g8r8a8_sscaled_description
000000000097bd18 00000000000000d8 D util_format_b8g8r8a8_uint_description
000000000097bdf0 00000000000000d8 D util_format_b8g8r8a8_unorm_description
000000000097bec8 00000000000000d8 D util_format_b8g8r8a8_uscaled_description
000000000097bfa0 00000000000000d8 D util_format_b8g8r8x8_srgb_description
000000000097c078 00000000000000d8 D util_format_b8g8r8x8_unorm_description
000000000097c150 00000000000000d8 D util_format_etc2_r11_snorm_description
000000000097c228 00000000000000d8 D util_format_etc2_r11_unorm_description
000000000097c300 00000000000000d8 D util_format_etc2_rg11_snorm_description
000000000097c3d8 00000000000000d8 D util_format_etc2_rg11_unorm_description
000000000097c4b0 00000000000000d8 D util_format_etc2_rgb8_description
000000000097c588 00000000000000d8 D util_format_etc2_rgb8a1_description
000000000097c660 00000000000000d8 D util_format_etc2_rgba8_description
000000000097c738 00000000000000d8 D util_format_etc2_srgb8_description
000000000097c810 00000000000000d8 D util_format_etc2_srgb8a1_description
000000000097c8e8 00000000000000d8 D util_format_etc2_srgba8_description
000000000097c9c0 00000000000000d8 D util_format_fxt1_rgb_description
000000000097ca98 00000000000000d8 D util_format_fxt1_rgba_description
000000000097cb70 00000000000000d8 D util_format_g16r16_snorm_description
000000000097cc48 00000000000000d8 D util_format_g16r16_unorm_description
000000000097cd20 00000000000000d8 D util_format_g8r8_sint_description
000000000097cdf8 00000000000000d8 D util_format_g8r8_snorm_description
000000000097ced0 00000000000000d8 D util_format_g8r8_unorm_description
000000000097cfa8 00000000000000d8 D util_format_i16_float_description
000000000097d080 00000000000000d8 D util_format_i16_sint_description
000000000097d158 00000000000000d8 D util_format_i16_snorm_description
000000000097d230 00000000000000d8 D util_format_i16_uint_description
000000000097d308 00000000000000d8 D util_format_i16_unorm_description
000000000097d3e0 00000000000000d8 D util_format_i32_float_description
000000000097d4b8 00000000000000d8 D util_format_i32_sint_description
000000000097d590 00000000000000d8 D util_format_i32_uint_description
000000000097d668 00000000000000d8 D util_format_i8_sint_description
000000000097d740 00000000000000d8 D util_format_i8_snorm_description
000000000097d818 00000000000000d8 D util_format_i8_uint_description
000000000097d8f0 00000000000000d8 D util_format_i8_unorm_description
000000000097d9c8 00000000000000d8 D util_format_l16_float_description
000000000097daa0 00000000000000d8 D util_format_l16_sint_description
000000000097db78 00000000000000d8 D util_format_l16_snorm_description
000000000097dc50 00000000000000d8 D util_format_l16_uint_description
000000000097dd28 00000000000000d8 D util_format_l16_unorm_description
000000000097de00 00000000000000d8 D util_format_l16a16_float_description
000000000097ded8 00000000000000d8 D util_format_l16a16_sint_description
000000000097dfb0 00000000000000d8 D util_format_l16a16_snorm_description
000000000097e088 00000000000000d8 D util_format_l16a16_uint_description
000000000097e160 00000000000000d8 D util_format_l16a16_unorm_description
000000000097e238 00000000000000d8 D util_format_l32_float_description
000000000097e310 00000000000000d8 D util_format_l32_sint_description
000000000097e3e8 00000000000000d8 D util_format_l32_uint_description
000000000097e4c0 00000000000000d8 D util_format_l32a32_float_description
000000000097e598 00000000000000d8 D util_format_l32a32_sint_description
000000000097e670 00000000000000d8 D util_format_l32a32_uint_description
000000000097e748 00000000000000d8 D util_format_l4a4_unorm_description
000000000097e820 00000000000000d8 D util_format_l8_sint_description
000000000097e8f8 00000000000000d8 D util_format_l8_snorm_description
000000000097e9d0 00000000000000d8 D util_format_l8_srgb_description
000000000097eaa8 00000000000000d8 D util_format_l8_uint_description
000000000097eb80 00000000000000d8 D util_format_l8_unorm_description
000000000097ec58 00000000000000d8 D util_format_l8a8_sint_description
000000000097ed30 00000000000000d8 D util_format_l8a8_snorm_description
000000000097ee08 00000000000000d8 D util_format_l8a8_srgb_description
000000000097eee0 00000000000000d8 D util_format_l8a8_uint_description
000000000097efb8 00000000000000d8 D util_format_l8a8_unorm_description
000000000097f090 00000000000000d8 D util_format_none_description
000000000097f168 00000000000000d8 D util_format_r10g10b10a2_sint_description
000000000097f240 00000000000000d8 D util_format_r10g10b10a2_snorm_description
000000000097f318 00000000000000d8 D util_format_r10g10b10a2_sscaled_description
000000000097f3f0 00000000000000d8 D util_format_r10g10b10a2_uint_description
000000000097f4c8 00000000000000d8 D util_format_r10g10b10a2_unorm_description
000000000097f5a0 00000000000000d8 D util_format_r10g10b10a2_uscaled_description
000000000097f678 00000000000000d8 D util_format_r10g10b10x2_snorm_description
000000000097f750 00000000000000d8 D util_format_r10g10b10x2_unorm_description
000000000097f828 00000000000000d8 D util_format_r10g10b10x2_uscaled_description
000000000097f900 00000000000000d8 D util_format_r10sg10sb10sa2u_norm_description
000000000097f9d8 00000000000000d8 D util_format_r16_float_description
000000000097fab0 00000000000000d8 D util_format_r16_sint_description
000000000097fb88 00000000000000d8 D util_format_r16_snorm_description
000000000097fc60 00000000000000d8 D util_format_r16_sscaled_description
000000000097fd38 00000000000000d8 D util_format_r16_uint_description
000000000097fe10 00000000000000d8 D util_format_r16_unorm_description
000000000097fee8 00000000000000d8 D util_format_r16_uscaled_description
000000000097ffc0 00000000000000d8 D util_format_r16a16_float_description
0000000000980098 00000000000000d8 D util_format_r16a16_sint_description
0000000000980170 00000000000000d8 D util_format_r16a16_snorm_description
0000000000980248 00000000000000d8 D util_format_r16a16_uint_description
0000000000980320 00000000000000d8 D util_format_r16a16_unorm_description
00000000009803f8 00000000000000d8 D util_format_r16g16_float_description
00000000009804d0 00000000000000d8 D util_format_r16g16_sint_description
00000000009805a8 00000000000000d8 D util_format_r16g16_snorm_description
0000000000980680 00000000000000d8 D util_format_r16g16_sscaled_description
0000000000980758 00000000000000d8 D util_format_r16g16_uint_description
0000000000980830 00000000000000d8 D util_format_r16g16_unorm_description
0000000000980908 00000000000000d8 D util_format_r16g16_uscaled_description
00000000009809e0 00000000000000d8 D util_format_r16g16b16_float_description
0000000000980ab8 00000000000000d8 D util_format_r16g16b16_sint_description
0000000000980b90 00000000000000d8 D util_format_r16g16b16_snorm_description
0000000000980c68 00000000000000d8 D util_format_r16g16b16_sscaled_description
0000000000980d40 00000000000000d8 D util_format_r16g16b16_uint_description
0000000000980e18 00000000000000d8 D util_format_r16g16b16_unorm_description
0000000000980ef0 00000000000000d8 D util_format_r16g16b16_uscaled_description
0000000000980fc8 00000000000000d8 D util_format_r16g16b16a16_float_description
00000000009810a0 00000000000000d8 D util_format_r16g16b16a16_sint_description
0000000000981178 00000000000000d8 D util_format_r16g16b16a16_snorm_description
0000000000981250 00000000000000d8 D util_format_r16g16b16a16_sscaled_description
0000000000981328 00000000000000d8 D util_format_r16g16b16a16_uint_description
0000000000981400 00000000000000d8 D util_format_r16g16b16a16_unorm_description
00000000009814d8 00000000000000d8 D util_format_r16g16b16a16_uscaled_description
00000000009815b0 00000000000000d8 D util_format_r16g16b16x16_float_description
0000000000981688 00000000000000d8 D util_format_r16g16b16x16_sint_description
0000000000981760 00000000000000d8 D util_format_r16g16b16x16_snorm_description
0000000000981838 00000000000000d8 D util_format_r16g16b16x16_uint_description
0000000000981910 00000000000000d8 D util_format_r16g16b16x16_unorm_description
00000000009819e8 00000000000000d8 D util_format_r32_fixed_description
0000000000981ac0 00000000000000d8 D util_format_r32_float_description
0000000000981b98 00000000000000d8 D util_format_r32_sint_description
0000000000981c70 00000000000000d8 D util_format_r32_snorm_description
0000000000981d48 00000000000000d8 D util_format_r32_sscaled_description
0000000000981e20 00000000000000d8 D util_format_r32_uint_description
0000000000981ef8 00000000000000d8 D util_format_r32_unorm_description
0000000000981fd0 00000000000000d8 D util_format_r32_uscaled_description
00000000009820a8 00000000000000d8 D util_format_r32a32_float_description
0000000000982180 00000000000000d8 D util_format_r32a32_sint_description
0000000000982258 00000000000000d8 D util_format_r32a32_uint_description
0000000000982330 00000000000000d8 D util_format_r32g32_fixed_description
0000000000982408 00000000000000d8 D util_format_r32g32_float_description
00000000009824e0 00000000000000d8 D util_format_r32g32_sint_description
00000000009825b8 00000000000000d8 D util_format_r32g32_snorm_description
0000000000982690 00000000000000d8 D util_format_r32g32_sscaled_description
0000000000982768 00000000000000d8 D util_format_r32g32_uint_description
0000000000982840 00000000000000d8 D util_format_r32g32_unorm_description
0000000000982918 00000000000000d8 D util_format_r32g32_uscaled_description
00000000009829f0 00000000000000d8 D util_format_r32g32b32_fixed_description
0000000000982ac8 00000000000000d8 D util_format_r32g32b32_float_description
0000000000982ba0 00000000000000d8 D util_format_r32g32b32_sint_description
0000000000982c78 00000000000000d8 D util_format_r32g32b32_snorm_description
0000000000982d50 00000000000000d8 D util_format_r32g32b32_sscaled_description
0000000000982e28 00000000000000d8 D util_format_r32g32b32_uint_description
0000000000982f00 00000000000000d8 D util_format_r32g32b32_unorm_description
0000000000982fd8 00000000000000d8 D util_format_r32g32b32_uscaled_description
00000000009830b0 00000000000000d8 D util_format_r32g32b32a32_fixed_description
0000000000983188 00000000000000d8 D util_format_r32g32b32a32_float_description
0000000000983260 00000000000000d8 D util_format_r32g32b32a32_sint_description
0000000000983338 00000000000000d8 D util_format_r32g32b32a32_snorm_description
0000000000983410 00000000000000d8 D util_format_r32g32b32a32_sscaled_description
00000000009834e8 00000000000000d8 D util_format_r32g32b32a32_uint_description
00000000009835c0 00000000000000d8 D util_format_r32g32b32a32_unorm_description
0000000000983698 00000000000000d8 D util_format_r32g32b32a32_uscaled_description
0000000000983770 00000000000000d8 D util_format_r32g32b32x32_float_description
0000000000983848 00000000000000d8 D util_format_r32g32b32x32_sint_description
0000000000983920 00000000000000d8 D util_format_r32g32b32x32_uint_description
00000000009839f8 00000000000000d8 D util_format_r3g3b2_uint_description
0000000000983ad0 00000000000000d8 D util_format_r3g3b2_unorm_description
0000000000983ba8 00000000000000d8 D util_format_r4a4_unorm_description
0000000000983c80 00000000000000d8 D util_format_r4g4b4a4_uint_description
0000000000983d58 00000000000000d8 D util_format_r4g4b4a4_unorm_description
0000000000983e30 00000000000000d8 D util_format_r5g5b5a1_uint_description
0000000000983f08 00000000000000d8 D util_format_r5g5b5a1_unorm_description
0000000000983fe0 00000000000000d8 D util_format_r5g6b5_uint_description
00000000009840b8 00000000000000d8 D util_format_r5g6b5_unorm_description
0000000000984190 00000000000000d8 D util_format_r5sg5sb6u_norm_description
0000000000984268 00000000000000d8 D util_format_r64_float_description
0000000000984340 00000000000000d8 D util_format_r64g64_float_description
0000000000984418 00000000000000d8 D util_format_r64g64b64_float_description
00000000009844f0 00000000000000d8 D util_format_r64g64b64a64_float_description
00000000009845c8 00000000000000d8 D util_format_r8_sint_description
00000000009846a0 00000000000000d8 D util_format_r8_snorm_description
0000000000984778 00000000000000d8 D util_format_r8_srgb_description
0000000000984850 00000000000000d8 D util_format_r8_sscaled_description
0000000000984928 00000000000000d8 D util_format_r8_uint_description
0000000000984a00 00000000000000d8 D util_format_r8_unorm_description
0000000000984ad8 00000000000000d8 D util_format_r8_uscaled_description
0000000000984bb0 00000000000000d8 D util_format_r8a8_sint_description
0000000000984c88 00000000000000d8 D util_format_r8a8_snorm_description
0000000000984d60 00000000000000d8 D util_format_r8a8_uint_description
0000000000984e38 00000000000000d8 D util_format_r8a8_unorm_description
0000000000984f10 00000000000000d8 D util_format_r8g8_sint_description
0000000000984fe8 00000000000000d8 D util_format_r8g8_snorm_description
00000000009850c0 00000000000000d8 D util_format_r8g8_srgb_description
0000000000985198 00000000000000d8 D util_format_r8g8_sscaled_description
0000000000985270 00000000000000d8 D util_format_r8g8_uint_description
0000000000985348 00000000000000d8 D util_format_r8g8_unorm_description
0000000000985420 00000000000000d8 D util_format_r8g8_uscaled_description
00000000009854f8 00000000000000d8 D util_format_r8g8b8_sint_description
00000000009855d0 00000000000000d8 D util_format_r8g8b8_snorm_description
00000000009856a8 00000000000000d8 D util_format_r8g8b8_srgb_description
0000000000985780 00000000000000d8 D util_format_r8g8b8_sscaled_description
0000000000985858 00000000000000d8 D util_format_r8g8b8_uint_description
0000000000985930 00000000000000d8 D util_format_r8g8b8_unorm_description
0000000000985a08 00000000000000d8 D util_format_r8g8b8_uscaled_description
0000000000985ae0 00000000000000d8 D util_format_r8g8b8a8_sint_description
0000000000985bb8 00000000000000d8 D util_format_r8g8b8a8_snorm_description
0000000000985c90 00000000000000d8 D util_format_r8g8b8a8_srgb_description
0000000000985d68 00000000000000d8 D util_format_r8g8b8a8_sscaled_description
0000000000985e40 00000000000000d8 D util_format_r8g8b8a8_uint_description
0000000000985f18 00000000000000d8 D util_format_r8g8b8a8_unorm_description
0000000000985ff0 00000000000000d8 D util_format_r8g8b8a8_uscaled_description
00000000009860c8 00000000000000d8 D util_format_r8g8b8x8_sint_description
00000000009861a0 00000000000000d8 D util_format_r8g8b8x8_snorm_description
0000000000986278 00000000000000d8 D util_format_r8g8b8x8_srgb_description
0000000000986350 00000000000000d8 D util_format_r8g8b8x8_uint_description
0000000000986428 00000000000000d8 D util_format_r8g8b8x8_unorm_description
0000000000986500 00000000000000d8 D util_format_r8sg8sb8ux8u_norm_description
00000000009865d8 00000000000000d8 D util_format_x1b5g5r5_unorm_description
00000000009866b0 00000000000000d8 D util_format_x8b8g8r8_sint_description
0000000000986788 00000000000000d8 D util_format_x8b8g8r8_snorm_description
0000000000986860 00000000000000d8 D util_format_x8b8g8r8_srgb_description
0000000000986938 00000000000000d8 D util_format_x8b8g8r8_unorm_description
0000000000986a10 00000000000000d8 D util_format_x8r8g8b8_srgb_description
0000000000986ae8 00000000000000d8 D util_format_x8r8g8b8_unorm_description
0000000000986bc0 00000000000000d8 D util_format_z24_unorm_s8_uint_as_r8g8b8a8_description
0000000000986c98 0000000000002ac0 D _mesa_extension_table
0000000000989758 0000000000005240 d format_info
000000000098e998 0000000000000028 d weights.3
000000000098e9c0 0000000000000040 d decode_1.0
000000000098ea00 0000000000000038 d inv_mat_tab
000000000098ea38 0000000000000020 d vert_attrfunc
000000000098ea58 0000000000000088 d prim_names
000000000098eae0 0000000000000180 d st_debug_flags
000000000098ec60 0000000000001220 d _mesa_glsl_supported_extensions
000000000098fe80 0000000000000060 d tex_opcode_strs
000000000098fee0 00000000000004c8 D ir_expression_operation_strings
00000000009903a8 0000000000000140 V vtable for ir_hierarchical_visitor
00000000009904e8 00000000000000d0 V vtable for ir_print_visitor
00000000009905b8 0000000000000048 V vtable for parcel_out_uniform_storage
0000000000990600 0000000000000038 d vtable for (anonymous namespace)::count_uniform_size
0000000000990638 00000000000000d0 d vtable for (anonymous namespace)::ir_lower_jumps_visitor
0000000000990708 0000000000000890 d yytname
0000000000990f98 0000000000000018 d _mesa_glsl_parse(_mesa_glsl_parse_state*)::local_size_qualifiers
0000000000990fb0 0000000000000070 d _mesa_glsl_parse(_mesa_glsl_parse_state*)::map
0000000000991020 0000000000000580 d _mesa_glsl_parse(_mesa_glsl_parse_state*)::map
00000000009915a0 0000000000000030 d _mesa_glsl_parse(_mesa_glsl_parse_state*)::map
00000000009915d0 0000000000000100 d _mesa_glsl_parse(_mesa_glsl_parse_state*)::map
00000000009916d0 00000000000002b8 d yytname
0000000000991988 0000000000000008 D glsl_type::bvec2_type
0000000000991990 0000000000000008 D glsl_type::bvec3_type
0000000000991998 0000000000000008 D glsl_type::bvec4_type
00000000009919a0 0000000000000008 D glsl_type::dmat2_type
00000000009919a8 0000000000000008 D glsl_type::dmat3_type
00000000009919b0 0000000000000008 D glsl_type::dmat4_type
00000000009919b8 0000000000000008 D glsl_type::dvec2_type
00000000009919c0 0000000000000008 D glsl_type::dvec3_type
00000000009919c8 0000000000000008 D glsl_type::dvec4_type
00000000009919d0 0000000000000008 D glsl_type::error_type
00000000009919d8 0000000000000008 D glsl_type::float_type
00000000009919e0 0000000000000008 D glsl_type::ivec2_type
00000000009919e8 0000000000000008 D glsl_type::ivec3_type
00000000009919f0 0000000000000008 D glsl_type::ivec4_type
00000000009919f8 0000000000000008 D glsl_type::uvec2_type
0000000000991a00 0000000000000008 D glsl_type::uvec3_type
0000000000991a08 0000000000000008 D glsl_type::uvec4_type
0000000000991a10 0000000000000008 D glsl_type::double_type
0000000000991a18 0000000000000008 D glsl_type::mat2x3_type
0000000000991a20 0000000000000008 D glsl_type::mat2x4_type
0000000000991a28 0000000000000008 D glsl_type::mat3x2_type
0000000000991a30 0000000000000008 D glsl_type::mat3x4_type
0000000000991a38 0000000000000008 D glsl_type::mat4x2_type
0000000000991a40 0000000000000008 D glsl_type::mat4x3_type
0000000000991a48 0000000000000008 D glsl_type::dmat2x3_type
0000000000991a50 0000000000000008 D glsl_type::dmat2x4_type
0000000000991a58 0000000000000008 D glsl_type::dmat3x2_type
0000000000991a60 0000000000000008 D glsl_type::dmat3x4_type
0000000000991a68 0000000000000008 D glsl_type::dmat4x2_type
0000000000991a70 0000000000000008 D glsl_type::dmat4x3_type
0000000000991a78 0000000000000008 D glsl_type::i64vec2_type
0000000000991a80 0000000000000008 D glsl_type::i64vec3_type
0000000000991a88 0000000000000008 D glsl_type::i64vec4_type
0000000000991a90 0000000000000008 D glsl_type::image1D_type
0000000000991a98 0000000000000008 D glsl_type::image2D_type
0000000000991aa0 0000000000000008 D glsl_type::image3D_type
0000000000991aa8 0000000000000008 D glsl_type::int64_t_type
0000000000991ab0 0000000000000008 D glsl_type::u64vec2_type
0000000000991ab8 0000000000000008 D glsl_type::u64vec3_type
0000000000991ac0 0000000000000008 D glsl_type::u64vec4_type
0000000000991ac8 0000000000000008 D glsl_type::iimage1D_type
0000000000991ad0 0000000000000008 D glsl_type::iimage2D_type
0000000000991ad8 0000000000000008 D glsl_type::iimage3D_type
0000000000991ae0 0000000000000008 D glsl_type::uimage1D_type
0000000000991ae8 0000000000000008 D glsl_type::uimage2D_type
0000000000991af0 0000000000000008 D glsl_type::uimage3D_type
0000000000991af8 0000000000000008 D glsl_type::uint64_t_type
0000000000991b00 0000000000000008 D glsl_type::image2DMS_type
0000000000991b08 0000000000000008 D glsl_type::imageCube_type
0000000000991b10 0000000000000008 D glsl_type::sampler1D_type
0000000000991b18 0000000000000008 D glsl_type::sampler2D_type
0000000000991b20 0000000000000008 D glsl_type::sampler3D_type
0000000000991b28 0000000000000008 D glsl_type::iimage2DMS_type
0000000000991b30 0000000000000008 D glsl_type::iimageCube_type
0000000000991b38 0000000000000008 D glsl_type::isampler1D_type
0000000000991b40 0000000000000008 D glsl_type::isampler2D_type
0000000000991b48 0000000000000008 D glsl_type::isampler3D_type
0000000000991b50 0000000000000008 D glsl_type::uimage2DMS_type
0000000000991b58 0000000000000008 D glsl_type::uimageCube_type
0000000000991b60 0000000000000008 D glsl_type::usampler1D_type
0000000000991b68 0000000000000008 D glsl_type::usampler2D_type
0000000000991b70 0000000000000008 D glsl_type::usampler3D_type
0000000000991b78 0000000000000008 D glsl_type::atomic_uint_type
0000000000991b80 0000000000000008 D glsl_type::image2DRect_type
0000000000991b88 0000000000000008 D glsl_type::imageBuffer_type
0000000000991b90 0000000000000008 D glsl_type::sampler2DMS_type
0000000000991b98 0000000000000008 D glsl_type::samplerCube_type
0000000000991ba0 0000000000000008 D glsl_type::iimage2DRect_type
0000000000991ba8 0000000000000008 D glsl_type::iimageBuffer_type
0000000000991bb0 0000000000000008 D glsl_type::image1DArray_type
0000000000991bb8 0000000000000008 D glsl_type::image2DArray_type
0000000000991bc0 0000000000000008 D glsl_type::isampler2DMS_type
0000000000991bc8 0000000000000008 D glsl_type::isamplerCube_type
0000000000991bd0 0000000000000008 D glsl_type::uimage2DRect_type
0000000000991bd8 0000000000000008 D glsl_type::uimageBuffer_type
0000000000991be0 0000000000000008 D glsl_type::usampler2DMS_type
0000000000991be8 0000000000000008 D glsl_type::usamplerCube_type
0000000000991bf0 0000000000000008 D glsl_type::iimage1DArray_type
0000000000991bf8 0000000000000008 D glsl_type::iimage2DArray_type
0000000000991c00 0000000000000008 D glsl_type::sampler2DRect_type
0000000000991c08 0000000000000008 D glsl_type::samplerBuffer_type
0000000000991c10 0000000000000008 D glsl_type::uimage1DArray_type
0000000000991c18 0000000000000008 D glsl_type::uimage2DArray_type
0000000000991c20 0000000000000008 D glsl_type::image2DMSArray_type
0000000000991c28 0000000000000008 D glsl_type::imageCubeArray_type
0000000000991c30 0000000000000008 D glsl_type::isampler2DRect_type
0000000000991c38 0000000000000008 D glsl_type::isamplerBuffer_type
0000000000991c40 0000000000000008 D glsl_type::sampler1DArray_type
0000000000991c48 0000000000000008 D glsl_type::sampler2DArray_type
0000000000991c50 0000000000000008 D glsl_type::usampler2DRect_type
0000000000991c58 0000000000000008 D glsl_type::usamplerBuffer_type
0000000000991c60 0000000000000008 D glsl_type::iimage2DMSArray_type
0000000000991c68 0000000000000008 D glsl_type::iimageCubeArray_type
0000000000991c70 0000000000000008 D glsl_type::isampler1DArray_type
0000000000991c78 0000000000000008 D glsl_type::isampler2DArray_type
0000000000991c80 0000000000000008 D glsl_type::sampler1DShadow_type
0000000000991c88 0000000000000008 D glsl_type::sampler2DShadow_type
0000000000991c90 0000000000000008 D glsl_type::uimage2DMSArray_type
0000000000991c98 0000000000000008 D glsl_type::uimageCubeArray_type
0000000000991ca0 0000000000000008 D glsl_type::usampler1DArray_type
0000000000991ca8 0000000000000008 D glsl_type::usampler2DArray_type
0000000000991cb0 0000000000000008 D glsl_type::sampler2DMSArray_type
0000000000991cb8 0000000000000008 D glsl_type::samplerCubeArray_type
0000000000991cc0 0000000000000008 D glsl_type::isampler2DMSArray_type
0000000000991cc8 0000000000000008 D glsl_type::isamplerCubeArray_type
0000000000991cd0 0000000000000008 D glsl_type::samplerCubeShadow_type
0000000000991cd8 0000000000000008 D glsl_type::usampler2DMSArray_type
0000000000991ce0 0000000000000008 D glsl_type::usamplerCubeArray_type
0000000000991ce8 0000000000000008 D glsl_type::samplerExternalOES_type
0000000000991cf0 0000000000000008 D glsl_type::sampler2DRectShadow_type
0000000000991cf8 0000000000000008 D glsl_type::sampler1DArrayShadow_type
0000000000991d00 0000000000000008 D glsl_type::sampler2DArrayShadow_type
0000000000991d08 0000000000000008 D glsl_type::samplerCubeArrayShadow_type
0000000000991d10 0000000000000008 D glsl_type::int_type
0000000000991d18 0000000000000008 D glsl_type::bool_type
0000000000991d20 0000000000000008 D glsl_type::mat2_type
0000000000991d28 0000000000000008 D glsl_type::mat3_type
0000000000991d30 0000000000000008 D glsl_type::mat4_type
0000000000991d38 0000000000000008 D glsl_type::uint_type
0000000000991d40 0000000000000008 D glsl_type::vec2_type
0000000000991d48 0000000000000008 D glsl_type::vec3_type
0000000000991d50 0000000000000008 D glsl_type::vec4_type
0000000000991d58 0000000000000008 D glsl_type::void_type
0000000000991d60 00000000000007e0 d opcode_names
0000000000992540 0000000000000078 d tgsi_file_names
00000000009925b8 0000000000000168 d names.0
0000000000992720 0000000000000028 d hw_query_funcs
0000000000992748 0000000000000020 d hw_metric_query_funcs
0000000000992768 0000000000000180 d nvc0_hw_metric_queries
00000000009928e8 0000000000000020 d hw_sm_query_funcs
0000000000992908 0000000000000648 d nvc0_hw_sm_queries
0000000000992f50 0000000000000028 d weights.3
0000000000992f78 0000000000000200 d fragAttribs.7
0000000000993178 0000000000000060 d fragResults.1
00000000009931d8 0000000000000100 d vertAttribs.8
00000000009932d8 0000000000000200 d vertResults.2
00000000009934d8 0000000000000400 d AttribFuncsARB
00000000009938d8 0000000000000200 d AttribFuncsNV
0000000000993ad8 0000000000000038 d table_set
0000000000993b10 0000000000003d38 d values
0000000000997848 0000000000000120 d inst_desc
0000000000997968 00000000000000d0 V vtable for glsl_to_tgsi_visitor
0000000000997a38 0000000000000140 d ast_expression::operator_string(ast_operators)::operators
0000000000997b78 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000997b98 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000997bd8 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000997c18 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000997c58 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000997c78 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000997c98 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000997cd8 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000997cf8 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000997d18 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000997d58 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000997d98 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000997dd8 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000997df8 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000997e18 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000997e58 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000997e78 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000997eb8 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000997ef8 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000997f38 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000997f58 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000997f78 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000997fb8 0000000000000020 d ast_declarator_list::hir(exec_list*, _mesa_glsl_parse_state*)::precision_names
0000000000997fd8 0000000000000038 d deprecated_types
0000000000998010 0000000000000078 d gl_Fog_elements
0000000000998088 00000000000000a8 d gl_Point_elements
0000000000998130 0000000000000048 d gl_DepthRange_elements
0000000000998178 0000000000000018 d gl_LightModel_elements
0000000000998190 0000000000000120 d gl_LightSource_elements
00000000009982b0 0000000000000078 d gl_BackMaterial_elements
0000000000998328 0000000000000078 d gl_FrontMaterial_elements
00000000009983a0 0000000000000420 d _mesa_builtin_uniform_desc
00000000009987c0 0000000000000048 d gl_BackLightProduct_elements
0000000000998808 0000000000000048 d gl_FrontLightProduct_elements
0000000000998850 0000000000000018 d gl_BackLightModelProduct_elements
0000000000998868 0000000000000018 d gl_FrontLightModelProduct_elements
0000000000998880 0000000000000028 V vtable for nv50_ir::Instruction
00000000009988a8 0000000000000028 V vtable for nv50_ir::TexInstruction
00000000009988d0 0000000000000028 V vtable for nv50_ir::CmpInstruction
00000000009988f8 0000000000000028 V vtable for nv50_ir::FlowInstruction
0000000000998920 0000000000000020 V vtable for nv50_ir::DeepClonePolicy<nv50_ir::Function>
0000000000998940 0000000000000028 d vtable for (anonymous namespace)::Converter::BindArgumentsPass
0000000000998968 0000000000000020 V vtable for nv50_ir::Graph
0000000000998988 0000000000000040 V vtable for nv50_ir::DFSIterator
00000000009989c8 0000000000000040 V vtable for nv50_ir::CFGIterator
0000000000998a08 0000000000000028 V vtable for nv50_ir::CopyPropagation
0000000000998a30 0000000000000028 V vtable for nv50_ir::MergeSplits
0000000000998a58 0000000000000028 V vtable for nv50_ir::LoadPropagation
0000000000998a80 0000000000000028 V vtable for nv50_ir::IndirectPropagation
0000000000998aa8 0000000000000028 V vtable for nv50_ir::ConstantFolding
0000000000998ad0 0000000000000028 V vtable for nv50_ir::ModifierFolding
0000000000998af8 0000000000000028 V vtable for nv50_ir::AlgebraicOpt
0000000000998b20 0000000000000028 V vtable for nv50_ir::LateAlgebraicOpt
0000000000998b48 0000000000000028 V vtable for nv50_ir::Split64BitOpPreRA
0000000000998b70 0000000000000028 V vtable for nv50_ir::MemoryOpt
0000000000998b98 0000000000000028 V vtable for nv50_ir::FlatteningPass
0000000000998bc0 0000000000000028 V vtable for nv50_ir::PostRaLoadPropagation
0000000000998be8 0000000000000028 V vtable for nv50_ir::GlobalCSE
0000000000998c10 0000000000000028 V vtable for nv50_ir::LocalCSE
0000000000998c38 0000000000000028 V vtable for nv50_ir::DeadCodeElim
0000000000998c60 0000000000000020 V vtable for nv50_ir::ShallowClonePolicy<nv50_ir::Function>
0000000000998c80 0000000000000030 d nv50_ir::pixldOpStr
0000000000998cb0 0000000000000010 d nv50_ir::subfmOpStr
0000000000998cc0 0000000000000080 d nv50_ir::texMaskStr
0000000000998d40 00000000000000c0 d nv50_ir::CondCodeStr
0000000000998e00 0000000000000070 d nv50_ir::DataTypeStr
0000000000998e70 0000000000000170 d nv50_ir::SemanticStr
0000000000998fe0 0000000000000010 d nv50_ir::rcprsqOpStr
0000000000998ff0 0000000000000040 d nv50_ir::RoundModeStr
0000000000999030 0000000000000050 d nv50_ir::atomSubOpStr
0000000000999080 0000000000000018 d nv50_ir::ldstSubOpStr
0000000000999098 0000000000000020 d nv50_ir::gatherCompStr
00000000009990b8 0000000000000020 d nv50_ir::xmadOpCModeStr
00000000009990d8 0000000000000028 d nv50_ir::barOpStr
0000000000999100 0000000000000038 d nv50_ir::cctlOpStr
0000000000999138 0000000000000010 d nv50_ir::emitOpStr
0000000000999148 0000000000000080 d nv50_ir::interpStr
00000000009991c8 0000000000000020 d nv50_ir::shflOpStr
00000000009991e8 0000000000000028 V vtable for nv50_ir::RegAlloc::PhiMovesPass
0000000000999210 0000000000000028 V vtable for nv50_ir::RegAlloc::ArgumentMovesPass
0000000000999238 0000000000000028 V vtable for nv50_ir::RegAlloc::BuildIntervalsPass
0000000000999260 0000000000000028 V vtable for nv50_ir::RegAlloc::InsertConstraintsPass
0000000000999288 0000000000000020 V vtable for nv50_ir::DominatorTree
00000000009992a8 0000000000000050 V vtable for nv50_ir::DLList::Iterator
00000000009992f8 00000000000005a0 d InstInfo
0000000000999898 00000000000007e8 d yytname
000000000099a080 0000000000000078 d file_names
000000000099a0f8 0000000000000028 V vtable for nv50_ir::SchedDataCalculatorGM107
000000000099a120 0000000000000028 V vtable for nv50_ir::NVC0LegalizeSSA
000000000099a148 0000000000000028 V vtable for nv50_ir::NVC0LegalizePostRA
000000000099a170 0000000000000030 V vtable for nv50_ir::NVC0LoweringPass
000000000099a1a0 0000000000003a50 D table_noop_array
000000000099dbf0 0000000000003250 d public_entries
00000000009a0e40 0000000000000100 d romFS_devoptab
00000000009a0f40 0000000000000100 d fsdev_devoptab
00000000009a1040 00000000000000a0 d configuration_table
00000000009a10e0 0000000000000020 d static_l_desc
00000000009a1100 0000000000000020 d static_d_desc
00000000009a1120 0000000000000020 d static_bl_desc
00000000009a1140 0000000000000050 D z_errmsg
00000000009a1190 0000000000000200 d gpMixFunctionTable
00000000009a1390 0000000000000200 d gpFastMixFunctionTable
00000000009a1590 0000000000000028 d mustype
00000000009a15b8 0000000000000078 d sig
00000000009a1630 0000000000000080 d keySigs
00000000009a16b0 0000000000000018 d pat_fun
00000000009a16d0 0000000000000168 d mpg123_error
00000000009a1840 0000000000000020 d text_converters
00000000009a1860 00000000000000a8 d decname
00000000009a1910 00000000000000d8 d mapend
00000000009a19f0 00000000000000d8 d map
00000000009a1ac8 0000000000000020 d htc
00000000009a1ae8 0000000000000200 d ht
00000000009a1ce8 0000000000000048 d fft_state48000_960_0
00000000009a1d30 0000000000000048 d fft_state48000_960_1
00000000009a1d78 0000000000000048 d fft_state48000_960_2
00000000009a1dc0 0000000000000048 d fft_state48000_960_3
00000000009a1e08 00000000000000a0 d mode48000_960_120
00000000009a1ea8 0000000000000010 D silk_LBRR_flags_iCDF_ptr
00000000009a1eb8 0000000000000078 d CELT_PVQ_U_ROW
00000000009a1f30 0000000000000018 D silk_LTP_gain_iCDF_ptrs
00000000009a1f48 0000000000000018 D silk_LTP_vq_ptrs_Q7
00000000009a1f60 0000000000000048 D silk_NLSF_CB_NB_MB
00000000009a1fa8 0000000000000048 D silk_NLSF_CB_WB
00000000009a1ff0 0000000000000410 D jpeg_std_message_table
00000000009a2400 0000000000000020 d kCat3456
00000000009a2420 0000000000000030 d _hb_all_shapers
00000000009a2450 0000000000000060 D _hb_ot_shaper_arabic
00000000009a24b0 0000000000000060 D _hb_ot_shaper_hangul
00000000009a2510 0000000000000060 D _hb_ot_shaper_hebrew
00000000009a2570 0000000000000060 D _hb_ot_shaper_indic
00000000009a25d0 0000000000000060 D _hb_ot_shaper_khmer
00000000009a2630 0000000000000060 D _hb_ot_shaper_myanmar
00000000009a2690 0000000000000060 D _hb_ot_shaper_thai
00000000009a26f0 0000000000000060 D _hb_ot_shaper_use
00000000009a2750 0000000000000090 d ft_raccess_guess_table
00000000009a27e0 0000000000000040 D ft_svg_glyph_class
00000000009a2820 0000000000000040 D ft_outline_glyph_class
00000000009a2860 0000000000000040 D ft_bitmap_glyph_class
00000000009a28a0 00000000000000c0 D tt_driver_class
00000000009a2960 0000000000000070 d tt_services
00000000009a29d0 0000000000000008 d tt_service_truetype_glyf
00000000009a29d8 0000000000000048 d tt_service_metrics_variations
00000000009a2a20 0000000000000098 d tt_service_gx_multi_masters
00000000009a2ab8 0000000000000010 d tt_service_properties
00000000009a2ac8 00000000000008d0 d t1_keywords
00000000009a3398 00000000000000c0 D t1_driver_class
00000000009a3458 0000000000000080 d t1_services
00000000009a34d8 0000000000000008 d t1_service_kerning
00000000009a34e0 0000000000000028 d t1_service_ps_info
00000000009a3508 0000000000000098 d t1_service_multi_masters
00000000009a35a0 0000000000000008 d t1_service_ps_name
00000000009a35a8 0000000000000010 d t1_service_glyph_dict
00000000009a35b8 00000000000009a0 d cff_field_handlers
00000000009a3f58 00000000000000c0 D cff_driver_class
00000000009a4018 00000000000000b0 d cff_services
00000000009a40c8 0000000000000028 d cff_service_cff_load
00000000009a40f0 0000000000000048 d cff_service_metrics_variations
00000000009a4138 0000000000000098 d cff_service_multi_masters
00000000009a41d0 0000000000000018 d cff_service_cid_info
00000000009a41e8 0000000000000008 d cff_service_get_cmap_info
00000000009a41f0 0000000000000008 d cff_service_ps_name
00000000009a41f8 0000000000000028 d cff_service_ps_info
00000000009a4220 0000000000000010 d cff_service_glyph_dict
00000000009a4230 0000000000000050 D cff_cmap_unicode_class_rec
00000000009a4280 0000000000000050 D cff_cmap_encoding_class_rec
00000000009a42d0 00000000000000c0 D t1cid_driver_class
00000000009a4390 0000000000000060 d cid_services
00000000009a43f0 0000000000000018 d cid_service_cid_info
00000000009a4408 0000000000000028 d cid_service_ps_info
00000000009a4430 0000000000000008 d cid_service_ps_name
00000000009a4438 00000000000009f0 d cid_field_records
00000000009a4e28 0000000000000050 d pfr_phy_font_extra_items
00000000009a4e78 00000000000000c0 D pfr_driver_class
00000000009a4f38 0000000000000030 d pfr_services
00000000009a4f68 0000000000000018 d pfr_metrics_service_rec
00000000009a4f80 0000000000000050 D pfr_cmap_class_rec
00000000009a4fd0 00000000000003c0 d t42_keywords
00000000009a5390 00000000000000c0 D t42_driver_class
00000000009a5450 0000000000000050 d t42_services
00000000009a54a0 0000000000000028 d t42_service_ps_info
00000000009a54c8 0000000000000008 d t42_service_ps_font_name
00000000009a54d0 0000000000000010 d t42_service_glyph_dict
00000000009a54e0 00000000000000c0 D winfnt_driver_class
00000000009a55a0 0000000000000030 d winfnt_services
00000000009a55d0 0000000000000008 d winfnt_service_rec
00000000009a55d8 0000000000000050 d fnt_cmap_class_rec
00000000009a5628 00000000000000c0 D pcf_driver_class
00000000009a56e8 0000000000000040 d pcf_services
00000000009a5728 0000000000000010 d pcf_service_properties
00000000009a5738 0000000000000010 d pcf_service_bdf
00000000009a5748 0000000000000050 d pcf_cmap_class
00000000009a5798 00000000000000c0 D bdf_driver_class
00000000009a5858 0000000000000030 d bdf_services
00000000009a5888 0000000000000010 d bdf_service_bdf
00000000009a5898 0000000000000050 d bdf_cmap_class
00000000009a58e8 00000000000007c8 d bdf_properties_
00000000009a60b0 0000000000000050 d tt_cmap_classes
00000000009a6100 0000000000000068 D tt_cmap_unicode_class_rec
00000000009a6168 0000000000000068 D tt_cmap14_class_rec
00000000009a61d0 0000000000000068 D tt_cmap13_class_rec
00000000009a6238 0000000000000068 D tt_cmap12_class_rec
00000000009a62a0 0000000000000068 D tt_cmap10_class_rec
00000000009a6308 0000000000000068 D tt_cmap8_class_rec
00000000009a6370 0000000000000068 D tt_cmap6_class_rec
00000000009a63d8 0000000000000068 D tt_cmap4_class_rec
00000000009a6440 0000000000000068 D tt_cmap2_class_rec
00000000009a64a8 0000000000000068 D tt_cmap0_class_rec
00000000009a6510 0000000000000048 D sfnt_module_class
00000000009a6558 0000000000000170 d sfnt_interface
00000000009a66c8 0000000000000060 d sfnt_services
00000000009a6728 0000000000000010 d sfnt_service_bdf
00000000009a6738 0000000000000008 d tt_service_get_cmap_info
00000000009a6740 0000000000000008 d sfnt_service_ps_name
00000000009a6748 0000000000000010 d sfnt_service_glyph_dict
00000000009a6758 0000000000000018 d sfnt_service_sfnt_table
00000000009a6770 0000000000000048 D autofit_module_class
00000000009a67b8 0000000000000020 D af_autofitter_interface
00000000009a67d8 0000000000000020 d af_services
00000000009a67f8 0000000000000010 d af_service_properties
00000000009a6808 0000000000000040 D af_latin_writing_system_class
00000000009a6848 0000000000000040 D af_indic_writing_system_class
00000000009a6890 00000000000002c0 D af_style_classes
00000000009a6b50 00000000000001e8 D af_script_classes
00000000009a6d40 0000000000000028 D af_writing_system_classes
00000000009a6d68 0000000000000028 D af_hani_script_class
00000000009a6d90 0000000000000028 D af_tibt_script_class
00000000009a6db8 0000000000000028 D af_sylo_script_class
00000000009a6de0 0000000000000028 D af_orya_script_class
00000000009a6e08 0000000000000028 D af_limb_script_class
00000000009a6e30 0000000000000028 D af_vaii_script_class
00000000009a6e58 0000000000000028 D af_thai_script_class
00000000009a6e80 0000000000000028 D af_tfng_script_class
00000000009a6ea8 0000000000000028 D af_telu_script_class
00000000009a6ed0 0000000000000028 D af_tavt_script_class
00000000009a6ef8 0000000000000028 D af_taml_script_class
00000000009a6f20 0000000000000028 D af_sund_script_class
00000000009a6f48 0000000000000028 D af_sinh_script_class
00000000009a6f70 0000000000000028 D af_shaw_script_class
00000000009a6f98 0000000000000028 D af_saur_script_class
00000000009a6fc0 0000000000000028 D af_rohg_script_class
00000000009a6fe8 0000000000000028 D af_osma_script_class
00000000009a7010 0000000000000028 D af_osge_script_class
00000000009a7038 0000000000000028 D af_orkh_script_class
00000000009a7060 0000000000000028 D af_olck_script_class
00000000009a7088 0000000000000028 D af_none_script_class
00000000009a70b0 0000000000000028 D af_nkoo_script_class
00000000009a70d8 0000000000000028 D af_mymr_script_class
00000000009a7100 0000000000000028 D af_mong_script_class
00000000009a7128 0000000000000028 D af_medf_script_class
00000000009a7150 0000000000000028 D af_mlym_script_class
00000000009a7178 0000000000000028 D af_lisu_script_class
00000000009a71a0 0000000000000028 D af_latp_script_class
00000000009a71c8 0000000000000028 D af_latb_script_class
00000000009a71f0 0000000000000028 D af_latn_script_class
00000000009a7218 0000000000000028 D af_lao_script_class
00000000009a7240 0000000000000028 D af_knda_script_class
00000000009a7268 0000000000000028 D af_khms_script_class
00000000009a7290 0000000000000028 D af_khmr_script_class
00000000009a72b8 0000000000000028 D af_kali_script_class
00000000009a72e0 0000000000000028 D af_hebr_script_class
00000000009a7308 0000000000000028 D af_guru_script_class
00000000009a7330 0000000000000028 D af_gujr_script_class
00000000009a7358 0000000000000028 D af_grek_script_class
00000000009a7380 0000000000000028 D af_goth_script_class
00000000009a73a8 0000000000000028 D af_glag_script_class
00000000009a73d0 0000000000000028 D af_geok_script_class
00000000009a73f8 0000000000000028 D af_geor_script_class
00000000009a7420 0000000000000028 D af_ethi_script_class
00000000009a7448 0000000000000028 D af_dsrt_script_class
00000000009a7470 0000000000000028 D af_deva_script_class
00000000009a7498 0000000000000028 D af_cyrl_script_class
00000000009a74c0 0000000000000028 D af_cprt_script_class
00000000009a74e8 0000000000000028 D af_copt_script_class
00000000009a7510 0000000000000028 D af_cher_script_class
00000000009a7538 0000000000000028 D af_cari_script_class
00000000009a7560 0000000000000028 D af_cans_script_class
00000000009a7588 0000000000000028 D af_cakm_script_class
00000000009a75b0 0000000000000028 D af_buhd_script_class
00000000009a75d8 0000000000000028 D af_beng_script_class
00000000009a7600 0000000000000028 D af_bamu_script_class
00000000009a7628 0000000000000028 D af_avst_script_class
00000000009a7650 0000000000000028 D af_armn_script_class
00000000009a7678 0000000000000028 D af_arab_script_class
00000000009a76a0 0000000000000028 D af_adlm_script_class
00000000009a76c8 0000000000000040 D af_dummy_writing_system_class
00000000009a7708 0000000000000040 D af_cjk_writing_system_class
00000000009a7748 0000000000000048 D pshinter_module_class
00000000009a7790 0000000000000018 d pshinter_interface
00000000009a77a8 0000000000000078 D ft_smooth_renderer_class
00000000009a7820 0000000000000030 D ft_grays_raster
00000000009a7850 0000000000000030 d func_interface
00000000009a7880 0000000000000078 D ft_raster1_renderer_class
00000000009a78f8 0000000000000030 D ft_standard_raster
00000000009a7928 0000000000000078 D ft_svg_renderer_class
00000000009a79a0 0000000000000020 d ft_svg_services
00000000009a79c0 0000000000000010 d ft_svg_service_properties
00000000009a79d0 0000000000000008 d svg_interface
00000000009a79d8 0000000000000030 D ft_sdf_raster
00000000009a7a08 0000000000000030 d sdf_decompose_funcs
00000000009a7a38 0000000000000030 D ft_bitmap_sdf_raster
00000000009a7a68 0000000000000078 D ft_bitmap_sdf_renderer_class
00000000009a7ae0 0000000000000078 D ft_sdf_renderer_class
00000000009a7b58 0000000000000020 d sdf_services
00000000009a7b78 0000000000000010 d sdf_service_properties
00000000009a7b88 0000000000000050 D t1_cmap_unicode_class_rec
00000000009a7bd8 0000000000000050 D t1_cmap_custom_class_rec
00000000009a7c28 0000000000000050 D t1_cmap_expert_class_rec
00000000009a7c78 0000000000000050 D t1_cmap_standard_class_rec
00000000009a7cc8 0000000000000048 D psaux_module_class
00000000009a7d10 0000000000000058 d psaux_interface
00000000009a7d68 0000000000000018 D cff_decoder_funcs
00000000009a7d80 0000000000000040 D cff_builder_funcs
00000000009a7dc0 0000000000000020 D t1_cmap_classes
00000000009a7de0 0000000000000018 D afm_parser_funcs
00000000009a7df8 0000000000000020 D t1_decoder_funcs
00000000009a7e18 0000000000000040 D t1_builder_funcs
00000000009a7e58 0000000000000068 D ps_parser_funcs
00000000009a7ec0 0000000000000020 D ps_table_funcs
00000000009a7ee0 0000000000000250 d afm_key_table
00000000009a8130 0000000000000048 D psnames_module_class
00000000009a8178 0000000000000020 d pscmaps_services
00000000009a8198 0000000000000040 d pscmaps_interface
00000000009a81e0 0000000000000038 d categories
00000000009a8218 0000000000000100 D dotab_stdnull
00000000009a8318 0000000000000030 d s_music_interfaces
00000000009a8348 0000000000000180 d supported
00000000009a84d0 0000000000000010 d render_drivers
00000000009a84e0 0000000000000530 d egl_functions.40
00000000009a8a10 00000000000000d8 D util_format_ayuv_description
00000000009a8ae8 00000000000000d8 D util_format_bptc_rgb_float_description
00000000009a8bc0 00000000000000d8 D util_format_bptc_rgb_ufloat_description
00000000009a8c98 00000000000000d8 D util_format_bptc_rgba_unorm_description
00000000009a8d70 00000000000000d8 D util_format_bptc_srgba_description
00000000009a8e48 00000000000000d8 D util_format_dxt1_rgb_description
00000000009a8f20 00000000000000d8 D util_format_dxt1_rgba_description
00000000009a8ff8 00000000000000d8 D util_format_dxt1_srgb_description
00000000009a90d0 00000000000000d8 D util_format_dxt1_srgba_description
00000000009a91a8 00000000000000d8 D util_format_dxt3_rgba_description
00000000009a9280 00000000000000d8 D util_format_dxt3_srgba_description
00000000009a9358 00000000000000d8 D util_format_dxt5_rgba_description
00000000009a9430 00000000000000d8 D util_format_dxt5_srgba_description
00000000009a9508 00000000000000d8 D util_format_etc1_rgb8_description
00000000009a95e0 00000000000000d8 D util_format_g8r8_b8r8_unorm_description
00000000009a96b8 00000000000000d8 D util_format_g8r8_g8b8_unorm_description
00000000009a9790 00000000000000d8 D util_format_iyuv_description
00000000009a9868 00000000000000d8 D util_format_latc1_snorm_description
00000000009a9940 00000000000000d8 D util_format_latc1_unorm_description
00000000009a9a18 00000000000000d8 D util_format_latc2_snorm_description
00000000009a9af0 00000000000000d8 D util_format_latc2_unorm_description
00000000009a9bc8 00000000000000d8 D util_format_nv12_description
00000000009a9ca0 00000000000000d8 D util_format_nv21_description
00000000009a9d78 00000000000000d8 D util_format_p010_description
00000000009a9e50 00000000000000d8 D util_format_p016_description
00000000009a9f28 00000000000000d8 D util_format_r11g11b10_float_description
00000000009aa000 00000000000000d8 D util_format_r1_unorm_description
00000000009aa0d8 00000000000000d8 D util_format_r8g8_b8g8_unorm_description
00000000009aa1b0 00000000000000d8 D util_format_r8g8_r8b8_unorm_description
00000000009aa288 00000000000000d8 D util_format_r8g8bx_snorm_description
00000000009aa360 00000000000000d8 D util_format_r9g9b9e5_float_description
00000000009aa438 00000000000000d8 D util_format_rgtc1_snorm_description
00000000009aa510 00000000000000d8 D util_format_rgtc1_unorm_description
00000000009aa5e8 00000000000000d8 D util_format_rgtc2_snorm_description
00000000009aa6c0 00000000000000d8 D util_format_rgtc2_unorm_description
00000000009aa798 00000000000000d8 D util_format_s8_uint_description
00000000009aa870 00000000000000d8 D util_format_s8_uint_z24_unorm_description
00000000009aa948 00000000000000d8 D util_format_s8x24_uint_description
00000000009aaa20 00000000000000d8 D util_format_uyvy_description
00000000009aaaf8 00000000000000d8 D util_format_x24s8_uint_description
00000000009aabd0 00000000000000d8 D util_format_x32_s8x24_uint_description
00000000009aaca8 00000000000000d8 D util_format_x8z24_unorm_description
00000000009aad80 00000000000000d8 D util_format_xyuv_description
00000000009aae58 00000000000000d8 D util_format_yuyv_description
00000000009aaf30 00000000000000d8 D util_format_yv12_description
00000000009ab008 00000000000000d8 D util_format_yv16_description
00000000009ab0e0 00000000000000d8 D util_format_z16_unorm_description
00000000009ab1b8 00000000000000d8 D util_format_z24_unorm_s8_uint_description
00000000009ab290 00000000000000d8 D util_format_z24x8_unorm_description
00000000009ab368 00000000000000d8 D util_format_z32_float_description
00000000009ab440 00000000000000d8 D util_format_z32_float_s8x24_uint_description
00000000009ab518 00000000000000d8 D util_format_z32_unorm_description
00000000009ab5f0 0000000000000030 V vtable for ast_node
00000000009ab620 0000000000000030 V vtable for ast_compound_statement
00000000009ab650 0000000000000030 V vtable for ast_expression_statement
00000000009ab680 0000000000000030 V vtable for ast_function
00000000009ab6b0 0000000000000030 V vtable for ast_fully_specified_type
00000000009ab6e0 0000000000000030 V vtable for ast_parameter_declarator
00000000009ab710 0000000000000030 V vtable for ast_function_definition
00000000009ab740 0000000000000030 V vtable for ast_declaration
00000000009ab770 0000000000000030 V vtable for ast_declarator_list
00000000009ab7a0 0000000000000030 V vtable for ast_jump_statement
00000000009ab7d0 0000000000000030 V vtable for ast_demote_statement
00000000009ab800 0000000000000030 V vtable for ast_selection_statement
00000000009ab830 0000000000000030 V vtable for ast_switch_statement
00000000009ab860 0000000000000030 V vtable for ast_switch_body
00000000009ab890 0000000000000030 V vtable for ast_case_label
00000000009ab8c0 0000000000000030 V vtable for ast_case_label_list
00000000009ab8f0 0000000000000030 V vtable for ast_case_statement
00000000009ab920 0000000000000030 V vtable for ast_case_statement_list
00000000009ab950 0000000000000030 V vtable for ast_iteration_statement
00000000009ab980 0000000000000030 V vtable for ast_struct_specifier
00000000009ab9b0 0000000000000030 V vtable for ast_subroutine_list
00000000009ab9e0 0000000000000080 V vtable for ir_rvalue
00000000009aba60 0000000000000040 V vtable for ir_variable
00000000009abaa0 0000000000000080 V vtable for ir_swizzle
00000000009abb20 0000000000000040 V vtable for ir_return
00000000009abb60 0000000000000040 V vtable for ir_discard
00000000009abba0 0000000000000040 V vtable for ir_demote
00000000009abbe0 0000000000000040 V vtable for ir_loop_jump
00000000009abc20 0000000000000040 V vtable for ir_if
00000000009abc60 0000000000000040 V vtable for ir_loop
00000000009abca0 0000000000000048 V vtable for ir_call
00000000009abce8 0000000000000088 V vtable for ir_dereference_variable
00000000009abd70 0000000000000088 V vtable for ir_dereference_array
00000000009abdf8 0000000000000088 V vtable for ir_dereference_record
00000000009abe80 0000000000000080 V vtable for ir_texture
00000000009abf00 0000000000000048 V vtable for ir_assignment
00000000009abf48 0000000000000040 V vtable for ir_function
00000000009abf88 0000000000000040 V vtable for ir_function_signature
00000000009abfc8 0000000000000088 V vtable for ir_constant
00000000009ac050 0000000000000140 V vtable for fixup_ir_call_visitor
00000000009ac190 0000000000000080 V vtable for ir_expression
00000000009ac210 0000000000000040 V vtable for ir_emit_vertex
00000000009ac250 0000000000000040 V vtable for ir_end_primitive
00000000009ac290 0000000000000040 V vtable for ir_barrier
00000000009ac2d0 0000000000000140 V vtable for array_sizing_visitor
00000000009ac410 0000000000000140 d vtable for (anonymous namespace)::deref_type_updater
00000000009ac550 0000000000000140 d vtable for (anonymous namespace)::find_deref_visitor
00000000009ac690 0000000000000150 d vtable for (anonymous namespace)::array_resize_visitor
00000000009ac7e0 0000000000000140 d vtable for (anonymous namespace)::find_assignment_visitor
00000000009ac920 0000000000000140 d vtable for (anonymous namespace)::find_emit_vertex_visitor
00000000009aca60 0000000000000140 d vtable for (anonymous namespace)::dynamic_sampler_array_indexing_visitor
00000000009acba0 0000000000000140 d vtable for remap_variables(ir_instruction*, gl_linked_shader*, hash_table*)::remap_visitor
00000000009acce0 0000000000000140 d vtable for (anonymous namespace)::call_link_visitor
00000000009ace20 0000000000000038 d vtable for (anonymous namespace)::ubo_visitor
00000000009ace58 0000000000000038 d vtable for (anonymous namespace)::count_block_size
00000000009ace90 0000000000000038 V vtable for tfeedback_candidate_generator
00000000009acec8 0000000000000140 V vtable for examine_rhs
00000000009ad008 0000000000000140 d vtable for (anonymous namespace)::loop_analysis
00000000009ad148 0000000000000140 V vtable for loop_unroll_count
00000000009ad288 0000000000000140 d vtable for (anonymous namespace)::loop_unroll_visitor
00000000009ad3c8 0000000000000140 d vtable for (anonymous namespace)::lower_builtins_visitor
00000000009ad508 0000000000000148 d vtable for (anonymous namespace)::lower_const_array_visitor
00000000009ad650 0000000000000140 d vtable for (anonymous namespace)::lower_cs_derived_visitor
00000000009ad790 0000000000000140 d vtable for (anonymous namespace)::lower_discard_flow_visitor
00000000009ad8d0 0000000000000148 d vtable for (anonymous namespace)::lower_distance_visitor
00000000009ada18 0000000000000148 d vtable for (anonymous namespace)::lower_distance_visitor_counter
00000000009adb60 0000000000000140 d vtable for (anonymous namespace)::lower_instructions_visitor
00000000009adca0 0000000000000140 V vtable for lower_packed_varyings_gs_splicer
00000000009adde0 0000000000000140 V vtable for lower_packed_varyings_return_splicer
00000000009adf20 0000000000000148 d vtable for (anonymous namespace)::flatten_named_interface_blocks_declarations
00000000009ae068 0000000000000148 d vtable for (anonymous namespace)::find_precision_visitor
00000000009ae1b0 0000000000000148 d vtable for (anonymous namespace)::lower_precision_visitor
00000000009ae2f8 0000000000000140 d vtable for (anonymous namespace)::find_lowerable_rvalues_visitor
00000000009ae438 0000000000000140 d vtable for (anonymous namespace)::lower_subroutine_visitor
00000000009ae578 0000000000000148 d vtable for (anonymous namespace)::lower_tess_level_visitor
00000000009ae6c0 0000000000000148 d vtable for (anonymous namespace)::ir_vec_index_to_swizzle_visitor
00000000009ae808 0000000000000158 d vtable for (anonymous namespace)::vector_deref_visitor
00000000009ae960 0000000000000158 d vtable for (anonymous namespace)::vector_insert_visitor
00000000009aeab8 0000000000000140 d vtable for (anonymous namespace)::lower_vertex_id_visitor
00000000009aebf8 0000000000000150 d vtable for (anonymous namespace)::lower_shared_reference_visitor
00000000009aed48 0000000000000150 d vtable for (anonymous namespace)::lower_ubo_reference_visitor
00000000009aee98 0000000000000140 d vtable for (anonymous namespace)::lower_xfb_var_splicer
00000000009aefd8 0000000000000158 d vtable for (anonymous namespace)::ir_algebraic_visitor
00000000009af130 0000000000000158 V vtable for ir_array_splitting_visitor
00000000009af288 0000000000000140 d vtable for (anonymous namespace)::ir_array_reference_visitor
00000000009af3c8 0000000000000140 d vtable for (anonymous namespace)::opt_conditional_discard_visitor
00000000009af508 0000000000000158 d vtable for (anonymous namespace)::ir_constant_folding_visitor
00000000009af660 0000000000000148 d vtable for (anonymous namespace)::ir_constant_propagation_visitor
00000000009af7a8 0000000000000148 d vtable for (anonymous namespace)::ir_constant_variable_visitor
00000000009af8f0 0000000000000148 d vtable for (anonymous namespace)::ir_copy_propagation_elements_visitor
00000000009afa38 0000000000000140 d vtable for (anonymous namespace)::varying_info_visitor
00000000009afb78 0000000000000148 d vtable for (anonymous namespace)::replace_varyings_visitor
00000000009afcc0 0000000000000140 d vtable for (anonymous namespace)::array_index_visit
00000000009afe00 0000000000000148 d vtable for (anonymous namespace)::kill_for_derefs_visitor
00000000009aff48 0000000000000140 d vtable for (anonymous namespace)::ir_dead_functions_visitor
00000000009b0088 0000000000000140 d vtable for (anonymous namespace)::nested_if_flattener
00000000009b01c8 0000000000000140 d vtable for (anonymous namespace)::matrix_flipper
00000000009b0308 0000000000000150 V vtable for ir_variable_replacement_visitor
00000000009b0458 0000000000000140 d vtable for (anonymous namespace)::ir_save_lvalue_visitor
00000000009b0598 0000000000000150 d vtable for (anonymous namespace)::ir_function_inlining_visitor
00000000009b06e8 0000000000000140 d vtable for (anonymous namespace)::ir_if_simplification_visitor
00000000009b0828 0000000000000148 d vtable for (anonymous namespace)::ir_minmax_visitor
00000000009b0970 0000000000000148 d vtable for (anonymous namespace)::ir_rebalance_visitor
00000000009b0ab8 0000000000000140 d vtable for (anonymous namespace)::redundant_jumps_visitor
00000000009b0bf8 0000000000000140 d vtable for (anonymous namespace)::ir_structure_reference_visitor
00000000009b0d38 0000000000000158 d vtable for (anonymous namespace)::ir_structure_splitting_visitor
00000000009b0e90 0000000000000148 d vtable for (anonymous namespace)::ir_opt_swizzle_visitor
00000000009b0fd8 0000000000000140 d vtable for (anonymous namespace)::ir_tree_grafting_visitor
00000000009b1118 0000000000000140 d vtable for (anonymous namespace)::ir_vectorize_visitor
00000000009b1258 0000000000000150 d vtable for (anonymous namespace)::ir_invariance_propagation_visitor
00000000009b13a8 0000000000000030 V vtable for ast_layout_expression
00000000009b13d8 0000000000000028 D nouveau_buffer_vtbl
00000000009b1400 0000000000000028 D nvc0_miptree_vtbl
00000000009b1428 0000000000000038 d vtable for (anonymous namespace)::add_uniform_to_shader
00000000009b1460 0000000000000200 d update_functions
00000000009b1660 0000000000000140 V vtable for ir_control_flow_info_visitor
00000000009b17a0 0000000000000030 V vtable for ast_array_specifier
00000000009b17d0 0000000000000038 V vtable for ast_expression_bin
00000000009b1808 0000000000000038 V vtable for ast_function_expression
00000000009b1840 0000000000000038 V vtable for ast_aggregate_initializer
00000000009b1878 0000000000000140 V vtable for read_from_write_only_variable_visitor
00000000009b19b8 0000000000000038 V vtable for ast_expression
00000000009b19f0 0000000000000140 V vtable for interface_block_usage_visitor
00000000009b1b30 0000000000000030 V vtable for ast_interface_block
00000000009b1b60 0000000000000030 V vtable for ast_tcs_output_layout
00000000009b1b90 0000000000000030 V vtable for ast_gs_input_layout
00000000009b1bc0 0000000000000030 V vtable for ast_cs_input_layout
00000000009b1bf0 0000000000000030 V vtable for ast_warnings_toggle
00000000009b1c20 0000000000000030 V vtable for ast_type_specifier
00000000009b1c50 0000000000000140 V vtable for ir_array_refcount_visitor
00000000009b1d90 0000000000000140 V vtable for ir_function_can_inline_visitor
00000000009b1ed0 0000000000000140 d vtable for (anonymous namespace)::has_recursion_visitor
00000000009b2010 0000000000000140 d vtable for (anonymous namespace)::ir_set_program_inouts_visitor
00000000009b2150 0000000000000140 V vtable for ir_variable_refcount_visitor
00000000009b2290 0000000000000140 V vtable for link_uniform_block_active_visitor
00000000009b23d0 0000000000000140 d vtable for (anonymous namespace)::lower_discard_visitor
00000000009b2510 0000000000000140 d vtable for (anonymous namespace)::ir_if_to_cond_assign_visitor
00000000009b2650 0000000000000148 d vtable for (anonymous namespace)::lower_64bit_visitor
00000000009b2798 0000000000000140 d vtable for (anonymous namespace)::ir_mat_op_to_vec_visitor
00000000009b28d8 0000000000000148 V vtable for lower_offset_array_visitor
00000000009b2a20 0000000000000158 d vtable for (anonymous namespace)::lower_packing_builtins_visitor
00000000009b2b78 0000000000000148 d vtable for (anonymous namespace)::deref_replacer
00000000009b2cc0 0000000000000140 d vtable for (anonymous namespace)::find_variable_index
00000000009b2e00 0000000000000148 d vtable for (anonymous namespace)::variable_index_to_cond_assign_visitor
00000000009b2f48 0000000000000140 d vtable for (anonymous namespace)::ir_vec_index_to_cond_assign_visitor
00000000009b3088 0000000000000148 d vtable for (anonymous namespace)::lower_vector_visitor
00000000009b31d0 0000000000000140 d vtable for (anonymous namespace)::output_read_remover
00000000009b3310 0000000000000028 D nv50_miptree_vtbl
00000000009b3338 0000000000000048 V vtable for nv50_ir::LValue
00000000009b3380 0000000000000048 V vtable for nv50_ir::Symbol
00000000009b33c8 0000000000000048 V vtable for nv50_ir::ImmediateValue
00000000009b3410 0000000000000048 V vtable for nv50_ir::Value
00000000009b3458 0000000000000048 V vtable for nv50_ir::CodeEmitter
00000000009b34a0 00000000000000d8 V vtable for nv50_ir::TargetGM107
00000000009b3578 0000000000000158 V vtable for ir_expression_flattening_visitor
00000000009b36d0 0000000000000048 V vtable for nv50_ir::CodeEmitterGM107
00000000009b3718 0000000000000028 V vtable for nv50_ir::GM107LegalizeSSA
00000000009b3740 0000000000000030 V vtable for nv50_ir::GM107LoweringPass
00000000009b3770 00000000000000b8 V vtable for nv50_ir::TargetNVC0
00000000009b3828 0000000000000018 V typeinfo for __gnu_cxx::__concurrence_lock_error
00000000009b3840 0000000000000018 V typeinfo for __gnu_cxx::__concurrence_unlock_error
00000000009b3858 0000000000000018 V typeinfo for __gnu_cxx::__concurrence_broadcast_error
00000000009b3870 0000000000000018 V typeinfo for __gnu_cxx::__concurrence_wait_error
00000000009b3888 0000000000000028 V vtable for __gnu_cxx::__concurrence_lock_error
00000000009b38b0 0000000000000028 V vtable for __gnu_cxx::__concurrence_unlock_error
00000000009b38d8 0000000000000028 V vtable for __gnu_cxx::__concurrence_broadcast_error
00000000009b3900 0000000000000028 V vtable for __gnu_cxx::__concurrence_wait_error
00000000009b3928 0000000000000018 V typeinfo for __cxxabiv1::__si_class_type_info
00000000009b3940 0000000000000058 V vtable for __cxxabiv1::__si_class_type_info
00000000009b3998 0000000000000010 V typeinfo for std::type_info
00000000009b39a8 0000000000000018 V typeinfo for std::bad_alloc
00000000009b39c0 0000000000000028 V vtable for std::bad_alloc
00000000009b39e8 0000000000000018 V typeinfo for std::bad_array_new_length
00000000009b3a00 0000000000000028 V vtable for std::bad_array_new_length
00000000009b3a28 0000000000000018 V typeinfo for __cxxabiv1::__class_type_info
00000000009b3a40 0000000000000058 V vtable for __cxxabiv1::__class_type_info
00000000009b3a98 0000000000000010 V typeinfo for std::exception
00000000009b3aa8 0000000000000010 V typeinfo for __cxxabiv1::__forced_unwind
00000000009b3ab8 0000000000000010 V typeinfo for __cxxabiv1::__foreign_exception
00000000009b3ac8 0000000000000018 V typeinfo for std::logic_error
00000000009b3ae0 0000000000000018 V typeinfo for std::length_error
00000000009b3af8 0000000000000018 V typeinfo for std::out_of_range
00000000009b3b10 0000000000000028 V vtable for std::logic_error
00000000009b3b38 0000000000000028 V vtable for std::length_error
00000000009b3b60 0000000000000028 V vtable for std::out_of_range
00000000009b3b90 0000000000000200 d synth_base
00000000009b3d90 00000000000000a0 d ft_default_modules
00000000009b3e30 0000000000000010 d t1_service_properties
00000000009b3e40 0000000000000010 d cff_service_properties
00000000009b3e50 0000000000000010 d cid_service_properties
00000000009b3e60 00000000000001a8 D __C_locale
00000000009b4008 a _DYNAMIC
00000000009b4128 d __got_start__
00000000009b4128 a _GLOBAL_OFFSET_TABLE_
00000000009b90e8 d __got_end__
00000000009ba000 d __data_start
00000000009ba000 0000000000000008 d mix_music
00000000009ba008 0000000000000004 d music_active
00000000009ba00c 0000000000000004 d music_volume
00000000009ba010 0000000000000090 D Mix_MusicInterface_MODPLUG
00000000009ba0a0 0000000000000090 D Mix_MusicInterface_MPG123
00000000009ba130 0000000000000090 D Mix_MusicInterface_OGG
00000000009ba1c0 0000000000000090 D Mix_MusicInterface_Opus
00000000009ba250 0000000000000090 D Mix_MusicInterface_TIMIDITY
00000000009ba2e0 0000000000000090 D Mix_MusicInterface_WAV
00000000009ba370 00000000000000a0 D nsvg__colors
00000000009ba410 0000000000000004 d g_hb_script
00000000009ba414 0000000000000004 d g_hb_direction
00000000009ba418 0000000000000004 d SDL_MainIsReady
00000000009ba470 0000000000000008 d assertion_handler
00000000009ba478 0000000000000008 d SDL_log_function
00000000009ba480 0000000000000004 d SDL_test_priority
00000000009ba484 0000000000000004 d SDL_application_priority
00000000009ba488 0000000000000004 d SDL_assert_priority
00000000009ba48c 0000000000000004 d SDL_default_priority
00000000009ba490 000000000000006c d extensible_guids
00000000009ba4fc 0000000000000004 d SDL_SIMDAlignment
00000000009ba500 0000000000000004 d SDL_CPUFeatures
00000000009ba504 0000000000000004 d SDL_update_sensors
00000000009ba508 0000000000000004 d SDL_update_joysticks
00000000009ba510 0000000000000060 D GLES2_RenderDriver
00000000009ba570 0000000000000030 d sdl_assert_data.1
00000000009ba5a0 0000000000000060 D SW_RenderDriver
00000000009ba600 0000000000000028 d s_mem
00000000009ba628 0000000000000048 D SDL_expand_byte
00000000009ba670 0000000000000001 d lookup_8
00000000009ba678 0000000000000002 d lookup_7
00000000009ba680 0000000000000004 d lookup_6
00000000009ba688 0000000000000008 d lookup_5
00000000009ba690 0000000000000010 d lookup_4
00000000009ba6a0 0000000000000020 d lookup_3
00000000009ba6c0 0000000000000040 d lookup_2
00000000009ba700 0000000000000080 d lookup_1
00000000009ba780 0000000000000100 d lookup_0
00000000009ba880 0000000000000004 d val.0
00000000009ba884 0000000000000004 d SDL_YUV_ConversionMode
00000000009ba888 0000000000000004 d thread_local_storage
00000000009ba890 0000000000000018 D SWITCH_bootstrap
00000000009ba8a8 0000000000000020 D SWITCHAUDIO_bootstrap
00000000009ba8c8 00000000000000a0 D SDL_SWITCH_JoystickDriver
00000000009ba968 00000000000000a0 D SDL_VIRTUAL_JoystickDriver
00000000009baa08 0000000000000058 D SDL_DUMMY_SensorDriver
00000000009baa60 0000000000000004 d features.0
00000000009baa68 0000000000000be8 D SDL_GeneratedBlitFuncTable
00000000009bb650 0000000000000018 D _eglSoftwareDevice
00000000009bb668 0000000000000088 D _eglGlobal
00000000009bb6f0 0000000000000018 d logging
00000000009bb708 0000000000000024 D mme9097_blend_enables
00000000009bb730 0000000000000060 D mme9097_compute_counter
00000000009bb790 000000000000004c D mme9097_compute_counter_to_query
00000000009bb7e0 0000000000000044 D mme9097_conservative_raster_state
00000000009bb828 0000000000000078 D mme9097_draw_arrays_indirect
00000000009bb8a0 00000000000000b8 D mme9097_draw_arrays_indirect_count
00000000009bb958 00000000000000a8 D mme9097_draw_elts_indirect
00000000009bba00 00000000000000f4 D mme9097_draw_elts_indirect_count
00000000009bbaf8 0000000000000044 D mme9097_gp_select
00000000009bbb40 000000000000001c D mme9097_per_instance_bf
00000000009bbb60 0000000000000044 D mme9097_poly_mode_back
00000000009bbba8 0000000000000044 D mme9097_poly_mode_front
00000000009bbbf0 0000000000000088 D mme9097_query_buffer_write
00000000009bbc78 0000000000000044 D mme9097_tep_select
00000000009bbcc0 0000000000000030 D mme9097_vertex_array_select
00000000009bbcf0 0000000000000040 D mme90c0_launch_grid_indirect
00000000009bbd30 0000000000000080 d validate_list_cp
00000000009bbdb0 0000000000000001 d first.8
00000000009bbdb4 0000000000000004 d NextDynamicID
00000000009bbdb8 000000000000001f d out_of_memory
00000000009bbdd8 0000000000000004 d debug.0
00000000009bbddc 0000000000000004 d debug.3
00000000009bbde0 0000000000000010 d color.2
00000000009bbdf0 0000000000000004 d index.3
00000000009bbdf8 000000000000000c d normal.1
00000000009bbe08 0000000000000010 d texcoord.0
00000000009bbe18 0000000000000010 d vertex.4
00000000009bbe28 0000000000000020 d override.0
00000000009bbe48 0000000000000001 d first.1
00000000009bbe49 0000000000000001 d first.1
00000000009bbed8 0000000000000004 d ir_print_visitor::unique_name(ir_variable*)::i
00000000009bbedc 0000000000000004 d ir_print_visitor::unique_name(ir_variable*)::arg
00000000009bbee0 0000000000000020 D tgsi_swizzle_names
00000000009bbf00 0000000000000001 d firsttime.0
00000000009bbf08 0000000000000010 D tgsi_fs_coord_origin_names
00000000009bbf18 0000000000000010 D tgsi_fs_coord_pixel_center_names
00000000009bbf28 0000000000000030 D tgsi_immediate_type_names
00000000009bbf58 0000000000000018 D tgsi_interpolate_locations
00000000009bbf70 0000000000000020 D tgsi_interpolate_names
00000000009bbf90 0000000000000008 D tgsi_invariant_name
00000000009bbf98 0000000000000020 D tgsi_memory_names
00000000009bbfb8 0000000000000078 D tgsi_primitive_names
00000000009bc030 0000000000000030 D tgsi_processor_type_names
00000000009bc060 00000000000000d8 D tgsi_property_names
00000000009bc138 0000000000000030 D tgsi_return_type_names
00000000009bc168 0000000000000188 D tgsi_semantic_names
00000000009bc2f0 0000000000000098 D tgsi_texture_names
00000000009bc388 0000000000000080 d validate_list_cp
00000000009bc408 0000000000000038 d sm20_hw_metric_queries
00000000009bc440 0000000000000048 d sm21_hw_metric_queries
00000000009bc488 0000000000000058 d sm30_hw_metric_queries
00000000009bc4e0 0000000000000058 d sm35_hw_metric_queries
00000000009bc538 0000000000000058 d sm50_hw_metric_queries
00000000009bc590 00000000000000d0 d sm20_hw_sm_queries
00000000009bc660 00000000000000f8 d sm21_hw_sm_queries
00000000009bc758 0000000000000168 d sm30_hw_sm_queries
00000000009bc8c0 0000000000000168 d sm35_hw_sm_queries
00000000009bca28 0000000000000120 d sm50_hw_sm_queries
00000000009bcb48 0000000000000120 d sm52_hw_sm_queries
00000000009bcc68 0000000000000220 d validate_list_3d
00000000009bce88 0000000000000008 D util_format_dxt1_rgb_fetch
00000000009bce90 0000000000000008 D util_format_dxt1_rgba_fetch
00000000009bce98 0000000000000008 D util_format_dxt3_rgba_fetch
00000000009bcea0 0000000000000008 D util_format_dxt5_rgba_fetch
00000000009bcea8 0000000000000008 D util_format_dxtn_pack
00000000009bceb0 0000000000000030 d markers.0
00000000009bcee0 0000000000000720 d builtin_type_versions
00000000009bd600 00000000000003f0 D nv50_ir::operationStr
00000000009bd9f0 0000000000000700 D nv50_ir::gm107_builtin_code
00000000009be0f0 0000000000000020 D nv50_ir::gm107_builtin_offsets
00000000009be110 0000000000000190 D nv50_ir::gf100_builtin_code
00000000009be2a0 0000000000001590 D nv50_ir::gk104_builtin_code
00000000009bf830 00000000000005a8 D nv50_ir::gk110_builtin_code
00000000009bfdd8 0000000000000020 D nv50_ir::gf100_builtin_offsets
00000000009bfdf8 0000000000000020 D nv50_ir::gk104_builtin_offsets
00000000009bfe18 0000000000000020 D nv50_ir::gk110_builtin_offsets
00000000009bfe38 0000000000000001 d first.1
00000000009bfe40 0000000000000008 V DW.ref.__gxx_personality_v0
00000000009bfe48 0000000000000008 D __cxxabiv1::__unexpected_handler
00000000009bfe50 0000000000000008 D __cxxabiv1::__terminate_handler
00000000009bfe58 0000000000000004 d next_dynamic_slot
00000000009bfe5c 0000000000000004 d debug.0
00000000009bfe60 0000000000000008 V __nx_applet_init_timeout
00000000009bfe68 0000000000000001 V __nx_applet_auto_notifyrunning
00000000009bfe6c 0000000000000004 V __nx_applet_type
00000000009bfe70 0000000000000004 V __nx_nv_transfermem_size
00000000009bfe74 0000000000000004 V __nx_nv_service_type
00000000009bfe78 0000000000000004 d g_ctrl_fd
00000000009bfe7c 0000000000000004 d g_ctrlgpu_fd
00000000009bfe80 0000000000000004 d g_nvmap_fd
00000000009bfe84 0000000000000004 V __nx_fs_num_sessions
00000000009bfe88 0000000000000004 d g_viServiceType
00000000009bfe8c 0000000000000004 V __nx_vi_stray_layer_flags
00000000009bfe90 0000000000000008 V __nx_exception_stack_size
00000000009bfe98 0000000000000001 V __nx_fsdev_support_cwd
00000000009bfe9c 0000000000000004 V __nx_fsdev_direntry_cache_size
00000000009bfea0 0000000000000010 D _floor_P
00000000009bfeb0 0000000000000008 D _mapping_P
00000000009bfeb8 0000000000000018 D _residue_P
00000000009bfed0 0000000000000030 D floor1_exportbundle
00000000009bff00 0000000000000030 D floor0_exportbundle
00000000009bff30 0000000000000028 D residue0_exportbundle
00000000009bff58 0000000000000028 D residue1_exportbundle
00000000009bff80 0000000000000028 D residue2_exportbundle
00000000009bffa8 0000000000000028 D mapping0_exportbundle
00000000009bffd0 0000000000000038 D ModPlug::gSettings
00000000009c0008 0000000000000004 D CSoundFile::gnChannels
00000000009c000c 0000000000000004 D CSoundFile::gdwMixingFreq
00000000009c0010 0000000000000004 D CSoundFile::gnBitsPerSample
00000000009c0014 0000000000000004 D CSoundFile::m_nMaxMixChannels
00000000009c0018 0000000000000004 D CSoundFile::gnVolumeRampSamples
00000000009c001c 0000000000000004 D CSoundFile::m_nStereoSeparation
00000000009c0020 0000000000000004 D CSoundFile::gnAGC
00000000009c0024 0000000000000004 D CSoundFile::m_nXBassDepth
00000000009c0028 0000000000000004 D CSoundFile::m_nXBassRange
00000000009c002c 0000000000000004 D CSoundFile::m_nReverbDelay
00000000009c0030 0000000000000004 D CSoundFile::m_nReverbDepth
00000000009c0034 0000000000000004 D CSoundFile::m_nProLogicDelay
00000000009c0038 0000000000000004 D CSoundFile::m_nProLogicDepth
00000000009c0040 0000000000000008 D autovibit2xm
00000000009c0298 0000000000000060 d bad_reader
00000000009c02f8 00000000000001e0 d readers
00000000009c04d8 0000000000000028 D INT123_pnts
00000000009c05e0 000000000000002c d pretab_choice
00000000009c060c 0000000000000004 d simd_features
00000000009c0610 0000000000000004 d simd_huffman
00000000009c0614 0000000000000004 d simd_support
00000000009c0618 0000000000000008 d WebPInitAlphaProcessing_body_last_cpuinfo_used.0
00000000009c0620 0000000000000008 D VP8GetCPUInfo
00000000009c0628 0000000000000008 d VP8DspInit_body_last_cpuinfo_used.0
00000000009c0630 0000000000000008 d VP8FiltersInit_body_last_cpuinfo_used.0
00000000009c0638 0000000000000008 d VP8LDspInit_body_last_cpuinfo_used.0
00000000009c0640 0000000000000008 d WebPRescalerDspInit_body_last_cpuinfo_used.0
00000000009c0648 0000000000000008 d WebPInitUpsamplers_body_last_cpuinfo_used.0
00000000009c0650 0000000000000008 d WebPInitYUV444Converters_body_last_cpuinfo_used.2
00000000009c0658 0000000000000008 d WebPInitConvertARGBToYUV_body_last_cpuinfo_used.0
00000000009c0660 0000000000000008 d WebPInitSamplers_body_last_cpuinfo_used.2
00000000009c0668 0000000000000030 d g_worker_interface
00000000009c06a0 00000000000000e0 D _hb_Null_hb_buffer_t
00000000009c0780 00000000000000c0 D _hb_Null_hb_font_t
00000000009c0840 00000000000000b8 d _hb_font_funcs_default
00000000009c08f8 00000000000000b8 D _hb_Null_hb_font_funcs_t
00000000009c09b0 0000000000000048 d _hb_draw_funcs_default
00000000009c09f8 00000000000000d8 D _hb_Null_hb_unicode_funcs_t
00000000009c0b00 0000000000000048 D _hb_Null_hb_draw_funcs_t
00000000009c0b48 00000000000001a0 D _hb_Null_hb_face_t
00000000009c0ce8 0000000000000088 D _hb_Null_hb_paint_funcs_t
00000000009c0da0 0000000000000400 D BZ2_crc32Table
00000000009c11a0 0000000000000800 D BZ2_rNums
00000000009c19a0 0000000000000008 D _impure_ptr
00000000009c19a8 0000000000000160 D _impure_data
00000000009c1b08 00000000000001a8 D __global_locale
00000000009c1cb0 0000000000000020 D __default_locale
00000000009c1cd0 0000000000000018 D __sglue
00000000009c1ce8 0000000000000008 D __malloc_sbrk_base
00000000009c1cf0 0000000000000008 D __malloc_trim_threshold
00000000009c1cf8 0000000000000810 D __malloc_av_
00000000009c2508 0000000000000008 D environ
00000000009c2510 0000000000000400 d _current_working_directory
00000000009c2910 0000000000002000 d handles
00000000009c4910 0000000000000010 d __stderr_handle
00000000009c4920 0000000000000010 d __stdout_handle
00000000009c4930 0000000000000010 d __stdin_handle
00000000009c4940 0000000000000118 D devoptab_list
00000000009c4a58 0000000000000004 d defaultDevice
00000000009c4a60 d __tdata_lma
00000000009c4a68 d __tdata_lma_end
00000000009c4a70 b __bss_start__
00000000009c4a70 b completed.1
00000000009c4a78 b object.0
00000000009c4aa8 0000000000000004 b audio_device
00000000009c4aac 0000000000000004 b audio_opened
00000000009c4ab0 0000000000000008 b channel_done_callback
00000000009c4ab8 0000000000000008 b chunk_decoders
00000000009c4ac0 0000000000000008 b mix_channel
00000000009c4ac8 0000000000000008 b mix_postmix
00000000009c4ad0 0000000000000008 b mix_postmix_data
00000000009c4ad8 0000000000000020 b mixer
00000000009c4af8 0000000000000008 b music_data
00000000009c4b00 0000000000000004 b num_channels
00000000009c4b04 0000000000000004 b num_decoders
00000000009c4b08 0000000000000008 b posteffects
00000000009c4b10 0000000000000004 b reserved_channels
00000000009c4b14 0000000000000004 b ms_per_step
00000000009c4b18 0000000000000008 B music_cmd
00000000009c4b20 0000000000000008 b music_decoders
00000000009c4b28 0000000000000008 b music_finished_hook
00000000009c4b30 0000000000000008 b music_playing
00000000009c4b38 0000000000000004 b num_decoders
00000000009c4b40 0000000000000008 b soundfont_paths
00000000009c4b48 0000000000000048 b modplug
00000000009c4b90 0000000000000038 b settings
00000000009c4bc8 0000000000000088 b mpg123
00000000009c4c50 0000000000000058 b vorbis
00000000009c4ca8 0000000000000040 b opus
00000000009c4ce8 0000000000000100 b def_instr_name
00000000009c4de8 0000000000000004 b rcf_count.10150
00000000009c4dec 0000000000000004 B _Mix_effects_max_speed
00000000009c4df0 0000000000000008 b pathlist
00000000009c4df8 0000000000000001 b lastchan.10105
00000000009c4df9 0000000000000001 b laststatus.10104
00000000009c4dfa 0000000000000001 b nrpn.10106
00000000009c4e00 0000000000000010 b rpn_lsb.10108
00000000009c4e10 0000000000000010 b rpn_msb.10107
00000000009c4e20 0000000000000008 b pos_args_array
00000000009c4e28 0000000000000008 b pos_args_global
00000000009c4e30 0000000000000004 b position_channels
00000000009c4e34 0000000000000004 b initialized
00000000009c4e38 0000000000000010 b Gif89
00000000009c4e48 000000000000031c b GifScreen
00000000009c5164 0000000000000004 b ZeroDataBlock
00000000009c5168 0000000000000100 b buf.9898
00000000009c5268 0000000000000118 b buf.9926
00000000009c5380 0000000000000004 b clear_code.9952
00000000009c5384 0000000000000004 b code_size.9946
00000000009c5388 0000000000000004 b curbit.9927
00000000009c538c 0000000000000004 b done.9929
00000000009c5390 0000000000000004 b end_code.9953
00000000009c5394 0000000000000004 b firstcode.9950
00000000009c5398 0000000000000004 b fresh.9943
00000000009c539c 0000000000000004 b last_byte.9930
00000000009c53a0 0000000000000004 b lastbit.9928
00000000009c53a4 0000000000000004 b max_code.9948
00000000009c53a8 0000000000000004 b max_code_size.9949
00000000009c53ac 0000000000000004 b oldcode.9951
00000000009c53b0 0000000000000004 b set_code_size.9947
00000000009c53b8 0000000000000008 b sp.9956
00000000009c53c0 0000000000008000 b stack.9955
00000000009cd3c0 0000000000008000 b table.9954
00000000009d53c0 0000000000000090 b lib
00000000009d5450 00000000000000f0 b lib
00000000009d5540 0000000000000004 b buflen
00000000009d5548 0000000000000008 b error
00000000009d5550 0000000000000008 b linebuf
00000000009d5558 0000000000000028 b lib
00000000009d5580 0000000000000004 b TTF_byteswapped
00000000009d5584 0000000000000004 b TTF_initialized
00000000009d5588 0000000000000008 b library
00000000009d5590 0000000000000020 b SDL_SubsystemRefCount
00000000009d55b0 0000000000000004 b SDL_bInMainQuit
00000000009d55b4 0000000000000004 b assertion_running.0
00000000009d55b8 0000000000000004 b spinlock.1
00000000009d55c0 0000000000000008 b assertion_userdata
00000000009d55c8 0000000000000008 b assertion_mutex
00000000009d55d0 0000000000000008 b triggered_assertions
00000000009d55d8 0000000000000008 b SDL_hints
00000000009d55e0 0000000000000008 b log_function_mutex
00000000009d55e8 0000000000000008 b SDL_log_userdata
00000000009d55f0 0000000000000008 b SDL_loglevels
00000000009d55f8 0000000000000004 b format_idx_sub
00000000009d55fc 0000000000000004 b format_idx
00000000009d5600 0000000000000080 b open_devices
00000000009d5680 00000000000000c8 b current_audio
00000000009d5748 0000000000000004 b converters_chosen.0
00000000009d5750 0000000000000008 B SDL_Convert_F32_to_S32
00000000009d5758 0000000000000008 B SDL_Convert_F32_to_U16
00000000009d5760 0000000000000008 B SDL_Convert_F32_to_S16
00000000009d5768 0000000000000008 B SDL_Convert_F32_to_U8
00000000009d5770 0000000000000008 B SDL_Convert_F32_to_S8
00000000009d5778 0000000000000008 B SDL_Convert_S32_to_F32
00000000009d5780 0000000000000008 B SDL_Convert_U16_to_F32
00000000009d5788 0000000000000008 B SDL_Convert_S16_to_F32
00000000009d5790 0000000000000008 B SDL_Convert_U8_to_F32
00000000009d5798 0000000000000008 B SDL_Convert_S8_to_F32
00000000009d57a0 0000000000000004 b checked.0
00000000009d57a4 0000000000000004 b SDL_EventLoggingVerbosity
00000000009d57a8 0000000000000040 b SDL_EventQ
00000000009d57f0 0000000000000800 b SDL_disabled_events
00000000009d5ff0 0000000000000004 b SDL_sentinel_pending
00000000009d5ff4 0000000000000004 b SDL_event_watchers_removed
00000000009d5ff8 0000000000000004 b SDL_event_watchers_dispatching
00000000009d5ffc 0000000000000004 b SDL_event_watchers_count
00000000009d6000 0000000000000008 b SDL_event_watchers
00000000009d6008 0000000000000018 b SDL_EventOK
00000000009d6020 0000000000000008 b SDL_event_watchers_lock
00000000009d6028 0000000000000004 b recordAll
00000000009d602c 0000000000000004 b SDL_numGestureTouches
00000000009d6030 0000000000000008 b SDL_gestureTouch
00000000009d6038 0000000000000c18 b SDL_keyboard
00000000009d6c50 0000000000000004 b track_mouse_down
00000000009d6c58 0000000000000128 b SDL_mouse
00000000009d6d80 0000000000000004 b send_quit_pending
00000000009d6d88 0000000000000008 b track_touchid
00000000009d6d90 0000000000000008 b track_fingerid
00000000009d6d98 0000000000000004 b finger_touching
00000000009d6da0 0000000000000008 b SDL_touchDevices
00000000009d6da8 0000000000000004 b SDL_num_touch
00000000009d6db0 0000000000000008 b SDL_haptics
00000000009d6db8 0000000000000010 b SDL_ignored_controllers
00000000009d6dc8 0000000000000010 b SDL_allowed_controllers
00000000009d6dd8 0000000000000001 b gamecontroller_magic
00000000009d6de0 0000000000000008 b s_pDefaultMapping
00000000009d6de8 0000000000000008 b s_pSupportedControllers
00000000009d6df0 0000000000000010 b s_zeroGUID
00000000009d6e00 0000000000000008 b SDL_gamecontrollers
00000000009d6e08 0000000000000001 B SDL_joystick_magic
00000000009d6e0c 0000000000000004 b SDL_joystick_allows_background_events
00000000009d6e10 0000000000000008 b SDL_joystick_players
00000000009d6e18 0000000000000004 b SDL_joystick_player_count
00000000009d6e20 0000000000000008 b SDL_joysticks
00000000009d6e28 0000000000000004 b SDL_joysticks_quitting
00000000009d6e2c 0000000000000004 b SDL_joysticks_initialized
00000000009d6e30 0000000000000004 b SDL_joysticks_locked
00000000009d6e38 0000000000000004 b SDL_joystick_lock_pending
00000000009d6e40 0000000000000008 b SDL_joystick_lock
00000000009d6e48 0000000000000001 b texture_magic
00000000009d6e49 0000000000000001 b renderer_magic
00000000009d6e4c 0000000000000004 b SDL_updating_sensor
00000000009d6e50 0000000000000008 b SDL_sensors
00000000009d6e58 0000000000000008 b SDL_sensor_lock
00000000009d6e60 0000000000000080 b SDL_global_error_str.0
00000000009d6ee0 0000000000000028 b SDL_global_error.1
00000000009d6f08 0000000000000004 b tls_lock.2
00000000009d6f0c 0000000000000004 b tls_being_created.3
00000000009d6f10 0000000000000004 b tls_errbuf.4
00000000009d6f14 0000000000000004 b tls_lock.5
00000000009d6f18 0000000000000004 b SDL_tls_id.6
00000000009d6f20 0000000000000008 b SDL_generic_TLS
00000000009d6f28 0000000000000008 b SDL_generic_TLS_mutex
00000000009d6f30 00000000000000d0 b SDL_timer_data
00000000009d7000 0000000000000004 b formats_lock
00000000009d7008 0000000000000008 b formats
00000000009d7010 0000000000000004 b SDL_messagebox_count
00000000009d7018 0000000000000008 b _this
00000000009d7020 0000000000000004 b lock.0
00000000009d7024 0000000000000004 b generic_local_storage
00000000009d7028 0000000000000004 b operationMode
00000000009d7030 0000000000000008 b switch_window
00000000009d7038 00000000000003c0 b state
00000000009d73f8 0000000000000008 b start
00000000009d7400 0000000000000001 b started
00000000009d7408 0000000000000008 b g_VJoys
00000000009d7410 0000000000000200 b keys
00000000009d7610 0000000000000008 b last_timestamp
00000000009d7618 0000000000000008 b prev_buttons
00000000009d7620 0000000000000001 b kbdShown
00000000009d7621 0000000000000001 b kbdInited
00000000009d7628 0000000000000048 b kbdAppearArg
00000000009d7670 00000000000005d8 b kbd
00000000009d7c48 0000000000000290 b touchStateOld
00000000009d7ed8 0000000000000290 b touchState
00000000009d8168 0000000000000030 b dummy_thread
00000000009d8198 0000000000000008 b _eglDriver
00000000009d81a0 0000000000000010 b _eglModuleMutex
00000000009d81b0 0000000000000010 b _eglGlobalMutex
00000000009d81c0 0000000000000004 b drifb_ID
00000000009d81c8 0000000000000010 b nouveau_screen_mutex
00000000009d81d8 0000000000000004 b id.1
00000000009d81dc 0000000000000004 b id.0
00000000009d81e0 0000000000001000 b buf.10
00000000009d91e0 0000000000000040 b rest.3
00000000009d9220 0000000000000001 b value.7
00000000009d9228 0000000000000010 B OneTimeLock
00000000009d9238 0000000000000400 B _mesa_ubyte_to_float_color_tab
00000000009d9638 0000000000000001 b initialized.0
00000000009d9640 0000000000000010 b DynamicIDMutex
00000000009d9650 0000000000000004 b oom_msg_id.0
00000000009d9658 000000000000063c b InstSize
00000000009d9c94 0000000000000001 b tableInitialized.70
00000000009d9c98 0000000000000008 b LogFile
00000000009d9ca0 0000000000000004 b error_msg_id.1
00000000009d9ca4 0000000000000004 b numCalls.2
00000000009d9ca8 0000000000000110 B _mesa_extension_override_disables
00000000009d9db8 0000000000000110 B _mesa_extension_override_enables
00000000009d9ec8 0000000000000088 b unrecognized_extensions
00000000009d9f50 0000000000000001 b warned.0
00000000009d9f58 00000000000004d8 b DummyFramebuffer
00000000009da430 0000000000000058 b DummyRenderbuffer
00000000009da488 00000000000004d8 b IncompleteFramebuffer
00000000009da960 0000000000000004 b msg_id.1
00000000009da964 0000000000000004 b msg_id.2
00000000009da968 0000000000000008 b format_array_format_table
00000000009da970 0000000000000004 b format_array_format_table_exists
00000000009da974 0000000000000004 b msg_id.0
00000000009da978 00000000000012c8 B driDispatchRemapTable
00000000009dbc40 0000000000000001 b initialized.0
00000000009dbc48 0000000000000008 b path.0
00000000009dbc50 0000000000000001 b read_env_var.1
00000000009dbc54 0000000000000004 b msg_id.1
00000000009dbc58 0000000000000001 b initialized.1
00000000009dbc59 0000000000000001 b initialized.3
00000000009dbc60 0000000000000bc0 b table.0
00000000009dc820 0000000000000bc0 b table.2
00000000009dd3e0 0000000000000014 b token_tmp
00000000009dd3f4 0000000000000001 b value.0
00000000009dd3f8 0000000000000004 B ST_DEBUG
00000000009dd400 0000000000000008 b value.0
00000000009dd408 0000000000000008 b guard variable for (anonymous namespace)::builtin_builder::add_image_function(char const*, char const*, ir_function_signature* ((anonymous namespace)::builtin_builder::*)(glsl_type const*, unsigned int, unsigned int), unsigned int, unsigned int, ir_intrinsic_id)::types
00000000009dd410 0000000000000004 b builtin_users
00000000009dd418 0000000000000010 b builtins_lock
00000000009dd428 0000000000000010 b builtins
00000000009dd438 0000000000000108 b (anonymous namespace)::builtin_builder::add_image_function(char const*, char const*, ir_function_signature* ((anonymous namespace)::builtin_builder::*)(glsl_type const*, unsigned int, unsigned int), unsigned int, unsigned int, ir_intrinsic_id)::types
00000000009dd540 0000000000000001 B ir_variable::temporaries_allocate_names
00000000009dd544 0000000000000004 B glcpp_parser_debug
00000000009dd548 0000000000000008 b guard variable for glsl_type::vec(unsigned int)::ts
00000000009dd550 0000000000000008 b guard variable for glsl_type::bvec(unsigned int)::ts
00000000009dd558 0000000000000008 b guard variable for glsl_type::dvec(unsigned int)::ts
00000000009dd560 0000000000000008 b guard variable for glsl_type::ivec(unsigned int)::ts
00000000009dd568 0000000000000008 b guard variable for glsl_type::uvec(unsigned int)::ts
00000000009dd570 0000000000000008 b guard variable for glsl_type::i8vec(unsigned int)::ts
00000000009dd578 0000000000000008 b guard variable for glsl_type::u8vec(unsigned int)::ts
00000000009dd580 0000000000000008 b guard variable for glsl_type::f16vec(unsigned int)::ts
00000000009dd588 0000000000000008 b guard variable for glsl_type::i16vec(unsigned int)::ts
00000000009dd590 0000000000000008 b guard variable for glsl_type::i64vec(unsigned int)::ts
00000000009dd598 0000000000000008 b guard variable for glsl_type::u16vec(unsigned int)::ts
00000000009dd5a0 0000000000000008 b guard variable for glsl_type::u64vec(unsigned int)::ts
00000000009dd5a8 0000000000000004 b glsl_type_users
00000000009dd5b0 0000000000000030 B glsl_type::_bool_type
00000000009dd5e0 0000000000000030 B glsl_type::_mat2_type
00000000009dd610 0000000000000030 B glsl_type::_mat3_type
00000000009dd640 0000000000000030 B glsl_type::_mat4_type
00000000009dd670 0000000000000030 B glsl_type::_uint_type
00000000009dd6a0 0000000000000030 B glsl_type::_vec2_type
00000000009dd6d0 0000000000000030 B glsl_type::_vec3_type
00000000009dd700 0000000000000030 B glsl_type::_vec4_type
00000000009dd730 0000000000000030 B glsl_type::_vec8_type
00000000009dd760 0000000000000030 B glsl_type::_void_type
00000000009dd790 0000000000000010 B glsl_type::hash_mutex
00000000009dd7a0 0000000000000030 B glsl_type::_bvec2_type
00000000009dd7d0 0000000000000030 B glsl_type::_bvec3_type
00000000009dd800 0000000000000030 B glsl_type::_bvec4_type
00000000009dd830 0000000000000030 B glsl_type::_bvec8_type
00000000009dd860 0000000000000030 B glsl_type::_dmat2_type
00000000009dd890 0000000000000030 B glsl_type::_dmat3_type
00000000009dd8c0 0000000000000030 B glsl_type::_dmat4_type
00000000009dd8f0 0000000000000030 B glsl_type::_dvec2_type
00000000009dd920 0000000000000030 B glsl_type::_dvec3_type
00000000009dd950 0000000000000030 B glsl_type::_dvec4_type
00000000009dd980 0000000000000030 B glsl_type::_dvec8_type
00000000009dd9b0 0000000000000030 B glsl_type::_error_type
00000000009dd9e0 0000000000000030 B glsl_type::_float_type
00000000009dda10 0000000000000030 B glsl_type::_ivec2_type
00000000009dda40 0000000000000030 B glsl_type::_ivec3_type
00000000009dda70 0000000000000030 B glsl_type::_ivec4_type
00000000009ddaa0 0000000000000030 B glsl_type::_ivec8_type
00000000009ddad0 0000000000000030 B glsl_type::_uvec2_type
00000000009ddb00 0000000000000030 B glsl_type::_uvec3_type
00000000009ddb30 0000000000000030 B glsl_type::_uvec4_type
00000000009ddb60 0000000000000030 B glsl_type::_uvec8_type
00000000009ddb90 0000000000000030 B glsl_type::_vec16_type
00000000009ddbc0 0000000000000008 B glsl_type::array_types
00000000009ddbc8 0000000000000030 B glsl_type::_bvec16_type
00000000009ddbf8 0000000000000030 B glsl_type::_double_type
00000000009ddc28 0000000000000030 B glsl_type::_dvec16_type
00000000009ddc58 0000000000000030 B glsl_type::_i8vec2_type
00000000009ddc88 0000000000000030 B glsl_type::_i8vec3_type
00000000009ddcb8 0000000000000030 B glsl_type::_i8vec4_type
00000000009ddce8 0000000000000030 B glsl_type::_i8vec8_type
00000000009ddd18 0000000000000030 B glsl_type::_int8_t_type
00000000009ddd48 0000000000000030 B glsl_type::_ivec16_type
00000000009ddd78 0000000000000030 B glsl_type::_mat2x3_type
00000000009ddda8 0000000000000030 B glsl_type::_mat2x4_type
00000000009dddd8 0000000000000030 B glsl_type::_mat3x2_type
00000000009dde08 0000000000000030 B glsl_type::_mat3x4_type
00000000009dde38 0000000000000030 B glsl_type::_mat4x2_type
00000000009dde68 0000000000000030 B glsl_type::_mat4x3_type
00000000009dde98 0000000000000030 B glsl_type::_u8vec2_type
00000000009ddec8 0000000000000030 B glsl_type::_u8vec3_type
00000000009ddef8 0000000000000030 B glsl_type::_u8vec4_type
00000000009ddf28 0000000000000030 B glsl_type::_u8vec8_type
00000000009ddf58 0000000000000030 B glsl_type::_uvec16_type
00000000009ddf88 0000000000000008 B glsl_type::struct_types
00000000009ddf90 0000000000000030 B glsl_type::_dmat2x3_type
00000000009ddfc0 0000000000000030 B glsl_type::_dmat2x4_type
00000000009ddff0 0000000000000030 B glsl_type::_dmat3x2_type
00000000009de020 0000000000000030 B glsl_type::_dmat3x4_type
00000000009de050 0000000000000030 B glsl_type::_dmat4x2_type
00000000009de080 0000000000000030 B glsl_type::_dmat4x3_type
00000000009de0b0 0000000000000030 B glsl_type::_f16mat2_type
00000000009de0e0 0000000000000030 B glsl_type::_f16mat3_type
00000000009de110 0000000000000030 B glsl_type::_f16mat4_type
00000000009de140 0000000000000030 B glsl_type::_f16vec2_type
00000000009de170 0000000000000030 B glsl_type::_f16vec3_type
00000000009de1a0 0000000000000030 B glsl_type::_f16vec4_type
00000000009de1d0 0000000000000030 B glsl_type::_f16vec8_type
00000000009de200 0000000000000030 B glsl_type::_i16vec2_type
00000000009de230 0000000000000030 B glsl_type::_i16vec3_type
00000000009de260 0000000000000030 B glsl_type::_i16vec4_type
00000000009de290 0000000000000030 B glsl_type::_i16vec8_type
00000000009de2c0 0000000000000030 B glsl_type::_i64vec2_type
00000000009de2f0 0000000000000030 B glsl_type::_i64vec3_type
00000000009de320 0000000000000030 B glsl_type::_i64vec4_type
00000000009de350 0000000000000030 B glsl_type::_i64vec8_type
00000000009de380 0000000000000030 B glsl_type::_i8vec16_type
00000000009de3b0 0000000000000030 B glsl_type::_image1D_type
00000000009de3e0 0000000000000030 B glsl_type::_image2D_type
00000000009de410 0000000000000030 B glsl_type::_image3D_type
00000000009de440 0000000000000030 B glsl_type::_int16_t_type
00000000009de470 0000000000000030 B glsl_type::_int64_t_type
00000000009de4a0 0000000000000030 B glsl_type::_sampler_type
00000000009de4d0 0000000000000030 B glsl_type::_u16vec2_type
00000000009de500 0000000000000030 B glsl_type::_u16vec3_type
00000000009de530 0000000000000030 B glsl_type::_u16vec4_type
00000000009de560 0000000000000030 B glsl_type::_u16vec8_type
00000000009de590 0000000000000030 B glsl_type::_u64vec2_type
00000000009de5c0 0000000000000030 B glsl_type::_u64vec3_type
00000000009de5f0 0000000000000030 B glsl_type::_u64vec4_type
00000000009de620 0000000000000030 B glsl_type::_u64vec8_type
00000000009de650 0000000000000030 B glsl_type::_u8vec16_type
00000000009de680 0000000000000030 B glsl_type::_uint8_t_type
00000000009de6b0 0000000000000030 B glsl_type::_f16vec16_type
00000000009de6e0 0000000000000030 B glsl_type::_i16vec16_type
00000000009de710 0000000000000030 B glsl_type::_i64vec16_type
00000000009de740 0000000000000030 B glsl_type::_iimage1D_type
00000000009de770 0000000000000030 B glsl_type::_iimage2D_type
00000000009de7a0 0000000000000030 B glsl_type::_iimage3D_type
00000000009de7d0 0000000000000030 B glsl_type::_u16vec16_type
00000000009de800 0000000000000030 B glsl_type::_u64vec16_type
00000000009de830 0000000000000030 B glsl_type::_uimage1D_type
00000000009de860 0000000000000030 B glsl_type::_uimage2D_type
00000000009de890 0000000000000030 B glsl_type::_uimage3D_type
00000000009de8c0 0000000000000030 B glsl_type::_uint16_t_type
00000000009de8f0 0000000000000030 B glsl_type::_uint64_t_type
00000000009de920 0000000000000008 B glsl_type::function_types
00000000009de928 0000000000000030 B glsl_type::_f16mat2x3_type
00000000009de958 0000000000000030 B glsl_type::_f16mat2x4_type
00000000009de988 0000000000000030 B glsl_type::_f16mat3x2_type
00000000009de9b8 0000000000000030 B glsl_type::_f16mat3x4_type
00000000009de9e8 0000000000000030 B glsl_type::_f16mat4x2_type
00000000009dea18 0000000000000030 B glsl_type::_f16mat4x3_type
00000000009dea48 0000000000000030 B glsl_type::_float16_t_type
00000000009dea78 0000000000000030 B glsl_type::_image2DMS_type
00000000009deaa8 0000000000000030 B glsl_type::_imageCube_type
00000000009dead8 0000000000000030 B glsl_type::_sampler1D_type
00000000009deb08 0000000000000030 B glsl_type::_sampler2D_type
00000000009deb38 0000000000000030 B glsl_type::_sampler3D_type
00000000009deb68 0000000000000008 B glsl_type::interface_types
00000000009deb70 0000000000000030 B glsl_type::_iimage2DMS_type
00000000009deba0 0000000000000030 B glsl_type::_iimageCube_type
00000000009debd0 0000000000000030 B glsl_type::_isampler1D_type
00000000009dec00 0000000000000030 B glsl_type::_isampler2D_type
00000000009dec30 0000000000000030 B glsl_type::_isampler3D_type
00000000009dec60 0000000000000030 B glsl_type::_uimage2DMS_type
00000000009dec90 0000000000000030 B glsl_type::_uimageCube_type
00000000009decc0 0000000000000030 B glsl_type::_usampler1D_type
00000000009decf0 0000000000000030 B glsl_type::_usampler2D_type
00000000009ded20 0000000000000030 B glsl_type::_usampler3D_type
00000000009ded50 0000000000000008 B glsl_type::subroutine_types
00000000009ded58 0000000000000030 B glsl_type::_atomic_uint_type
00000000009ded88 0000000000000030 B glsl_type::_image2DRect_type
00000000009dedb8 0000000000000030 B glsl_type::_imageBuffer_type
00000000009dede8 0000000000000030 B glsl_type::_sampler2DMS_type
00000000009dee18 0000000000000030 B glsl_type::_samplerCube_type
00000000009dee48 0000000000000030 B glsl_type::_iimage2DRect_type
00000000009dee78 0000000000000030 B glsl_type::_iimageBuffer_type
00000000009deea8 0000000000000030 B glsl_type::_image1DArray_type
00000000009deed8 0000000000000030 B glsl_type::_image2DArray_type
00000000009def08 0000000000000030 B glsl_type::_isampler2DMS_type
00000000009def38 0000000000000030 B glsl_type::_isamplerCube_type
00000000009def68 0000000000000030 B glsl_type::_subpassInput_type
00000000009def98 0000000000000030 B glsl_type::_uimage2DRect_type
00000000009defc8 0000000000000030 B glsl_type::_uimageBuffer_type
00000000009deff8 0000000000000030 B glsl_type::_usampler2DMS_type
00000000009df028 0000000000000030 B glsl_type::_usamplerCube_type
00000000009df058 0000000000000030 B glsl_type::_iimage1DArray_type
00000000009df088 0000000000000030 B glsl_type::_iimage2DArray_type
00000000009df0b8 0000000000000030 B glsl_type::_isubpassInput_type
00000000009df0e8 0000000000000030 B glsl_type::_sampler2DRect_type
00000000009df118 0000000000000030 B glsl_type::_samplerBuffer_type
00000000009df148 0000000000000030 B glsl_type::_uimage1DArray_type
00000000009df178 0000000000000030 B glsl_type::_uimage2DArray_type
00000000009df1a8 0000000000000030 B glsl_type::_usubpassInput_type
00000000009df1d8 0000000000000030 B glsl_type::_image2DMSArray_type
00000000009df208 0000000000000030 B glsl_type::_imageCubeArray_type
00000000009df238 0000000000000030 B glsl_type::_isampler2DRect_type
00000000009df268 0000000000000030 B glsl_type::_isamplerBuffer_type
00000000009df298 0000000000000030 B glsl_type::_sampler1DArray_type
00000000009df2c8 0000000000000030 B glsl_type::_sampler2DArray_type
00000000009df2f8 0000000000000030 B glsl_type::_subpassInputMS_type
00000000009df328 0000000000000030 B glsl_type::_usampler2DRect_type
00000000009df358 0000000000000030 B glsl_type::_usamplerBuffer_type
00000000009df388 0000000000000030 B glsl_type::_iimage2DMSArray_type
00000000009df3b8 0000000000000030 B glsl_type::_iimageCubeArray_type
00000000009df3e8 0000000000000030 B glsl_type::_isampler1DArray_type
00000000009df418 0000000000000030 B glsl_type::_isampler2DArray_type
00000000009df448 0000000000000030 B glsl_type::_isubpassInputMS_type
00000000009df478 0000000000000030 B glsl_type::_sampler1DShadow_type
00000000009df4a8 0000000000000030 B glsl_type::_sampler2DShadow_type
00000000009df4d8 0000000000000030 B glsl_type::_uimage2DMSArray_type
00000000009df508 0000000000000030 B glsl_type::_uimageCubeArray_type
00000000009df538 0000000000000030 B glsl_type::_usampler1DArray_type
00000000009df568 0000000000000030 B glsl_type::_usampler2DArray_type
00000000009df598 0000000000000030 B glsl_type::_usubpassInputMS_type
00000000009df5c8 0000000000000008 B glsl_type::explicit_matrix_types
00000000009df5d0 0000000000000030 B glsl_type::_sampler2DMSArray_type
00000000009df600 0000000000000030 B glsl_type::_samplerCubeArray_type
00000000009df630 0000000000000030 B glsl_type::_isampler2DMSArray_type
00000000009df660 0000000000000030 B glsl_type::_isamplerCubeArray_type
00000000009df690 0000000000000030 B glsl_type::_samplerCubeShadow_type
00000000009df6c0 0000000000000030 B glsl_type::_usampler2DMSArray_type
00000000009df6f0 0000000000000030 B glsl_type::_usamplerCubeArray_type
00000000009df720 0000000000000030 B glsl_type::_samplerExternalOES_type
00000000009df750 0000000000000030 B glsl_type::_sampler2DRectShadow_type
00000000009df780 0000000000000030 B glsl_type::_sampler1DArrayShadow_type
00000000009df7b0 0000000000000030 B glsl_type::_sampler2DArrayShadow_type
00000000009df7e0 0000000000000030 B glsl_type::_samplerCubeArrayShadow_type
00000000009df810 0000000000000030 B glsl_type::_int_type
00000000009df840 0000000000000030 b glsl_type::vec(unsigned int)::ts
00000000009df870 0000000000000030 b glsl_type::bvec(unsigned int)::ts
00000000009df8a0 0000000000000030 b glsl_type::dvec(unsigned int)::ts
00000000009df8d0 0000000000000030 b glsl_type::ivec(unsigned int)::ts
00000000009df900 0000000000000030 b glsl_type::uvec(unsigned int)::ts
00000000009df930 0000000000000030 b glsl_type::i8vec(unsigned int)::ts
00000000009df960 0000000000000030 b glsl_type::u8vec(unsigned int)::ts
00000000009df990 0000000000000030 b glsl_type::f16vec(unsigned int)::ts
00000000009df9c0 0000000000000030 b glsl_type::i16vec(unsigned int)::ts
00000000009df9f0 0000000000000030 b glsl_type::i64vec(unsigned int)::ts
00000000009dfa20 0000000000000030 b glsl_type::u16vec(unsigned int)::ts
00000000009dfa50 0000000000000030 b glsl_type::u64vec(unsigned int)::ts
00000000009dfa80 0000000000000400 b views.0
00000000009dfe80 0000000000000100 b zeros.1
00000000009dff80 0000000000000080 b error_tokens
00000000009e0000 0000000000000004 b id.0
00000000009e0008 0000000000000080 b buffer.1
00000000009e0088 0000000000000004 B nouveau_mesa_debug
00000000009e008c 0000000000000004 b id.1
00000000009e0090 0000000000000004 b id.0
00000000009e0098 0000000000000008 b fout.0
00000000009e00a0 0000000000000008 b loc
00000000009e00a8 0000000000000004 b cpu_once_flag
00000000009e00b0 0000000000000014 B util_cpu_caps
00000000009e00c8 0000000000000018 b address_reg
00000000009e00e0 0000000000000018 b undef_dst
00000000009e00f8 0000000000000018 b undef_src
00000000009e0110 0000000000000050 b buf.0
00000000009e0160 000000000000000a b s.4
00000000009e0170 0000000000000014 b s.6
00000000009e0188 0000000000000014 b s.9
00000000009e01a0 0000000000000064 b str.3
00000000009e0208 00000000000003f0 B _mesa_DummyProgram
00000000009e05f8 00000000000000c8 b DummyShader
00000000009e06c0 00000000000000a0 b DummyBufferObject
00000000009e0760 0000000000000001 b disable.2
00000000009e0764 0000000000000004 b id.0
00000000009e0768 0000000000000004 b id.1
00000000009e076c 0000000000000001 b read.3
00000000009e0770 0000000000000004 b warnCount.0
00000000009e0778 0000000000000004 b DummySemaphoreObject
00000000009e077c 0000000000000004 b count.0
00000000009e0780 0000000000000078 b inv_tab
00000000009e07f8 0000000000004800 b CachedShaders
00000000009e4ff8 0000000000000004 b NumCachedShaders
00000000009e5000 0000000000000020 b address_reg
00000000009e5020 0000000000000020 b address_reg2
00000000009e5040 0000000000000020 b sampler_reladdr
00000000009e5060 0000000000000020 b undef_dst
00000000009e5080 0000000000000020 b undef_src
00000000009e50a0 0000000000000004 b glsl_to_tgsi_visitor::visit(ir_constant*)::in_array
00000000009e50a8 00000000000000f0 b gl_FogParameters_fields
00000000009e5198 0000000000000090 b gl_LightProducts_fields
00000000009e5228 0000000000000150 b gl_PointParameters_fields
00000000009e5378 0000000000000030 b gl_LightModelProducts_fields
00000000009e53a8 00000000000000f0 b gl_MaterialParameters_fields
00000000009e5498 0000000000000090 b gl_DepthRangeParameters_fields
00000000009e5528 0000000000000030 b gl_LightModelParameters_fields
00000000009e5558 0000000000000240 b gl_LightSourceParameters_fields
00000000009e5798 0000000000000030 B glsl_type::_struct_gl_FogParameters_type
00000000009e57c8 0000000000000030 B glsl_type::_struct_gl_LightProducts_type
00000000009e57f8 0000000000000030 B glsl_type::_struct_gl_PointParameters_type
00000000009e5828 0000000000000030 B glsl_type::_struct_gl_LightModelProducts_type
00000000009e5858 0000000000000030 B glsl_type::_struct_gl_MaterialParameters_type
00000000009e5888 0000000000000030 B glsl_type::_struct_gl_DepthRangeParameters_type
00000000009e58b8 0000000000000030 B glsl_type::_struct_gl_LightModelParameters_type
00000000009e58e8 0000000000000030 B glsl_type::_struct_gl_LightSourceParameters_type
00000000009e5918 0000000000000008 b nv50_ir::colour
00000000009e5920 0000000000000121 B nv50_ir::GCRA::relDegree
00000000009e5a48 0000000000000014 b s.0
00000000009e5a5c 0000000000000001 b value.0
00000000009e5a60 0000000000000004 b (anonymous namespace)::get_static_cond()::once
00000000009e5a70 0000000000000010 b (anonymous namespace)::fake_cond
00000000009e5a80 0000000000000008 b (anonymous namespace)::static_cond
00000000009e5a88 0000000000000004 b (anonymous namespace)::get_static_mutex()::once
00000000009e5a90 0000000000000010 b (anonymous namespace)::fake_mutex
00000000009e5aa0 0000000000000008 b (anonymous namespace)::static_mutex
00000000009e5ab0 0000000000000028 b (anonymous namespace)::emergency_pool
00000000009e5ad8 0000000000000008 b (anonymous namespace)::__new_handler
00000000009e5ae0 0000000000000020 V std::string::_Rep::_S_empty_rep_storage
00000000009e5b00 0000000000000004 b init
00000000009e5b04 0000000000000001 B __eh_globals_init::_S_init
00000000009e5b08 0000000000000010 b (anonymous namespace)::eh_globals
00000000009e5b18 0000000000000010 b dynamic_mutex.0
00000000009e5b28 0000000000001800 b dynamic_stubs
00000000009e7328 0000000000000004 b flag.1
00000000009e732c 0000000000000004 b num_dynamic_stubs
00000000009e7330 0000000000000008 b nop_handler
00000000009e7338 0000000000000008 b g_appletGuard
00000000009e7340 0000000000000001 b g_appletInfoInitialized
00000000009e7348 0000000000000050 b g_appletInfo
00000000009e7398 0000000000000004 b g_appletCpuBoostMode
00000000009e739c 0000000000000004 b g_appletThemeColorType
00000000009e73a0 000000000000000c b g_appletLibraryAppletLaunchableEvent
00000000009e73ac 0000000000000001 b g_appletSuspendedTickInitialized
00000000009e73b0 0000000000000008 b g_appletSuspendedTick
00000000009e73b8 0000000000000008 b g_appletInitTickBase
00000000009e73c0 000000000000000c b g_appletSuspendedTickEvent
00000000009e73cc 0000000000000001 b g_appletCopyrightInitialized
00000000009e73d0 0000000000000028 b g_appletCopyrightTmem
00000000009e73f8 0000000000000004 b g_appletRecordingInitialized
00000000009e7400 0000000000000028 b g_appletRecordingTmem
00000000009e7428 0000000000000018 b g_appletFirstHook
00000000009e7440 0000000000000001 b g_appletNotifiedRunning
00000000009e7441 0000000000000001 b g_appletFocusState
00000000009e7444 0000000000000004 b g_appletPerformanceMode
00000000009e7448 0000000000000001 b g_appletOperationMode
00000000009e7450 0000000000000008 b g_appletResourceUserId
00000000009e7458 000000000000000c b g_appletMessageEvent
00000000009e7468 0000000000000010 b g_appletIDebugFunctions
00000000009e7478 0000000000000010 b g_appletIDisplayController
00000000009e7488 0000000000000010 b g_appletIAudioController
00000000009e7498 0000000000000010 b g_appletIWindowController
00000000009e74a8 0000000000000010 b g_appletISelfController
00000000009e74b8 0000000000000010 b g_appletICommonStateGetter
00000000009e74c8 0000000000000010 b g_appletILibraryAppletCreator
00000000009e74d8 0000000000000010 b g_appletIProcessWindingController
00000000009e74e8 0000000000000010 b g_appletILibraryAppletSelfAccessor
00000000009e74f8 0000000000000010 b g_appletIApplicationCreator
00000000009e7508 0000000000000010 b g_appletIGlobalStateController
00000000009e7518 0000000000000010 b g_appletIFunctions
00000000009e7528 0000000000000010 b g_appletIAppletCommonFunctions
00000000009e7538 0000000000000004 b g_appletExitProcessResult
00000000009e753c 0000000000000001 b g_appletExitProcessFlag
00000000009e753d 0000000000000001 b g_appletLeftInitialized
00000000009e7540 0000000000000010 b g_appletProxySession
00000000009e7550 0000000000000010 b g_appletSrv
00000000009e7560 0000000000000004 V __nx_applet_exit_mode
00000000009e7568 0000000000000008 V __nx_applet_PerformanceConfiguration
00000000009e7570 0000000000000080 V __nx_applet_AppletAttribute
00000000009e75f0 0000000000000008 b g_audrenGuard
00000000009e75f8 000000000000000c b g_audrenEvent
00000000009e7608 0000000000000028 b g_audrenWorkBuf
00000000009e7630 0000000000000010 b g_audrenIAudioRenderer
00000000009e7640 0000000000000004 B g_audrenRevision
00000000009e7648 0000000000000008 b g_hidGuard
00000000009e7650 0000000000000008 b g_sevenSixAxisSensorBuffer
00000000009e7658 0000000000000004 b g_hidVibrationMutex
00000000009e7660 0000000000000020 b g_hidSharedmem
00000000009e7680 0000000000000010 b g_hidIActiveVibrationDeviceList
00000000009e7690 0000000000000010 b g_hidIAppletResource
00000000009e76a0 0000000000000010 b g_hidSrv
00000000009e76b0 0000000000000008 b g_nvGuard
00000000009e76b8 0000000000000028 b g_nvTransfermem
00000000009e76e0 0000000000000010 b g_nvSrvClone
00000000009e76f0 0000000000000010 b g_nvSrv
00000000009e7700 0000000000000008 b g_psmGuard
00000000009e7708 0000000000000010 b g_psmSrv
00000000009e7718 0000000000000008 b g_smGuard
00000000009e7720 0000000000000008 b g_smOverridesNum
00000000009e7728 0000000000000180 b g_smOverrides
00000000009e78a8 0000000000000010 b g_smSrv
00000000009e78b8 0000000000000008 b g_nvFenceGuard
00000000009e78c0 0000000000000300 b g_NvEvents
00000000009e7bc0 0000000000000008 b g_NvEventUsedMask
00000000009e7bc8 0000000000000008 b g_nvGpuGuard
00000000009e7bd0 0000000000000004 b g_tpc_masks
00000000009e7bd8 0000000000000028 b g_zcull_info
00000000009e7c00 0000000000000004 b g_zcull_ctx_size
00000000009e7c08 00000000000000a0 b g_gpu_characteristics
00000000009e7ca8 0000000000000008 b g_nvMapGuard
00000000009e7cb0 0000000000000080 b g_defaultWin
00000000009e7d30 0000000000000010 b g_viLayer
00000000009e7d40 0000000000000050 b g_viDisplay
00000000009e7d90 0000000000000001 b g_libappletJumpFlag
00000000009e7d98 0000000000000008 b g_userIdStorage
00000000009e7da0 0000000000000010 b g_randomSeed
00000000009e7db0 0000000000000001 b g_hasRandomSeed
00000000009e7db4 0000000000000004 b g_lastLoadResult
00000000009e7db8 0000000000000008 b g_nextLoadArgv
00000000009e7dc0 0000000000000008 b g_nextLoadPath
00000000009e7dc8 0000000000000004 b g_processHandle
00000000009e7dd0 0000000000000018 b g_syscallHints
00000000009e7de8 0000000000000008 b g_overrideArgv
00000000009e7df0 0000000000000008 b g_overrideHeapSize
00000000009e7df8 0000000000000008 b g_overrideHeapAddr
00000000009e7e00 0000000000000008 b g_loaderRetAddr
00000000009e7e08 0000000000000004 b g_mainThreadHandle
00000000009e7e10 0000000000000008 b g_loaderInfoSize
00000000009e7e18 0000000000000008 b g_loaderInfo
00000000009e7e20 0000000000000001 b g_isNso
00000000009e7e24 0000000000000004 b g_hosVersion
00000000009e7e28 0000000000000008 V __romfs_path
00000000009e7e30 0000000000003b00 b romfs_mounts
00000000009eb930 0000000000000001 b romfs_initialised
00000000009eb938 B __stack_top
00000000009eb940 0000000000000001 b g_IsLegacyKernel
00000000009eb948 0000000000000008 b g_Reservations
00000000009eb950 0000000000000010 b g_StackRegion
00000000009eb960 0000000000000010 b g_AslrRegion
00000000009eb970 0000000000000010 b g_HeapRegion
00000000009eb980 0000000000000010 b g_AliasRegion
00000000009eb990 0000000000000004 b g_VirtmemMutex
00000000009eb998 0000000000000008 b g_apmGuard
00000000009eb9a0 0000000000000010 b g_apmISession
00000000009eb9b0 0000000000000010 b g_apmSrv
00000000009eb9c0 0000000000000054 b g_bsdSessionMgr
00000000009eba18 0000000000000008 b g_fsGuard
00000000009eba20 0000000000000054 b g_fsSessionMgr
00000000009eba78 0000000000000010 b g_fsSrv
00000000009eba88 0000000000000008 b g_viGuard
00000000009eba90 0000000000000010 b g_viIHOSBinderDriverIndirect
00000000009ebaa0 0000000000000010 b g_viIManagerDisplayService
00000000009ebab0 0000000000000010 b g_viISystemDisplayService
00000000009ebac0 0000000000000010 b g_viIHOSBinderDriverRelay
00000000009ebad0 0000000000000010 b g_viIApplicationDisplayService
00000000009ebae0 0000000000000010 b g_viRootService
00000000009ebaf0 0000000000000008 V __nx_vi_layer_id
00000000009ebaf8 0000000000000008 b g_argv_empty
00000000009ebb00 0000000000000008 B __system_argv
00000000009ebb08 0000000000000004 B __system_argc
00000000009ebb10 0000000000000340 B __nx_exceptiondump
00000000009ebe50 0000000000000004 V __nx_exception_ignoredebug
00000000009ebe60 0000000000000400 V __nx_exception_stack
00000000009ec260 0000000000000008 V __nx_heap_size
00000000009ec268 0000000000000008 b __bootticks
00000000009ec270 0000000000000008 b __boottime
00000000009ec278 0000000000000004 V __nx_time_type
00000000009ec280 0000000000000004 B __nxlink_host
00000000009ec288 0000000000002800 b fsdev_fsdevices
00000000009eea88 0000000000000004 b fsdev_fsdevice_cwd
00000000009eea8c 0000000000000001 b fsdev_initialised
00000000009eea90 0000000000000004 b g_randMutex
00000000009eea94 0000000000000001 b g_randInit
00000000009eeaa0 0000000000000040 b g_chacha
00000000009eeae0 00000000000000d8 b g_tlsDestructors
00000000009eebb8 0000000000000008 b g_tlsUsageMask
00000000009eebc0 0000000000000038 b g_mainThread
00000000009eebf8 0000000000000008 b g_threadList
00000000009eec00 0000000000000004 b g_threadMutex
00000000009eec08 0000000000000008 b g_setsysGuard
00000000009eec10 0000000000000010 b g_setsysSrv
00000000009eec20 0000000000000008 b g_timeGuard
00000000009eec28 0000000000000020 b g_timeSharedmem
00000000009eec48 0000000000000010 b g_timeLocalSystemClock
00000000009eec58 0000000000000010 b g_timeTimeZoneService
00000000009eec68 0000000000000010 b g_timeSteadyClock
00000000009eec78 0000000000000010 b g_timeNetworkSystemClock
00000000009eec88 0000000000000010 b g_timeUserSystemClock
00000000009eec98 0000000000000010 b g_timeSrv
00000000009eeca8 0000000000000004 V __nx_time_service_type
00000000009eecac 0000000000000004 b seq
00000000009eecb0 0000000000000004 B ModPlug::gSampleSize
00000000009eecb4 0000000000000004 B CSoundFile::gdwSysInfo
00000000009eecb8 0000000000000004 B CSoundFile::gnCPUUsage
00000000009eecc0 0000000000000008 B CSoundFile::gpSndMixHook
00000000009eecc8 0000000000000004 B CSoundFile::gdwSoundSetup
00000000009eecd0 0000000000000008 B CSoundFile::gpMixPluginCreateProc
00000000009eecd8 0000000000000004 B CSoundFile::gnVUMeter
00000000009eecdc 0000000000000004 B gbInitPlugins
00000000009eece0 0000000000000004 B gnDryLOfsVol
00000000009eece4 0000000000000004 B gnDryROfsVol
00000000009eece8 0000000000000004 B gnReverbSend
00000000009eecec 0000000000000004 B gnRvbLOfsVol
00000000009eecf0 0000000000000004 B gnRvbROfsVol
00000000009eecf8 0000000000000100 b XBassDelay
00000000009eedf8 0000000000000004 b nXBassMask
00000000009eee00 0000000000000100 b XBassBuffer
00000000009eef00 0000000000000020 b gRvbLowPass
00000000009eef20 0000000000000004 b nDolbyDepth
00000000009eef24 0000000000000004 b nFilterAttn
00000000009eef28 0000000000000004 b nReverbSize
00000000009eef30 0000000000025800 b ReverbBuffer
0000000000a14730 0000000000000004 b nReverbSize2
0000000000a14734 0000000000000004 b nReverbSize3
0000000000a14738 0000000000000004 b nReverbSize4
0000000000a1473c 0000000000000004 b nSurroundPos
0000000000a14740 0000000000000004 b nXBassDlyPos
0000000000a14748 000000000001cad0 b ReverbBuffer2
0000000000a31218 0000000000014310 b ReverbBuffer3
0000000000a45528 000000000000dd0c b ReverbBuffer4
0000000000a53234 0000000000000004 b nSurroundSize
0000000000a53238 0000000000009600 b SurroundBuffer
0000000000a5c838 0000000000000004 b nDolbyHiFltPos
0000000000a5c83c 0000000000000004 b nDolbyHiFltSum
0000000000a5c840 0000000000000004 b nDolbyLoDlyPos
0000000000a5c844 0000000000000004 b nDolbyLoFltPos
0000000000a5c848 0000000000000004 b nDolbyLoFltSum
0000000000a5c84c 0000000000000004 b nReverbLoDlyPos
0000000000a5c850 0000000000000004 b nReverbLoFltPos
0000000000a5c854 0000000000000004 b nReverbLoFltSum
0000000000a5c858 0000000000000004 b nXBassBufferPos
0000000000a5c85c 0000000000000004 b nReverbBufferPos
0000000000a5c860 0000000000000004 b nReverbBufferPos2
0000000000a5c864 0000000000000004 b nReverbBufferPos3
0000000000a5c868 0000000000000004 b nReverbBufferPos4
0000000000a5c870 0000000000000100 b DolbyLoFilterDelay
0000000000a5c970 0000000000000100 b DolbyHiFilterBuffer
0000000000a5ca70 0000000000000100 b DolbyLoFilterBuffer
0000000000a5cb70 0000000000000100 b ReverbLoFilterDelay
0000000000a5cc70 0000000000000100 b ReverbLoFilterBuffer
0000000000a5cd70 0000000000000004 b nLeftNR
0000000000a5cd74 0000000000000004 b nRightNR
0000000000a5cd78 0000000000000004 b gRvbLPPos
0000000000a5cd7c 0000000000000004 b gRvbLPSum
0000000000a5cd80 0000000000000004 b nXBassSum
0000000000a5cd88 0000000000001000 B MixRearBuffer
0000000000a5dd88 0000000000001000 B MixReverbBuffer
0000000000a5ed88 0000000000002000 B MixSoundBuffer
0000000000a60d88 0000000000002000 B CzCUBICSPLINE::lut
0000000000a62d88 0000000000008010 B CzWINDOWEDFIR::lut
0000000000a6ad98 0000000000000001 B sfir
0000000000a6ada0 0000000000000001 B sspline
0000000000a6ada8 0000000000000780 b chordnotes
0000000000a6b528 0000000000000004 b chordsnamed
0000000000a6b52c 0000000000000001 b global_part
0000000000a6b530 0000000000000004 b global_voiceno
0000000000a6b534 0000000000000004 b global_songstart
0000000000a6b538 0000000000000004 b global_octave_shift
0000000000a6b53c 0000000000000004 b global_tempo_factor
0000000000a6b540 0000000000000004 b global_tempo_divider
0000000000a6b548 0000000000000140 b chordlen
0000000000a6b688 0000000000000280 b chordname
0000000000a6b908 0000000000000004 b abc_partpat_to_orderlist(unsigned char (*) [2], char const*, _ABCHANDLE*, unsigned char**, int)::ordersize
0000000000a6b910 0000000000000400 b pathforpat
0000000000a6bd10 00000000000000bf b pat_gm_used
0000000000a6bdd0 0000000000000400 b timiditycfg
0000000000a6c1d0 000000000002fc00 b midipat
0000000000a9bdd0 00000000000000bf b pat_loops
0000000000a9be90 0000000000000028 b pat_gm_name::buf
0000000000a9beb8 0000000000000004 b pat_readpat(int, char*, int)::readlasttime
0000000000a9bec0 0000000000000008 b pat_readpat(int, char*, int)::opt
0000000000a9bec8 0000000000000008 b pat_readpat(int, char*, int)::mmpat
0000000000a9bed0 0000000000000004 b pat_readpat(int, char*, int)::wavesize
0000000000a9bed8 0000000000000008 b GetCoeffs
0000000000a9bee0 0000000000000008 B WebPApplyAlphaMultiply
0000000000a9bee8 0000000000000008 B WebPApplyAlphaMultiply4444
0000000000a9bef0 0000000000000008 B WebPDispatchAlpha
0000000000a9bef8 0000000000000008 B WebPDispatchAlphaToGreen
0000000000a9bf00 0000000000000008 B WebPExtractAlpha
0000000000a9bf08 0000000000000008 B WebPExtractGreen
0000000000a9bf10 0000000000000008 B WebPHasAlpha32b
0000000000a9bf18 0000000000000008 B WebPHasAlpha8b
0000000000a9bf20 0000000000000010 b WebPInitAlphaProcessing_body_lock.1
0000000000a9bf30 0000000000000008 B WebPMultARGBRow
0000000000a9bf38 0000000000000008 B WebPMultRow
0000000000a9bf40 0000000000000008 B WebPPackRGB
0000000000a9bf48 0000000000000008 B VP8DitherCombine8x8
0000000000a9bf50 0000000000000010 b VP8DspInit_body_lock.1
0000000000a9bf60 0000000000000008 B VP8HFilter16
0000000000a9bf68 0000000000000008 B VP8HFilter16i
0000000000a9bf70 0000000000000008 B VP8HFilter8
0000000000a9bf78 0000000000000008 B VP8HFilter8i
0000000000a9bf80 0000000000000038 B VP8PredChroma8
0000000000a9bfb8 0000000000000038 B VP8PredLuma16
0000000000a9bff0 0000000000000050 B VP8PredLuma4
0000000000a9c040 0000000000000008 B VP8SimpleHFilter16
0000000000a9c048 0000000000000008 B VP8SimpleHFilter16i
0000000000a9c050 0000000000000008 B VP8SimpleVFilter16
0000000000a9c058 0000000000000008 B VP8SimpleVFilter16i
0000000000a9c060 0000000000000008 B VP8Transform
0000000000a9c068 0000000000000008 B VP8TransformAC3
0000000000a9c070 0000000000000008 B VP8TransformDC
0000000000a9c078 0000000000000008 B VP8TransformDCUV
0000000000a9c080 0000000000000008 B VP8TransformUV
0000000000a9c088 0000000000000008 B VP8TransformWHT
0000000000a9c090 0000000000000008 B VP8VFilter16
0000000000a9c098 0000000000000008 B VP8VFilter16i
0000000000a9c0a0 0000000000000008 B VP8VFilter8
0000000000a9c0a8 0000000000000008 B VP8VFilter8i
0000000000a9c0b0 0000000000000010 b VP8FiltersInit_body_lock.1
0000000000a9c0c0 0000000000000020 B WebPFilters
0000000000a9c0e0 0000000000000020 B WebPUnfilters
0000000000a9c100 0000000000000008 B VP8LAddGreenToBlueAndRed
0000000000a9c108 0000000000000008 B VP8LConvertBGRAToBGR
0000000000a9c110 0000000000000008 B VP8LConvertBGRAToRGB
0000000000a9c118 0000000000000008 B VP8LConvertBGRAToRGB565
0000000000a9c120 0000000000000008 B VP8LConvertBGRAToRGBA
0000000000a9c128 0000000000000008 B VP8LConvertBGRAToRGBA4444
0000000000a9c130 0000000000000010 b VP8LDspInit_body_lock.1
0000000000a9c140 0000000000000008 B VP8LMapColor32b
0000000000a9c148 0000000000000008 B VP8LMapColor8b
0000000000a9c150 0000000000000080 B VP8LPredictors
0000000000a9c1d0 0000000000000080 B VP8LPredictorsAdd
0000000000a9c250 0000000000000080 B VP8LPredictorsAdd_C
0000000000a9c2d0 0000000000000080 B VP8LPredictors_C
0000000000a9c350 0000000000000008 B VP8LTransformColorInverse
0000000000a9c358 0000000000000010 b WebPRescalerDspInit_body_lock.1
0000000000a9c368 0000000000000008 B WebPRescalerExportRowExpand
0000000000a9c370 0000000000000008 B WebPRescalerExportRowShrink
0000000000a9c378 0000000000000008 B WebPRescalerImportRowExpand
0000000000a9c380 0000000000000008 B WebPRescalerImportRowShrink
0000000000a9c388 0000000000000010 b WebPInitUpsamplers_body_lock.1
0000000000a9c398 0000000000000010 b WebPInitYUV444Converters_body_lock.3
0000000000a9c3a8 0000000000000068 B WebPUpsamplers
0000000000a9c410 0000000000000068 B WebPYUV444Converters
0000000000a9c478 0000000000000008 B WebPConvertARGBToUV
0000000000a9c480 0000000000000008 B WebPConvertARGBToY
0000000000a9c488 0000000000000008 B WebPConvertBGR24ToY
0000000000a9c490 0000000000000008 B WebPConvertRGB24ToY
0000000000a9c498 0000000000000008 B WebPConvertRGBA32ToUV
0000000000a9c4a0 0000000000000010 b WebPInitConvertARGBToYUV_body_lock.1
0000000000a9c4b0 0000000000000010 b WebPInitSamplers_body_lock.3
0000000000a9c4c0 0000000000000068 B WebPSamplers
0000000000a9c528 0000000000000008 B WebPSharpYUVFilterRow
0000000000a9c530 0000000000000008 B WebPSharpYUVUpdateRGB
0000000000a9c538 0000000000000008 B WebPSharpYUVUpdateY
0000000000a9c540 0000000000000008 b langs
0000000000a9c548 0000000000000004 B _hb_options
0000000000a9c550 0000000000000008 b static_ot_funcs
0000000000a9c558 0000000000000001 b hb_ot_font_cmap_cache_user_data_key
0000000000a9c560 0000000000000008 b static_outline_recording_pen_funcs
0000000000a9c568 0000000000000008 b static_paint_extents_funcs
0000000000a9c570 0000000000000008 b static_draw_extents_funcs
0000000000a9c578 0000000000000008 b static_shapers
0000000000a9c580 00000000000001c0 B _hb_CrapPool
0000000000a9c740 0000000000000008 b static_ft_funcs
0000000000a9c748 0000000000000004 b hb_ot_tags_from_language(char const*, char const*, unsigned int*, unsigned int*)::last_tag_idx
0000000000a9c750 0000000000000008 b static_ucd_funcs
0000000000a9c758 0000000000000004 b once_regsizes.0
0000000000a9c760 0000000000000062 b dwarf_reg_size_table
0000000000a9c7c8 0000000000000010 b object_mutex
0000000000a9c7d8 0000000000000008 b seen_objects
0000000000a9c7e0 0000000000000008 b unseen_objects
0000000000a9c7e8 000000000000000c b __sfp_recursive_mutex
0000000000a9c7f8 0000000000000228 B __sf
0000000000a9ca20 0000000000000008 B __stdio_exit_handler
0000000000a9ca28 0000000000000028 B __malloc_current_mallinfo
0000000000a9ca50 0000000000000008 B __malloc_max_total_mem
0000000000a9ca58 0000000000000008 B __malloc_max_sbrked_mem
0000000000a9ca60 0000000000000008 B __malloc_top_pad
0000000000a9ca68 000000000000000c b __malloc_recursive_mutex
0000000000a9ca74 0000000000000004 b alloced.0
0000000000a9ca78 000000000000000c b __env_recursive_mutex
0000000000a9ca88 0000000000000008 b initial_env
0000000000a9ca90 0000000000000318 B __atexit0
0000000000a9cda8 0000000000000008 B __atexit
0000000000a9cdb0 000000000000000c B __atexit_recursive_mutex
0000000000a9cdc0 0000000000000400 b temp_cwd
0000000000a9d1c0 0000000000000004 b __hndl_lock
0000000000a9d1c8 0000000000000008 B fake_heap_start
0000000000a9d1d0 0000000000000008 B fake_heap_end
0000000000a9d1d8 0000000000000004 b __pthread_once_cv
0000000000a9d1dc 0000000000000004 b __pthread_once_lock
0000000000a9d1e0 0000000000000008 b heap_start.0
0000000000a9d1e8 0000000000000020 B music_spec
0000000000a9d208 0000000000000400 B master_drumset
0000000000a9d608 0000000000000400 B master_tonebank
0000000000a9da08 b __tls_start
0000000000a9de38 b __bss_end__
0000000000a9de38 a __end__
0000000000a9de38 b __tls_end
0000000000a9e000 a __argdata__
